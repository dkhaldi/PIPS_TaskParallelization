
/home/dounia/MYPIPS/prod/linear/include/matrix.h,829
#define  matrix_header_includedmatrix_header_included7,224
    Value denominator;denominator71,2819
    int number_of_lines;number_of_lines72,2842
    int number_of_columns;number_of_columns73,2867
    Value * coefficients;coefficients74,2894
} * Pmatrix, Smatrix;Pmatrix75,2920
} * Pmatrix, Smatrix;Smatrix75,2920
#define MATRIX_UNDEFINED MATRIX_UNDEFINED77,2943
#define matrix_free(matrix_free80,3034
#define MATRIX_ELEM(MATRIX_ELEM87,3238
#define MATRIX_DENOMINATOR(MATRIX_DENOMINATOR93,3479
#define MATRIX_NB_LINES(MATRIX_NB_LINES94,3538
#define MATRIX_NB_COLUMNS(MATRIX_NB_COLUMNS95,3599
#define matrix_triangular_inferieure_p(matrix_triangular_inferieure_p100,3761
#define matrix_triangular_superieure_p(matrix_triangular_superieure_p106,3953
#define SUB_MATRIX_ELEM(SUB_MATRIX_ELEM113,4188

/home/dounia/MYPIPS/prod/linear/include/ray_dte.h,480
#define  ray_dte_header_includedray_dte_header_included7,227
#define RAY_DTE RAY_DTE48,1589
typedef struct rdte   {rdte50,1610
	int *eq_sat;eq_sat51,1634
	struct	Svecteur *vecteur;vecteur52,1648
	struct rdte   *succ;succ53,1675
	} *Pray_dte,Sray_dte;Pray_dte54,1697
	} *Pray_dte,Sray_dte;Sray_dte54,1697
#define print_rd(print_rd56,1721
#define print_lray_dte(print_lray_dte58,1767
#define RAY_DTE_RM(RAY_DTE_RM61,1845
#define RAY_DTE_RM(RAY_DTE_RM63,1897

/home/dounia/MYPIPS/prod/linear/include/sparse_sc.h,67
#define  sparse_sc_header_includedsparse_sc_header_included7,233

/home/dounia/MYPIPS/prod/linear/include/linear_version.h,81
#define LINEAR_REV LINEAR_REV1,0
#define LINEAR_MAKE_REV LINEAR_MAKE_REV2,77

/home/dounia/MYPIPS/prod/linear/include/vecteur.h,1977
#define  vecteur_header_includedvecteur_header_included7,227
#define VECTEUR VECTEUR58,2308
typedef void * Variable;Variable67,2587
typedef char * (*get_variable_name_t)(Variable);get_variable_name_t69,2667
#define VARIABLE_UNDEFINED VARIABLE_UNDEFINED71,2717
#define VARIABLE_UNDEFINED_P(VARIABLE_UNDEFINED_P72,2759
#define VARIABLE_DEFINED_P(VARIABLE_DEFINED_P73,2817
typedef struct Svecteur {Svecteur96,3788
    Variable var;var97,3814
    Value val;val98,3832
    struct Svecteur *succ;succ99,3847
} Svecteur, *Pvecteur;Svecteur100,3874
} Svecteur, *Pvecteur;Pvecteur100,3874
typedef struct Svecteur Sbase, * Pbase;Sbase114,4301
typedef struct Svecteur Sbase, * Pbase;Pbase114,4301
#define VECTEUR_NUL VECTEUR_NUL117,4374
#define VECTEUR_NUL_P(VECTEUR_NUL_P118,4409
#define VECTEUR_UNDEFINED VECTEUR_UNDEFINED119,4453
#define VECTEUR_UNDEFINED_P(VECTEUR_UNDEFINED_P120,4494
#define PlinX PlinX126,4740
#define NONEXPLIN NONEXPLIN127,4763
#define print_vect(print_vect130,4824
#define var_of(var_of131,4870
#define val_of(val_of132,4909
#define vecteur_var(vecteur_var133,4948
#define vecteur_val(vecteur_val134,4982
#define vecteur_succ(vecteur_succ135,5016
#define TCST TCST138,5099
#define term_cst(term_cst139,5127
#define BASE_NULLE BASE_NULLE142,5204
#define BASE_NULLE_P(BASE_NULLE_P143,5235
#define BASE_UNDEFINED BASE_UNDEFINED144,5278
#define BASE_UNDEFINED_P(BASE_UNDEFINED_P145,5313
#define base_dimension(base_dimension146,5363
#define base_add_dimension(base_add_dimension147,5414
#define base_rm(base_rm148,5492
#define BASE_FOREACH(BASE_FOREACH149,5552
#define OFL_CTRL OFL_CTRL186,7565
#define FWD_OFL_CTRL FWD_OFL_CTRL187,7584
#define NO_OFL_CTRL NO_OFL_CTRL188,7607
#define OFL_CTRL OFL_CTRL190,7674
#define FWD_OFL_CTRL FWD_OFL_CTRL191,7749
#define NO_OFL_CTRL NO_OFL_CTRL192,7825
typedef struct linear_hashtable_st * linear_hashtable_pt;linear_hashtable_pt197,8016

/home/dounia/MYPIPS/prod/linear/include/assert.h,377
#define __linear_assert_included____linear_assert_included__33,1071
#define _linear_assert_message _linear_assert_message36,1123
#define _linear_assert_message _linear_assert_message39,1273
#undef assertassert43,1390
#define assert(assert45,1418
#define linear_assert(linear_assert46,1437
#define assert(assert48,1474
#define linear_assert(linear_assert54,1808

/home/dounia/MYPIPS/prod/linear/include/arithmetique.h,10358
#define  arithmetique_header_includedarithmetique_header_included7,242
#   define CURRENT_FUNCTION CURRENT_FUNCTION66,2087
#     define CURRENT_FUNCTION CURRENT_FUNCTION69,2156
#     define CURRENT_FUNCTION CURRENT_FUNCTION71,2208
#define PUSH_TIMEOUT_ENV(PUSH_TIMEOUT_ENV75,2288
#define POP_TIMEOUT_ENV(POP_TIMEOUT_ENV78,2383
#define PUSH_TIMEOUT(PUSH_TIMEOUT81,2476
#define POP_TIMEOUT(POP_TIMEOUT84,2599
#define __LONG_LONG_MAX__ __LONG_LONG_MAX__107,3377
#undef LONG_LONG_MAXLONG_LONG_MAX109,3432
#define LONG_LONG_MAX LONG_LONG_MAX110,3453
#undef LONG_LONG_MINLONG_LONG_MIN111,3493
#define LONG_LONG_MIN LONG_LONG_MIN112,3514
#undef ULONG_LONG_MAXULONG_LONG_MAX113,3555
#define ULONG_LONG_MAX ULONG_LONG_MAX114,3577
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING118,3673
typedef long long int Value;Value119,3717
#define VALUE_FMT VALUE_FMT120,3746
#define VALUE_CONST(VALUE_CONST121,3771
#define VALUE_NAN VALUE_NAN122,3806
#define VALUE_MIN VALUE_MIN126,3961
#define VALUE_MAX VALUE_MAX127,3999
#define VALUE_SQRT_MIN VALUE_SQRT_MIN133,4221
#define VALUE_SQRT_MAX VALUE_SQRT_MAX134,4290
#define VALUE_ZERO VALUE_ZERO135,4327
#define VALUE_ONE VALUE_ONE136,4352
#define VALUE_MONE VALUE_MONE137,4377
#define VALUE_TO_LONG(VALUE_TO_LONG140,4446
#define VALUE_TO_INT(VALUE_TO_INT143,4582
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE146,4713
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT149,4890
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING165,5222
typedef long Value;Value166,5261
#define VALUE_FMT VALUE_FMT167,5281
#define VALUE_CONST(VALUE_CONST168,5305
#define VALUE_NAN VALUE_NAN169,5339
#define VALUE_MIN VALUE_MIN170,5366
#define VALUE_MAX VALUE_MAX171,5398
#define VALUE_ZERO VALUE_ZERO172,5425
#define VALUE_ONE VALUE_ONE173,5447
#define VALUE_MONE VALUE_MONE174,5469
#define VALUE_TO_LONG(VALUE_TO_LONG175,5492
#define VALUE_TO_INT(VALUE_TO_INT176,5525
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT177,5564
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE178,5607
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING225,6814
typedef union { char *s; long l; int i; float f; double d;} Value;s226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;l226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;i226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;f226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;d226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;Value226,6853
#define VALUE_FMT VALUE_FMT227,6920
#define VALUE_CONST(VALUE_CONST228,6943
#define VALUE_NAN VALUE_NAN229,6983
#define VALUE_MIN VALUE_MIN230,7027
#define VALUE_MAX VALUE_MAX231,7071
#define VALUE_ZERO VALUE_ZERO232,7115
#define VALUE_ONE VALUE_ONE233,7145
#define VALUE_MONE VALUE_MONE234,7175
#define VALUE_TO_LONG(VALUE_TO_LONG235,7206
#define VALUE_TO_INT(VALUE_TO_INT236,7241
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT237,7275
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE238,7311
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING253,7569
typedef int Value;Value254,7603
#define VALUE_FMT VALUE_FMT255,7622
#define VALUE_CONST(VALUE_CONST256,7645
#define VALUE_NAN VALUE_NAN257,7676
#define VALUE_MIN VALUE_MIN258,7702
#define VALUE_MAX VALUE_MAX259,7732
#define VALUE_ZERO VALUE_ZERO260,7758
#define VALUE_ONE VALUE_ONE261,7779
#define VALUE_MONE VALUE_MONE262,7800
#define VALUE_TO_LONG(VALUE_TO_LONG263,7822
#define VALUE_TO_INT(VALUE_TO_INT264,7863
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT265,7902
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE266,7945
#define int_to_value(int_to_value275,8129
#define long_to_value(long_to_value276,8166
#define float_to_value(float_to_value277,8204
#define double_to_value(double_to_value278,8243
#define value_eq(value_eq282,8316
#define value_ne(value_ne283,8353
#define value_gt(value_gt284,8390
#define value_ge(value_ge285,8426
#define value_lt(value_lt286,8463
#define value_le(value_le287,8499
#define value_sign(value_sign291,8570
#define value_compare(value_compare292,8647
#define value_plus(value_plus300,8941
#define value_div(value_div301,8982
#define value_mod(value_mod302,9023
#define value_direct_multiply(value_direct_multiply303,9064
#define value_minus(value_minus304,9127
#define value_pdiv(value_pdiv305,9168
#define value_pmod(value_pmod306,9213
#define value_min(value_min307,9258
#define value_max(value_max308,9317
#define value_or(value_or309,9376
#define value_and(value_and310,9415
#define value_lshift(value_lshift311,9455
#define value_rshift(value_rshift312,9498
#define value_assign(value_assign316,9560
#define value_addto(value_addto317,9604
#define value_increment(value_increment318,9648
#define value_direct_product(value_direct_product319,9687
#define value_multiply(value_multiply320,9752
#define value_substract(value_substract321,9823
#define value_decrement(value_decrement322,9870
#define value_division(value_division323,9909
#define value_modulus(value_modulus324,9955
#define value_pdivision(value_pdivision325,10001
#define value_oppose(value_oppose326,10072
#define value_absolute(value_absolute327,10136
#define value_minimum(value_minimum328,10198
#define value_maximum(value_maximum329,10267
#define value_orto(value_orto330,10336
#define value_andto(value_andto331,10380
#define value_uminus(value_uminus335,10459
#define value_not(value_not336,10495
#define value_abs(value_abs337,10527
#define value_pos_p(value_pos_p342,10795
#define value_neg_p(value_neg_p343,10850
#define value_posz_p(value_posz_p344,10905
#define value_negz_p(value_negz_p345,10960
#define value_zero_p(value_zero_p346,11015
#define value_notzero_p(value_notzero_p349,11162
#define value_one_p(value_one_p350,11217
#define value_notone_p(value_notone_p351,11271
#define value_mone_p(value_mone_p352,11325
#define value_notmone_p(value_notmone_p353,11380
#define value_min_p(value_min_p354,11435
#define value_max_p(value_max_p355,11489
#define value_notmin_p(value_notmin_p356,11543
#define value_notmax_p(value_notmax_p357,11597
#define value_protected_hard_idiv_multiply(value_protected_hard_idiv_multiply366,11860
#define value_protected_multiply(value_protected_multiply374,12201
#define value_protected_multiply(value_protected_multiply379,12484
#define value_protected_mult(value_protected_mult385,12614
#define value_protected_product(value_protected_product387,12706
#define value_mult(value_mult394,12937
#define value_product(value_product395,12987
#define value_mult(value_mult402,13211
#define value_product(value_product405,13372
#define value_fake_binary(value_fake_binary421,13859
#define value_bool_binary(value_bool_binary422,13917
#undef float_to_valuefloat_to_value423,13973
#define float_to_value(float_to_value424,13995
#undef double_to_valuedouble_to_value425,14032
#define double_to_value(double_to_value426,14055
#undef value_uminusvalue_uminus427,14093
#define value_uminus(value_uminus428,14113
#undef value_multvalue_mult429,14141
#define value_mult(value_mult430,14159
#undef value_modvalue_mod431,14210
#define value_mod(value_mod432,14227
#undef value_gevalue_ge433,14277
#define value_ge(value_ge434,14293
#undef value_gtvalue_gt435,14342
#define value_gt(value_gt436,14358
#undef value_levalue_le437,14407
#define value_le(value_le438,14423
#undef value_ltvalue_lt439,14472
#define value_lt(value_lt440,14488
#undef value_nevalue_ne441,14537
#define value_ne(value_ne442,14553
#undef value_eqvalue_eq443,14602
#define value_eq(value_eq444,14618
#undef value_plusvalue_plus445,14667
#define value_plus(value_plus446,14685
#undef value_minusvalue_minus447,14736
#define value_minus(value_minus448,14755
#undef value_pdivvalue_pdiv449,14807
#define value_pdiv(value_pdiv450,14825
#undef value_divvalue_div451,14876
#define value_div(value_div452,14893
#undef value_modvalue_mod453,14943
#define value_mod(value_mod454,14960
#undef value_addtovalue_addto455,15010
#define value_addto(value_addto456,15029
#undef value_substractvalue_substract457,15091
#define value_substract(value_substract458,15114
#undef value_productvalue_product459,15164
#define value_product(value_product460,15185
#undef value_modulusvalue_modulus461,15233
#define value_modulus(value_modulus462,15254
#undef value_divisionvalue_division463,15302
#define value_division(value_division464,15324
#undef value_incrementvalue_increment465,15373
#define value_increment(value_increment466,15396
#undef value_decrementvalue_decrement467,15448
#define value_decrement(value_decrement468,15471
#undef value_ortovalue_orto469,15524
#define value_orto(value_orto470,15542
#undef value_andtovalue_andto471,15589
#define value_andto(value_andto472,15608
#undef value_orvalue_or473,15657
#define value_or(value_or474,15673
#undef value_andvalue_and475,15722
#define value_and(value_and476,15739
#undef value_lshiftvalue_lshift477,15789
#define value_lshift(value_lshift478,15809
#undef value_rshiftvalue_rshift479,15862
#define value_rshift(value_rshift480,15882
#define ABS(ABS487,15978
#define MIN(MIN495,16197
#define MAX(MAX498,16254
#define SIGN(SIGN502,16336
#define DIVIDE(DIVIDE510,16542
#define POSITIVE_DIVIDE(POSITIVE_DIVIDE514,16710
#define MODULO(MODULO517,16820
#define POSITIVE_MODULO(POSITIVE_MODULO525,17173
#define pgcd(pgcd532,17377
#define divide(divide534,17411
#define modulo(modulo536,17444
typedef struct { Value num, den; int numero ; } frac ;num538,17477
typedef struct { Value num, den; int numero ; } frac ;den538,17477
typedef struct { Value num, den; int numero ; } frac ;numero538,17477
typedef struct { Value num, den; int numero ; } frac ;frac538,17477
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;col539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;taille539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;existe539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;colonne539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;tableau539,17532

/home/dounia/MYPIPS/prod/linear/include/sc.h,2561
#define  sc_header_includedsc_header_included7,212
#define SYSTEME SYSTEME54,1725
typedef struct Ssysteme { Ssysteme76,2633
	Pcontrainte egalites;egalites77,2660
	Pcontrainte inegalites;inegalites78,2683
	int nb_eq;nb_eq79,2708
	int nb_ineq;nb_ineq80,2720
	int dimension;dimension81,2734
	Pbase base;base82,2750
} *Psysteme,Ssysteme;Psysteme83,2763
} *Psysteme,Ssysteme;Ssysteme83,2763
#define get_sc_debug_level(get_sc_debug_level156,6526
#define ifscdebug(ifscdebug157,6570
#define sc_nbre_egalites(sc_nbre_egalites161,6635
#define sc_nbre_inegalites(sc_nbre_inegalites162,6680
#define sc_egalites(sc_egalites163,6729
#define sc_inegalites(sc_inegalites164,6772
#define sc_base(sc_base165,6819
#define sc_dimension(sc_dimension166,6854
#define sc_add_eg(sc_add_eg178,7146
#define sc_add_ineg(sc_add_ineg179,7190
#define SC_EMPTY SC_EMPTY186,7409
#define SC_EMPTY_P(SC_EMPTY_P187,7444
#define SC_RN SC_RN196,7828
#define SC_RN_P(SC_RN_P197,7860
#define SC_UNDEFINED SC_UNDEFINED201,7964
#define SC_UNDEFINED_P(SC_UNDEFINED_P202,8003
#define NB_INEQ_MAX1 NB_INEQ_MAX1207,8220
#define NB_INEQ_MAX2 NB_INEQ_MAX2212,8413
#define sc_faisabilite(sc_faisabilite217,8544
#define sc_faisabilite_ofl(sc_faisabilite_ofl218,8629
#define sc_feasible_ofl(sc_feasible_ofl220,8722
#define sc_elim_redond(sc_elim_redond221,8807
#define sc_triang_elim_redond(sc_triang_elim_redond222,8855
#define sc_rm_empty_constraints(sc_rm_empty_constraints223,8917
#define sc_kill_db_eg(sc_kill_db_eg224,8992
#define sc_safe_kill_db_eg(sc_safe_kill_db_eg225,9048
#define non_redundent_subsystem(non_redundent_subsystem226,9114
#define sc_nredund_ofl(sc_nredund_ofl227,9194
#define sc_nredund_optim(sc_nredund_optim228,9275
#define sc_nredund(sc_nredund229,9336
#define sc_projection_on_list_of_variables(sc_projection_on_list_of_variables230,9391
#define combiner(combiner232,9490
#define combiner_ofl(combiner_ofl234,9600
#define exact_combiner_ofl(exact_combiner_ofl236,9715
#define eq_v_min_coeff(eq_v_min_coeff238,9838
#define sc_projection_ofl_with_eq(sc_projection_ofl_with_eq239,9919
#define cond_suff_comb_integer(cond_suff_comb_integer241,10040
#define cond_suff_comb_integer_ofl(cond_suff_comb_integer_ofl243,10157
#define sc_projection_int_along_vecteur(sc_projection_int_along_vecteur245,10279
#define integer_projection(integer_projection247,10420
typedef int (*two_int_infop)[2];two_int_infop250,10514
typedef int (* constraint_cmp_func_t)constraint_cmp_func_t252,10548

/home/dounia/MYPIPS/prod/linear/include/contrainte.h,1293
#define  contrainte_header_includedcontrainte_header_included7,236
#define CONTRAINTE CONTRAINTE91,3335
typedef struct Scontrainte   {Scontrainte93,3360
        int *eq_sat;eq_sat94,3391
	int *s_sat,*r_sat;s_sat95,3412
	int *s_sat,*r_sat;r_sat95,3412
	Pvecteur vecteur;vecteur96,3432
	struct Scontrainte *succ;succ97,3451
	} Scontrainte,*Pcontrainte;Scontrainte98,3478
	} Scontrainte,*Pcontrainte;Pcontrainte98,3478
typedef Scontrainte Segalite, * Pegalite;Segalite100,3508
typedef Scontrainte Segalite, * Pegalite;Pegalite100,3508
typedef Scontrainte Sinegalite, * Pinegalite;Sinegalite102,3551
typedef Scontrainte Sinegalite, * Pinegalite;Pinegalite102,3551
#define egalite_print(egalite_print106,3626
#define inegalite_print(inegalite_print109,3795
#define contrainte_vecteur(contrainte_vecteur112,3919
#define contrainte_succ(contrainte_succ114,3965
#define CONTRAINTE_NULLE_P(CONTRAINTE_NULLE_P117,4062
#define CONTRAINTE_UNDEFINED CONTRAINTE_UNDEFINED119,4132
#define CONTRAINTE_UNDEFINED_P(CONTRAINTE_UNDEFINED_P121,4183
#define COEFF_CST(COEFF_CST124,4314
#define contrainte_rm(contrainte_rm127,4416
#define VERSION_FINALEVERSION_FINALE129,4468
#define CONTRAINTE_RM(CONTRAINTE_RM131,4514
#define CONTRAINTE_RM(CONTRAINTE_RM133,4572

/home/dounia/MYPIPS/prod/linear/include/matrice.h,639
#define  matrice_header_includedmatrice_header_included7,227
typedef Value * matrice;matrice78,3167
#define MATRICE_UNDEFINED MATRICE_UNDEFINED80,3193
#define MATRICE_NULLE MATRICE_NULLE81,3236
#define matrice_new(matrice_new84,3324
#define matrice_free(matrice_free85,3393
#define ACCESS(ACCESS93,3667
#define DENOMINATOR(DENOMINATOR100,4024
#define matrice_triangulaire_inferieure_p(matrice_triangulaire_inferieure_p105,4180
#define matrice_triangulaire_superieure_p(matrice_triangulaire_superieure_p111,4384
#define ACC_ELEM(ACC_ELEM119,4721
#define VALIDATION VALIDATION125,4910
#define MATRIX MATRIX127,4955

/home/dounia/MYPIPS/prod/linear/include/boolean.h,219
#define BOOLEAN_INCLUDEDBOOLEAN_INCLUDED26,820
typedef int bool; /* we cannot use an enum or stdbool because we need to be compatible with newgen */bool34,994
#define false false36,1097
#define true true37,1113

/home/dounia/MYPIPS/prod/linear/include/polynome.h,2011
#define  polynome_header_includedpolynome_header_included7,230
#define POLYNOME_INCLUDEDPOLYNOME_INCLUDED135,4721
typedef struct Smonome {Smonome137,4748
    float coeff;coeff138,4773
    Pvecteur term;term139,4790
} Smonome, *Pmonome;Smonome140,4809
} Smonome, *Pmonome;Pmonome140,4809
typedef struct Spolynome {Spolynome142,4831
    Pmonome monome;monome143,4858
    struct Spolynome *succ;succ144,4878
} Spolynome, *Ppolynome;Spolynome145,4906
} Spolynome, *Ppolynome;Ppolynome145,4906
#define monome_coeff(monome_coeff149,4958
#define monome_term(monome_term150,4997
#define polynome_monome(polynome_monome151,5034
#define polynome_succ(polynome_succ152,5077
#define is_single_monome(is_single_monome156,5213
#define monome_constant_new(monome_constant_new158,5306
#define monome_power1_new(monome_power1_new159,5369
#define MONOME_NUL MONOME_NUL162,5489
#define MONOME_NUL_P(MONOME_NUL_P163,5525
#define MONOME_UNDEFINED MONOME_UNDEFINED164,5569
#define MONOME_UNDEFINED_P(MONOME_UNDEFINED_P165,5611
#define MONOME_CONSTANT_P(MONOME_CONSTANT_P166,5667
#define POLYNOME_NUL POLYNOME_NUL168,5721
#define POLYNOME_NUL_P(POLYNOME_NUL_P169,5761
#define POLYNOME_UNDEFINED POLYNOME_UNDEFINED170,5809
#define POLYNOME_UNDEFINED_P(POLYNOME_UNDEFINED_P171,5855
#define MONOME_COEFF_MULTIPLY_SYMBOL MONOME_COEFF_MULTIPLY_SYMBOL173,5916
#define MONOME_VAR_MULTIPLY_SYMBOL MONOME_VAR_MULTIPLY_SYMBOL174,5957
#define POLYNOME_NUL_SYMBOL POLYNOME_NUL_SYMBOL175,5996
#define POLYNOME_UNDEFINED_SYMBOL POLYNOME_UNDEFINED_SYMBOL176,6028
#define MONOME_NUL_SYMBOL MONOME_NUL_SYMBOL177,6085
#define MONOME_UNDEFINED_SYMBOL MONOME_UNDEFINED_SYMBOL178,6126
#define MAX_NAME_LENGTH MAX_NAME_LENGTH180,6180
#define PNOME_MACH_EPS PNOME_MACH_EPS182,6208
#define PNOME_FLOAT_N_DECIMALES PNOME_FLOAT_N_DECIMALES183,6290
#define PNOME_FLOAT_TO_EXP_LEVEL PNOME_FLOAT_TO_EXP_LEVEL184,6372
#define PNOME_FLOAT_TO_FRAC_LEVEL PNOME_FLOAT_TO_FRAC_LEVEL185,6454

/home/dounia/MYPIPS/prod/linear/include/polyedre.h,65
#define  polyedre_header_includedpolyedre_header_included7,230

/home/dounia/MYPIPS/prod/linear/include/union.h,4829
#define  union_header_includedunion_header_included7,221
typedef struct Ssyslist  {Ssyslist10,254
        Psysteme                psys;psys11,281
        struct Ssyslist         *succ;succ12,319
        } *Psyslist,Ssyslist;Psyslist13,358
        } *Psyslist,Ssyslist;Ssyslist13,358
#define SL_NULL SL_NULL15,389
typedef Ssyslist *Pdisjunct,Sdisjunct;Pdisjunct17,427
typedef Ssyslist *Pdisjunct,Sdisjunct;Sdisjunct17,427
#define DJ_UNDEFINED DJ_UNDEFINED19,467
typedef Ssysteme *Pcomplement,Scomplement;Pcomplement21,510
typedef Ssysteme *Pcomplement,Scomplement;Scomplement21,510
#define CO_UNDEFINED CO_UNDEFINED23,554
 typedef Ssyslist *Pcomplist,Scomplist; Pcomplist24,597
 typedef Ssyslist *Pcomplist,Scomplist; Scomplist24,597
typedef struct Spath {Spath25,638
        Psysteme        psys;psys26,661
        Pcomplist       pcomp;pcomp27,691
        } *Ppath,Spath;Ppath28,722
        } *Ppath,Spath;Spath28,722
#define PA_UNDEFINED PA_UNDEFINED30,747
typedef struct Sunion {Sunion32,785
        Pdisjunct       pdi;pdi33,809
        Ppath           ppa;ppa34,838
        } *Punion,Sunion;Punion35,867
        } *Punion,Sunion;Sunion35,867
#define UN_UNDEFINED UN_UNDEFINED37,894
#define UN_FULL_SPACE UN_FULL_SPACE38,932
#define UN_EMPTY_SPACE UN_EMPTY_SPACE39,970
enum hspara_elemhspara_elem55,1588
  unpara        = 0,   /*  unparallel ->   h1/hj = h1    */unpara57,1697
    sszero      = 1,   /*  b1 == bj   ->   h1/hj = full  */ sszero59,1830
    ssplus      = 2,   /*  bj >  b1   ->   h1/hj = full  */ssplus60,1891
        ssminus = 3,   /*  bj <  b1   ->   h1/hj = h1    */ ssminus64,2039
        opzero  = 4,   /*  b1 == bj   ->   h1/hj = h1    */ opzero66,2176
        opplus  = 5,   /*  bj >  b1   ->   h1/hj = h1    */opplus67,2237
    keep        = 6,keep68,2297
      opminus   = 7,   /*  b1 <  bj   ->   h1/hj = empty */  opminus70,2378
    empty       = 8,   empty71,2440
  full          = 9     full72,2464
#define my_sc_full(my_sc_full76,2527
#define my_sc_empty(my_sc_empty77,2566
#define is_sc_my_empty_p(is_sc_my_empty_p78,2618
#define is_dj_full_p(is_dj_full_p79,2664
#define is_dj_empty_p(is_dj_empty_p80,2709
#define is_pa_full_p(is_pa_full_p81,2755
#define is_pa_empty_p(is_pa_empty_p82,2800
#define sc_difference(sc_difference86,2881
#define sc_inclusion_p(sc_inclusion_p87,2974
#define sc_inclusion_p_ofl(sc_inclusion_p_ofl88,3062
#define sc_inclusion_p_ofl_ctrl(sc_inclusion_p_ofl_ctrl89,3151
#define sc_equal_p(sc_equal_p90,3243
#define sc_equal_p_ofl(sc_equal_p_ofl91,3334
#define sc_equal_p_ofl_ctrl(sc_equal_p_ofl_ctrl92,3426
#define sc_convex_hull_equals_union_p(sc_convex_hull_equals_union_p93,3517
#define sc_convex_hull_equals_union_p_ofl(sc_convex_hull_equals_union_p_ofl95,3665
#define sc_convex_hull_equals_union_p_ofl_ctrl(sc_convex_hull_equals_union_p_ofl_ctrl97,3815
#define sc_elim_redund_with_first(sc_elim_redund_with_first101,3989
#define dj_fprint(dj_fprint103,4096
#define DJ_UNDEFINED_P(DJ_UNDEFINED_P104,4169
#define dj_faisabilite(dj_faisabilite105,4230
#define dj_feasibility(dj_feasibility106,4311
#define dj_faisabilite_ofl(dj_faisabilite_ofl107,4392
#define dj_intersection(dj_intersection108,4474
#define dj_intersect_system(dj_intersect_system109,4564
#define dj_intersect_djcomp(dj_intersect_djcomp110,4658
#define dj_projection_along_variables(dj_projection_along_variables111,4754
#define dj_variable_substitution_with_eqs(dj_variable_substitution_with_eqs113,4865
#define pa_fprint(pa_fprint116,4998
#define PA_UNDEFINED_P(PA_UNDEFINED_P117,5071
#define pa_new(pa_new118,5132
#define pa_faisabilite(pa_faisabilite119,5190
#define pa_feasibility(pa_feasibility120,5271
#define pa_faisabilite_ofl(pa_faisabilite_ofl121,5352
#define pa_path_to_disjunct(pa_path_to_disjunct122,5434
#define pa_path_dup_to_disjunct(pa_path_dup_to_disjunct123,5521
#define pa_system_difference(pa_system_difference124,5608
#define pa_system_equal_p(pa_system_equal_p125,5701
#define pa_inclusion_p(pa_inclusion_p126,5791
#define pa_path_to_disjunct_ofl(pa_path_to_disjunct_ofl127,5878
#define pa_path_to_disjunct_rule4(pa_path_to_disjunct_rule4128,5966
#define pa_path_to_few_disjunct(pa_path_to_few_disjunct129,6060
#define pa_system_difference(pa_system_difference130,6150
#define pa_convex_hull_equals_union_p(pa_convex_hull_equals_union_p131,6243
#define un_fprint(un_fprint134,6393
#define PATH_MAX_CONSTRAINTS PATH_MAX_CONSTRAINTS138,6507
#define IS_SC IS_SC140,6549
#define IS_SL IS_SL141,6589
#define IS_DJ IS_DJ142,6629
#define IS_PA IS_PA143,6669
#define C3_DEBUG(C3_DEBUG148,6816
#define C3_RETURN(C3_RETURN150,6925
#define C3_DEBUG(C3_DEBUG157,7181
#define C3_RETURN(C3_RETURN158,7211

/home/dounia/MYPIPS/prod/linear/include/arithmetic_errors.h,1032
#define linear_arithmetic_error_includedlinear_arithmetic_error_included35,1064
typedef void (*timeout_callback_f)(int, const char *, const char *, int);timeout_callback_f42,1199
  overflow_error = 1,overflow_error48,1370
  simplex_arithmetic_error = 2,simplex_arithmetic_error49,1392
  user_exception_error = 4,user_exception_error50,1424
  parser_exception_error = 8,parser_exception_error51,1452
  timeout_error = 16,timeout_error52,1482
  any_exception_error = ~0any_exception_error54,1522
} linear_exception_t;linear_exception_t55,1549
#define throw_exception throw_exception60,1699
#define push_exception_on_stack push_exception_on_stack61,1746
#define pop_exception_from_stack pop_exception_from_stack62,1809
typedef void (*exception_callback_t)(char const *, char const *, int const);exception_callback_t64,1875
#define EXCEPTION EXCEPTION67,2008
#define THROW(THROW69,2047
#define CATCH(CATCH72,2178
#define UNCATCH(UNCATCH76,2368
#define TRY TRY80,2508
#define RETHROW(RETHROW82,2526

/home/dounia/MYPIPS/prod/linear/include/sommet.h,612
#define  sommet_header_includedsommet_header_included7,224
#define SOMMET SOMMET55,1865
typedef struct typ_som {typ_som71,2745
    int *eq_sat;eq_sat72,2770
    Pvecteur vecteur;vecteur73,2787
    Value denominateur;denominateur74,2809
    struct typ_som *succ;succ75,2833
} *Psommet,Ssommet;Psommet76,2859
} *Psommet,Ssommet;Ssommet76,2859
#define print_som(print_som78,2880
#define print_lsom(print_lsom80,2926
#define VERSION_FINALEVERSION_FINALE82,2973
#define SOMMET_RM(SOMMET_RM84,3018
#define SOMMET_RM(SOMMET_RM86,3072
#define sommet_denominateur(sommet_denominateur94,3266

/home/dounia/MYPIPS/prod/linear/include/sg.h,1182
#define  sg_header_includedsg_header_included7,212
#define TSG	TSG43,1268
#define TSGSOMS TSGSOMS44,1284
#define TSGVECTS TSGVECTS45,1304
typedef struct ttsg_soms {ttsg_soms48,1372
	int nb_s;nb_s49,1399
	struct	typ_som *ssg;ssg50,1410
	} *Ptsg_soms,Stsg_soms;Ptsg_soms51,1432
	} *Ptsg_soms,Stsg_soms;Stsg_soms51,1432
typedef struct ttsg_vects {ttsg_vects54,1504
	int nb_v;nb_v55,1532
	Pray_dte vsg;vsg56,1543
	} *Ptsg_vects,Stsg_vects;Ptsg_vects57,1558
	} *Ptsg_vects,Stsg_vects;Stsg_vects57,1558
typedef struct type_sg {type_sg73,2172
	Stsg_soms soms_sg;soms_sg74,2197
	Stsg_vects rays_sg;rays_sg75,2217
	Stsg_vects dtes_sg;dtes_sg76,2238
	Pbase base;base77,2259
	} *Ptsg,Stsg;Ptsg78,2272
	} *Ptsg,Stsg;Stsg78,2272
#define SG_UNDEFINED SG_UNDEFINED80,2288
#define SG_UNDEFINED_P(SG_UNDEFINED_P81,2323
#define sg_sommets(sg_sommets92,2651
#define sg_rayons(sg_rayons96,2814
#define sg_droites(sg_droites100,2982
#define sg_nbre_sommets(sg_nbre_sommets103,3077
#define sg_nbre_rayons(sg_nbre_rayons106,3176
#define sg_nbre_droites(sg_nbre_droites109,3276
#define sg_base(sg_base112,3369
#define sg_empty(sg_empty115,3480

/home/dounia/MYPIPS/prod/linear/include/linear.h,57
#define C3_LINEAR_H_INCLUDEDC3_LINEAR_H_INCLUDED30,902

/home/dounia/MYPIPS/prod/linear/src/ray_dte/ray_dte.h,480
#define  ray_dte_header_includedray_dte_header_included7,227
#define RAY_DTE RAY_DTE48,1589
typedef struct rdte   {rdte50,1610
	int *eq_sat;eq_sat51,1634
	struct	Svecteur *vecteur;vecteur52,1648
	struct rdte   *succ;succ53,1675
	} *Pray_dte,Sray_dte;Pray_dte54,1697
	} *Pray_dte,Sray_dte;Sray_dte54,1697
#define print_rd(print_rd56,1721
#define print_lray_dte(print_lray_dte58,1767
#define RAY_DTE_RM(RAY_DTE_RM61,1845
#define RAY_DTE_RM(RAY_DTE_RM63,1897

/home/dounia/MYPIPS/prod/linear/src/ray_dte/ray_dte-local.h,417
#define RAY_DTE RAY_DTE41,1329
typedef struct rdte   {rdte43,1350
	int *eq_sat;eq_sat44,1374
	struct	Svecteur *vecteur;vecteur45,1388
	struct rdte   *succ;succ46,1415
	} *Pray_dte,Sray_dte;Pray_dte47,1437
	} *Pray_dte,Sray_dte;Sray_dte47,1437
#define print_rd(print_rd49,1461
#define print_lray_dte(print_lray_dte51,1507
#define RAY_DTE_RM(RAY_DTE_RM54,1585
#define RAY_DTE_RM(RAY_DTE_RM56,1637

/home/dounia/MYPIPS/prod/linear/src/ray_dte/ray_dte.c,893
#define MALLOC(MALLOC56,1565
#define FREE(FREE57,1597
Pray_dte ray_dte_dup(rd_in)ray_dte_dup66,1901
Pray_dte ray_dte_new()ray_dte_new89,2427
Pray_dte ray_dte_make(v)ray_dte_make108,2905
Pray_dte ray_oppose(r)ray_oppose125,3151
void ray_dte_rm(rd)ray_dte_rm134,3319
void dbg_ray_dte_rm(rd,f)dbg_ray_dte_rm145,3640
void ray_dte_fprint(f, rd, nom_var)ray_dte_fprint162,4109
void ray_dte_fprint_as_dense(f, rd, b)ray_dte_fprint_as_dense176,4428
void ray_dte_dump(rd)ray_dte_dump187,4663
void fprint_lray_dte(f,listrd, nom_var)fprint_lray_dte196,4883
void fprint_lray_dte_as_dense(f, listrd, b)fprint_lray_dte_as_dense210,5200
void ray_dte_normalize(rd)ray_dte_normalize226,5568
bool rd_in_liste(rd,lrd)rd_in_liste242,6084
bool egaliste_rd(l1,ad_l2)egaliste_rd260,6443
Pray_dte elim_null_vect(l,n)elim_null_vect317,7655
void elim_tt_rd(listrd)elim_tt_rd349,8373

/home/dounia/MYPIPS/prod/linear/src/polyedre/polyedre-local.h,0

/home/dounia/MYPIPS/prod/linear/src/polyedre/chernikova.c,207
Ptsg sc_to_sg_chernikova(Psysteme sc)sc_to_sg_chernikova42,1072
Psysteme sg_to_sc_chernikova(Ptsg sg)sg_to_sc_chernikova58,1292
Psysteme sc_convex_hull(Psysteme sc1, Psysteme sc2)sc_convex_hull74,1530

/home/dounia/MYPIPS/prod/linear/src/polyedre/polyedre.h,65
#define  polyedre_header_includedpolyedre_header_included7,230

/home/dounia/MYPIPS/prod/linear/src/polyedre/chernikova_fixprec.c,259
Ptsg sc_to_sg_chernikova_fixprec(Psysteme sc) {sc_to_sg_chernikova_fixprec32,923
Psysteme sg_to_sc_chernikova_fixprec(Ptsg sg) {sg_to_sc_chernikova_fixprec36,996
Psysteme sc_convex_hull_fixprec(Psysteme sc1, Psysteme sc2) {sc_convex_hull_fixprec40,1069

/home/dounia/MYPIPS/prod/linear/src/polyedre/chernikova.h,5338
#define LINEAR_CHERNIKOVA_HLINEAR_CHERNIKOVA_H24,824
#define FPRINT_NBDIGITS FPRINT_NBDIGITS48,1223
#define _STRINGOF(_STRINGOF50,1250
#define STRINGOF(STRINGOF51,1278
static void* NOWUNUSED safe_malloc(size_t size) {safe_malloc56,1359
static void* NOWUNUSED safe_realloc(void* ptr, size_t size) {safe_realloc65,1545
static void NOWUNUSED safe_free(void* ptr) {safe_free74,1743
#define BSWAP(BSWAP80,1827
#define SWAP(SWAP88,2049
#define TIMEOUT_ENV TIMEOUT_ENV102,2316
static bool sc_convex_hull_timeout = false;sc_convex_hull_timeout104,2366
static int get_linear_convex_hull_timeout() {get_linear_convex_hull_timeout106,2411
static void catch_alarm_sc_convex_hull(int sig NOWUNUSED) {catch_alarm_sc_convex_hull123,2891
static zval_t* zvec_alloc(unsigned nbvals) {zvec_alloc133,3165
static void zvec_free(zval_t* zvec, unsigned nbvals) {zvec_free142,3352
static void NOWUNUSED zvec_safe_free(zval_t* zvec, unsigned nbvals) {zvec_safe_free150,3495
static void zvec_swap(zval_t* zvec1, zval_t* zvec2, unsigned nbvals) {zvec_swap156,3619
static void zvec_set_i(zval_t* zvec, long val, unsigned nbvals) {zvec_set_i168,3875
static void zvec_copy(zval_t* zvec1, zval_t* zvec2, unsigned nbvals) {zvec_copy175,4020
static void zvec_combine(zval_t* zvec1, zval_t* zvec2, zval_t* zvec3,zvec_combine186,4263
static void zvec_antiscale(zval_t* zvec1, zval_t* zvec2,zvec_antiscale200,4608
static void zvec_neg(zval_t* zvec1, zval_t* zvec2, unsigned nbvals) {zvec_neg208,4792
static int zvec_index_first_notzero(zval_t* zvec, unsigned nbvals) {zvec_index_first_notzero215,4945
static void zvec_min_notzero(zval_t* zvec, unsigned nbvals,zvec_min_notzero230,5279
static void zvec_gcd(zval_t* zvec, unsigned nbvals, zval_t *pgcd) {zvec_gcd255,5806
static void zvec_normalize(zval_t* zvec, unsigned nbvals) {zvec_normalize293,6588
static int NOWUNUSED zvec_fprint(FILE* stream, zval_t* zvec, unsigned nbvals) {zvec_fprint303,6806
	unsigned nbrows;nbrows321,7186
	unsigned nbcols;nbcols322,7204
	zval_t** vals;vals323,7222
	zval_t* rawvals;rawvals324,7238
	unsigned nbvals;nbvals325,7256
} zmat_s, *zmat_p;zmat_s326,7274
} zmat_s, *zmat_p;zmat_p326,7274
typedef zmat_s zmat_t[1];zmat_t328,7294
static zmat_p zmat_alloc(unsigned nbrows, unsigned nbcols) {zmat_alloc330,7321
static void zmat_free(zmat_p zmat) {zmat_free354,7901
static void NOWUNUSED zmat_safe_free(zmat_p zmat) {zmat_safe_free364,8063
static void zmat_extend(zmat_p zmat, unsigned nbrows) {zmat_extend371,8187
static void NOWUNUSED zmat_fprint(FILE* stream, zmat_p zmat) {zmat_fprint393,8950
#define WSIZE WSIZE412,9413
#define MSB MSB414,9446
#define NEXT(NEXT416,9504
static void bvec_lor(int* bvec1, int* bvec2, int* bvec3, unsigned nbvals) {bvec_lor427,9680
#define bvec_copy(bvec_copy441,9924
#define bvec_init(bvec_init444,10043
	unsigned nbrows;nbrows451,10227
	unsigned nbcols;nbcols452,10245
	int **vals;vals453,10263
	int *rawvals;rawvals454,10276
} bmat_s, *bmat_p;bmat_s455,10291
} bmat_s, *bmat_p;bmat_p455,10291
typedef bmat_s bmat_t[1];bmat_t457,10311
static bmat_p bmat_alloc(int nbrows, int nbcols) {bmat_alloc459,10338
static void bmat_free(bmat_p bmat) {bmat_free479,10813
static void NOWUNUSED bmat_safe_free(bmat_p bmat) {bmat_safe_free487,10931
static void bmat_extend(bmat_p bmat, zmat_p zmat, unsigned nbrows) {bmat_extend493,11029
static void NOWUNUSED bmat_fprint(FILE* stream, bmat_p bmat) {bmat_fprint504,11413
static void combine(zval_t* zvec1, zval_t* zvec2, zval_t* zvec3,combine553,13104
static void sort_rays(zmat_p rays, bmat_p sat, int nbbrays, int nbrays,sort_rays573,13778
static int chernikova(chernikova618,14864
static int gauss(zmat_p zmat, int nbeqs, int nbdims) {gauss789,19435
static void remove_redundants(zmat_p* pconstrs, zmat_p* prays, bmat_p sat)remove_redundants850,20880
static bmat_p transpose_sat(zmat_p constrs, zmat_p rays, bmat_p sat) {transpose_sat1145,28920
static zmat_p rays_of_constrs(zmat_p* pconstrs, unsigned nbmaxrays) {rays_of_constrs1170,29555
static zmat_p constrs_of_rays(zmat_p* prays, unsigned nbmaxconstrs) {constrs_of_rays1195,30371
static void zmat_set_row(zmat_p zmat, unsigned i,zmat_set_row1223,31242
static Pvecteur vecteur_of_zvec(zval_t* zvec, Pbase base) {vecteur_of_zvec1234,31578
static zmat_p constrs_of_sc(Psysteme sc) {constrs_of_sc1251,32021
static Psysteme sc_of_constrs(zmat_p constrs, Pbase base) {sc_of_constrs1286,33255
static zmat_p rays_of_sg(Ptsg sg) {rays_of_sg1330,34291
static Ptsg sg_of_rays(zmat_p rays, Pbase base) {sg_of_rays1350,34978
static zmat_p NOWUNUSED rays_of_sc(Psysteme sc, unsigned nbmaxrays) {rays_of_sc1404,36220
static Psysteme NOWUNUSED sc_of_rays(zmat_p* prays, Pbase base, unsigned nbmaxconstrs) {sc_of_rays1411,36418
static zmat_p NOWUNUSED constrs_of_sg(Ptsg sg, unsigned nbmaxconstrs) {constrs_of_sg1418,36644
static Ptsg NOWUNUSED sg_of_constrs(zmat_p* pconstrs, Pbase base, unsigned nbmaxrays) {sg_of_constrs1425,36841
#define NBMAXRAYS NBMAXRAYS1435,37087
#define NBMAXCONSTRS NBMAXCONSTRS1436,37116
static inline Ptsg sg_of_sc(Psysteme sc) {sg_of_sc1438,37146
static inline Psysteme sc_of_sg(Ptsg sg) {sc_of_sg1457,37481
static inline Psysteme sc_union(Psysteme sc1, Psysteme sc2) {sc_union1476,37844

/home/dounia/MYPIPS/prod/linear/src/polyedre/chernikova_mulprec.c,260
Ptsg sc_to_sg_chernikova_mulprec(Psysteme sc) {sc_to_sg_chernikova_mulprec34,942
Psysteme sg_to_sc_chernikova_mulprec(Ptsg sg) {sg_to_sc_chernikova_mulprec38,1015
Psysteme sc_convex_hull_mulprec(Psysteme sc1, Psysteme sc2) {sc_convex_hull_mulprec42,1088

/home/dounia/MYPIPS/prod/linear/src/polyedre/sc_enveloppe.c,1041
Psysteme sc_enveloppe_chernikova_ofl_ctrl(s1, s2, ofl_ctrl)sc_enveloppe_chernikova_ofl_ctrl68,1861
Psysteme sc_enveloppe_chernikova(Psysteme s1, Psysteme s2)sc_enveloppe_chernikova127,3361
static Psysteme actual_convex_union(Psysteme s1, Psysteme s2)actual_convex_union134,3535
Psysteme elementary_convex_union(Psysteme s1, Psysteme s2)elementary_convex_union171,4482
static bool base_to_set(linear_hashtable_pt s, Pvecteur b)base_to_set217,5489
static bool contains_variables(Pvecteur v, linear_hashtable_pt vars)contains_variables232,5810
transitive_closure_pass(Pcontrainte * pc, Pcontrainte * ex, transitive_closure_pass245,6134
static Psysteme transitive_closure_system(Psysteme s, linear_hashtable_pt vars)transitive_closure_system273,6725
transitive_closure_from_two_bases(Psysteme s, Pbase b1, Pbase b2)transitive_closure_from_two_bases292,7250
Psysteme sc_cute_convex_hull(Psysteme is1, Psysteme is2)sc_cute_convex_hull369,9914
Psysteme sc_rectangular_hull(Psysteme sc, Pbase pb) {sc_rectangular_hull456,12258

/home/dounia/MYPIPS/prod/linear/src/union/union-local.h,4755
typedef struct Ssyslist  {Ssyslist3,2
        Psysteme                psys;psys4,29
        struct Ssyslist         *succ;succ5,67
        } *Psyslist,Ssyslist;Psyslist6,106
        } *Psyslist,Ssyslist;Ssyslist6,106
#define SL_NULL SL_NULL8,137
typedef Ssyslist *Pdisjunct,Sdisjunct;Pdisjunct10,175
typedef Ssyslist *Pdisjunct,Sdisjunct;Sdisjunct10,175
#define DJ_UNDEFINED DJ_UNDEFINED12,215
typedef Ssysteme *Pcomplement,Scomplement;Pcomplement14,258
typedef Ssysteme *Pcomplement,Scomplement;Scomplement14,258
#define CO_UNDEFINED CO_UNDEFINED16,302
 typedef Ssyslist *Pcomplist,Scomplist; Pcomplist17,345
 typedef Ssyslist *Pcomplist,Scomplist; Scomplist17,345
typedef struct Spath {Spath18,386
        Psysteme        psys;psys19,409
        Pcomplist       pcomp;pcomp20,439
        } *Ppath,Spath;Ppath21,470
        } *Ppath,Spath;Spath21,470
#define PA_UNDEFINED PA_UNDEFINED23,495
typedef struct Sunion {Sunion25,533
        Pdisjunct       pdi;pdi26,557
        Ppath           ppa;ppa27,586
        } *Punion,Sunion;Punion28,615
        } *Punion,Sunion;Sunion28,615
#define UN_UNDEFINED UN_UNDEFINED30,642
#define UN_FULL_SPACE UN_FULL_SPACE31,680
#define UN_EMPTY_SPACE UN_EMPTY_SPACE32,718
enum hspara_elemhspara_elem48,1336
  unpara        = 0,   /*  unparallel ->   h1/hj = h1    */unpara50,1445
    sszero      = 1,   /*  b1 == bj   ->   h1/hj = full  */ sszero52,1578
    ssplus      = 2,   /*  bj >  b1   ->   h1/hj = full  */ssplus53,1639
        ssminus = 3,   /*  bj <  b1   ->   h1/hj = h1    */ ssminus57,1787
        opzero  = 4,   /*  b1 == bj   ->   h1/hj = h1    */ opzero59,1924
        opplus  = 5,   /*  bj >  b1   ->   h1/hj = h1    */opplus60,1985
    keep        = 6,keep61,2045
      opminus   = 7,   /*  b1 <  bj   ->   h1/hj = empty */  opminus63,2126
    empty       = 8,   empty64,2188
  full          = 9     full65,2212
#define my_sc_full(my_sc_full69,2275
#define my_sc_empty(my_sc_empty70,2314
#define is_sc_my_empty_p(is_sc_my_empty_p71,2366
#define is_dj_full_p(is_dj_full_p72,2412
#define is_dj_empty_p(is_dj_empty_p73,2457
#define is_pa_full_p(is_pa_full_p74,2503
#define is_pa_empty_p(is_pa_empty_p75,2548
#define sc_difference(sc_difference79,2629
#define sc_inclusion_p(sc_inclusion_p80,2722
#define sc_inclusion_p_ofl(sc_inclusion_p_ofl81,2810
#define sc_inclusion_p_ofl_ctrl(sc_inclusion_p_ofl_ctrl82,2899
#define sc_equal_p(sc_equal_p83,2991
#define sc_equal_p_ofl(sc_equal_p_ofl84,3082
#define sc_equal_p_ofl_ctrl(sc_equal_p_ofl_ctrl85,3174
#define sc_convex_hull_equals_union_p(sc_convex_hull_equals_union_p86,3265
#define sc_convex_hull_equals_union_p_ofl(sc_convex_hull_equals_union_p_ofl88,3413
#define sc_convex_hull_equals_union_p_ofl_ctrl(sc_convex_hull_equals_union_p_ofl_ctrl90,3563
#define sc_elim_redund_with_first(sc_elim_redund_with_first94,3737
#define dj_fprint(dj_fprint96,3844
#define DJ_UNDEFINED_P(DJ_UNDEFINED_P97,3917
#define dj_faisabilite(dj_faisabilite98,3978
#define dj_feasibility(dj_feasibility99,4059
#define dj_faisabilite_ofl(dj_faisabilite_ofl100,4140
#define dj_intersection(dj_intersection101,4222
#define dj_intersect_system(dj_intersect_system102,4312
#define dj_intersect_djcomp(dj_intersect_djcomp103,4406
#define dj_projection_along_variables(dj_projection_along_variables104,4502
#define dj_variable_substitution_with_eqs(dj_variable_substitution_with_eqs106,4613
#define pa_fprint(pa_fprint109,4746
#define PA_UNDEFINED_P(PA_UNDEFINED_P110,4819
#define pa_new(pa_new111,4880
#define pa_faisabilite(pa_faisabilite112,4938
#define pa_feasibility(pa_feasibility113,5019
#define pa_faisabilite_ofl(pa_faisabilite_ofl114,5100
#define pa_path_to_disjunct(pa_path_to_disjunct115,5182
#define pa_path_dup_to_disjunct(pa_path_dup_to_disjunct116,5269
#define pa_system_difference(pa_system_difference117,5356
#define pa_system_equal_p(pa_system_equal_p118,5449
#define pa_inclusion_p(pa_inclusion_p119,5539
#define pa_path_to_disjunct_ofl(pa_path_to_disjunct_ofl120,5626
#define pa_path_to_disjunct_rule4(pa_path_to_disjunct_rule4121,5714
#define pa_path_to_few_disjunct(pa_path_to_few_disjunct122,5808
#define pa_system_difference(pa_system_difference123,5898
#define pa_convex_hull_equals_union_p(pa_convex_hull_equals_union_p124,5991
#define un_fprint(un_fprint127,6141
#define PATH_MAX_CONSTRAINTS PATH_MAX_CONSTRAINTS131,6255
#define IS_SC IS_SC133,6297
#define IS_SL IS_SL134,6337
#define IS_DJ IS_DJ135,6377
#define IS_PA IS_PA136,6417
#define C3_DEBUG(C3_DEBUG141,6564
#define C3_RETURN(C3_RETURN143,6673
#define C3_DEBUG(C3_DEBUG150,6929
#define C3_RETURN(C3_RETURN151,6959

/home/dounia/MYPIPS/prod/linear/src/union/reduc.c,1463
static char* hspara_string[10] __attribute__ ((unused)) = hspara_string49,833
             hspara_jm[10][10] = { /* Lower left is join, upper right is meet */hspara_jm70,1208
#define hspara_join(hspara_join85,2260
#define hspara_meet(hspara_meet86,2359
#define hspara_to_string(hspara_to_string87,2458
enum hspara_elem vect_parallel( in_v1, in_v2 )vect_parallel104,3184
enum hspara_elem contrainte_parallel_in_liste( in_co, in_lc )contrainte_parallel_in_liste204,6365
Psysteme sc_supress_parallel_redund_constraints( in_ps1, in_ps2 )sc_supress_parallel_redund_constraints255,7947
Psysteme sc_supress_same_constraints( in_ps1, in_ps2 )sc_supress_same_constraints329,10158
Psysteme sc_elim_redund_with_first_ofl_ctrl(in_ps1, in_ps2, ofl_ctrl)sc_elim_redund_with_first_ofl_ctrl412,12933
Ppath pa_supress_same_constraints( in_pa )pa_supress_same_constraints528,16763
Pdisjunct pa_path_to_disjunct_rule4_ofl_ctrl( in_pa, ofl_ctrl )pa_path_to_disjunct_rule4_ofl_ctrl570,18080
Pdisjunct pa_path_to_few_disjunct_ofl_ctrl( in_pa, ofl_ctrl )pa_path_to_few_disjunct_ofl_ctrl648,20395
bool pa_inclusion_p_ofl_ctrl(ps1, ps2, ofl_ctrl)pa_inclusion_p_ofl_ctrl868,27013
bool pa_system_equal_p_ofl_ctrl(ps1,ps2, ofl_ctrl)pa_system_equal_p_ofl_ctrl890,27467
Pdisjunct pa_system_difference_ofl_ctrl(ps1, ps2, ofl_ctrl)pa_system_difference_ofl_ctrl908,27996
bool pa_convex_hull_equals_union_p_ofl_ctrlpa_convex_hull_equals_union_p_ofl_ctrl937,28991

/home/dounia/MYPIPS/prod/linear/src/union/sl_gram.h,1224
# define SLX_Y_TAB_HSLX_Y_TAB_H34,1552
# define YYDEBUG YYDEBUG37,1613
# define YYTOKENTYPEYYTOKENTYPE45,1716
   enum yytokentype {yytokentype48,1840
     ACCFERM = 1,ACCFERM49,1862
     ACCOUVR = 2,ACCOUVR50,1880
     CONSTANTE = 3,CONSTANTE51,1898
     EGAL = 4,EGAL52,1918
     IDENT = 5,IDENT53,1933
     INF = 6,INF54,1949
     INFEGAL = 7,INFEGAL55,1963
     MOINS = 8,MOINS56,1981
     PLUS = 9,PLUS57,1997
     SUP = 10,SUP58,2012
     SUPEGAL = 11,SUPEGAL59,2027
     VAR = 12,VAR60,2046
     VIRG = 13VIRG61,2061
#define ACCFERM ACCFERM65,2104
#define ACCOUVR ACCOUVR66,2122
#define CONSTANTE CONSTANTE67,2140
#define EGAL EGAL68,2160
#define IDENT IDENT69,2175
#define INF INF70,2191
#define INFEGAL INFEGAL71,2205
#define MOINS MOINS72,2223
#define PLUS PLUS73,2239
#define SUP SUP74,2254
#define SUPEGAL SUPEGAL75,2269
#define VAR VAR76,2288
#define VIRG VIRG77,2303
typedef union YYSTYPEYYSTYPE82,2377
    Value Value;Value87,2450
    Variable Variable;Variable88,2467
} YYSTYPE;YYSTYPE93,2538
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL94,2549
# define yystype yystype95,2579
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED96,2641

/home/dounia/MYPIPS/prod/linear/src/union/path.c,1077
Ppath pa_make( in_ps, in_pcomp )pa_make53,953
Ppath pa_dup(in_pa)pa_dup68,1295
Ppath pa_free(in_pa)pa_free76,1498
Ppath pa_dup1(in_pa)pa_dup191,1852
Ppath pa_free1(in_pa)pa_free1102,2107
Ppath pa_full() { return pa_new(); }pa_full117,2407
bool pa_full_p( in_pa )pa_full_p123,2535
Ppath pa_empty() { return pa_make(sc_empty(NULL), NULL); }pa_empty135,2783
bool pa_empty_p( in_pa )pa_empty_p141,2941
int pa_max_constraints_nb( in_pa )pa_max_constraints_nb155,3251
Ppath pa_intersect_system( in_pa, in_ps )pa_intersect_system178,3822
Ppath pa_intersect_complement( in_pa, in_pc )pa_intersect_complement200,4474
Ppath pa_reduce_simple_complement( in_pa )pa_reduce_simple_complement222,5185
Ppath pa_transform_eg_in_ineg( in_pa )pa_transform_eg_in_ineg284,6931
bool pa_feasibility_ofl_ctrl( in_pa, ofl_ctrl )pa_feasibility_ofl_ctrl309,7550
Pdisjunct pa_path_to_disjunct_ofl_ctrl( in_pa, ofl_ctrl )pa_path_to_disjunct_ofl_ctrl374,9733
void pa_fprint_tab( in_fi, in_pa, in_fu, in_tab )pa_fprint_tab412,10938
Ppath pa_read( nomfic )pa_read438,11654

/home/dounia/MYPIPS/prod/linear/src/union/sl_gram.c,8062
#define YYBISON YYBISON44,2055
#define YYBISON_VERSION YYBISON_VERSION47,2096
#define YYSKELETON_NAME YYSKELETON_NAME50,2151
#define YYPURE YYPURE53,2206
#define YYPUSH YYPUSH56,2245
#define YYPULL YYPULL59,2284
#define yyparse yyparse63,2354
#define yylex yylex64,2388
#define yyerror yyerror65,2420
#define yylval yylval66,2454
#define yychar yychar67,2487
#define yydebug yydebug68,2520
#define yynerrs yynerrs69,2554
bool syntax_error;syntax_error91,2969
Value valcst;valcst92,2988
Psyslist sl_yacc; Pbase ba_yacc; Variable va_yacc;sl_yacc109,3915
Psyslist sl_yacc; Pbase ba_yacc; Variable va_yacc;ba_yacc109,3915
Psyslist sl_yacc; Pbase ba_yacc; Variable va_yacc;va_yacc109,3915
#define OPINF OPINF112,4007
#define OPINFEGAL OPINFEGAL113,4023
#define OPEGAL OPEGAL114,4043
#define OPSUPEGAL OPSUPEGAL115,4060
#define OPSUP OPSUP116,4080
#define DROIT DROIT117,4096
#define GAUCHE GAUCHE118,4112
#   define YY_NULL YY_NULL127,4268
#   define YY_NULL YY_NULL129,4303
# undef YYERROR_VERBOSEYYERROR_VERBOSE135,4405
# define YYERROR_VERBOSE YYERROR_VERBOSE136,4429
# define YYERROR_VERBOSE YYERROR_VERBOSE138,4462
# define SLX_Y_TAB_HSLX_Y_TAB_H144,4610
# define YYDEBUG YYDEBUG147,4671
# define YYTOKENTYPEYYTOKENTYPE155,4774
   enum yytokentype {yytokentype158,4898
     ACCFERM = 1,ACCFERM159,4920
     ACCOUVR = 2,ACCOUVR160,4938
     CONSTANTE = 3,CONSTANTE161,4956
     EGAL = 4,EGAL162,4976
     IDENT = 5,IDENT163,4991
     INF = 6,INF164,5007
     INFEGAL = 7,INFEGAL165,5021
     MOINS = 8,MOINS166,5039
     PLUS = 9,PLUS167,5055
     SUP = 10,SUP168,5070
     SUPEGAL = 11,SUPEGAL169,5085
     VAR = 12,VAR170,5104
     VIRG = 13VIRG171,5119
#define ACCFERM ACCFERM175,5162
#define ACCOUVR ACCOUVR176,5180
#define CONSTANTE CONSTANTE177,5198
#define EGAL EGAL178,5218
#define IDENT IDENT179,5233
#define INF INF180,5249
#define INFEGAL INFEGAL181,5263
#define MOINS MOINS182,5281
#define PLUS PLUS183,5297
#define SUP SUP184,5312
#define SUPEGAL SUPEGAL185,5327
#define VAR VAR186,5346
#define VIRG VIRG187,5361
typedef union YYSTYPEYYSTYPE192,5435
    Value Value;Value197,5507
    Variable Variable;Variable198,5524
} YYSTYPE;YYSTYPE203,5595
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL204,5606
# define yystype yystype205,5636
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED206,5698
# undef shortshort233,6190
typedef YYTYPE_UINT8 yytype_uint8;yytype_uint8237,6232
typedef unsigned char yytype_uint8;yytype_uint8239,6273
typedef YYTYPE_INT8 yytype_int8;yytype_int8243,6336
typedef signed char yytype_int8;yytype_int8246,6469
typedef short int yytype_int8;yytype_int8248,6508
typedef YYTYPE_UINT16 yytype_uint16;yytype_uint16252,6568
typedef unsigned short int yytype_uint16;yytype_uint16254,6611
typedef YYTYPE_INT16 yytype_int16;yytype_int16258,6681
typedef short int yytype_int16;yytype_int16260,6722
#  define YYSIZE_T YYSIZE_T265,6801
#  define YYSIZE_T YYSIZE_T267,6856
#  define YYSIZE_T YYSIZE_T271,7062
#  define YYSIZE_T YYSIZE_T273,7095
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM277,7143
#   define YY_(YY_283,7313
#  define YY_(YY_287,7399
# define YYUSE(YYUSE293,7536
# define YYUSE(YYUSE295,7573
# define YYID(YYID300,7703
YYID (int yyi)YYID305,7839
#    define YYSTACK_ALLOC YYSTACK_ALLOC323,8119
#    define YYSTACK_ALLOC YYSTACK_ALLOC327,8282
#    define alloca alloca330,8402
#    define YYSTACK_ALLOC YYSTACK_ALLOC332,8438
#      define EXIT_SUCCESS EXIT_SUCCESS338,8765
#  define YYSTACK_FREE(YYSTACK_FREE347,8915
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM353,9312
#  define YYSTACK_ALLOC YYSTACK_ALLOC356,9394
#  define YYSTACK_FREE YYSTACK_FREE357,9427
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM359,9489
#    define EXIT_SUCCESS EXIT_SUCCESS366,9779
#   define YYMALLOC YYMALLOC370,9844
#   define YYFREE YYFREE377,10114
union yyallocyyalloc392,10600
  yytype_int16 yyss_alloc;yyss_alloc394,10616
  YYSTYPE yyvs_alloc;yyvs_alloc395,10643
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM399,10744
# define YYSTACK_BYTES(YYSTACK_BYTES403,10892
# define YYCOPY_NEEDED YYCOPY_NEEDED407,11007
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE414,11316
#   define YYCOPY(YYCOPY432,11867
#   define YYCOPY(YYCOPY435,11973
#define YYFINAL YYFINAL448,12449
#define YYLAST YYLAST450,12508
#define YYNTOKENS YYNTOKENS453,12570
#define YYNNTS YYNNTS455,12633
#define YYNRULES YYNRULES457,12688
#define YYNSTATES YYNSTATES459,12746
#define YYUNDEFTOK YYUNDEFTOK462,12842
#define YYMAXUTOK YYMAXUTOK463,12864
#define YYTRANSLATE(YYTRANSLATE465,12889
static const yytype_uint8 yytranslate[] =yytranslate469,13065
static const yytype_uint8 yyprhs[] =yyprhs502,15092
static const yytype_int8 yyrhs[] =yyrhs512,15493
static const yytype_uint16 yyrline[] =yyrline527,16319
static const char *const yytname[] =yytname540,16844
static const yytype_uint16 yytoknum[] =yytoknum554,17412
static const yytype_uint8 yyr1[] =yyr1562,17650
static const yytype_uint8 yyr2[] =yyr2572,18069
static const yytype_uint8 yydefact[] =yydefact584,18591
static const yytype_int8 yydefgoto[] =yydefgoto594,19022
#define YYPACT_NINF YYPACT_NINF603,19335
static const yytype_int8 yypact[] =yypact604,19359
static const yytype_int8 yypgoto[] =yypgoto614,19785
#define YYTABLE_NINF YYTABLE_NINF624,20208
static const yytype_int8 yytable[] =yytable625,20233
#define yypact_value_is_default(yypact_value_is_default633,20511
#define yytable_value_is_error(yytable_value_is_error636,20578
static const yytype_uint8 yycheck[] =yycheck639,20638
static const yytype_uint8 yystos[] =yystos649,21014
#define yyerrok	yyerrok658,21414
#define yyclearin	yyclearin659,21449
#define YYEMPTY	YYEMPTY660,21486
#define YYEOF	YYEOF661,21508
#define YYACCEPT	YYACCEPT663,21526
#define YYABORT	YYABORT664,21560
#define YYERROR	YYERROR665,21593
#define YYFAIL	YYFAIL675,21992
#define YYRECOVERING(YYRECOVERING683,22312
#define YYBACKUP(YYBACKUP685,22353
#define YYTERROR	YYTERROR703,23257
#define YYERRCODE	YYERRCODE704,23276
# define YYLLOC_DEFAULT(YYLLOC_DEFAULT711,23504
#define YYRHSLOC(YYRHSLOC730,24717
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT737,24840
# define YYLEX YYLEX744,24976
# define YYLEX YYLEX746,25017
#  define YYFPRINTF YYFPRINTF754,25175
# define YYDPRINTF(YYDPRINTF757,25212
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT763,25319
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_value_print783,25861
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_print817,26568
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)yy_stack_print843,27414
# define YY_STACK_PRINT(YY_STACK_PRINT860,27775
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)yy_reduce_print874,28185
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT898,28789
int yydebug;yydebug906,29018
# define YYDPRINTF(YYDPRINTF908,29052
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT909,29077
# define YY_STACK_PRINT(YY_STACK_PRINT910,29132
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT911,29169
# define YYINITDEPTH YYINITDEPTH917,29303
# define YYMAXDEPTH YYMAXDEPTH928,29659
#   define yystrlen yystrlen936,29778
yystrlen (const char *yystr)yystrlen942,29962
#   define yystpcpy yystpcpy959,30257
yystpcpy (char *yydest, const char *yysrc)yystpcpy966,30493
yytnamerr (char *yyres, const char *yystr)yytnamerr994,31234
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,yysyntax_error1042,32263
# define YYCASE_(YYCASE_1121,35834
# undef YYCASE_YYCASE_1131,36385
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)yydestruct1178,37595
int yychar;yychar1205,37990
YYSTYPE yylval;yylval1208,38054
int yynerrs;yynerrs1211,38110
yyparse (void *YYPARSE_PARAM)yyparse1222,38291
#define YYPOPSTACK(YYPOPSTACK1278,39559
int slx_error(char * s)slx_error1964,56500

/home/dounia/MYPIPS/prod/linear/src/union/disjunct.c,1678
Pdisjunct dj_new() { return( (Pdisjunct) sl_new() ); }dj_new52,905
Pdisjunct dj_dup( in_dj )dj_dup58,1053
Pdisjunct dj_free( in_dj )dj_free69,1296
Pdisjunct dj_dup1( in_dj )dj_dup176,1499
Pdisjunct dj_free1( in_dj )dj_free184,1700
Pdisjunct dj_full(){ return( dj_new() ); }dj_full92,1907
bool dj_full_p( in_dj )dj_full_p98,2045
Pdisjunct dj_empty()dj_empty111,2308
bool dj_empty_p( in_dj )dj_empty_p118,2499
Pdisjunct dj_intersection_ofl_ctrl( in_dj1, in_dj2, ofl_ctrl )dj_intersection_ofl_ctrl134,2953
Pdisjunct  dj_intersect_system_ofl_ctrl( in_dj, in_ps, ofl_ctrl )dj_intersect_system_ofl_ctrl162,4028
Pdisjunct dj_intersect_djcomp_ofl_ctrl( in_dj1, in_dj2, ofl_ctrl )dj_intersect_djcomp_ofl_ctrl173,4367
Pdisjunct dj_union( in_dj1, in_dj2 )dj_union211,5677
bool dj_feasibility_ofl_ctrl( in_dj, ofl_ctrl )dj_feasibility_ofl_ctrl232,6351
Pdisjunct dj_system_complement( in_ps )dj_system_complement254,6927
Pdisjunct dj_disjunct_complement( in_dj )dj_disjunct_complement299,8358
Pdisjunct dj_projection_along_variables_ofl_ctrl( in_dj, in_pv, ofl_ctrl )dj_projection_along_variables_ofl_ctrl319,8965
Pdisjunct dj_simple_inegs_to_eg( in_dj )dj_simple_inegs_to_eg339,9580
bool dj_is_system_p( in_dj )dj_is_system_p393,11138
Pdisjunct dj_append_system( in_dj, in_ps )dj_append_system403,11480
Pdisjunct dj_variable_rename( in_dj, in_vold, in_vnew )dj_variable_rename417,11844
Pdisjunct dj_variable_substitution_with_eqs_ofl_ctrl( in_dj, in_pc, in_pv, ofl_ctrl )dj_variable_substitution_with_eqs_ofl_ctrl440,12566
void    dj_fprint_tab( in_fi, in_dj, in_fu, in_tab )dj_fprint_tab492,14345
Pdisjunct dj_read( nomfic )dj_read510,14933

/home/dounia/MYPIPS/prod/linear/src/union/sl_lex.l,0

/home/dounia/MYPIPS/prod/linear/src/union/sl_gram.y,788
s_list   : inisl defvar l_sys endsls_list77,2229
inisl :inisl80,2271
endsl :endsl87,2394
defvar   : VAR l_vardefvar93,2504
l_var : newidl_var96,2531
newid : IDENTnewid100,2573
l_sys : systeml_sys107,2750
system   : inisys ACCOUVR l_eq virg_opt ACCFERM endsyssystem111,2789
inisys   :inisys114,2850
endsys   :endsys122,3031
l_eq  : eql_eq134,3274
eq : debeq multi_membre op membre fin_mult_membre feqeq139,3314
debeq :debeq142,3374
feq     :feq155,3568
membre   : addop terme membre161,3622
terme : const ident terme166,3707
ident : IDENTident201,4750
const : CONSTANTEconst216,5148
op : INFop222,5240
addop : PLUSaddop263,5840
multi_membre : membremulti_membre269,5919
fin_mult_membre :fin_mult_membre273,5991
virg_opt : VIRGvirg_opt302,6623

/home/dounia/MYPIPS/prod/linear/src/union/sl_lex.c,10094
#define  YY_INT_ALIGNED YY_INT_ALIGNED4,21
#define yy_create_buffer yy_create_buffer8,99
#define yy_delete_buffer yy_delete_buffer9,143
#define yy_flex_debug yy_flex_debug10,187
#define yy_init_buffer yy_init_buffer11,225
#define yy_flush_buffer yy_flush_buffer12,265
#define yy_load_buffer_state yy_load_buffer_state13,307
#define yy_switch_to_buffer yy_switch_to_buffer14,359
#define yyin yyin15,409
#define yyleng yyleng16,429
#define yylex yylex17,453
#define yylineno yylineno18,475
#define yyout yyout19,503
#define yyrestart yyrestart20,525
#define yytext yytext21,555
#define yywrap yywrap22,579
#define yyalloc yyalloc23,603
#define yyrealloc yyrealloc24,629
#define yyfree yyfree25,659
#define FLEX_SCANNERFLEX_SCANNER27,684
#define YY_FLEX_MAJOR_VERSION YY_FLEX_MAJOR_VERSION28,705
#define YY_FLEX_MINOR_VERSION YY_FLEX_MINOR_VERSION29,737
#define YY_FLEX_SUBMINOR_VERSION YY_FLEX_SUBMINOR_VERSION30,769
#define FLEX_BETAFLEX_BETA32,838
#define FLEXINT_HFLEXINT_H48,1136
#define __STDC_LIMIT_MACROS __STDC_LIMIT_MACROS58,1447
typedef int8_t flex_int8_t;flex_int8_t62,1507
typedef uint8_t flex_uint8_t;flex_uint8_t63,1535
typedef int16_t flex_int16_t;flex_int16_t64,1565
typedef uint16_t flex_uint16_t;flex_uint16_t65,1595
typedef int32_t flex_int32_t;flex_int32_t66,1627
typedef uint32_t flex_uint32_t;flex_uint32_t67,1657
typedef signed char flex_int8_t;flex_int8_t69,1695
typedef short int flex_int16_t;flex_int16_t70,1728
typedef int flex_int32_t;flex_int32_t71,1760
typedef unsigned char flex_uint8_t; flex_uint8_t72,1786
typedef unsigned short int flex_uint16_t;flex_uint16_t73,1823
typedef unsigned int flex_uint32_t;flex_uint32_t74,1865
#define INT8_MIN INT8_MIN78,1951
#define INT16_MIN INT16_MIN81,2014
#define INT32_MIN INT32_MIN84,2081
#define INT8_MAX INT8_MAX87,2152
#define INT16_MAX INT16_MAX90,2214
#define INT32_MAX INT32_MAX93,2278
#define UINT8_MAX UINT8_MAX96,2347
#define UINT16_MAX UINT16_MAX99,2411
#define UINT32_MAX UINT32_MAX102,2477
#define YY_USE_CONSTYY_USE_CONST112,2647
#define YY_USE_CONSTYY_USE_CONST119,2768
#define yyconst yyconst125,2870
#define yyconstyyconst127,2898
#define YY_NULL YY_NULL131,2955
#define YY_SC_TO_UI(YY_SC_TO_UI138,3202
#define BEGIN BEGIN144,3433
#define YY_START YY_START150,3632
#define YYSTATE YYSTATE151,3672
#define YY_STATE_EOF(YY_STATE_EOF154,3755
#define YY_NEW_FILE YY_NEW_FILE157,3875
#define YY_END_OF_BUFFER_CHAR YY_END_OF_BUFFER_CHAR159,3918
#define YY_BUF_SIZE YY_BUF_SIZE163,4007
#define YY_STATE_BUF_SIZE YY_STATE_BUF_SIZE168,4135
#define YY_TYPEDEF_YY_BUFFER_STATEYY_TYPEDEF_YY_BUFFER_STATE171,4243
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE172,4278
#define YY_TYPEDEF_YY_SIZE_TYY_TYPEDEF_YY_SIZE_T176,4364
typedef size_t yy_size_t;yy_size_t177,4393
#define EOB_ACT_CONTINUE_SCAN EOB_ACT_CONTINUE_SCAN184,4487
#define EOB_ACT_END_OF_FILE EOB_ACT_END_OF_FILE185,4519
#define EOB_ACT_LAST_MATCH EOB_ACT_LAST_MATCH186,4549
    #define YY_LESS_LINENO(YY_LESS_LINENO188,4579
#define yyless(yyless191,4694
#define unput(unput204,5053
#define YY_STRUCT_YY_BUFFER_STATEYY_STRUCT_YY_BUFFER_STATE207,5133
struct yy_buffer_stateyy_buffer_state208,5167
	FILE *yy_input_file;yy_input_file210,5193
	char *yy_ch_buf;		/* input buffer */yy_ch_buf212,5216
	char *yy_buf_pos;		/* current position in input buffer */yy_buf_pos213,5254
	yy_size_t yy_buf_size;yy_buf_size218,5397
	yy_size_t yy_n_chars;yy_n_chars223,5507
	int yy_is_our_buffer;yy_is_our_buffer229,5675
	int yy_is_interactive;yy_is_interactive236,5913
	int yy_at_bol;yy_at_bol242,6080
    int yy_bs_lineno; /**< The line count. */yy_bs_lineno244,6097
    int yy_bs_column; /**< The column count. */yy_bs_column245,6143
	int yy_fill_buffer;yy_fill_buffer250,6278
	int yy_buffer_status;yy_buffer_status252,6300
#define YY_BUFFER_NEW YY_BUFFER_NEW254,6324
#define YY_BUFFER_NORMAL YY_BUFFER_NORMAL255,6348
#define YY_BUFFER_EOF_PENDING YY_BUFFER_EOF_PENDING266,6850
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */yy_buffer_stack_top272,6958
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */yy_buffer_stack_max273,7028
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */yy_buffer_stack274,7094
#define YY_CURRENT_BUFFER YY_CURRENT_BUFFER282,7362
#define YY_CURRENT_BUFFER_LVALUE YY_CURRENT_BUFFER_LVALUE289,7658
static char yy_hold_char;yy_hold_char292,7802
static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */yy_n_chars293,7828
yy_size_t slx_leng;slx_leng294,7905
static char *yy_c_buf_p = (char *) 0;yy_c_buf_p297,7971
static int yy_init = 0;		/* whether we need to initialize */yy_init298,8009
static int yy_start = 0;	/* start state number */yy_start299,8070
static int yy_did_buffer_switch_on_eof;yy_did_buffer_switch_on_eof304,8253
#define YY_FLUSH_BUFFER YY_FLUSH_BUFFER318,8793
#define yy_new_buffer yy_new_buffer328,9149
#define yy_set_interactive(yy_set_interactive330,9191
#define yy_set_bol(yy_set_bol340,9473
#define YY_AT_BOL(YY_AT_BOL350,9722
typedef unsigned char YY_CHAR;YY_CHAR354,9805
FILE *slx_in , *slx_out ;slx_in356,9837
FILE *slx_in , *slx_out ;slx_out356,9837
typedef int yy_state_type;yy_state_type358,9864
int slx_lineno = 1;slx_lineno362,9916
#define yytext_ptr yytext_ptr365,9960
#define YY_DO_BEFORE_ACTION YY_DO_BEFORE_ACTION375,10317
#define YY_NUM_RULES YY_NUM_RULES382,10482
#define YY_END_OF_BUFFER YY_END_OF_BUFFER383,10506
struct yy_trans_infoyy_trans_info386,10615
	flex_int32_t yy_verify;yy_verify388,10639
	flex_int32_t yy_nxt;yy_nxt389,10664
static yyconst flex_int16_t yy_accept[34] =yy_accept391,10690
static yyconst flex_int32_t yy_ec[256] =yy_ec399,10971
static yyconst flex_int32_t yy_meta[19] =yy_meta431,12693
static yyconst flex_int16_t yy_base[38] =yy_base437,12872
static yyconst flex_int16_t yy_def[38] =yy_def445,13175
static yyconst flex_int16_t yy_nxt[61] =yy_nxt453,13477
static yyconst flex_int16_t yy_chk[61] =yy_chk463,13927
static yy_state_type yy_last_accepting_state;yy_last_accepting_state473,14377
static char *yy_last_accepting_cpos;yy_last_accepting_cpos474,14423
int slx__flex_debug = 0;slx__flex_debug477,14489
#define REJECT REJECT482,14617
#define yymore(yymore483,14661
#define YY_MORE_ADJ YY_MORE_ADJ484,14707
#define YY_RESTORE_YY_MORE_OFFSETYY_RESTORE_YY_MORE_OFFSET485,14729
char *slx_text;slx_text486,14763
#define YY_NO_INPUT YY_NO_INPUT488,14798
#define RETURN(RETURN503,15119
#define RETURN(RETURN506,15231
#define INITIAL INITIAL510,15303
#define COMMENT COMMENT511,15321
#define TEXT TEXT512,15339
#define YY_EXTRA_TYPE YY_EXTRA_TYPE523,15638
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE589,16836
#define ECHO ECHO597,17054
#define YY_INPUT(YY_INPUT604,17270
#define yyterminate(yyterminate641,18194
#define YY_START_STACK_INCR YY_START_STACK_INCR646,18329
#define YY_FATAL_ERROR(YY_FATAL_ERROR651,18419
#define YY_DECL_IS_OURS YY_DECL_IS_OURS660,18652
#define YY_DECL YY_DECL664,18707
#define YY_USER_ACTIONYY_USER_ACTION671,18889
#define YY_BREAK YY_BREAK676,18982
#define YY_RULE_SETUP YY_RULE_SETUP679,19014
static int yy_get_next_buffer (void)yy_get_next_buffer1009,26462
    static yy_state_type yy_get_previous_state (void)yy_get_previous_state1143,30080
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )yy_try_NUL_trans1175,30981
    static int yyinput (void)yyinput1200,31691
    void slx_restart  (FILE * input_file )slx_restart1277,33466
    void slx__switch_to_buffer  (YY_BUFFER_STATE  new_buffer )slx__switch_to_buffer1294,33839
static void slx__load_buffer_state  (void)slx__load_buffer_state1325,34696
    YY_BUFFER_STATE slx__create_buffer  (FILE * file, int  size )slx__create_buffer1339,35173
    void slx__delete_buffer (YY_BUFFER_STATE  b )slx__delete_buffer1367,35878
    static void slx__init_buffer  (YY_BUFFER_STATE  b, FILE * file )slx__init_buffer1386,36335
    void slx__flush_buffer (YY_BUFFER_STATE  b )slx__flush_buffer1414,37076
void slx_push_buffer_state (YY_BUFFER_STATE new_buffer )slx_push_buffer_state1443,37766
void slx_pop_buffer_state (void)slx_pop_buffer_state1473,38541
static void slx_ensure_buffer_stack (void)slx_ensure_buffer_stack1492,38942
YY_BUFFER_STATE slx__scan_buffer  (char * base, yy_size_t  size )slx__scan_buffer1541,40574
YY_BUFFER_STATE slx__scan_string (yyconst char * yystr )slx__scan_string1578,41659
YY_BUFFER_STATE slx__scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )slx__scan_bytes1591,42082
#define YY_EXIT_FAILURE YY_EXIT_FAILURE1622,42821
static void yy_fatal_error (yyconst char* msg )yy_fatal_error1625,42855
#undef yylessyyless1633,43034
#define yyless(yyless1634,43048
int slx_get_lineno  (void)slx_get_lineno1653,43517
FILE *slx_get_in  (void)slx_get_in1662,43615
FILE *slx_get_out  (void)slx_get_out1670,43703
yy_size_t slx_get_leng  (void)slx_get_leng1678,43807
char *slx_get_text  (void)slx_get_text1687,43904
void slx_set_lineno (int  line_number )slx_set_lineno1696,44024
void slx_set_in (FILE *  in_str )slx_set_in1708,44255
void slx_set_out (FILE *  out_str )slx_set_out1713,44320
int slx_get_debug  (void)slx_get_debug1718,44389
void slx_set_debug (int  bdebug )slx_set_debug1723,44452
static int yy_init_globals (void)yy_init_globals1728,44526
int slx_lex_destroy  (void)slx_lex_destroy1757,45222
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )yy_flex_strncpy1783,45786
static int yy_flex_strlen (yyconst char * s )yy_flex_strlen1792,45947
void *slx_alloc (yy_size_t  size )slx_alloc1802,46064
void *slx_realloc  (void * ptr, yy_size_t  size )slx_realloc1807,46137
void slx_free (void * ptr )slx_free1819,46595
#define YYTABLES_NAME YYTABLES_NAME1824,46693
int slx_wrap() { return(-1); }slx_wrap1830,46750
void sl_init_lex() { BEGIN TEXT; }sl_init_lex1831,46781

/home/dounia/MYPIPS/prod/linear/src/union/union.h,4829
#define  union_header_includedunion_header_included7,221
typedef struct Ssyslist  {Ssyslist10,254
        Psysteme                psys;psys11,281
        struct Ssyslist         *succ;succ12,319
        } *Psyslist,Ssyslist;Psyslist13,358
        } *Psyslist,Ssyslist;Ssyslist13,358
#define SL_NULL SL_NULL15,389
typedef Ssyslist *Pdisjunct,Sdisjunct;Pdisjunct17,427
typedef Ssyslist *Pdisjunct,Sdisjunct;Sdisjunct17,427
#define DJ_UNDEFINED DJ_UNDEFINED19,467
typedef Ssysteme *Pcomplement,Scomplement;Pcomplement21,510
typedef Ssysteme *Pcomplement,Scomplement;Scomplement21,510
#define CO_UNDEFINED CO_UNDEFINED23,554
 typedef Ssyslist *Pcomplist,Scomplist; Pcomplist24,597
 typedef Ssyslist *Pcomplist,Scomplist; Scomplist24,597
typedef struct Spath {Spath25,638
        Psysteme        psys;psys26,661
        Pcomplist       pcomp;pcomp27,691
        } *Ppath,Spath;Ppath28,722
        } *Ppath,Spath;Spath28,722
#define PA_UNDEFINED PA_UNDEFINED30,747
typedef struct Sunion {Sunion32,785
        Pdisjunct       pdi;pdi33,809
        Ppath           ppa;ppa34,838
        } *Punion,Sunion;Punion35,867
        } *Punion,Sunion;Sunion35,867
#define UN_UNDEFINED UN_UNDEFINED37,894
#define UN_FULL_SPACE UN_FULL_SPACE38,932
#define UN_EMPTY_SPACE UN_EMPTY_SPACE39,970
enum hspara_elemhspara_elem55,1588
  unpara        = 0,   /*  unparallel ->   h1/hj = h1    */unpara57,1697
    sszero      = 1,   /*  b1 == bj   ->   h1/hj = full  */ sszero59,1830
    ssplus      = 2,   /*  bj >  b1   ->   h1/hj = full  */ssplus60,1891
        ssminus = 3,   /*  bj <  b1   ->   h1/hj = h1    */ ssminus64,2039
        opzero  = 4,   /*  b1 == bj   ->   h1/hj = h1    */ opzero66,2176
        opplus  = 5,   /*  bj >  b1   ->   h1/hj = h1    */opplus67,2237
    keep        = 6,keep68,2297
      opminus   = 7,   /*  b1 <  bj   ->   h1/hj = empty */  opminus70,2378
    empty       = 8,   empty71,2440
  full          = 9     full72,2464
#define my_sc_full(my_sc_full76,2527
#define my_sc_empty(my_sc_empty77,2566
#define is_sc_my_empty_p(is_sc_my_empty_p78,2618
#define is_dj_full_p(is_dj_full_p79,2664
#define is_dj_empty_p(is_dj_empty_p80,2709
#define is_pa_full_p(is_pa_full_p81,2755
#define is_pa_empty_p(is_pa_empty_p82,2800
#define sc_difference(sc_difference86,2881
#define sc_inclusion_p(sc_inclusion_p87,2974
#define sc_inclusion_p_ofl(sc_inclusion_p_ofl88,3062
#define sc_inclusion_p_ofl_ctrl(sc_inclusion_p_ofl_ctrl89,3151
#define sc_equal_p(sc_equal_p90,3243
#define sc_equal_p_ofl(sc_equal_p_ofl91,3334
#define sc_equal_p_ofl_ctrl(sc_equal_p_ofl_ctrl92,3426
#define sc_convex_hull_equals_union_p(sc_convex_hull_equals_union_p93,3517
#define sc_convex_hull_equals_union_p_ofl(sc_convex_hull_equals_union_p_ofl95,3665
#define sc_convex_hull_equals_union_p_ofl_ctrl(sc_convex_hull_equals_union_p_ofl_ctrl97,3815
#define sc_elim_redund_with_first(sc_elim_redund_with_first101,3989
#define dj_fprint(dj_fprint103,4096
#define DJ_UNDEFINED_P(DJ_UNDEFINED_P104,4169
#define dj_faisabilite(dj_faisabilite105,4230
#define dj_feasibility(dj_feasibility106,4311
#define dj_faisabilite_ofl(dj_faisabilite_ofl107,4392
#define dj_intersection(dj_intersection108,4474
#define dj_intersect_system(dj_intersect_system109,4564
#define dj_intersect_djcomp(dj_intersect_djcomp110,4658
#define dj_projection_along_variables(dj_projection_along_variables111,4754
#define dj_variable_substitution_with_eqs(dj_variable_substitution_with_eqs113,4865
#define pa_fprint(pa_fprint116,4998
#define PA_UNDEFINED_P(PA_UNDEFINED_P117,5071
#define pa_new(pa_new118,5132
#define pa_faisabilite(pa_faisabilite119,5190
#define pa_feasibility(pa_feasibility120,5271
#define pa_faisabilite_ofl(pa_faisabilite_ofl121,5352
#define pa_path_to_disjunct(pa_path_to_disjunct122,5434
#define pa_path_dup_to_disjunct(pa_path_dup_to_disjunct123,5521
#define pa_system_difference(pa_system_difference124,5608
#define pa_system_equal_p(pa_system_equal_p125,5701
#define pa_inclusion_p(pa_inclusion_p126,5791
#define pa_path_to_disjunct_ofl(pa_path_to_disjunct_ofl127,5878
#define pa_path_to_disjunct_rule4(pa_path_to_disjunct_rule4128,5966
#define pa_path_to_few_disjunct(pa_path_to_few_disjunct129,6060
#define pa_system_difference(pa_system_difference130,6150
#define pa_convex_hull_equals_union_p(pa_convex_hull_equals_union_p131,6243
#define un_fprint(un_fprint134,6393
#define PATH_MAX_CONSTRAINTS PATH_MAX_CONSTRAINTS138,6507
#define IS_SC IS_SC140,6549
#define IS_SL IS_SL141,6589
#define IS_DJ IS_DJ142,6629
#define IS_PA IS_PA143,6669
#define C3_DEBUG(C3_DEBUG148,6816
#define C3_RETURN(C3_RETURN150,6925
#define C3_DEBUG(C3_DEBUG157,7181
#define C3_RETURN(C3_RETURN158,7211

/home/dounia/MYPIPS/prod/linear/src/union/sc_list.c,1362
char* (*union_variable_name)(Variable) = entity_local_name;union_variable_name49,880
char* (*union_variable_name)(Variable) = variable_default_name;union_variable_name51,946
Psysteme sc_full() { return sc_new(); }sc_full58,1084
bool sc_full_p( in_ps ) sc_full_p61,1177
Psysteme sc_dup1(in_ps)sc_dup172,1513
Psysteme sc_free( in_ps )sc_free112,2517
Psysteme sc_free1( in_ps )sc_free1121,2717
Psysteme sc_concatenate(in_s1,in_s2)sc_concatenate157,3457
bool sl_length( in_sl )sl_length193,4495
int sl_max_constraints_nb( in_sl )sl_max_constraints_nb207,4818
bool sl_is_system_p( in_sl )sl_is_system_p230,5318
Psyslist sl_append_system( in_sl, in_ps )sl_append_system240,5673
Psyslist sl_append_system_first( in_sl, in_ps )sl_append_system_first256,6049
Psyslist sl_new()sl_new277,6575
Psyslist sl_dup( in_sl )sl_dup296,7001
Psyslist sl_dup1( in_sl )sl_dup1311,7331
Psyslist sl_free(psl)sl_free327,7674
Psyslist sl_free1(psl)sl_free1343,7956
void  sl_set_variable_name( in_fu )sl_set_variable_name357,8231
char*  sl_get_tab_string( in_tab )sl_get_tab_string366,8413
void  sl_fprint_tab( in_fi, in_sl, in_fu, in_tab )sl_fprint_tab383,8747
void  sl_fprint( in_fi, in_sl, in_fu )sl_fprint447,10471
Psyslist  sl_read( nomfic )sl_read461,10872
void un_fprint_tab( in_fi, in_un, in_fu, in_ty, in_tab )un_fprint_tab475,11231

/home/dounia/MYPIPS/prod/linear/src/vecteur/variable.c,484
bool variable_equal(v1, v2)variable_equal62,1728
char * variable_default_name(v)variable_default_name81,2104
char * variable_dump_name(Variable v) {variable_dump_name96,2545
char * (*variable_debug_name)(Variable) = variable_dump_name;variable_debug_name114,3134
void init_variable_debug_name(char *(*name)(Variable))init_variable_debug_name117,3267
void reset_variable_debug_name(void)reset_variable_debug_name121,3356
Variable variable_make(name)variable_make129,3528

/home/dounia/MYPIPS/prod/linear/src/vecteur/unaires.c,1665
#define MALLOC(MALLOC41,1057
#define FREE(FREE42,1089
void vect_normalize(Pvecteur v)vect_normalize59,1475
void vect_add_elem(Pvecteur * pvect,Variable var, Value val)vect_add_elem72,1834
void vect_erase_var(ppv, v)vect_erase_var106,2835
void vect_chg_coeff(ppv,var,val)vect_chg_coeff143,3807
void vect_chg_var(ppv,v_old,v_new)vect_chg_var168,4304
Variable vect_one_coeff_if_any(Pvecteur v)vect_one_coeff_if_any182,4546
Pvecteur vect_del_var(v_in,var)vect_del_var206,5142
Value vect_coeff(var,vect)vect_coeff228,5579
Value vect_coeff_sum(vect)vect_coeff_sum246,5978
Pvecteur vect_sign(v)vect_sign269,6397
void vect_sort_in_place(pv, compare)vect_sort_in_place290,6843
Pvecteur vect_sort(v, compare)vect_sort335,7789
int vect_compare(pv1, pv2)vect_compare352,8058
void Pvecteur_separate_on_sign(v, pvpos, pvneg)Pvecteur_separate_on_sign369,8457
bool vect_common_variables_p(v1, v2)vect_common_variables_p397,9050
bool vect_contains_variable_p(v, var)vect_contains_variable_p415,9485
vect_lexicographic_compare(Pvecteur v1, Pvecteur v2, vect_lexicographic_compare433,9907
vect_lexicographic_compare2(Pvecteur v1, Pvecteur v2,vect_lexicographic_compare2449,10261
vect_lexicographic_unsafe_compare(Pvecteur v1, Pvecteur v2,vect_lexicographic_unsafe_compare464,10587
int vect_lexicographic_unsafe_compare2(Pvecteur v1, Pvecteur v2,vect_lexicographic_unsafe_compare2474,10807
static int vect_lexicographic_coefficient_comparison(Pvecteur v1, Pvecteur v2)vect_lexicographic_coefficient_comparison486,11166
vect_lexicographic_unsafe_compare_generic(Pvecteur v1, Pvecteur v2,vect_lexicographic_unsafe_compare_generic542,13517

/home/dounia/MYPIPS/prod/linear/src/vecteur/vecteur-local.h,1912
#define VECTEUR VECTEUR51,2048
typedef void * Variable;Variable60,2327
typedef char * (*get_variable_name_t)(Variable);get_variable_name_t62,2407
#define VARIABLE_UNDEFINED VARIABLE_UNDEFINED64,2457
#define VARIABLE_UNDEFINED_P(VARIABLE_UNDEFINED_P65,2499
#define VARIABLE_DEFINED_P(VARIABLE_DEFINED_P66,2557
typedef struct Svecteur {Svecteur89,3528
    Variable var;var90,3554
    Value val;val91,3572
    struct Svecteur *succ;succ92,3587
} Svecteur, *Pvecteur;Svecteur93,3614
} Svecteur, *Pvecteur;Pvecteur93,3614
typedef struct Svecteur Sbase, * Pbase;Sbase107,4041
typedef struct Svecteur Sbase, * Pbase;Pbase107,4041
#define VECTEUR_NUL VECTEUR_NUL110,4114
#define VECTEUR_NUL_P(VECTEUR_NUL_P111,4149
#define VECTEUR_UNDEFINED VECTEUR_UNDEFINED112,4193
#define VECTEUR_UNDEFINED_P(VECTEUR_UNDEFINED_P113,4234
#define PlinX PlinX119,4480
#define NONEXPLIN NONEXPLIN120,4503
#define print_vect(print_vect123,4564
#define var_of(var_of124,4610
#define val_of(val_of125,4649
#define vecteur_var(vecteur_var126,4688
#define vecteur_val(vecteur_val127,4722
#define vecteur_succ(vecteur_succ128,4756
#define TCST TCST131,4839
#define term_cst(term_cst132,4867
#define BASE_NULLE BASE_NULLE135,4944
#define BASE_NULLE_P(BASE_NULLE_P136,4975
#define BASE_UNDEFINED BASE_UNDEFINED137,5018
#define BASE_UNDEFINED_P(BASE_UNDEFINED_P138,5053
#define base_dimension(base_dimension139,5103
#define base_add_dimension(base_add_dimension140,5154
#define base_rm(base_rm141,5232
#define BASE_FOREACH(BASE_FOREACH142,5292
#define OFL_CTRL OFL_CTRL179,7305
#define FWD_OFL_CTRL FWD_OFL_CTRL180,7324
#define NO_OFL_CTRL NO_OFL_CTRL181,7347
#define OFL_CTRL OFL_CTRL183,7414
#define FWD_OFL_CTRL FWD_OFL_CTRL184,7489
#define NO_OFL_CTRL NO_OFL_CTRL185,7565
typedef struct linear_hashtable_st * linear_hashtable_pt;linear_hashtable_pt190,7756

/home/dounia/MYPIPS/prod/linear/src/vecteur/io.c,589
Pvecteur vect_read(Pbase * b)vect_read65,1939
void vect_fprint(FILE * f, Pvecteur v, get_variable_name_t variable_name) {vect_fprint124,3654
void vect_fprint_as_dense(f, v, b)vect_fprint_as_dense159,4386
void vect_fprint_as_monome(FILE * f,vect_fprint_as_monome201,5583
char * vect_sprint_as_monome(Pvecteur v,vect_sprint_as_monome217,6074
void vect_dump(Pvecteur v) {vect_dump304,8249
void vect_print(Pvecteur v, get_variable_name_t variable_name)vect_print312,8531
void vect_fdump(FILE * f, Pvecteur v) {vect_fdump320,8787
void base_fprint(FILE * f,base_fprint342,9435

/home/dounia/MYPIPS/prod/linear/src/vecteur/error.c,65
void vect_error(char * name, char * fmt, ...)vect_error50,1488

/home/dounia/MYPIPS/prod/linear/src/vecteur/vecteur.h,1977
#define  vecteur_header_includedvecteur_header_included7,227
#define VECTEUR VECTEUR58,2308
typedef void * Variable;Variable67,2587
typedef char * (*get_variable_name_t)(Variable);get_variable_name_t69,2667
#define VARIABLE_UNDEFINED VARIABLE_UNDEFINED71,2717
#define VARIABLE_UNDEFINED_P(VARIABLE_UNDEFINED_P72,2759
#define VARIABLE_DEFINED_P(VARIABLE_DEFINED_P73,2817
typedef struct Svecteur {Svecteur96,3788
    Variable var;var97,3814
    Value val;val98,3832
    struct Svecteur *succ;succ99,3847
} Svecteur, *Pvecteur;Svecteur100,3874
} Svecteur, *Pvecteur;Pvecteur100,3874
typedef struct Svecteur Sbase, * Pbase;Sbase114,4301
typedef struct Svecteur Sbase, * Pbase;Pbase114,4301
#define VECTEUR_NUL VECTEUR_NUL117,4374
#define VECTEUR_NUL_P(VECTEUR_NUL_P118,4409
#define VECTEUR_UNDEFINED VECTEUR_UNDEFINED119,4453
#define VECTEUR_UNDEFINED_P(VECTEUR_UNDEFINED_P120,4494
#define PlinX PlinX126,4740
#define NONEXPLIN NONEXPLIN127,4763
#define print_vect(print_vect130,4824
#define var_of(var_of131,4870
#define val_of(val_of132,4909
#define vecteur_var(vecteur_var133,4948
#define vecteur_val(vecteur_val134,4982
#define vecteur_succ(vecteur_succ135,5016
#define TCST TCST138,5099
#define term_cst(term_cst139,5127
#define BASE_NULLE BASE_NULLE142,5204
#define BASE_NULLE_P(BASE_NULLE_P143,5235
#define BASE_UNDEFINED BASE_UNDEFINED144,5278
#define BASE_UNDEFINED_P(BASE_UNDEFINED_P145,5313
#define base_dimension(base_dimension146,5363
#define base_add_dimension(base_add_dimension147,5414
#define base_rm(base_rm148,5492
#define BASE_FOREACH(BASE_FOREACH149,5552
#define OFL_CTRL OFL_CTRL186,7565
#define FWD_OFL_CTRL FWD_OFL_CTRL187,7584
#define NO_OFL_CTRL NO_OFL_CTRL188,7607
#define OFL_CTRL OFL_CTRL190,7674
#define FWD_OFL_CTRL FWD_OFL_CTRL191,7749
#define NO_OFL_CTRL NO_OFL_CTRL192,7825
typedef struct linear_hashtable_st * linear_hashtable_pt;linear_hashtable_pt197,8016

/home/dounia/MYPIPS/prod/linear/src/vecteur/scalaires.c,203
#define FREE(FREE39,1030
Pvecteur vect_div(v,x)vect_div52,1501
Pvecteur vect_clean(v)vect_clean80,2217
Pvecteur vect_multiply(v,x)vect_multiply123,3032
void vect_chg_sgn(v)vect_chg_sgn151,3470

/home/dounia/MYPIPS/prod/linear/src/vecteur/base.c,1760
Pbase vect_add_variable(b, v)vect_add_variable61,1786
Pbase base_add_variable(b, var)base_add_variable88,2453
Pbase make_base_from_vect(Pvecteur pv)make_base_from_vect109,2884
Pbase base_remove_variable(b, v)base_remove_variable122,3184
bool base_contains_variable_p(b, v)base_contains_variable_p136,3473
Variable base_find_variable(b, v)base_find_variable155,3942
Variable base_find_variable_name(b, v, variable_name)base_find_variable_name170,4384
int base_find_variable_rank(b, v, variable_name)base_find_variable_rank194,4949
Pbase base_reversal(b_in)base_reversal221,5556
Pvecteur vect_rename(v, b, variable_name)vect_rename247,6503
Pvecteur vect_rename_variables(vect_rename_variables281,7368
Pvecteur vect_translate(v, b, variable_name)vect_translate313,8431
bool vect_in_basis_p(v, b)vect_in_basis_p342,9198
Pvecteur vect_variable_rename(v, v_old, v_new)vect_variable_rename366,9723
void base_append(Pbase * pb1, Pbase b2)base_append384,10069
Pbase base_union(Pbase b1, Pbase b2)base_union428,11269
Pbase base_intersection(Pbase b1, Pbase b2)base_intersection473,12146
int rank_of_variable(base,var)rank_of_variable497,12695
Variable variable_of_rank(base,rank)variable_of_rank520,13108
int search_higher_rank(vect,base)search_higher_rank541,13530
Variable search_var_of_higher_rank(pvect,base,var)search_var_of_higher_rank561,13930
Pvecteur search_i_element(b,i)search_i_element583,14440
Pbase base_normalize(b)base_normalize594,14577
bool base_normalized_p(b)base_normalized_p604,14725
Pbase base_difference(Pbase b1, Pbase b2)base_difference621,15044
bool base_included_p(Pbase b1, Pbase b2)base_included_p640,15455
bool bases_strictly_equal_p(Pbase b1, Pbase b2)bases_strictly_equal_p660,15970

/home/dounia/MYPIPS/prod/linear/src/vecteur/binaires.c,612
Pvecteur vect_add(v1,v2)vect_add53,1410
Pvecteur vect_substract(v1,v2)vect_substract75,1834
Pvecteur vect_substitute_dimension(Pvecteur v, Variable i, Pvecteur s)vect_substitute_dimension99,2542
Pvecteur vect_cl_ofl_ctrl(v, lambda, u, ofl_ctrl)vect_cl_ofl_ctrl128,3705
Pvecteur vect_cl_ofl(v,lambda,u)vect_cl_ofl173,4665
Pvecteur vect_cl(v,lambda,u)vect_cl181,4798
Pvecteur vect_cl2_ofl_ctrl(x1, v1, x2, v2, ofl_ctrl)vect_cl2_ofl_ctrl204,5413
Pvecteur vect_cl2_ofl(x1,v1,x2,v2)vect_cl2_ofl238,6607
Pvecteur vect_cl2(x1,v1,x2,v2)vect_cl2247,6751
Pvecteur vect_subst(v,v1,v2)vect_subst286,8126

/home/dounia/MYPIPS/prod/linear/src/vecteur/private.c,265
Pvecteur vect_chain(v_in,var,coeff)vect_chain69,1949
Pvecteur vect_elem(vect,var)vect_elem91,2480
Pvecteur vect_extract(pvec,var)vect_extract126,3613
Variable vect_first_var(pvec)vect_first_var227,5766
Pvecteur vect_reversal(vect_in)vect_reversal237,5990

/home/dounia/MYPIPS/prod/linear/src/vecteur/reductions.c,976
int vect_size(v)vect_size47,1178
int vect_dimension(v)vect_dimension64,1450
Value vect_prod_scal(v1,v2)vect_prod_scal82,1726
Value vect_pgcd_all(v)vect_pgcd_all108,2233
Value vect_pgcd_except(v,var)vect_pgcd_except130,2776
Value vect_max0(v)vect_max0164,3522
Value vect_min0(v)vect_min0186,4025
Value vect_min(v)vect_min208,4468
Value vect_max(v)vect_max240,5226
Value vect_sum(Pvecteur v)vect_sum261,5637
bool vect_equal(v1,v2)vect_equal278,5908
bool vect_equal_except(v1,v2,var)vect_equal_except319,6943
bool vect_oppos(v1,v2)vect_oppos360,7961
bool vect_opposite_except(v1,v2,var)vect_opposite_except399,9014
int vect_proport(Pvecteur v1, Pvecteur v2)vect_proport455,10745
bool vect_colin_base(vec,var)vect_colin_base508,11789
bool vect_check(Pvecteur cv)vect_check529,12474
bool vect_consistent_p(Pvecteur v) { return vect_check(v);}vect_consistent_p557,13072
bool vect_larger_coef_p(Pvecteur v, Value val)vect_larger_coef_p564,13300

/home/dounia/MYPIPS/prod/linear/src/vecteur/alloc.c,606
#define MALLOC(MALLOC42,1049
#define FREE(FREE43,1081
Pvecteur vect_dup(v_in)vect_dup51,1258
void vect_rm(v)vect_rm78,1851
Pvecteur vect_new(Variable var, Value coeff)vect_new110,2530
void dbg_vect_rm(Pvecteur v,dbg_vect_rm139,3166
Pvecteur vect_make(Pvecteur v, Variable var, Value val, ...)vect_make165,3867
Pvecteur vect_make_dense(Pbase b, Value val, ...)vect_make_dense198,4756
Pvecteur vect_make_1D(Value a, Variable x, Value b)vect_make_1D226,5415
Pbase vect_copy(Pvecteur b)vect_copy240,5810
Pbase base_dup(Pbase b)base_dup268,6612
Pbase base_copy(Pbase b)base_copy300,7480

/home/dounia/MYPIPS/prod/linear/src/vecteur/hashpointer.c,1968
#define debug_assert(debug_assert48,1365
#define debug_assert(debug_assert50,1405
#define debug_assert_coherent(debug_assert_coherent53,1437
#define FREE_CHUNK	FREE_CHUNK55,1516
#define EMPTIED_CHUNK	EMPTIED_CHUNK56,1548
  void * key;key59,1602
  void * val;val60,1616
} paire;paire61,1630
typedef struct linear_hashtable_st linear_hashtable_st65,1688
  size_t nitems;	    /* number of association stored */nitems67,1726
  size_t size;	    /* size of internal array */size68,1782
  paire * contents; /* array storing key&value paires */contents69,1830
  * linear_hashtable_pt;linear_hashtable_pt71,1889
static uintptr_t key_location(linear_hashtable_pt h, void * k, bool toget)key_location75,1965
static void linear_hashtable_print(FILE * file, linear_hashtable_pt h)linear_hashtable_print102,2863
void linear_hashtable_dump(linear_hashtable_pt h)linear_hashtable_dump122,3400
bool linear_hashtable_coherent_p(linear_hashtable_pt h)linear_hashtable_coherent_p128,3524
#define HASHTABLE_INITIAL_SIZE HASHTABLE_INITIAL_SIZE160,4179
linear_hashtable_pt linear_hashtable_make(void)linear_hashtable_make165,4276
void linear_hashtable_free(linear_hashtable_pt h)linear_hashtable_free189,4802
static void linear_hashtable_extend(linear_hashtable_pt h)linear_hashtable_extend197,4920
static void linear_hashtable_internal_putlinear_hashtable_internal_put236,5886
void linear_hashtable_put(linear_hashtable_pt h, void * k, void * v)linear_hashtable_put263,6636
void linear_hashtable_put_once(linear_hashtable_pt h, void * k, void * v)linear_hashtable_put_once268,6759
bool linear_hashtable_isin(linear_hashtable_pt h, void * k)linear_hashtable_isin273,6886
bool linear_hashtable_remove(linear_hashtable_pt h, void * k)linear_hashtable_remove278,7006
void * linear_hashtable_get(linear_hashtable_pt h, void * k)linear_hashtable_get293,7301
int linear_hashtable_nitems(linear_hashtable_pt h)linear_hashtable_nitems299,7489

/home/dounia/MYPIPS/prod/linear/src/sparse_sc/sys_matrice_conv.c,853
void sys_matrice_index(sc, base_index, A, n, m)sys_matrice_index53,1464
void matrice_index_sys(sc,base_index,AG,n,m)matrice_index_sys80,2108
void sc_to_matrices(ps,base_index,A,B,n,m)sc_to_matrices134,3631
void matrices_to_sc(ps,base_index,A,B,n,m)matrices_to_sc185,5145
void loop_sc_to_matrices(ps,index_base,const_base,A,B,n,m1,m2)loop_sc_to_matrices278,7329
void matrices_to_loop_sc(ps,index_base,const_base,A,B,n,m1,m2)matrices_to_loop_sc338,9234
void constraints_to_matrices(pc, b, A, B)constraints_to_matrices461,12180
void matrices_to_constraints(pc, b, A, B)matrices_to_constraints501,13362
void constraints_with_sym_cst_to_matrices(pc,index_base,const_base,A,B)constraints_with_sym_cst_to_matrices572,15329
void matrices_to_constraints_with_sym_cst(pc,index_base,const_base,A,B)matrices_to_constraints_with_sym_cst621,17088

/home/dounia/MYPIPS/prod/linear/src/sparse_sc/sparse_sc-local.h,0

/home/dounia/MYPIPS/prod/linear/src/sparse_sc/sparse_sc.h,67
#define  sparse_sc_header_includedsparse_sc_header_included7,233

/home/dounia/MYPIPS/prod/linear/src/gnulib/stddef.in.h,78
#   undef _@_43,1694
#   define _GL_STDDEF_WINT_T_GL_STDDEF_WINT_T44,1729

/home/dounia/MYPIPS/prod/linear/src/gnulib/unistd.in.h,63
# define _GL_WINSOCK2_H_WITNESS_GL_WINSOCK2_H_WITNESS36,1510

/home/dounia/MYPIPS/prod/linear/src/gnulib/memset.c,52
memset (void *str, int c, size_t len)memset23,899

/home/dounia/MYPIPS/prod/linear/src/gnulib/stdlib.in.h,0

/home/dounia/MYPIPS/prod/linear/src/gnulib/aux/snippet/arg-nonnull.h,102
#  define _GL_ARG_NONNULL(_GL_ARG_NONNULL22,1089
#  define _GL_ARG_NONNULL(_GL_ARG_NONNULL24,1167

/home/dounia/MYPIPS/prod/linear/src/gnulib/aux/snippet/warn-on-use.h,442
#  define _GL_WARN_ON_USE(_GL_WARN_ON_USE68,3468
#  define _GL_WARN_ON_USE(_GL_WARN_ON_USE72,3685
#  define _GL_WARN_ON_USE(_GL_WARN_ON_USE75,3797
#  define _GL_WARN_ON_USE_CXX(_GL_WARN_ON_USE_CXX88,4349
#  define _GL_WARN_ON_USE_CXX(_GL_WARN_ON_USE_CXX93,4614
#  define _GL_WARN_ON_USE_CXX(_GL_WARN_ON_USE_CXX96,4771
#  define _GL_WARN_EXTERN_C _GL_WARN_EXTERN_C105,5038
#  define _GL_WARN_EXTERN_C _GL_WARN_EXTERN_C107,5084

/home/dounia/MYPIPS/prod/linear/src/gnulib/aux/snippet/cPPdefs.h,1645
#define _GL_CXXDEFS_H_GL_CXXDEFS_H18,775
# define _GL_EXTERN_C _GL_EXTERN_C82,2671
# define _GL_EXTERN_C _GL_EXTERN_C84,2710
#define _GL_FUNCDECL_RPL(_GL_FUNCDECL_RPL94,3094
#define _GL_FUNCDECL_RPL_1(_GL_FUNCDECL_RPL_196,3231
#define _GL_FUNCDECL_SYS(_GL_FUNCDECL_SYS106,3703
#define _GL_CXXALIAS_RPL(_GL_CXXALIAS_RPL115,4082
# define _GL_CXXALIAS_RPL_1(_GL_CXXALIAS_RPL_1118,4247
# define _GL_CXXALIAS_RPL_1(_GL_CXXALIAS_RPL_1125,4613
# define _GL_CXXALIAS_RPL_CAST_1(_GL_CXXALIAS_RPL_CAST_1135,5091
# define _GL_CXXALIAS_RPL_CAST_1(_GL_CXXALIAS_RPL_CAST_1143,5551
# define _GL_CXXALIAS_SYS(_GL_CXXALIAS_SYS161,6377
# define _GL_CXXALIAS_SYS(_GL_CXXALIAS_SYS168,6688
# define _GL_CXXALIAS_SYS_CAST(_GL_CXXALIAS_SYS_CAST178,7126
# define _GL_CXXALIAS_SYS_CAST(_GL_CXXALIAS_SYS_CAST186,7520
# define _GL_CXXALIAS_SYS_CAST2(_GL_CXXALIAS_SYS_CAST2202,8423
# define _GL_CXXALIAS_SYS_CAST2(_GL_CXXALIAS_SYS_CAST2211,9029
# define _GL_CXXALIASWARN(_GL_CXXALIASWARN220,9397
# define _GL_CXXALIASWARN_1(_GL_CXXALIASWARN_1222,9478
#  define _GL_CXXALIASWARN_2(_GL_CXXALIASWARN_2227,9717
#  define _GL_CXXALIASWARN_2(_GL_CXXALIASWARN_2232,9983
#  define _GL_CXXALIASWARN_2(_GL_CXXALIASWARN_2235,10072
# define _GL_CXXALIASWARN(_GL_CXXALIASWARN239,10174
# define _GL_CXXALIASWARN1(_GL_CXXALIASWARN1247,10511
# define _GL_CXXALIASWARN1_1(_GL_CXXALIASWARN1_1250,10690
#  define _GL_CXXALIASWARN1_2(_GL_CXXALIASWARN1_2255,11001
#  define _GL_CXXALIASWARN1_2(_GL_CXXALIASWARN1_2260,11350
#  define _GL_CXXALIASWARN1_2(_GL_CXXALIASWARN1_2263,11474
# define _GL_CXXALIASWARN1(_GL_CXXALIASWARN1267,11611

/home/dounia/MYPIPS/prod/linear/src/gnulib/aux/snippet/_Noreturn.h,110
#  define _Noreturn _Noreturn4,113
#  define _Noreturn _Noreturn6,188
#  define _Noreturn_Noreturn8,237

/home/dounia/MYPIPS/prod/linear/src/gnulib/strdup.c,140
#undef __strdup__strdup29,981
# undef strdupstrdup31,1010
# define __strdup __strdup35,1052
__strdup (const char *s)__strdup40,1152

/home/dounia/MYPIPS/prod/linear/src/gnulib/string.in.h,3369
#define _@_30,1053
# define _GL_ATTRIBUTE_PURE _GL_ATTRIBUTE_PURE43,1441
_GL_CXXALIASWARN (ffsl);ffsl68,2193
_GL_CXXALIASWARN (ffsll);ffsll83,2576
# undef ffsllffsll85,2634
#   define memchr memchr96,2930
_GL_CXXALIASWARN (memchr);memchr121,4177
# undef memchrmemchr124,4244
#   define memmem memmem134,4592
_GL_CXXALIASWARN (memmem);memmem156,5497
# undef memmemmemmem158,5556
_GL_CXXALIASWARN (mempcpy);mempcpy178,6265
# undef mempcpymempcpy180,6325
_GL_CXXALIASWARN (memrchr);memrchr205,7470
# undef memrchrmemrchr208,7538
_GL_CXXALIASWARN (rawmemchr);rawmemchr235,8777
# undef rawmemchrrawmemchr238,8847
_GL_CXXALIASWARN (stpcpy);stpcpy254,9412
# undef stpcpystpcpy256,9471
#   undef stpncpystpncpy268,9858
#   define stpncpy stpncpy269,9876
_GL_CXXALIASWARN (stpncpy);stpncpy289,10597
# undef stpncpystpncpy291,10657
# undef strchrstrchr301,10997
#   define strchrnul strchrnul312,11429
_GL_CXXALIASWARN (strchrnul);strchrnul337,12639
# undef strchrnulstrchrnul340,12709
#   undef strdupstrdup351,13053
#   define strdup strdup352,13070
#   undef strdupstrdup359,13395
_GL_CXXALIASWARN (strdup);strdup366,13614
# undef strdupstrdup368,13673
#   undef strncatstrncat379,14004
#   define strncat strncat380,14022
_GL_CXXALIASWARN (strncat);strncat388,14368
# undef strncatstrncat390,14428
#   undef strndupstrndup401,14771
#   define strndup strndup402,14789
_GL_CXXALIASWARN (strndup);strndup414,15283
# undef strndupstrndup416,15343
#   undef strnlenstrnlen429,15775
#   define strnlen strnlen430,15793
_GL_CXXALIASWARN (strnlen);strnlen444,16415
# undef strnlenstrnlen446,16475
# undef strcspnstrcspn458,16924
_GL_CXXALIASWARN (strpbrk);strpbrk484,18214
#  undef strpbrkstrpbrk491,18525
# undef strpbrkstrpbrk497,18777
# undef strspnstrspn507,19131
# undef strrchrstrrchr517,19553
_GL_CXXALIASWARN (strsep);strsep548,20851
#  undef strsepstrsep550,20909
# undef strsepstrsep556,21157
#   define strstr strstr566,21426
_GL_CXXALIASWARN (strstr);strstr586,22479
# undef strstrstrstr593,22774
#   define strcasestr strcasestr607,23349
_GL_CXXALIASWARN (strcasestr);strcasestr635,24658
# undef strcasestrstrcasestr641,24868
#   undef strtok_rstrtok_r676,26259
#   define strtok_r strtok_r677,26278
#   undef strtok_rstrtok_r688,26721
_GL_CXXALIASWARN (strtok_r);strtok_r700,27134
# undef strtok_rstrtok_r707,27432
#  undef mbslenmbslen722,27956
#   define mbslen mbslen726,28114
_GL_CXXALIASWARN (mbslen);mbslen734,28439
#   define mbschr mbschr751,29071
_GL_CXXALIASWARN (mbschr);mbschr761,29534
#   define mbsrchr mbsrchr771,29947
_GL_CXXALIASWARN (mbsrchr);mbsrchr781,30419
#   define mbspbrk mbspbrk858,33950
_GL_CXXALIASWARN (mbspbrk);mbspbrk868,34479
#   undef strerrorstrerror925,36712
#   define strerror strerror926,36731
_GL_CXXALIASWARN (strerror);strerror933,36920
# undef strerrorstrerror935,36981
#   undef strerror_rstrerror_r946,37430
#   define strerror_r strerror_r947,37451
_GL_CXXALIASWARN (strerror_r);strerror_r960,37997
# undef strerror_rstrerror_r963,38068
#   define strsignal strsignal973,38369
_GL_CXXALIASWARN (strsignal);strsignal985,38768
# undef strsignalstrsignal987,38830
_GL_CXXALIASWARN (strverscmp);strverscmp1000,39263
# undef strverscmpstrverscmp1002,39326

/home/dounia/MYPIPS/prod/linear/src/gnulib/malloc.c,229
#define _GL_USE_STDLIB_ALLOC _GL_USE_STDLIB_ALLOC21,902
# define NEED_MALLOC_GNU NEED_MALLOC_GNU25,1042
# undef mallocmalloc26,1069
# define NEED_MALLOC_GNU NEED_MALLOC_GNU29,1199
rpl_malloc (size_t n)rpl_malloc40,1382

/home/dounia/MYPIPS/prod/linear/src/gnulib/dummy.c,78
int gl_dummy_symbol;gl_dummy_symbol37,1578
typedef int dummy;dummy41,1703

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_to_sg_test1.c,29
main(argc,argv)main49,1197

/home/dounia/MYPIPS/prod/linear/src/Tests/env_test.c,29
main(argc,argv)main48,1155

/home/dounia/MYPIPS/prod/linear/src/Tests/simp.c,150
test_system(Psysteme sc)test_system49,1378
static void test_file(FILE * f, char * name)test_file60,1663
main(int argc, char *argv[])main80,2103

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_env.c,30
main(argc, argv)main55,1594

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_min.c,1088
#define DEBUG DEBUG54,1445
#define DEBUG1 DEBUG155,1461
#define DEBUG2 DEBUG256,1478
#define PTR_NIL PTR_NIL58,1567
#define INFINI INFINI59,1600
#define NB_INEQ NB_INEQ60,1632
#define NONTCST NONTCST61,1660
#define SIMPL(SIMPL62,1710
#define G(G63,1834
#define SIMPLIFIE(SIMPLIFIE64,1939
#define NB_EQ NB_EQ65,1988
#define DIMENSION DIMENSION66,2012
#define NUMERO NUMERO67,2044
#define MAX_VAR MAX_VAR68,2079
#define MAXVAL MAXVAL69,2129
#define SOLUBLE(SOLUBLE70,2201
#define EGAL1(EGAL171,2248
#define EGAL0(EGAL072,2280
#define EGAL(EGAL73,2308
#define NEGATIF(NEGATIF74,2400
#define POSITIF(POSITIF75,2456
#define SUP1(SUP176,2512
#define INF(INF77,2611
#define NUL(NUL78,2654
#define AFF(AFF79,2680
#define METINFINI(METINFINI80,2724
#define DIV(DIV81,2769
#define MUL(MUL82,2874
#define PIVOT(PIVOT84,3026
#define SUB(SUB94,4178
#define VIDE VIDE105,4588
#define EQUATION EQUATION106,4603
#define INEQUATION INEQUATION107,4622
Psysteme sc_min(Psysteme sc)sc_min109,4644
main(int argc, char *argv[])main256,9733

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_proj.c,53
int main(int argc, char * const argv[])main37,1031

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_cmp.c,138
static void show_nredund(const char *msg, Psysteme s, Psysteme r)show_nredund40,1030
int main(int argc, const char **argv)main51,1468

/home/dounia/MYPIPS/prod/linear/src/Tests/test_chernikova.c,307
typedef struct vectorvector44,1091
  int size;size46,1115
  int *p;p47,1127
} vector;vector48,1137
typedef struct matrixmatrix51,1149
  int nbrows;nbrows53,1173
  int nbcolumns;nbcolumns54,1187
  int **p;p55,1204
  int *p_init;p_init56,1215
} matrix;matrix57,1230
int main(main60,1242

/home/dounia/MYPIPS/prod/linear/src/Tests/feasability.c,138
test_system(Psysteme sc)test_system40,1033
test_file(FILE * f, char * name)test_file52,1333
main(int argc, char *argv[])main72,1763

/home/dounia/MYPIPS/prod/linear/src/Tests/time_sg_union.c,30
main(argc, argv)main51,1192

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_to_sg_test.c,33
int main(argc,argv)main51,1236

/home/dounia/MYPIPS/prod/linear/src/Tests/sc_minmax.c,50
int main(int argc, const char **argv)main15,234

/home/dounia/MYPIPS/prod/linear/src/Tests/elarg_test.c,29
main(argc,argv)main48,1157

/home/dounia/MYPIPS/prod/linear/src/Tests/test_env_chernikova.c,115
Psysteme read_syst_from_file(char * name)read_syst_from_file51,1565
int main(int argc, char **argv)main73,2012

/home/dounia/MYPIPS/prod/linear/src/Tests/smith.c,27
int main(void)main30,879

/home/dounia/MYPIPS/prod/linear/src/matrice/matrice-local.h,574
typedef Value * matrice;matrice71,2907
#define MATRICE_UNDEFINED MATRICE_UNDEFINED73,2933
#define MATRICE_NULLE MATRICE_NULLE74,2976
#define matrice_new(matrice_new77,3064
#define matrice_free(matrice_free78,3133
#define ACCESS(ACCESS86,3407
#define DENOMINATOR(DENOMINATOR93,3764
#define matrice_triangulaire_inferieure_p(matrice_triangulaire_inferieure_p98,3920
#define matrice_triangulaire_superieure_p(matrice_triangulaire_superieure_p104,4124
#define ACC_ELEM(ACC_ELEM112,4461
#define VALIDATION VALIDATION118,4650
#define MATRIX MATRIX120,4695

/home/dounia/MYPIPS/prod/linear/src/matrice/determinant.c,145
void matrice_determinant(a,n,result)matrice_determinant54,1468
void matrice_sous_determinant(a,n,i,j,result)matrice_sous_determinant156,4444

/home/dounia/MYPIPS/prod/linear/src/matrice/inversion.c,455
void matrice_unimodulaire_triangulaire_inversion(u,inv_u,n,infer)matrice_unimodulaire_triangulaire_inversion54,1620
void matrice_diagonale_inversion(s,inv_s,n)matrice_diagonale_inversion95,2740
void matrice_triangulaire_inversion(h,inv_h,n,infer)matrice_triangulaire_inversion140,4251
void matrice_general_inversion(a,inv_a,n)matrice_general_inversion222,6514
void matrice_unimodulaire_inversion(u,inv_u,n)matrice_unimodulaire_inversion267,7821

/home/dounia/MYPIPS/prod/linear/src/matrice/matrice.c,1061
void matrice_transpose(a,a_t,n,m)matrice_transpose48,1195
void matrice_multiply(a,b,c,p,q,r)matrice_multiply82,2192
void matrice_normalize(a,n,m)matrice_normalize125,3379
void matrice_normalizec(MAT,n,m)matrice_normalizec175,4833
void matrice_swap_columns(matrix,n,m,c1,c2)matrice_swap_columns200,5374
void matrice_swap_rows(a,n,m,r1,r2)matrice_swap_rows230,6195
void matrice_assign(A,B,n,m)matrice_assign264,6994
bool matrice_egalite(A,B,n,m)matrice_egalite285,7501
void matrice_nulle(Z,n,m)matrice_nulle311,8012
bool matrice_nulle_p(Z,n,m)matrice_nulle_p336,8489
bool matrice_diagonale_p(Z,n,m)matrice_diagonale_p362,9004
bool matrice_triangulaire_p(Z,n,m,inferieure)matrice_triangulaire_p394,9679
bool matrice_triangulaire_unimodulaire_p(Z,n,inferieure)matrice_triangulaire_unimodulaire_p434,10570
void matrice_substract(a,b,c,n,m)matrice_substract468,11479
void matrice_soustraction_colonne(matrice MAT,matrice_soustraction_colonne523,12924
void matrice_soustraction_ligne(MAT,n,m,r1,r2,x)matrice_soustraction_ligne554,13726

/home/dounia/MYPIPS/prod/linear/src/matrice/matrice.h,639
#define  matrice_header_includedmatrice_header_included7,227
typedef Value * matrice;matrice78,3167
#define MATRICE_UNDEFINED MATRICE_UNDEFINED80,3193
#define MATRICE_NULLE MATRICE_NULLE81,3236
#define matrice_new(matrice_new84,3324
#define matrice_free(matrice_free85,3393
#define ACCESS(ACCESS93,3667
#define DENOMINATOR(DENOMINATOR100,4024
#define matrice_triangulaire_inferieure_p(matrice_triangulaire_inferieure_p105,4180
#define matrice_triangulaire_superieure_p(matrice_triangulaire_superieure_p111,4384
#define ACC_ELEM(ACC_ELEM119,4721
#define VALIDATION VALIDATION125,4910
#define MATRIX MATRIX127,4955

/home/dounia/MYPIPS/prod/linear/src/matrice/sous-matrice.c,677
#define MALLOC(MALLOC44,1227
#define FREE(FREE45,1259
int mat_lig_nnul(MAT,n,m,level)mat_lig_nnul65,1997
void mat_perm_col(matrice MAT,mat_perm_col108,3363
void mat_perm_lig(matrice MAT,mat_perm_lig145,4452
void mat_min(MAT,n,m,i_min,j_min,level)mat_min193,5831
void mat_maj_col(matrice A,mat_maj_col252,7380
void mat_maj_lig(A,n,m,Q,level)mat_maj_lig292,8433
void matrice_identite(ID,n,level)matrice_identite322,9203
bool matrice_identite_p(ID,n,level)matrice_identite_p353,10114
int mat_lig_el(MAT,n,m,level)mat_lig_el381,10686
int mat_col_el(matrice MAT,mat_col_el404,11235
void mat_coeff_nnul(MAT,n,m,lg_nnul,cl_nnul,level)mat_coeff_nnul426,11775

/home/dounia/MYPIPS/prod/linear/src/matrice/matrice_io.c,197
static void pr_quot(FILE * f,pr_quot47,1269
void matrice_fprint(f,a,n,m)matrice_fprint62,1617
void matrice_print(a,n,m)matrice_print90,2331
void matrice_fscan(f,a,n,m)matrice_fscan115,2997

/home/dounia/MYPIPS/prod/linear/src/matrice/hermite.c,210
void matrice_hermite(MAT,n,m,P,H,Q,det_p,det_q)matrice_hermite78,2488
int matrice_hermite_rank(matrice a, int n, int m __attribute__ ((unused)))matrice_hermite_rank178,5116
int dim_H (H,n,m)dim_H197,5564

/home/dounia/MYPIPS/prod/linear/src/matrice/smith.c,114
#define MALLOC(MALLOC42,1021
#define FREE(FREE43,1065
void matrice_smith(MAT,n,m,P,D,Q)matrice_smith68,1934

/home/dounia/MYPIPS/prod/linear/src/sommet/sommet.c,803
#define MALLOC(MALLOC45,1136
#define FREE(FREE46,1168
Psommet sommet_new()sommet_new51,1233
Psommet sommet_make(d, v)sommet_make67,1642
Psommet sommet_dup(s_in)sommet_dup82,1882
void sommet_rm(s)sommet_rm110,2551
void dbg_sommet_rm(s,f)dbg_sommet_rm117,2650
void sommet_fprint(f, s, nom_var)sommet_fprint130,2971
void sommet_fprint_as_dense(f, s, b)sommet_fprint_as_dense152,3462
void sommet_dump(s)sommet_dump168,3822
void fprint_lsom(f, ls, nom_var)fprint_lsom177,4013
void fprint_lsom_as_dense(f, ls, b)fprint_lsom_as_dense191,4289
void sommet_normalize(ns)sommet_normalize205,4593
bool som_in_liste(s,listes)som_in_liste222,5055
bool sommet_egal(s1,s2)sommet_egal242,5504
bool egaliste_s(l1,ad_l2)egaliste_s258,5967
void sommet_add(ps,som,nb_som)sommet_add342,7924

/home/dounia/MYPIPS/prod/linear/src/sommet/sommets.c,197
#define MALLOC(MALLOC42,1040
#define FREE(FREE43,1072
Psommet sommets_dup(som)sommets_dup49,1209
void sommets_rm(ps)sommets_rm83,1838
void sommets_normalize(som)sommets_normalize108,2278

/home/dounia/MYPIPS/prod/linear/src/sommet/sommet-local.h,551
#define SOMMET SOMMET48,1609
typedef struct typ_som {typ_som64,2489
    int *eq_sat;eq_sat65,2514
    Pvecteur vecteur;vecteur66,2531
    Value denominateur;denominateur67,2553
    struct typ_som *succ;succ68,2577
} *Psommet,Ssommet;Psommet69,2603
} *Psommet,Ssommet;Ssommet69,2603
#define print_som(print_som71,2624
#define print_lsom(print_lsom73,2670
#define VERSION_FINALEVERSION_FINALE75,2717
#define SOMMET_RM(SOMMET_RM77,2762
#define SOMMET_RM(SOMMET_RM79,2816
#define sommet_denominateur(sommet_denominateur87,3010

/home/dounia/MYPIPS/prod/linear/src/sommet/sommet.h,612
#define  sommet_header_includedsommet_header_included7,224
#define SOMMET SOMMET55,1865
typedef struct typ_som {typ_som71,2745
    int *eq_sat;eq_sat72,2770
    Pvecteur vecteur;vecteur73,2787
    Value denominateur;denominateur74,2809
    struct typ_som *succ;succ75,2833
} *Psommet,Ssommet;Psommet76,2859
} *Psommet,Ssommet;Ssommet76,2859
#define print_som(print_som78,2880
#define print_lsom(print_lsom80,2926
#define VERSION_FINALEVERSION_FINALE82,2973
#define SOMMET_RM(SOMMET_RM84,3018
#define SOMMET_RM(SOMMET_RM86,3072
#define sommet_denominateur(sommet_denominateur94,3266

/home/dounia/MYPIPS/prod/linear/src/arithmetique/io.c,497
void print_Value(Value v)print_Value37,955
void fprint_Value(FILE *f, Value v)fprint_Value42,1019
void fprint_string_Value(FILE *f, char * blah, Value v)fprint_string_Value47,1097
void sprint_Value(char *s, Value v)sprint_Value53,1201
int fscan_Value(FILE *f, Value *pv)fscan_Value58,1279
int scan_Value(Value *pv)scan_Value63,1357
int sscan_Value(char *s, Value *pv)sscan_Value68,1421
#define BUFFER_SIZE BUFFER_SIZE75,1542
char * Value_to_string(Value v)Value_to_string76,1565

/home/dounia/MYPIPS/prod/linear/src/arithmetique/linear_version.h,81
#define LINEAR_REV LINEAR_REV1,0
#define LINEAR_MAKE_REV LINEAR_MAKE_REV2,77

/home/dounia/MYPIPS/prod/linear/src/arithmetique/divide.c,199
Value divide_fast(Value a, Value b)divide_fast51,1472
#define DIVIDE_MAX_A DIVIDE_MAX_A63,1934
#define DIVIDE_MAX_B DIVIDE_MAX_B64,1957
Value divide_slow(Value a, Value b)divide_slow114,3800

/home/dounia/MYPIPS/prod/linear/src/arithmetique/value.c,65
int value_comparison(Value v1, Value v2)value_comparison36,934

/home/dounia/MYPIPS/prod/linear/src/arithmetique/abs.c,145
Value abs_ofl_ctrl(Value i, int ofl_ctrl)abs_ofl_ctrl38,1021
Value absval_ofl(Value i)absval_ofl50,1302
Value absval(Value i)absval58,1425

/home/dounia/MYPIPS/prod/linear/src/arithmetique/errors.c,3869
static int timeout_index;timeout_index40,1038
get_exception_name(const linear_exception_t exception)get_exception_name45,1229
  overflow_error_count = 0,overflow_error_count66,1907
  simplex_error_count = 0,simplex_error_count67,1935
  misc_error_count = 0;misc_error_count68,1962
void linear_reset_error_counters(void)linear_reset_error_counters72,2016
unsigned int linear_error_count(void)linear_error_count82,2252
void linear_get_error_counts(linear_get_error_counts91,2502
static void linear_record_exception(const linear_exception_t exception)linear_record_exception99,2712
linear_exception_t the_last_just_thrown_exception __attribute__ ((weak)) = 0;the_last_just_thrown_exception114,3183
static bool linear_exception_debug_mode = false;linear_exception_debug_mode118,3337
static unsigned int linear_exception_verbose = 1 | 2 | 16 ;linear_exception_verbose119,3386
  int what;what126,3529
  jmp_buf where;where129,3565
  char const * function;function132,3645
  char const * file;file133,3670
  int          line;line134,3691
  int timeout;timeout137,3742
  linear_exception_holder;linear_exception_holder139,3759
#define MAX_STACKED_CONTEXTS MAX_STACKED_CONTEXTS145,3875
static linear_exception_holder exception_stack[MAX_STACKED_CONTEXTS];exception_stack146,3907
static int exception_index = 0;exception_index147,3977
static exception_callback_t push_callback = NULL;push_callback151,4030
static exception_callback_t pop_callback = NULL;pop_callback152,4080
set_exception_callbacks(set_exception_callbacks156,4201
int linear_number_of_exception_thrown __attribute__ ((weak)) = 0;linear_number_of_exception_thrown174,4612
dump_exception_stack_to_file(FILE * f)dump_exception_stack_to_file180,4768
dump_exception_stack(void)dump_exception_stack199,5212
#define exception_debug_message(exception_debug_message204,5284
#define exception_debug_trace(exception_debug_trace208,5461
#undef push_exception_on_stackpush_exception_on_stack213,5608
linear_push_exception_on_stack(linear_push_exception_on_stack220,5789
push_exception_on_stack(push_exception_on_stack251,6591
#define same_string_p(same_string_p262,6809
#undef pop_exception_from_stackpop_exception_from_stack266,6902
linear_pop_exception_from_stack(linear_pop_exception_from_stack274,7097
pop_exception_from_stack(pop_exception_from_stack317,8339
#undef throw_exceptionthrow_exception327,8546
linear_throw_exception(linear_throw_exception335,8774
throw_exception(throw_exception402,10627
#define throw_exception throw_exception412,10809
linear_initialize_exception_stack(linear_initialize_exception_stack416,10929
static bool warned_if_inconsistent_gmp = false;warned_if_inconsistent_gmp428,11230
bool linear_with_gmp(void)linear_with_gmp432,11332
bool linear_require_gmp(void)linear_require_gmp443,11509
bool linear_use_gmp(void)linear_use_gmp451,11650
static timeout_callback_f timeout_callback = NULL;timeout_callback480,12425
void set_timeout_callback(timeout_callback_f callback)set_timeout_callback482,12477
  time_t start;start492,12630
  time_t end;end493,12646
  unsigned int delay;delay494,12660
  const char * env;env495,12682
  const char * funcname;funcname498,12725
  const char * filename;filename499,12750
  int lineno;lineno500,12775
} timeout_t;timeout_t502,12790
#define TIMEOUT_MAX_STACK_SIZE TIMEOUT_MAX_STACK_SIZE504,12804
static timeout_t timeouts[TIMEOUT_MAX_STACK_SIZE];timeouts506,12839
static int timeout_index = 0;timeout_index507,12890
static void __attribute__((noreturn)) timeout_handler(int sig)timeout_handler509,12921
void push_timeout(push_timeout536,13735
static int env2int(const char * env)env2int560,14335
bool push_timeout_env(push_timeout_env572,14500
void pop_timeout(pop_timeout588,14798
void pop_timeout_env(pop_timeout_env616,15322

/home/dounia/MYPIPS/prod/linear/src/arithmetique/exp.c,56
Value exponentiate(Value x, int n)exponentiate45,1093

/home/dounia/MYPIPS/prod/linear/src/arithmetique/pgcd.c,514
Value pgcd_slow(Value a, Value b)pgcd_slow44,1246
Value pgcd_fast(Value a, Value b)pgcd_fast82,2001
Value pgcd_interne(Value a, Value b)pgcd_interne106,2646
#define GCD_MAX_A GCD_MAX_A115,3041
#define GCD_MAX_B GCD_MAX_B116,3062
Value gcd_subtract(Value a, Value b)gcd_subtract189,5881
Value vecteur_bezout(Value u[], Value v[], int l)vecteur_bezout220,6493
Value bezout(Value a, Value b, Value *x, Value *y)bezout265,7362
Value bezout_grl(Value a, Value b, Value *x, Value *y)bezout_grl324,8544

/home/dounia/MYPIPS/prod/linear/src/arithmetique/assert.h,377
#define __linear_assert_included____linear_assert_included__33,1071
#define _linear_assert_message _linear_assert_message36,1123
#define _linear_assert_message _linear_assert_message39,1273
#undef assertassert43,1390
#define assert(assert45,1418
#define linear_assert(linear_assert46,1437
#define assert(assert48,1474
#define linear_assert(linear_assert54,1808

/home/dounia/MYPIPS/prod/linear/src/arithmetique/arithmetique.h,10358
#define  arithmetique_header_includedarithmetique_header_included7,242
#   define CURRENT_FUNCTION CURRENT_FUNCTION66,2087
#     define CURRENT_FUNCTION CURRENT_FUNCTION69,2156
#     define CURRENT_FUNCTION CURRENT_FUNCTION71,2208
#define PUSH_TIMEOUT_ENV(PUSH_TIMEOUT_ENV75,2288
#define POP_TIMEOUT_ENV(POP_TIMEOUT_ENV78,2383
#define PUSH_TIMEOUT(PUSH_TIMEOUT81,2476
#define POP_TIMEOUT(POP_TIMEOUT84,2599
#define __LONG_LONG_MAX__ __LONG_LONG_MAX__107,3377
#undef LONG_LONG_MAXLONG_LONG_MAX109,3432
#define LONG_LONG_MAX LONG_LONG_MAX110,3453
#undef LONG_LONG_MINLONG_LONG_MIN111,3493
#define LONG_LONG_MIN LONG_LONG_MIN112,3514
#undef ULONG_LONG_MAXULONG_LONG_MAX113,3555
#define ULONG_LONG_MAX ULONG_LONG_MAX114,3577
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING118,3673
typedef long long int Value;Value119,3717
#define VALUE_FMT VALUE_FMT120,3746
#define VALUE_CONST(VALUE_CONST121,3771
#define VALUE_NAN VALUE_NAN122,3806
#define VALUE_MIN VALUE_MIN126,3961
#define VALUE_MAX VALUE_MAX127,3999
#define VALUE_SQRT_MIN VALUE_SQRT_MIN133,4221
#define VALUE_SQRT_MAX VALUE_SQRT_MAX134,4290
#define VALUE_ZERO VALUE_ZERO135,4327
#define VALUE_ONE VALUE_ONE136,4352
#define VALUE_MONE VALUE_MONE137,4377
#define VALUE_TO_LONG(VALUE_TO_LONG140,4446
#define VALUE_TO_INT(VALUE_TO_INT143,4582
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE146,4713
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT149,4890
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING165,5222
typedef long Value;Value166,5261
#define VALUE_FMT VALUE_FMT167,5281
#define VALUE_CONST(VALUE_CONST168,5305
#define VALUE_NAN VALUE_NAN169,5339
#define VALUE_MIN VALUE_MIN170,5366
#define VALUE_MAX VALUE_MAX171,5398
#define VALUE_ZERO VALUE_ZERO172,5425
#define VALUE_ONE VALUE_ONE173,5447
#define VALUE_MONE VALUE_MONE174,5469
#define VALUE_TO_LONG(VALUE_TO_LONG175,5492
#define VALUE_TO_INT(VALUE_TO_INT176,5525
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT177,5564
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE178,5607
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING225,6814
typedef union { char *s; long l; int i; float f; double d;} Value;s226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;l226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;i226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;f226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;d226,6853
typedef union { char *s; long l; int i; float f; double d;} Value;Value226,6853
#define VALUE_FMT VALUE_FMT227,6920
#define VALUE_CONST(VALUE_CONST228,6943
#define VALUE_NAN VALUE_NAN229,6983
#define VALUE_MIN VALUE_MIN230,7027
#define VALUE_MAX VALUE_MAX231,7071
#define VALUE_ZERO VALUE_ZERO232,7115
#define VALUE_ONE VALUE_ONE233,7145
#define VALUE_MONE VALUE_MONE234,7175
#define VALUE_TO_LONG(VALUE_TO_LONG235,7206
#define VALUE_TO_INT(VALUE_TO_INT236,7241
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT237,7275
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE238,7311
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING253,7569
typedef int Value;Value254,7603
#define VALUE_FMT VALUE_FMT255,7622
#define VALUE_CONST(VALUE_CONST256,7645
#define VALUE_NAN VALUE_NAN257,7676
#define VALUE_MIN VALUE_MIN258,7702
#define VALUE_MAX VALUE_MAX259,7732
#define VALUE_ZERO VALUE_ZERO260,7758
#define VALUE_ONE VALUE_ONE261,7779
#define VALUE_MONE VALUE_MONE262,7800
#define VALUE_TO_LONG(VALUE_TO_LONG263,7822
#define VALUE_TO_INT(VALUE_TO_INT264,7863
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT265,7902
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE266,7945
#define int_to_value(int_to_value275,8129
#define long_to_value(long_to_value276,8166
#define float_to_value(float_to_value277,8204
#define double_to_value(double_to_value278,8243
#define value_eq(value_eq282,8316
#define value_ne(value_ne283,8353
#define value_gt(value_gt284,8390
#define value_ge(value_ge285,8426
#define value_lt(value_lt286,8463
#define value_le(value_le287,8499
#define value_sign(value_sign291,8570
#define value_compare(value_compare292,8647
#define value_plus(value_plus300,8941
#define value_div(value_div301,8982
#define value_mod(value_mod302,9023
#define value_direct_multiply(value_direct_multiply303,9064
#define value_minus(value_minus304,9127
#define value_pdiv(value_pdiv305,9168
#define value_pmod(value_pmod306,9213
#define value_min(value_min307,9258
#define value_max(value_max308,9317
#define value_or(value_or309,9376
#define value_and(value_and310,9415
#define value_lshift(value_lshift311,9455
#define value_rshift(value_rshift312,9498
#define value_assign(value_assign316,9560
#define value_addto(value_addto317,9604
#define value_increment(value_increment318,9648
#define value_direct_product(value_direct_product319,9687
#define value_multiply(value_multiply320,9752
#define value_substract(value_substract321,9823
#define value_decrement(value_decrement322,9870
#define value_division(value_division323,9909
#define value_modulus(value_modulus324,9955
#define value_pdivision(value_pdivision325,10001
#define value_oppose(value_oppose326,10072
#define value_absolute(value_absolute327,10136
#define value_minimum(value_minimum328,10198
#define value_maximum(value_maximum329,10267
#define value_orto(value_orto330,10336
#define value_andto(value_andto331,10380
#define value_uminus(value_uminus335,10459
#define value_not(value_not336,10495
#define value_abs(value_abs337,10527
#define value_pos_p(value_pos_p342,10795
#define value_neg_p(value_neg_p343,10850
#define value_posz_p(value_posz_p344,10905
#define value_negz_p(value_negz_p345,10960
#define value_zero_p(value_zero_p346,11015
#define value_notzero_p(value_notzero_p349,11162
#define value_one_p(value_one_p350,11217
#define value_notone_p(value_notone_p351,11271
#define value_mone_p(value_mone_p352,11325
#define value_notmone_p(value_notmone_p353,11380
#define value_min_p(value_min_p354,11435
#define value_max_p(value_max_p355,11489
#define value_notmin_p(value_notmin_p356,11543
#define value_notmax_p(value_notmax_p357,11597
#define value_protected_hard_idiv_multiply(value_protected_hard_idiv_multiply366,11860
#define value_protected_multiply(value_protected_multiply374,12201
#define value_protected_multiply(value_protected_multiply379,12484
#define value_protected_mult(value_protected_mult385,12614
#define value_protected_product(value_protected_product387,12706
#define value_mult(value_mult394,12937
#define value_product(value_product395,12987
#define value_mult(value_mult402,13211
#define value_product(value_product405,13372
#define value_fake_binary(value_fake_binary421,13859
#define value_bool_binary(value_bool_binary422,13917
#undef float_to_valuefloat_to_value423,13973
#define float_to_value(float_to_value424,13995
#undef double_to_valuedouble_to_value425,14032
#define double_to_value(double_to_value426,14055
#undef value_uminusvalue_uminus427,14093
#define value_uminus(value_uminus428,14113
#undef value_multvalue_mult429,14141
#define value_mult(value_mult430,14159
#undef value_modvalue_mod431,14210
#define value_mod(value_mod432,14227
#undef value_gevalue_ge433,14277
#define value_ge(value_ge434,14293
#undef value_gtvalue_gt435,14342
#define value_gt(value_gt436,14358
#undef value_levalue_le437,14407
#define value_le(value_le438,14423
#undef value_ltvalue_lt439,14472
#define value_lt(value_lt440,14488
#undef value_nevalue_ne441,14537
#define value_ne(value_ne442,14553
#undef value_eqvalue_eq443,14602
#define value_eq(value_eq444,14618
#undef value_plusvalue_plus445,14667
#define value_plus(value_plus446,14685
#undef value_minusvalue_minus447,14736
#define value_minus(value_minus448,14755
#undef value_pdivvalue_pdiv449,14807
#define value_pdiv(value_pdiv450,14825
#undef value_divvalue_div451,14876
#define value_div(value_div452,14893
#undef value_modvalue_mod453,14943
#define value_mod(value_mod454,14960
#undef value_addtovalue_addto455,15010
#define value_addto(value_addto456,15029
#undef value_substractvalue_substract457,15091
#define value_substract(value_substract458,15114
#undef value_productvalue_product459,15164
#define value_product(value_product460,15185
#undef value_modulusvalue_modulus461,15233
#define value_modulus(value_modulus462,15254
#undef value_divisionvalue_division463,15302
#define value_division(value_division464,15324
#undef value_incrementvalue_increment465,15373
#define value_increment(value_increment466,15396
#undef value_decrementvalue_decrement467,15448
#define value_decrement(value_decrement468,15471
#undef value_ortovalue_orto469,15524
#define value_orto(value_orto470,15542
#undef value_andtovalue_andto471,15589
#define value_andto(value_andto472,15608
#undef value_orvalue_or473,15657
#define value_or(value_or474,15673
#undef value_andvalue_and475,15722
#define value_and(value_and476,15739
#undef value_lshiftvalue_lshift477,15789
#define value_lshift(value_lshift478,15809
#undef value_rshiftvalue_rshift479,15862
#define value_rshift(value_rshift480,15882
#define ABS(ABS487,15978
#define MIN(MIN495,16197
#define MAX(MAX498,16254
#define SIGN(SIGN502,16336
#define DIVIDE(DIVIDE510,16542
#define POSITIVE_DIVIDE(POSITIVE_DIVIDE514,16710
#define MODULO(MODULO517,16820
#define POSITIVE_MODULO(POSITIVE_MODULO525,17173
#define pgcd(pgcd532,17377
#define divide(divide534,17411
#define modulo(modulo536,17444
typedef struct { Value num, den; int numero ; } frac ;num538,17477
typedef struct { Value num, den; int numero ; } frac ;den538,17477
typedef struct { Value num, den; int numero ; } frac ;numero538,17477
typedef struct { Value num, den; int numero ; } frac ;frac538,17477
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;col539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;taille539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;existe539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;colonne539,17532
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;tableau539,17532

/home/dounia/MYPIPS/prod/linear/src/arithmetique/modulo.c,142
Value modulo_fast(Value a, Value b)modulo_fast48,1329
#define MODULO_MAX_A MODULO_MAX_A56,1690
#define MODULO_MAX_B MODULO_MAX_B57,1713

/home/dounia/MYPIPS/prod/linear/src/arithmetique/ppcm.c,42
Value ppcm(Value i, Value j)ppcm42,1100

/home/dounia/MYPIPS/prod/linear/src/arithmetique/arithmetique-local.h,10280
#   define CURRENT_FUNCTION CURRENT_FUNCTION59,1807
#     define CURRENT_FUNCTION CURRENT_FUNCTION62,1876
#     define CURRENT_FUNCTION CURRENT_FUNCTION64,1928
#define PUSH_TIMEOUT_ENV(PUSH_TIMEOUT_ENV68,2008
#define POP_TIMEOUT_ENV(POP_TIMEOUT_ENV71,2103
#define PUSH_TIMEOUT(PUSH_TIMEOUT74,2196
#define POP_TIMEOUT(POP_TIMEOUT77,2319
#define __LONG_LONG_MAX__ __LONG_LONG_MAX__100,3097
#undef LONG_LONG_MAXLONG_LONG_MAX102,3152
#define LONG_LONG_MAX LONG_LONG_MAX103,3173
#undef LONG_LONG_MINLONG_LONG_MIN104,3213
#define LONG_LONG_MIN LONG_LONG_MIN105,3234
#undef ULONG_LONG_MAXULONG_LONG_MAX106,3275
#define ULONG_LONG_MAX ULONG_LONG_MAX107,3297
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING111,3393
typedef long long int Value;Value112,3437
#define VALUE_FMT VALUE_FMT113,3466
#define VALUE_CONST(VALUE_CONST114,3491
#define VALUE_NAN VALUE_NAN115,3526
#define VALUE_MIN VALUE_MIN119,3681
#define VALUE_MAX VALUE_MAX120,3719
#define VALUE_SQRT_MIN VALUE_SQRT_MIN126,3941
#define VALUE_SQRT_MAX VALUE_SQRT_MAX127,4010
#define VALUE_ZERO VALUE_ZERO128,4047
#define VALUE_ONE VALUE_ONE129,4072
#define VALUE_MONE VALUE_MONE130,4097
#define VALUE_TO_LONG(VALUE_TO_LONG133,4166
#define VALUE_TO_INT(VALUE_TO_INT136,4302
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE139,4433
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT142,4610
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING158,4942
typedef long Value;Value159,4981
#define VALUE_FMT VALUE_FMT160,5001
#define VALUE_CONST(VALUE_CONST161,5025
#define VALUE_NAN VALUE_NAN162,5059
#define VALUE_MIN VALUE_MIN163,5086
#define VALUE_MAX VALUE_MAX164,5118
#define VALUE_ZERO VALUE_ZERO165,5145
#define VALUE_ONE VALUE_ONE166,5167
#define VALUE_MONE VALUE_MONE167,5189
#define VALUE_TO_LONG(VALUE_TO_LONG168,5212
#define VALUE_TO_INT(VALUE_TO_INT169,5245
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT170,5284
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE171,5327
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING218,6534
typedef union { char *s; long l; int i; float f; double d;} Value;s219,6573
typedef union { char *s; long l; int i; float f; double d;} Value;l219,6573
typedef union { char *s; long l; int i; float f; double d;} Value;i219,6573
typedef union { char *s; long l; int i; float f; double d;} Value;f219,6573
typedef union { char *s; long l; int i; float f; double d;} Value;d219,6573
typedef union { char *s; long l; int i; float f; double d;} Value;Value219,6573
#define VALUE_FMT VALUE_FMT220,6640
#define VALUE_CONST(VALUE_CONST221,6663
#define VALUE_NAN VALUE_NAN222,6703
#define VALUE_MIN VALUE_MIN223,6747
#define VALUE_MAX VALUE_MAX224,6791
#define VALUE_ZERO VALUE_ZERO225,6835
#define VALUE_ONE VALUE_ONE226,6865
#define VALUE_MONE VALUE_MONE227,6895
#define VALUE_TO_LONG(VALUE_TO_LONG228,6926
#define VALUE_TO_INT(VALUE_TO_INT229,6961
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT230,6995
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE231,7031
#define LINEAR_VALUE_STRING LINEAR_VALUE_STRING246,7289
typedef int Value;Value247,7323
#define VALUE_FMT VALUE_FMT248,7342
#define VALUE_CONST(VALUE_CONST249,7365
#define VALUE_NAN VALUE_NAN250,7396
#define VALUE_MIN VALUE_MIN251,7422
#define VALUE_MAX VALUE_MAX252,7452
#define VALUE_ZERO VALUE_ZERO253,7478
#define VALUE_ONE VALUE_ONE254,7499
#define VALUE_MONE VALUE_MONE255,7520
#define VALUE_TO_LONG(VALUE_TO_LONG256,7542
#define VALUE_TO_INT(VALUE_TO_INT257,7583
#define VALUE_TO_FLOAT(VALUE_TO_FLOAT258,7622
#define VALUE_TO_DOUBLE(VALUE_TO_DOUBLE259,7665
#define int_to_value(int_to_value268,7849
#define long_to_value(long_to_value269,7886
#define float_to_value(float_to_value270,7924
#define double_to_value(double_to_value271,7963
#define value_eq(value_eq275,8036
#define value_ne(value_ne276,8073
#define value_gt(value_gt277,8110
#define value_ge(value_ge278,8146
#define value_lt(value_lt279,8183
#define value_le(value_le280,8219
#define value_sign(value_sign284,8290
#define value_compare(value_compare285,8367
#define value_plus(value_plus293,8661
#define value_div(value_div294,8702
#define value_mod(value_mod295,8743
#define value_direct_multiply(value_direct_multiply296,8784
#define value_minus(value_minus297,8847
#define value_pdiv(value_pdiv298,8888
#define value_pmod(value_pmod299,8933
#define value_min(value_min300,8978
#define value_max(value_max301,9037
#define value_or(value_or302,9096
#define value_and(value_and303,9135
#define value_lshift(value_lshift304,9175
#define value_rshift(value_rshift305,9218
#define value_assign(value_assign309,9280
#define value_addto(value_addto310,9324
#define value_increment(value_increment311,9368
#define value_direct_product(value_direct_product312,9407
#define value_multiply(value_multiply313,9472
#define value_substract(value_substract314,9543
#define value_decrement(value_decrement315,9590
#define value_division(value_division316,9629
#define value_modulus(value_modulus317,9675
#define value_pdivision(value_pdivision318,9721
#define value_oppose(value_oppose319,9792
#define value_absolute(value_absolute320,9856
#define value_minimum(value_minimum321,9918
#define value_maximum(value_maximum322,9987
#define value_orto(value_orto323,10056
#define value_andto(value_andto324,10100
#define value_uminus(value_uminus328,10179
#define value_not(value_not329,10215
#define value_abs(value_abs330,10247
#define value_pos_p(value_pos_p335,10515
#define value_neg_p(value_neg_p336,10570
#define value_posz_p(value_posz_p337,10625
#define value_negz_p(value_negz_p338,10680
#define value_zero_p(value_zero_p339,10735
#define value_notzero_p(value_notzero_p342,10882
#define value_one_p(value_one_p343,10937
#define value_notone_p(value_notone_p344,10991
#define value_mone_p(value_mone_p345,11045
#define value_notmone_p(value_notmone_p346,11100
#define value_min_p(value_min_p347,11155
#define value_max_p(value_max_p348,11209
#define value_notmin_p(value_notmin_p349,11263
#define value_notmax_p(value_notmax_p350,11317
#define value_protected_hard_idiv_multiply(value_protected_hard_idiv_multiply359,11580
#define value_protected_multiply(value_protected_multiply367,11921
#define value_protected_multiply(value_protected_multiply372,12204
#define value_protected_mult(value_protected_mult378,12334
#define value_protected_product(value_protected_product380,12426
#define value_mult(value_mult387,12657
#define value_product(value_product388,12707
#define value_mult(value_mult395,12931
#define value_product(value_product398,13092
#define value_fake_binary(value_fake_binary414,13579
#define value_bool_binary(value_bool_binary415,13637
#undef float_to_valuefloat_to_value416,13693
#define float_to_value(float_to_value417,13715
#undef double_to_valuedouble_to_value418,13752
#define double_to_value(double_to_value419,13775
#undef value_uminusvalue_uminus420,13813
#define value_uminus(value_uminus421,13833
#undef value_multvalue_mult422,13861
#define value_mult(value_mult423,13879
#undef value_modvalue_mod424,13930
#define value_mod(value_mod425,13947
#undef value_gevalue_ge426,13997
#define value_ge(value_ge427,14013
#undef value_gtvalue_gt428,14062
#define value_gt(value_gt429,14078
#undef value_levalue_le430,14127
#define value_le(value_le431,14143
#undef value_ltvalue_lt432,14192
#define value_lt(value_lt433,14208
#undef value_nevalue_ne434,14257
#define value_ne(value_ne435,14273
#undef value_eqvalue_eq436,14322
#define value_eq(value_eq437,14338
#undef value_plusvalue_plus438,14387
#define value_plus(value_plus439,14405
#undef value_minusvalue_minus440,14456
#define value_minus(value_minus441,14475
#undef value_pdivvalue_pdiv442,14527
#define value_pdiv(value_pdiv443,14545
#undef value_divvalue_div444,14596
#define value_div(value_div445,14613
#undef value_modvalue_mod446,14663
#define value_mod(value_mod447,14680
#undef value_addtovalue_addto448,14730
#define value_addto(value_addto449,14749
#undef value_substractvalue_substract450,14811
#define value_substract(value_substract451,14834
#undef value_productvalue_product452,14884
#define value_product(value_product453,14905
#undef value_modulusvalue_modulus454,14953
#define value_modulus(value_modulus455,14974
#undef value_divisionvalue_division456,15022
#define value_division(value_division457,15044
#undef value_incrementvalue_increment458,15093
#define value_increment(value_increment459,15116
#undef value_decrementvalue_decrement460,15168
#define value_decrement(value_decrement461,15191
#undef value_ortovalue_orto462,15244
#define value_orto(value_orto463,15262
#undef value_andtovalue_andto464,15309
#define value_andto(value_andto465,15328
#undef value_orvalue_or466,15377
#define value_or(value_or467,15393
#undef value_andvalue_and468,15442
#define value_and(value_and469,15459
#undef value_lshiftvalue_lshift470,15509
#define value_lshift(value_lshift471,15529
#undef value_rshiftvalue_rshift472,15582
#define value_rshift(value_rshift473,15602
#define ABS(ABS480,15698
#define MIN(MIN488,15917
#define MAX(MAX491,15974
#define SIGN(SIGN495,16056
#define DIVIDE(DIVIDE503,16262
#define POSITIVE_DIVIDE(POSITIVE_DIVIDE507,16430
#define MODULO(MODULO510,16540
#define POSITIVE_MODULO(POSITIVE_MODULO518,16893
#define pgcd(pgcd525,17097
#define divide(divide527,17131
#define modulo(modulo529,17164
typedef struct { Value num, den; int numero ; } frac ;num531,17197
typedef struct { Value num, den; int numero ; } frac ;den531,17197
typedef struct { Value num, den; int numero ; } frac ;numero531,17197
typedef struct { Value num, den; int numero ; } frac ;frac531,17197
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;col532,17252
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;taille532,17252
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;existe532,17252
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;colonne532,17252
typedef struct col{ int taille, existe ; frac *colonne ;} tableau ;tableau532,17252

/home/dounia/MYPIPS/prod/linear/src/arithmetique/boolean.h,219
#define BOOLEAN_INCLUDEDBOOLEAN_INCLUDED26,820
typedef int bool; /* we cannot use an enum or stdbool because we need to be compatible with newgen */bool34,994
#define false false36,1097
#define true true37,1113

/home/dounia/MYPIPS/prod/linear/src/arithmetique/arith_mulprec.h,1971
#define LINEAR_ARITH_MULPREC_HLINEAR_ARITH_MULPREC_H44,1190
#define NOWUNUSED NOWUNUSED54,1327
typedef mpz_t zval_t;zval_t67,1631
#define zval_init(zval_init72,1705
#define zval_clear(zval_clear77,1785
#define zval_set(zval_set82,1869
#define zval_set_i(zval_set_i87,1982
#define zval_init_set(zval_init_set92,2085
#define zval_init_set_i(zval_init_set_i97,2220
#define zval_get_i(zval_get_i102,2338
#define zval_add(zval_add107,2416
#define zval_sub(zval_sub112,2507
#define zval_mul(zval_mul117,2602
#define zval_div(zval_div122,2691
#define zval_addmul(zval_addmul127,2797
#define zval_submul(zval_submul132,2906
#define zval_neg(zval_neg137,2999
#define zval_abs(zval_abs142,3096
#define zval_mod(zval_mod147,3184
#define zval_gcd(zval_gcd154,3445
#define zval_lcm(zval_lcm161,3703
#define zval_cmp(zval_cmp168,3900
#define zval_cmp_i(zval_cmp_i175,4105
#define zval_sgn(zval_sgn180,4219
#define zval_equal(zval_equal185,4338
#define zval_equal_i(zval_equal_i191,4503
#define zval_fprint(zval_fprint196,4605
#define zval_print(zval_print201,4703
typedef __mpq_struct qval_s;qval_s214,5019
typedef mpq_ptr qval_p;qval_p216,5049
typedef qval_s qval_t[1];qval_t221,5111
#define qval_canonicalize(qval_canonicalize227,5264
#define qval_init(qval_init232,5369
#define qval_clear(qval_clear237,5449
#define qval_set(qval_set242,5533
#define qval_set_i(qval_set_i247,5632
#define qval_add(qval_add252,5740
#define qval_sub(qval_sub257,5831
#define qval_mul(qval_mul262,5926
#define qval_div(qval_div267,6015
#define qval_neg(qval_neg272,6102
#define qval_abs(qval_abs277,6199
#define qval_inv(qval_inv282,6276
#define qval_cmp(qval_cmp291,6554
#define qval_cmp_i(qval_cmp_i299,6794
#define qval_sgn(qval_sgn304,6932
#define qval_equal(qval_equal311,7137
#define qval_equal_i(qval_equal_i317,7284
#define qval_fprint(qval_fprint322,7410
#define qval_print(qval_print327,7508

/home/dounia/MYPIPS/prod/linear/src/arithmetique/arith_fixprec.h,2691
#define LINEAR_ARITH_FIXPREC_HLINEAR_ARITH_FIXPREC_H40,1111
#define NOWUNUSED NOWUNUSED48,1230
typedef long int zval_t;zval_t61,1534
#define zval_init(zval_init66,1611
#define zval_clear(zval_clear71,1687
#define zval_set(zval_set76,1756
#define zval_set_i(zval_set_i81,1865
#define zval_init_set(zval_init_set86,1961
#define zval_init_set_i(zval_init_set_i91,2087
#define zval_get_i(zval_get_i96,2193
#define zval_add(zval_add101,2259
#define zval_sub(zval_sub106,2349
#define zval_mul(zval_mul111,2443
#define zval_div(zval_div116,2548
#define zval_addmul(zval_addmul121,2650
#define zval_submul(zval_submul126,2773
#define zval_neg(zval_neg131,2880
#define zval_abs(zval_abs136,2974
#define zval_mod(zval_mod141,3061
#define zval_gcd(zval_gcd148,3321
#define zval_lcm(zval_lcm155,3579
#define zval_cmp(zval_cmp162,3776
#define zval_cmp_i(zval_cmp_i169,3977
#define zval_sgn(zval_sgn174,4084
#define zval_equal(zval_equal179,4206
#define zval_equal_i(zval_equal_i185,4362
#define zval_fprint(zval_fprint190,4453
#define zval_print(zval_print195,4550
	zval_t num;num209,4873
	zval_t den;den210,4886
} qval_s, *qval_p;qval_s211,4899
} qval_s, *qval_p;qval_p211,4899
typedef qval_s qval_t[1];qval_t216,4956
static void qval_canonicalize_unsafe(qval_t q)qval_canonicalize_unsafe218,4983
static void NOWUNUSED qval_canonicalize(qval_t q)qval_canonicalize238,5415
static void NOWUNUSED qval_init(qval_t q) {qval_init250,5646
#define qval_clear(qval_clear258,5763
static void NOWUNUSED qval_set(qval_t q1, qval_t q2)qval_set263,5832
static void NOWUNUSED qval_set_i(qval_t q1, Value q2num, Value q2den)qval_set_i272,6003
static void NOWUNUSED qval_add(qval_t q1, qval_t q2, qval_t q3)qval_add283,6235
static void NOWUNUSED qval_sub(qval_t q1, qval_t q2, qval_t q3)qval_sub300,6732
static void NOWUNUSED qval_mul(qval_t q1, qval_t q2, qval_t q3)qval_mul317,7233
static void NOWUNUSED qval_div(qval_t q1, qval_t q2, qval_t q3)qval_div327,7446
static void NOWUNUSED qval_neg(qval_t q1, qval_t q2)qval_neg340,7763
static void NOWUNUSED qval_abs(qval_t q1, qval_t q2)qval_abs349,7932
static void NOWUNUSED qval_inv(qval_t q1, qval_t q2)qval_inv358,8081
static int NOWUNUSED qval_cmp(qval_t q1, qval_t q2)qval_cmp375,8568
static int NOWUNUSED qval_cmp_i(qval_t q1, Value q2num, Value q2den)qval_cmp_i396,9193
static int NOWUNUSED qval_sgn(qval_t q)qval_sgn414,9702
static int NOWUNUSED qval_equal(qval_t q1, qval_t q2)qval_equal424,9944
#define qval_equal_i(qval_equal_i433,10178
static int NOWUNUSED qval_fprint(FILE* stream, qval_t q)qval_fprint438,10304
#define qval_print(qval_print452,10554

/home/dounia/MYPIPS/prod/linear/src/arithmetique/arithmetic_errors.h,1032
#define linear_arithmetic_error_includedlinear_arithmetic_error_included35,1064
typedef void (*timeout_callback_f)(int, const char *, const char *, int);timeout_callback_f42,1199
  overflow_error = 1,overflow_error48,1370
  simplex_arithmetic_error = 2,simplex_arithmetic_error49,1392
  user_exception_error = 4,user_exception_error50,1424
  parser_exception_error = 8,parser_exception_error51,1452
  timeout_error = 16,timeout_error52,1482
  any_exception_error = ~0any_exception_error54,1522
} linear_exception_t;linear_exception_t55,1549
#define throw_exception throw_exception60,1699
#define push_exception_on_stack push_exception_on_stack61,1746
#define pop_exception_from_stack pop_exception_from_stack62,1809
typedef void (*exception_callback_t)(char const *, char const *, int const);exception_callback_t64,1875
#define EXCEPTION EXCEPTION67,2008
#define THROW(THROW69,2047
#define CATCH(CATCH72,2178
#define UNCATCH(UNCATCH76,2368
#define TRY TRY80,2508
#define RETHROW(RETHROW82,2526

/home/dounia/MYPIPS/prod/linear/src/arithmetique/linear.h,57
#define C3_LINEAR_H_INCLUDEDC3_LINEAR_H_INCLUDED30,902

/home/dounia/MYPIPS/prod/linear/src/contrainte/predicats.c,1037
bool eq_smg(c1,c2)eq_smg52,1351
bool inequalities_opposite_p(c1,c2)inequalities_opposite_p71,1755
bool egalite_equal(eg1,eg2)egalite_equal98,2563
bool contrainte_equal(Pcontrainte c1, Pcontrainte c2)contrainte_equal128,3430
bool contrainte_parallele(Pcontrainte c1, Pcontrainte c2, Value *pa1, Value * pa2)contrainte_parallele145,3873
bool contrainte_constante_p(c)contrainte_constante_p192,5326
bool vect_constant_p(v)vect_constant_p211,5742
bool contrainte_verifiee(ineg,eq_p)contrainte_verifiee234,6603
bool contrainte_oppos(ineg1,ineg2)contrainte_oppos258,7264
bool constraint_without_vars(c, vars)constraint_without_vars276,7612
bool constraints_without_vars(pc, vars)constraints_without_vars300,8049
Value contrainte_eval(Pvecteur c, Pvecteur v)contrainte_eval331,8992
bool contrainte_eval_p(Pvecteur c, Pvecteur v, bool is_equality_p)contrainte_eval_p354,9585
bool equality_eval_p(Pvecteur c, Pvecteur v)equality_eval_p369,9847
bool inequality_eval_p(Pvecteur c, Pvecteur v)inequality_eval_p374,9937

/home/dounia/MYPIPS/prod/linear/src/contrainte/unaires.c,1903
void norm_eq(nr)norm_eq44,1172
void contrainte_chg_sgn(c)contrainte_chg_sgn56,1465
void contrainte_reverse(c)contrainte_reverse67,1692
void eq_set_vect_nul(c)eq_set_vect_nul84,2343
Pcontrainte contrainte_translate(c, b, variable_name)contrainte_translate99,2828
Pcontrainte contrainte_variable_rename(c, v_old, v_new)contrainte_variable_rename115,3273
void Pcontrainte_separate_on_vars(initial, vars, pwith, pwithout)Pcontrainte_separate_on_vars140,3849
void constraints_for_bounds(var, pinit, plower, pupper)constraints_for_bounds176,4806
Pcontrainte contrainte_dup_extract(c, var)contrainte_dup_extract215,5578
Pcontrainte contrainte_extract(pc, base, var)contrainte_extract242,6149
int level_contrainte(pc, base_index)level_contrainte292,7218
contrainte_vect_sort(c, compare)contrainte_vect_sort323,7759
contrainte_var_min_coeff(contraintes, v, coeff, rm_if_not_first_p) contrainte_var_min_coeff345,8575
static int (* lexicographic_compare)(Pvecteur *, Pvecteur *) = NULL;lexicographic_compare392,9543
equation_lexicographic_compare(Pcontrainte c1, Pcontrainte c2, equation_lexicographic_compare395,9617
internal_equation_compare(Pcontrainte * pc1, Pcontrainte * pc2)internal_equation_compare408,9943
inequality_lexicographic_compare(Pcontrainte c1, Pcontrainte c2, inequality_lexicographic_compare416,10126
internal_inequality_compare(Pcontrainte * pc1, Pcontrainte * pc2)internal_inequality_compare429,10455
equations_lexicographic_sort(Pcontrainte cl,equations_lexicographic_sort438,10652
inequalities_lexicographic_sort(Pcontrainte cl,inequalities_lexicographic_sort449,10903
constraints_lexicographic_sort(Pcontrainte cl,constraints_lexicographic_sort461,11228
constraints_lexicographic_sort_generic(Pcontrainte cl,constraints_lexicographic_sort_generic472,11481
Variable contrainte_simple_equality(Pcontrainte e)contrainte_simple_equality521,12695

/home/dounia/MYPIPS/prod/linear/src/contrainte/normalize.c,170
bool contrainte_normalize(contrainte_normalize56,1683
bool egalite_normalize(eg)egalite_normalize136,3801
bool inegalite_normalize(ineg)inegalite_normalize156,4348

/home/dounia/MYPIPS/prod/linear/src/contrainte/io.c,1416
fprint_contrainte_vecteur(fprint_contrainte_vecteur74,2200
void contrainte_fprint(fp,c,is_inegalite,variable_name)contrainte_fprint123,3410
void egalite_fprint(FILE *fp, Pcontrainte eg, char * (*variable_name)(Variable))egalite_fprint152,4169
void egalite_dump(Pcontrainte c) {egalite_dump160,4407
void inegalite_fprint(fp,ineg,variable_name)inegalite_fprint171,4786
void inegalite_dump(Pcontrainte c) {inegalite_dump182,5056
void egalites_fprint(fp,eg,variable_name)egalites_fprint192,5402
void egalites_dump(Pcontrainte eg)egalites_dump201,5595
void inegalites_fprint(fp,ineg,variable_name)inegalites_fprint211,5971
void inegalites_dump(Pcontrainte eg)inegalites_dump220,6177
sprint_operator(char *s, bool is_inegalite, bool a_la_fortran)sprint_operator224,6274
heuristique_1(s, v, is_inegalite, variable_name, a_la_fortran)heuristique_1231,6468
heuristique_3(s, v, is_inegalite, variable_name, a_la_fortran)heuristique_3275,7463
contrainte_sprint(s, c, is_inegalite, variable_name)contrainte_sprint424,11962
contrainte_sprint_format(contrainte_sprint_format435,12197
egalite_sprint(s, eg, variable_name)egalite_sprint468,13024
inegalite_sprint(s, ineg, variable_name)inegalite_sprint477,13193
egalite_sprint_format(s, eg, variable_name, a_la_fortran)egalite_sprint_format486,13370
inegalite_sprint_format(s, ineg, variable_name, a_la_fortran)inegalite_sprint_format497,13602

/home/dounia/MYPIPS/prod/linear/src/contrainte/error.c,77
void contrainte_error(char * name, char * fmt, ...)contrainte_error49,1517

/home/dounia/MYPIPS/prod/linear/src/contrainte/contrainte-local.h,1219
#define CONTRAINTE CONTRAINTE84,3063
typedef struct Scontrainte   {Scontrainte86,3088
        int *eq_sat;eq_sat87,3119
	int *s_sat,*r_sat;s_sat88,3140
	int *s_sat,*r_sat;r_sat88,3140
	Pvecteur vecteur;vecteur89,3160
	struct Scontrainte *succ;succ90,3179
	} Scontrainte,*Pcontrainte;Scontrainte91,3206
	} Scontrainte,*Pcontrainte;Pcontrainte91,3206
typedef Scontrainte Segalite, * Pegalite;Segalite93,3236
typedef Scontrainte Segalite, * Pegalite;Pegalite93,3236
typedef Scontrainte Sinegalite, * Pinegalite;Sinegalite95,3279
typedef Scontrainte Sinegalite, * Pinegalite;Pinegalite95,3279
#define egalite_print(egalite_print99,3354
#define inegalite_print(inegalite_print102,3523
#define contrainte_vecteur(contrainte_vecteur105,3647
#define contrainte_succ(contrainte_succ107,3693
#define CONTRAINTE_NULLE_P(CONTRAINTE_NULLE_P110,3790
#define CONTRAINTE_UNDEFINED CONTRAINTE_UNDEFINED112,3860
#define CONTRAINTE_UNDEFINED_P(CONTRAINTE_UNDEFINED_P114,3911
#define COEFF_CST(COEFF_CST117,4042
#define contrainte_rm(contrainte_rm120,4144
#define VERSION_FINALEVERSION_FINALE122,4196
#define CONTRAINTE_RM(CONTRAINTE_RM124,4242
#define CONTRAINTE_RM(CONTRAINTE_RM126,4300

/home/dounia/MYPIPS/prod/linear/src/contrainte/contrainte.h,1293
#define  contrainte_header_includedcontrainte_header_included7,236
#define CONTRAINTE CONTRAINTE91,3335
typedef struct Scontrainte   {Scontrainte93,3360
        int *eq_sat;eq_sat94,3391
	int *s_sat,*r_sat;s_sat95,3412
	int *s_sat,*r_sat;r_sat95,3412
	Pvecteur vecteur;vecteur96,3432
	struct Scontrainte *succ;succ97,3451
	} Scontrainte,*Pcontrainte;Scontrainte98,3478
	} Scontrainte,*Pcontrainte;Pcontrainte98,3478
typedef Scontrainte Segalite, * Pegalite;Segalite100,3508
typedef Scontrainte Segalite, * Pegalite;Pegalite100,3508
typedef Scontrainte Sinegalite, * Pinegalite;Sinegalite102,3551
typedef Scontrainte Sinegalite, * Pinegalite;Pinegalite102,3551
#define egalite_print(egalite_print106,3626
#define inegalite_print(inegalite_print109,3795
#define contrainte_vecteur(contrainte_vecteur112,3919
#define contrainte_succ(contrainte_succ114,3965
#define CONTRAINTE_NULLE_P(CONTRAINTE_NULLE_P117,4062
#define CONTRAINTE_UNDEFINED CONTRAINTE_UNDEFINED119,4132
#define CONTRAINTE_UNDEFINED_P(CONTRAINTE_UNDEFINED_P121,4183
#define COEFF_CST(COEFF_CST124,4314
#define contrainte_rm(contrainte_rm127,4416
#define VERSION_FINALEVERSION_FINALE129,4468
#define CONTRAINTE_RM(CONTRAINTE_RM131,4514
#define CONTRAINTE_RM(CONTRAINTE_RM133,4572

/home/dounia/MYPIPS/prod/linear/src/contrainte/listes.c,562
bool contrainte_in_liste(Pcontrainte c, Pcontrainte lc)contrainte_in_liste52,1494
int constraint_rank(Pcontrainte c, Pcontrainte lc)constraint_rank75,2098
bool egalite_in_liste(Pcontrainte v, Pcontrainte listev)egalite_in_liste108,2878
int nb_elems_list(Pcontrainte list)nb_elems_list129,3357
bool cyclic_constraint_list_p(Pcontrainte l)cyclic_constraint_list_p141,3523
int safe_nb_elems_list(Pcontrainte list, int n)safe_nb_elems_list162,4017
Pcontrainte contrainte_remove_large_coef(Pcontrainte lc, Value val)contrainte_remove_large_coef179,4368

/home/dounia/MYPIPS/prod/linear/src/contrainte/binaires.c,848
int contrainte_subst_ofl(v,def,c,eq_p)contrainte_subst_ofl40,1052
int contrainte_subst(v,def,c,eq_p)contrainte_subst48,1207
Pcontrainte contrainte_substitute_dimension(Pcontrainte e, Variable i, Pvecteur v)contrainte_substitute_dimension57,1358
Pcontrainte inegalite_comb(posit,negat,v)	inegalite_comb65,1561
Pcontrainte inegalite_comb_ofl(posit,negat,v)	inegalite_comb_ofl72,1713
int contrainte_subst_ofl_ctrl(v,def,c,eq_p, ofl_ctrl)contrainte_subst_ofl_ctrl107,3139
Pcontrainte inegalite_comb_ofl_ctrl(posit,negat,v, ofl_ctrl)	inegalite_comb_ofl_ctrl179,5543
Value eq_diff_const(c1,c2)eq_diff_const218,6502
Value eq_sum_const(c1,c2)eq_sum_const243,7105
Pcontrainte contrainte_append(c1, c2)contrainte_append267,7623
extract_common_constraints(Pcontrainte * pc1, Pcontrainte * pc2, bool eq)extract_common_constraints285,8038

/home/dounia/MYPIPS/prod/linear/src/contrainte/alloc.c,790
Pcontrainte contrainte_new(void)contrainte_new47,1206
Pcontrainte contrainte_make(Pvecteur pv)contrainte_make73,1835
Pcontrainte contrainte_make_1D(Value a, Variable x, Value b, bool less_p)contrainte_make_1D86,2182
Pcontrainte contraintes_make(Pvecteur pv,...)contraintes_make99,2515
Pcontrainte contrainte_dup(Pcontrainte c_in)contrainte_dup132,3362
Pcontrainte contraintes_dup(Pcontrainte c_in)contraintes_dup146,3644
Pcontrainte contrainte_free(Pcontrainte c)contrainte_free184,4738
Pcontrainte contraintes_free(Pcontrainte pc)contraintes_free226,5605
void dbg_contrainte_rm(Pcontrainte c, char *f)dbg_contrainte_rm239,5957
Pcontrainte contrainte_copy(Pcontrainte c_in)contrainte_copy254,6347
Pcontrainte contraintes_copy(Pcontrainte c_in)contraintes_copy270,6774

/home/dounia/MYPIPS/prod/linear/src/sg/sg.c,1889
static int sg_debug_level = 0;sg_debug_level46,1271
#define ifdebug(ifdebug47,1302
#define MALLOC(MALLOC49,1345
#define FREE(FREE50,1377
Ptsg sg_new()sg_new55,1510
Ptsg sg_dup(Ptsg sg_in)sg_dup84,2266
Ptsg sg_without_line(sg_in)sg_without_line132,3671
Ptsg sg_add_ray(sg,ray)sg_add_ray189,5523
void sg_rm_sommets(sg)sg_rm_sommets205,5873
void sg_rm_rayons(sg)sg_rm_rayons222,6182
void sg_rm_droites(sg)sg_rm_droites233,6405
void sg_rm(sg)sg_rm249,6748
void sg_fprint(FILE * f, Ptsg sg, char * (*nom_var)(Variable))sg_fprint262,7004
void sg_print(Ptsg sg, char * (*nom_var)(Variable))sg_print282,7706
void sg_dump(Ptsg sg)sg_dump288,7817
void sg_fprint_as_dense(f, sg, b)sg_fprint_as_dense298,8008
#define LESSER_DIRECTION LESSER_DIRECTION326,8769
#define GREATER_DIRECTION GREATER_DIRECTION327,8796
#define ZERO_DIRECTION ZERO_DIRECTION328,8824
#define ANY_DIRECTION ANY_DIRECTION329,8849
#define NO_DIRECTION NO_DIRECTION330,8873
static int vertex_to_direction[3] = {LESSER_DIRECTION, ZERO_DIRECTION, GREATER_DIRECTION};vertex_to_direction332,8897
static int ray_to_direction[3] = {LESSER_DIRECTION, NO_DIRECTION, GREATER_DIRECTION};ray_to_direction334,8989
static int line_to_direction[3] = {ANY_DIRECTION, NO_DIRECTION, ANY_DIRECTION};line_to_direction336,9076
static char * direction_to_representation[8] = {"?", "<", "=", "<=", ">", "*", ">=", "*"};direction_to_representation338,9157
sg_fprint_as_ddv(sg_fprint_as_ddv341,9254
static bool egal_soms(sgs1,sgs2)egal_soms396,10707
static bool egal_rd(rdgs1,rdgs2)egal_rd410,11078
bool sg_egal(sg1,sg2)sg_egal434,11889
Ptsg mk_rn(b)mk_rn451,12511
Ptsg ajout_dte(sg,v)	ajout_dte487,13370
bool sommet_in_sg_p(som,sg)sommet_in_sg_p507,13688
bool ray_in_sg_p(ray,sg)ray_in_sg_p522,13975
bool dte_in_sg_p(dte,sg)dte_in_sg_p537,14250
Ptsg sg_union(sg1,sg2)sg_union552,14524

/home/dounia/MYPIPS/prod/linear/src/sg/sg-local.h,1126
#define TSG	TSG36,1028
#define TSGSOMS TSGSOMS37,1044
#define TSGVECTS TSGVECTS38,1064
typedef struct ttsg_soms {ttsg_soms41,1132
	int nb_s;nb_s42,1159
	struct	typ_som *ssg;ssg43,1170
	} *Ptsg_soms,Stsg_soms;Ptsg_soms44,1192
	} *Ptsg_soms,Stsg_soms;Stsg_soms44,1192
typedef struct ttsg_vects {ttsg_vects47,1264
	int nb_v;nb_v48,1292
	Pray_dte vsg;vsg49,1303
	} *Ptsg_vects,Stsg_vects;Ptsg_vects50,1318
	} *Ptsg_vects,Stsg_vects;Stsg_vects50,1318
typedef struct type_sg {type_sg66,1932
	Stsg_soms soms_sg;soms_sg67,1957
	Stsg_vects rays_sg;rays_sg68,1977
	Stsg_vects dtes_sg;dtes_sg69,1998
	Pbase base;base70,2019
	} *Ptsg,Stsg;Ptsg71,2032
	} *Ptsg,Stsg;Stsg71,2032
#define SG_UNDEFINED SG_UNDEFINED73,2048
#define SG_UNDEFINED_P(SG_UNDEFINED_P74,2083
#define sg_sommets(sg_sommets85,2411
#define sg_rayons(sg_rayons89,2574
#define sg_droites(sg_droites93,2742
#define sg_nbre_sommets(sg_nbre_sommets96,2837
#define sg_nbre_rayons(sg_nbre_rayons99,2936
#define sg_nbre_droites(sg_nbre_droites102,3036
#define sg_base(sg_base105,3129
#define sg_empty(sg_empty108,3240

/home/dounia/MYPIPS/prod/linear/src/sg/sg.h,1182
#define  sg_header_includedsg_header_included7,212
#define TSG	TSG43,1268
#define TSGSOMS TSGSOMS44,1284
#define TSGVECTS TSGVECTS45,1304
typedef struct ttsg_soms {ttsg_soms48,1372
	int nb_s;nb_s49,1399
	struct	typ_som *ssg;ssg50,1410
	} *Ptsg_soms,Stsg_soms;Ptsg_soms51,1432
	} *Ptsg_soms,Stsg_soms;Stsg_soms51,1432
typedef struct ttsg_vects {ttsg_vects54,1504
	int nb_v;nb_v55,1532
	Pray_dte vsg;vsg56,1543
	} *Ptsg_vects,Stsg_vects;Ptsg_vects57,1558
	} *Ptsg_vects,Stsg_vects;Stsg_vects57,1558
typedef struct type_sg {type_sg73,2172
	Stsg_soms soms_sg;soms_sg74,2197
	Stsg_vects rays_sg;rays_sg75,2217
	Stsg_vects dtes_sg;dtes_sg76,2238
	Pbase base;base77,2259
	} *Ptsg,Stsg;Ptsg78,2272
	} *Ptsg,Stsg;Stsg78,2272
#define SG_UNDEFINED SG_UNDEFINED80,2288
#define SG_UNDEFINED_P(SG_UNDEFINED_P81,2323
#define sg_sommets(sg_sommets92,2651
#define sg_rayons(sg_rayons96,2814
#define sg_droites(sg_droites100,2982
#define sg_nbre_sommets(sg_nbre_sommets103,3077
#define sg_nbre_rayons(sg_nbre_rayons106,3176
#define sg_nbre_droites(sg_nbre_droites109,3276
#define sg_base(sg_base112,3369
#define sg_empty(sg_empty115,3480

/home/dounia/MYPIPS/prod/linear/src/plint/find-eg.c,69
#define MALLOC(MALLOC52,1288
Psysteme find_eg(sys)find_eg64,1562

/home/dounia/MYPIPS/prod/linear/src/plint/sc-fais-int.c,76
#define MALLOC(MALLOC45,1084
bool sys_int_fais(sys1)sys_int_fais57,1535

/home/dounia/MYPIPS/prod/linear/src/plint/plpivoter.c,161
#define MALLOC(MALLOC40,1038
#define TRACETRACE43,1088
void pivoter_pas(eq,ligne,var)pivoter_pas61,1473
void pivoter(sys,ligne,var,fonct)pivoter131,3055

/home/dounia/MYPIPS/prod/linear/src/plint/plsommet-op.c,105
#define MALLOC(MALLOC42,1044
#define FREE(FREE43,1076
Psommet sommets_dupc(som)sommets_dupc48,1213

/home/dounia/MYPIPS/prod/linear/src/plint/sc-red-int.c,83
#define MALLOC(MALLOC44,1081
Psysteme sys_int_redond(sys)sys_int_redond53,1472

/home/dounia/MYPIPS/prod/linear/src/plint/sc_to_matrice.c,255
void sys_mat_conv(ps,A,B,n,m)sys_mat_conv65,1699
void mat_sys_conv(ps,B,n,m,nbl)mat_sys_conv103,2946
void egalites_to_matrice(a, n, m, leg, b)egalites_to_matrice168,5010
Pcontrainte matrice_to_contraintes(a, n, m, b)matrice_to_contraintes204,5933

/home/dounia/MYPIPS/prod/linear/src/plint/plint-local.h,306
#define SOLUTION SOLUTION49,1336
typedef struct Ssolution{Ssolution51,1356
    Variable var;var53,1412
    Value val;val55,1462
    Value denominateur;denominateur57,1528
    struct Ssolution *succ;succ59,1597
} *Psolution,Ssolution;Psolution60,1625
} *Psolution,Ssolution;Ssolution60,1625

/home/dounia/MYPIPS/prod/linear/src/plint/plsimplexe.c,341
#define TRACETRACE43,1044
#define MALLOC(MALLOC54,1306
Psommet lignes_entrant(sys,var,nb_som,no_som)lignes_entrant71,1930
Variable var_pivots(fonct)var_pivots143,3659
Psommet primal_pivot(sys,lvbase,nb_som,fonct)primal_pivot209,5343
Psysteme primal(ps,fonct)primal283,7315
bool primal_positive(ps,fonct)primal_positive331,8313

/home/dounia/MYPIPS/prod/linear/src/plint/plsolution.c,310
#define MALLOC(MALLOC45,1083
#define FREE(FREE46,1127
bool sol_entiere(sys,lvbase,nb_som)sol_entiere62,1596
bool sol_positive(sys,lvbase,nb_som)sol_positive107,2961
bool sol_positive_simpl(sys,lvbase,lvsup,nb_som)sol_positive_simpl142,3681
Psolution sol_finale(sys,lvbase,nb_som)sol_finale194,5056

/home/dounia/MYPIPS/prod/linear/src/plint/plsomvb-test.c,173
#define MALLOC(MALLOC40,1041
bool const_negative(som)const_negative57,1412
bool test_borne(eq)test_borne87,2075
bool cout_nul(fonct,lvbase,nbvars,b)cout_nul127,2836

/home/dounia/MYPIPS/prod/linear/src/plint/sc-fais-int-sm.c,186
#define MALLOC(MALLOC55,1317
#define FREE(FREE56,1361
void var_posit(ps,B,m,nbl)var_posit75,2079
Psysteme smith_int(ps)smith_int140,3554
bool syst_smith(ps)syst_smith422,10376

/home/dounia/MYPIPS/prod/linear/src/plint/plvar-ecart.c,270
#define TRACETRACE41,1043
#define MALLOC(MALLOC52,1305
Psommet eq_in_ineq(sys,nb_som,lvbase)eq_in_ineq68,1830
Psommet var_ecart_sup(sys,nb_som,lvbase,nbvars,b)var_ecart_sup156,3941
Psommet add_var_sup(sys,nb_som,lvbase,lvsup,nbvars,b,fonct)add_var_sup210,5036

/home/dounia/MYPIPS/prod/linear/src/plint/sc-res-smith.c,140
#define MALLOC(MALLOC44,1142
#define FREE(FREE45,1186
#define MATRIX MATRIX47,1225
Psysteme sc_resol_smith(ps)sc_resol_smith66,1862

/home/dounia/MYPIPS/prod/linear/src/plint/plreal.c,48
Psysteme plreal(first_sys,fonct)plreal63,1638

/home/dounia/MYPIPS/prod/linear/src/plint/plfonct-eco.c,424
#define MALLOC(MALLOC45,1084
Psommet fonct_init()fonct_init53,1339
Psommet fonct_min(nbvars,b)fonct_min78,1977
Psommet fonct_max(nbvars,b)fonct_max93,2314
Psommet fonct_min_all(nbvars,b)fonct_min_all120,2926
Psommet fonct_max_all(nbvars,b)fonct_max_all155,3811
Psommet fonct_min_d(nbvars,b)fonct_min_d187,4664
Psommet fonct_max_d(nbvars,b)fonct_max_d212,5347
Psommet fonct_read(nbvars,b)fonct_read236,5978

/home/dounia/MYPIPS/prod/linear/src/plint/plint.c,230
#define MALLOC(MALLOC52,1286
Psommet plint_pas(sys1,fonct,lvbase,nb_som,nbvars,b)plint_pas73,2065
bool plint_degen(sys,fonct,nb_som,lvbase,nbvars,b)plint_degen288,7576
Psysteme plint(first_sys,fonct,sol_fin)plint430,11683

/home/dounia/MYPIPS/prod/linear/src/plint/plgomory.c,154
#define MALLOC(MALLOC45,1081
Psommet gomory_trait_eq(eq,var)gomory_trait_eq62,1700
Psommet gomory_eq(sys,lvbase,nb_som,no_som,var)gomory_eq153,4092

/home/dounia/MYPIPS/prod/linear/src/plint/pldual.c,387
#define MALLOC(MALLOC52,1287
Psommet ligne_pivot(sys,nb_som,no_som)ligne_pivot66,1759
Variable var_pivotd(eq,fonct)var_pivotd125,3178
bool dual_pivot_pas(sys,lvbase,nb_som,fonct,nbvars,b)dual_pivot_pas213,5751
bool dual_pivot(sys,syst_result,fonct,nb_som,lvbase)dual_pivot297,7864
Psysteme dual(sys,fonct)dual351,9268
Psysteme dual_positive(sys,fonct)dual_positive365,9516

/home/dounia/MYPIPS/prod/linear/src/plint/plvbase.c,411
#define MALLOC(MALLOC45,1080
#define FREE(FREE46,1124
void oter_lvbase(sys,lvbase)oter_lvbase61,1572
bool is_var_in_lvbase(var,lvbase)is_var_in_lvbase92,2367
void lvbase_add(var,no_ligne,lvbase)lvbase_add116,2988
void lvbase_ote_no_ligne (no_ligne,lvbase)lvbase_ote_no_ligne145,3837
Variable find_vbase(eq,lvbase)find_vbase188,4837
Variable coeff_no_ligne(lvbase,no_ligne)coeff_no_ligne228,5841

/home/dounia/MYPIPS/prod/linear/src/sc/sc_unaires.c,565
Psysteme sc_elim_var(Psysteme sc, Variable v)sc_elim_var49,1270
void sc_chg_var(Psysteme s, Variable v_old, Variable v_new)sc_chg_var98,2276
void sc_vect_sort(Psysteme s, int (*compare)(Pvecteur *, Pvecteur *))sc_vect_sort116,2751
void sc_sort(sc_sort137,3491
static bool vect_printout_order_decided_p(Pvecteur v)vect_printout_order_decided_p149,3793
Pvecteur vect_printout_order(Pvecteur v,vect_printout_order170,4427
sc_lexicographic_sort(sc_lexicographic_sort206,5469
bool sc_remove_large_coef(Psysteme sc, Value val,sc_remove_large_coef277,7981

/home/dounia/MYPIPS/prod/linear/src/sc/sc_var.c,218
#define MALLOC(MALLOC43,1056
#define FREE(FREE44,1088
Variable creat_new_var(ps)creat_new_var102,2714
bool var_in_lcontrainte_p(pc,var)var_in_lcontrainte_p122,3104
bool var_in_sc_p(sc,var)var_in_sc_p139,3499

/home/dounia/MYPIPS/prod/linear/src/sc/sc_belong.c,130
bool sc_belongs_p(Psysteme ps, Pvecteur v)sc_belongs_p51,1547
bool sc_internal_p(Psysteme ps, Pvecteur v)sc_internal_p85,2701

/home/dounia/MYPIPS/prod/linear/src/sc/sc.c,819
#define MALLOC(MALLOC45,1141
void norm_syst(sc)norm_syst53,1440
Psysteme sc_make(leg,lineg)sc_make78,2154
Psysteme sc_translate(s, b, variable_name)sc_translate99,2759
Psysteme sc_substitute_dimension(Psysteme s, Variable i, Pvecteur v)sc_substitute_dimension130,3536
Psysteme sc_variable_rename(s, v_old, v_new)sc_variable_rename157,4336
Psysteme sc_rename_variables(s, renamed_p, new_variable)sc_rename_variables198,5453
Psysteme sc_variables_rename(Psysteme s,sc_variables_rename224,6218
void sc_base_remove_variable(sc,v)sc_base_remove_variable239,6640
void sc_base_add_variable(sc,var)sc_base_add_variable248,6786
bool sc_consistent_p(Psysteme sc)sc_consistent_p282,7789
bool sc_weak_consistent_p(Psysteme sc)sc_weak_consistent_p362,10315
sc_separate_on_vars(sc_separate_on_vars418,11856

/home/dounia/MYPIPS/prod/linear/src/sc/sc_io.c,530
Psysteme * sc_read(char * nomfic)sc_read74,2014
bool sc_fscan(FILE * f, Psysteme * ps)sc_fscan121,3517
void sc_dump(Psysteme sc)sc_dump142,4050
void sc_default_dump(Psysteme sc)sc_default_dump170,5134
void sc_print(Psysteme ps, get_variable_name_t nom_var)sc_print194,5845
void sc_fprint(FILE * fp,sc_fprint220,7035
void sc_fprint_for_sc_fscan(FILE * f, Psysteme sc, char * (*nom_var)(Variable))sc_fprint_for_sc_fscan260,8026
void sc_default_dump_to_files(sc, sc_nb,directory_name)sc_default_dump_to_files288,8981

/home/dounia/MYPIPS/prod/linear/src/sc/sc_simplex_feasibility.c,172
#define WNOGMP WNOGMP43,1110
static bool usegmp()usegmp45,1204
bool sc_simplex_feasibility_ofl_ctrl(Psysteme sys, int ofl_ctrl)sc_simplex_feasibility_ofl_ctrl61,1552

/home/dounia/MYPIPS/prod/linear/src/sc/sc_projection.c,3023
#define EXCEPTION_PRINT_PROJECTION EXCEPTION_PRINT_PROJECTION91,2920
#define FILTERING_DIMENSION_PROJECTION FILTERING_DIMENSION_PROJECTION97,3072
#define FILTERING_NUMBER_CONSTRAINTS_PROJECTION FILTERING_NUMBER_CONSTRAINTS_PROJECTION98,3142
#define FILTERING_DENSITY_PROJECTION FILTERING_DENSITY_PROJECTION99,3230
#define FILTERING_MAGNITUDE_PROJECTION FILTERING_MAGNITUDE_PROJECTION100,3296
#define FILTERING_TIMEOUT_PROJECTION FILTERING_TIMEOUT_PROJECTION102,3375
static bool PROJECTION_timeout = false;PROJECTION_timeout104,3442
catch_alarm_projection (int sig)catch_alarm_projection107,3495
void sc_projection_along_variable_ofl_ctrl(psc, v, ofl_ctrl)sc_projection_along_variable_ofl_ctrl146,5075
void sc_and_base_projection_along_variable_ofl_ctrl(psc,v, ofl_ctrl)sc_and_base_projection_along_variable_ofl_ctrl204,6676
void sc_projection_along_variables_ofl_ctrl(psc, pv, ofl_ctrl)sc_projection_along_variables_ofl_ctrl230,7709
void sc_projection_along_variables_with_test_ofl_ctrl(psc, pv, is_proj_exact,sc_projection_along_variables_with_test_ofl_ctrl272,9381
Psysteme sc_variable_substitution_with_eq_ofl_ctrl(sc, eq, v, ofl_ctrl)sc_variable_substitution_with_eq_ofl_ctrl423,13203
Psysteme sc_simple_variable_substitution_with_eq_ofl_ctrl(sc, def, v, ofl_ctrl)sc_simple_variable_substitution_with_eq_ofl_ctrl541,16116
bool sc_fourier_motzkin_variable_elimination_ofl_ctrl(sc,v, integer_test_p,sc_fourier_motzkin_variable_elimination_ofl_ctrl594,18290
Psysteme sc_projection_on_variables(sc_projection_on_variables733,21506
Pcontrainte sc_integer_inequalities_combination_ofl_ctrlsc_integer_inequalities_combination_ofl_ctrl803,23774
Psysteme sc_projection(Psysteme sc, Variable v)sc_projection863,25328
Psysteme sc_projection_ofl(Psysteme sc, Variable v)sc_projection_ofl881,25748
Psysteme sc_projection_pure(sc,v)sc_projection_pure893,25943
Psysteme sc_projection_ofl_along_variables(sc,pv)sc_projection_ofl_along_variables912,26334
Psysteme sc_projection_ofl_along_variables_with_test(sc, pv, is_proj_exact)sc_projection_ofl_along_variables_with_test922,26499
Psysteme sc_projection_by_eq(sc, eq, v)sc_projection_by_eq933,26791
bool cond_suff_comb_integer_ofl_ctrl(sc,posit,negat, v, ofl_ctrl)cond_suff_comb_integer_ofl_ctrl949,27054
Psysteme sc_projection_optim_along_vecteur(volatile Psysteme sc, Pvecteur pv)sc_projection_optim_along_vecteur967,27404
Pcontrainte eq_v_coeff_min(contraintes, v)eq_v_coeff_min984,27752
bool sc_expensive_projection_p(sc,v)sc_expensive_projection_p992,27921
#define SUBS(SUBS1021,28690
void sc_extract_exact_common_equalitiessc_extract_exact_common_equalities1025,28861
void sc_project_very_simple_equalities(Psysteme s)sc_project_very_simple_equalities1066,30098
void sc_projection_along_variable_ofl_ctrl_timeout_ctrl(psc, v, ofl_ctrl)sc_projection_along_variable_ofl_ctrl_timeout_ctrl1090,30942
Psysteme sc_system_projection_along_variables(Psysteme ps, Pvecteur pv)sc_system_projection_along_variables1191,34257

/home/dounia/MYPIPS/prod/linear/src/sc/sc_lex.l,0

/home/dounia/MYPIPS/prod/linear/src/sc/sc_gram.h,1248
# define SYST_Y_TAB_HSYST_Y_TAB_H34,1553
# define YYDEBUG YYDEBUG37,1615
# define YYTOKENTYPEYYTOKENTYPE45,1719
   enum yytokentype {yytokentype48,1843
     ACCFERM = 258,ACCFERM49,1865
     ACCOUVR = 259,ACCOUVR50,1885
     CONSTANTE = 260,CONSTANTE51,1905
     EGAL = 261,EGAL52,1927
     IDENT = 262,IDENT53,1944
     INF = 263,INF54,1962
     INFEGAL = 264,INFEGAL55,1978
     MOINS = 265,MOINS56,1998
     PLUS = 266,PLUS57,2016
     SUP = 267,SUP58,2033
     SUPEGAL = 268,SUPEGAL59,2049
     VAR = 269,VAR60,2069
     VIRG = 270VIRG61,2085
#define ACCFERM ACCFERM65,2129
#define ACCOUVR ACCOUVR66,2149
#define CONSTANTE CONSTANTE67,2169
#define EGAL EGAL68,2191
#define IDENT IDENT69,2208
#define INF INF70,2226
#define INFEGAL INFEGAL71,2242
#define MOINS MOINS72,2262
#define PLUS PLUS73,2280
#define SUP SUP74,2297
#define SUPEGAL SUPEGAL75,2313
#define VAR VAR76,2333
#define VIRG VIRG77,2349
typedef union YYSTYPEYYSTYPE82,2424
    Value Value;Value87,2497
    Variable Variable;Variable88,2514
} YYSTYPE;YYSTYPE93,2585
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL94,2596
# define yystype yystype95,2626
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED96,2688

/home/dounia/MYPIPS/prod/linear/src/sc/sc_error.c,61
void sc_error(char * name, char * fmt, ...)sc_error46,1442

/home/dounia/MYPIPS/prod/linear/src/sc/sc_insert_eq.c,416
void insert_ineq_begin_sc(sc,ineq)insert_ineq_begin_sc40,1088
void insert_2ineq_end_sc(sc,ineq)insert_2ineq_end_sc54,1416
void insert_ineq_end_sc(sc,ineq)insert_ineq_end_sc81,1975
sc_equation_add(Psysteme sc, Pcontrainte c)sc_equation_add101,2412
sc_inequality_add(Psysteme sc, Pcontrainte c)sc_inequality_add108,2526
sc_constraint_add(Psysteme sc, Pcontrainte c, bool equality)sc_constraint_add115,2643

/home/dounia/MYPIPS/prod/linear/src/sc/sc_janus_feasibility.c,377
bool sc_janus_feasibility_fallback(Psysteme sc __attribute__((unused))) sc_janus_feasibility_fallback44,1154
static bool (*sc_janus_feasibility_ptr)(Psysteme) = NULL;sc_janus_feasibility_ptr53,1344
bool sc_janus_feasibility(Psysteme sc)sc_janus_feasibility59,1503
void set_sc_janus_feasibility(bool (*sc_janus_feasibility_fct)(Psysteme))set_sc_janus_feasibility72,1735

/home/dounia/MYPIPS/prod/linear/src/sc/sc_intersection.c,486
Psysteme sc_fusion(Psysteme s1, Psysteme s2)sc_fusion54,1502
Psysteme sc_intersection(Psysteme s1, Psysteme s2, Psysteme s3)sc_intersection124,3119
Psysteme sc_append(s1,s2)sc_append157,3964
Psysteme sc_safe_intersection(s1,s2,s3)sc_safe_intersection224,5969
Psysteme sc_safe_append(s1,s2)sc_safe_append259,6856
bool sc_intersection_empty_p_ofl(ps1, ps2)sc_intersection_empty_p_ofl316,8381
Psysteme extract_common_syst(Psysteme s1, Psysteme s2)extract_common_syst335,8814

/home/dounia/MYPIPS/prod/linear/src/sc/sc_triang_elim_redond.c,1803
  Pbase rbase;         // reverse loop baserbase46,1114
  Pbase others;        // other variablesothers47,1158
  bool inner_first;    // inner or outer loop firstinner_first48,1200
  bool complex_first;  // complex or simplest firstcomplex_first49,1252
} sort_ctx_t;sort_ctx_t50,1304
static void set_sort_context(set_sort_context52,1319
static void clear_sort_context(sort_ctx_t * context)clear_sort_context70,1785
#define ADD_COST ADD_COST77,1984
#define MUL_COST MUL_COST78,2005
#define AFF_COST AFF_COST79,2026
static int cost_of_constant_operations(Pvecteur v, sort_ctx_t * context)cost_of_constant_operations80,2047
#define DB_RESULT(DB_RESULT120,2843
#define RESULT(RESULT129,3366
#define RETURN_HARDER(RETURN_HARDER131,3401
#define RETURN_ORDER(RETURN_ORDER132,3470
#define same_sign_p(same_sign_p134,3537
static int compare_the_constraints(compare_the_constraints142,3869
Pvecteur highest_rank_pvector(Pvecteur v, Pbase b, int *prank)highest_rank_pvector246,7114
static Pcontrainte constraints_sort_info(constraints_sort_info275,7669
Pcontrainte constraints_sort_with_compare(constraints_sort_with_compare327,8850
Pcontrainte contrainte_sort(contrainte_sort344,9187
Psysteme sc_sort_constraints(Psysteme ps, Pbase base_index)sc_sort_constraints359,9569
Psysteme sc_triang_elim_redund(Psysteme ps, Pbase base_index)sc_triang_elim_redund418,11838
void move_n_first_constraints(Pcontrainte *source, Pcontrainte *target, int n)move_n_first_constraints498,14042
void sc_triang_elim_redund_n_first(Psysteme s, int n)sc_triang_elim_redund_n_first521,14700
Psysteme sc_build_triang_elim_redund(sc_build_triang_elim_redund541,15171
Psysteme sc_sort_constraints_simplest_first(Psysteme ps, Pbase base_index)sc_sort_constraints_simplest_first602,16765

/home/dounia/MYPIPS/prod/linear/src/sc/sc_transformation.c,263
void sc_transform_eg_in_ineg(sc)sc_transform_eg_in_ineg44,1078
void sc_transform_ineg_in_eg(sc)sc_transform_ineg_in_eg71,1596
static int abscmp(Pvecteur * pv1, Pvecteur * pv2)abscmp130,3550
void sc_find_equalities(Psysteme * ps)sc_find_equalities136,3709

/home/dounia/MYPIPS/prod/linear/src/sc/sc-local.h,2506
#define SYSTEME SYSTEME47,1485
typedef struct Ssysteme { Ssysteme69,2393
	Pcontrainte egalites;egalites70,2420
	Pcontrainte inegalites;inegalites71,2443
	int nb_eq;nb_eq72,2468
	int nb_ineq;nb_ineq73,2480
	int dimension;dimension74,2494
	Pbase base;base75,2510
} *Psysteme,Ssysteme;Psysteme76,2523
} *Psysteme,Ssysteme;Ssysteme76,2523
#define get_sc_debug_level(get_sc_debug_level149,6286
#define ifscdebug(ifscdebug150,6330
#define sc_nbre_egalites(sc_nbre_egalites154,6395
#define sc_nbre_inegalites(sc_nbre_inegalites155,6440
#define sc_egalites(sc_egalites156,6489
#define sc_inegalites(sc_inegalites157,6532
#define sc_base(sc_base158,6579
#define sc_dimension(sc_dimension159,6614
#define sc_add_eg(sc_add_eg171,6906
#define sc_add_ineg(sc_add_ineg172,6950
#define SC_EMPTY SC_EMPTY179,7169
#define SC_EMPTY_P(SC_EMPTY_P180,7204
#define SC_RN SC_RN189,7588
#define SC_RN_P(SC_RN_P190,7620
#define SC_UNDEFINED SC_UNDEFINED194,7724
#define SC_UNDEFINED_P(SC_UNDEFINED_P195,7763
#define NB_INEQ_MAX1 NB_INEQ_MAX1200,7980
#define NB_INEQ_MAX2 NB_INEQ_MAX2205,8173
#define sc_faisabilite(sc_faisabilite210,8304
#define sc_faisabilite_ofl(sc_faisabilite_ofl211,8389
#define sc_feasible_ofl(sc_feasible_ofl213,8482
#define sc_elim_redond(sc_elim_redond214,8567
#define sc_triang_elim_redond(sc_triang_elim_redond215,8615
#define sc_rm_empty_constraints(sc_rm_empty_constraints216,8677
#define sc_kill_db_eg(sc_kill_db_eg217,8752
#define sc_safe_kill_db_eg(sc_safe_kill_db_eg218,8808
#define non_redundent_subsystem(non_redundent_subsystem219,8874
#define sc_nredund_ofl(sc_nredund_ofl220,8954
#define sc_nredund_optim(sc_nredund_optim221,9035
#define sc_nredund(sc_nredund222,9096
#define sc_projection_on_list_of_variables(sc_projection_on_list_of_variables223,9151
#define combiner(combiner225,9250
#define combiner_ofl(combiner_ofl227,9360
#define exact_combiner_ofl(exact_combiner_ofl229,9475
#define eq_v_min_coeff(eq_v_min_coeff231,9598
#define sc_projection_ofl_with_eq(sc_projection_ofl_with_eq232,9679
#define cond_suff_comb_integer(cond_suff_comb_integer234,9800
#define cond_suff_comb_integer_ofl(cond_suff_comb_integer_ofl236,9917
#define sc_projection_int_along_vecteur(sc_projection_int_along_vecteur238,10039
#define integer_projection(integer_projection240,10180
typedef int (*two_int_infop)[2];two_int_infop243,10274
typedef int (* constraint_cmp_func_t)constraint_cmp_func_t245,10308

/home/dounia/MYPIPS/prod/linear/src/sc/sc_elim_eq.c,195
void sc_rm_empty_constraints(ps, process_equalities)sc_rm_empty_constraints56,1806
Psysteme sc_kill_db_eg(ps)sc_kill_db_eg133,4031
Psysteme sc_safe_kill_db_eg(ps)sc_safe_kill_db_eg191,5115

/home/dounia/MYPIPS/prod/linear/src/sc/sc_integer_projection.c,593
#define MALLOC(MALLOC67,1968
#define FREE(FREE68,2012
struct prtri_struct {prtri_struct70,2051
	Pcontrainte pos,neg,cnul;pos71,2073
	Pcontrainte pos,neg,cnul;neg71,2073
	Pcontrainte pos,neg,cnul;cnul71,2073
static void constraint_sort(inegs,v,prtri,nb_pos,nb_neg)constraint_sort78,2302
sc_integer_fourier_motzkin_variable_elimination(sc_integer_fourier_motzkin_variable_elimination124,3379
Psysteme sc_integer_projection_along_variable(sc_integer_projection_along_variable243,6518
Psysteme sc_integer_projection_along_variablessc_integer_projection_along_variables283,7641

/home/dounia/MYPIPS/prod/linear/src/sc/sc_lex.c,10279
#define  YY_INT_ALIGNED YY_INT_ALIGNED4,21
#define yy_create_buffer yy_create_buffer8,99
#define yy_delete_buffer yy_delete_buffer9,144
#define yy_flex_debug yy_flex_debug10,189
#define yy_init_buffer yy_init_buffer11,228
#define yy_flush_buffer yy_flush_buffer12,269
#define yy_load_buffer_state yy_load_buffer_state13,312
#define yy_switch_to_buffer yy_switch_to_buffer14,365
#define yyin yyin15,416
#define yyleng yyleng16,437
#define yylex yylex17,462
#define yylineno yylineno18,485
#define yyout yyout19,514
#define yyrestart yyrestart20,537
#define yytext yytext21,568
#define yywrap yywrap22,593
#define yyalloc yyalloc23,618
#define yyrealloc yyrealloc24,645
#define yyfree yyfree25,676
#define FLEX_SCANNERFLEX_SCANNER27,702
#define YY_FLEX_MAJOR_VERSION YY_FLEX_MAJOR_VERSION28,723
#define YY_FLEX_MINOR_VERSION YY_FLEX_MINOR_VERSION29,755
#define YY_FLEX_SUBMINOR_VERSION YY_FLEX_SUBMINOR_VERSION30,787
#define FLEX_BETAFLEX_BETA32,856
#define FLEXINT_HFLEXINT_H48,1154
#define __STDC_LIMIT_MACROS __STDC_LIMIT_MACROS58,1465
typedef int8_t flex_int8_t;flex_int8_t62,1525
typedef uint8_t flex_uint8_t;flex_uint8_t63,1553
typedef int16_t flex_int16_t;flex_int16_t64,1583
typedef uint16_t flex_uint16_t;flex_uint16_t65,1613
typedef int32_t flex_int32_t;flex_int32_t66,1645
typedef uint32_t flex_uint32_t;flex_uint32_t67,1675
typedef signed char flex_int8_t;flex_int8_t69,1713
typedef short int flex_int16_t;flex_int16_t70,1746
typedef int flex_int32_t;flex_int32_t71,1778
typedef unsigned char flex_uint8_t; flex_uint8_t72,1804
typedef unsigned short int flex_uint16_t;flex_uint16_t73,1841
typedef unsigned int flex_uint32_t;flex_uint32_t74,1883
#define INT8_MIN INT8_MIN78,1969
#define INT16_MIN INT16_MIN81,2032
#define INT32_MIN INT32_MIN84,2099
#define INT8_MAX INT8_MAX87,2170
#define INT16_MAX INT16_MAX90,2232
#define INT32_MAX INT32_MAX93,2296
#define UINT8_MAX UINT8_MAX96,2365
#define UINT16_MAX UINT16_MAX99,2429
#define UINT32_MAX UINT32_MAX102,2495
#define YY_USE_CONSTYY_USE_CONST112,2665
#define YY_USE_CONSTYY_USE_CONST119,2786
#define yyconst yyconst125,2888
#define yyconstyyconst127,2916
#define YY_NULL YY_NULL131,2973
#define YY_SC_TO_UI(YY_SC_TO_UI138,3220
#define BEGIN BEGIN144,3451
#define YY_START YY_START150,3650
#define YYSTATE YYSTATE151,3690
#define YY_STATE_EOF(YY_STATE_EOF154,3773
#define YY_NEW_FILE YY_NEW_FILE157,3893
#define YY_END_OF_BUFFER_CHAR YY_END_OF_BUFFER_CHAR159,3938
#define YY_BUF_SIZE YY_BUF_SIZE163,4027
#define YY_STATE_BUF_SIZE YY_STATE_BUF_SIZE168,4155
#define YY_TYPEDEF_YY_BUFFER_STATEYY_TYPEDEF_YY_BUFFER_STATE171,4263
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE172,4298
#define YY_TYPEDEF_YY_SIZE_TYY_TYPEDEF_YY_SIZE_T176,4384
typedef size_t yy_size_t;yy_size_t177,4413
#define EOB_ACT_CONTINUE_SCAN EOB_ACT_CONTINUE_SCAN184,4510
#define EOB_ACT_END_OF_FILE EOB_ACT_END_OF_FILE185,4542
#define EOB_ACT_LAST_MATCH EOB_ACT_LAST_MATCH186,4572
    #define YY_LESS_LINENO(YY_LESS_LINENO188,4602
#define yyless(yyless191,4717
#define unput(unput204,5078
#define YY_STRUCT_YY_BUFFER_STATEYY_STRUCT_YY_BUFFER_STATE207,5158
struct yy_buffer_stateyy_buffer_state208,5192
	FILE *yy_input_file;yy_input_file210,5218
	char *yy_ch_buf;		/* input buffer */yy_ch_buf212,5241
	char *yy_buf_pos;		/* current position in input buffer */yy_buf_pos213,5279
	yy_size_t yy_buf_size;yy_buf_size218,5422
	yy_size_t yy_n_chars;yy_n_chars223,5532
	int yy_is_our_buffer;yy_is_our_buffer229,5700
	int yy_is_interactive;yy_is_interactive236,5938
	int yy_at_bol;yy_at_bol242,6105
    int yy_bs_lineno; /**< The line count. */yy_bs_lineno244,6122
    int yy_bs_column; /**< The column count. */yy_bs_column245,6168
	int yy_fill_buffer;yy_fill_buffer250,6303
	int yy_buffer_status;yy_buffer_status252,6325
#define YY_BUFFER_NEW YY_BUFFER_NEW254,6349
#define YY_BUFFER_NORMAL YY_BUFFER_NORMAL255,6373
#define YY_BUFFER_EOF_PENDING YY_BUFFER_EOF_PENDING266,6877
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */yy_buffer_stack_top272,6985
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */yy_buffer_stack_max273,7055
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */yy_buffer_stack274,7121
#define YY_CURRENT_BUFFER YY_CURRENT_BUFFER282,7389
#define YY_CURRENT_BUFFER_LVALUE YY_CURRENT_BUFFER_LVALUE289,7685
static char yy_hold_char;yy_hold_char292,7830
static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */yy_n_chars293,7856
yy_size_t syst_leng;syst_leng294,7933
static char *yy_c_buf_p = (char *) 0;yy_c_buf_p297,8000
static int yy_init = 0;		/* whether we need to initialize */yy_init298,8038
static int yy_start = 0;	/* start state number */yy_start299,8099
static int yy_did_buffer_switch_on_eof;yy_did_buffer_switch_on_eof304,8284
#define YY_FLUSH_BUFFER YY_FLUSH_BUFFER318,8834
#define yy_new_buffer yy_new_buffer328,9197
#define yy_set_interactive(yy_set_interactive330,9240
#define yy_set_bol(yy_set_bol340,9525
#define YY_AT_BOL(YY_AT_BOL350,9777
typedef unsigned char YY_CHAR;YY_CHAR354,9860
FILE *syst_in , *syst_out ;syst_in356,9892
FILE *syst_in , *syst_out ;syst_out356,9892
typedef int yy_state_type;yy_state_type358,9921
int syst_lineno = 1;syst_lineno362,9974
#define yytext_ptr yytext_ptr365,10020
#define YY_DO_BEFORE_ACTION YY_DO_BEFORE_ACTION375,10379
#define YY_NUM_RULES YY_NUM_RULES382,10545
#define YY_END_OF_BUFFER YY_END_OF_BUFFER383,10569
struct yy_trans_infoyy_trans_info386,10678
	flex_int32_t yy_verify;yy_verify388,10702
	flex_int32_t yy_nxt;yy_nxt389,10727
static yyconst flex_int16_t yy_accept[43] =yy_accept391,10753
static yyconst flex_int32_t yy_ec[256] =yy_ec400,11093
static yyconst flex_int32_t yy_meta[24] =yy_meta432,12815
static yyconst flex_int16_t yy_base[48] =yy_base439,13029
static yyconst flex_int16_t yy_def[48] =yy_def448,13397
static yyconst flex_int16_t yy_nxt[110] =yy_nxt457,13764
static yyconst flex_int16_t yy_chk[110] =yy_chk473,14535
static yy_state_type yy_last_accepting_state;yy_last_accepting_state489,15306
static char *yy_last_accepting_cpos;yy_last_accepting_cpos490,15352
int syst__flex_debug = 0;syst__flex_debug493,15419
#define REJECT REJECT498,15548
#define yymore(yymore499,15592
#define YY_MORE_ADJ YY_MORE_ADJ500,15638
#define YY_RESTORE_YY_MORE_OFFSETYY_RESTORE_YY_MORE_OFFSET501,15660
char *syst_text;syst_text502,15694
#define RETURN(RETURN546,16888
#define INITIAL INITIAL553,17050
#define COMMENT COMMENT554,17068
#define TEXT TEXT555,17086
#define YY_EXTRA_TYPE YY_EXTRA_TYPE566,17385
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE632,18598
#define ECHO ECHO640,18816
#define YY_INPUT(YY_INPUT647,19035
#define yyterminate(yyterminate684,19964
#define YY_START_STACK_INCR YY_START_STACK_INCR689,20099
#define YY_FATAL_ERROR(YY_FATAL_ERROR694,20189
#define YY_DECL_IS_OURS YY_DECL_IS_OURS703,20422
#define YY_DECL YY_DECL707,20478
#define YY_USER_ACTIONYY_USER_ACTION714,20663
#define YY_BREAK YY_BREAK719,20756
#define YY_RULE_SETUP YY_RULE_SETUP722,20788
static int yy_get_next_buffer (void)yy_get_next_buffer1076,28820
    static yy_state_type yy_get_previous_state (void)yy_get_previous_state1210,32442
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )yy_try_NUL_trans1242,33343
    static int yyinput (void)yyinput1267,34053
    void syst_restart  (FILE * input_file )syst_restart1344,35832
    void syst__switch_to_buffer  (YY_BUFFER_STATE  new_buffer )syst__switch_to_buffer1361,36211
static void syst__load_buffer_state  (void)syst__load_buffer_state1392,37075
    YY_BUFFER_STATE syst__create_buffer  (FILE * file, int  size )syst__create_buffer1406,37554
    void syst__delete_buffer (YY_BUFFER_STATE  b )syst__delete_buffer1434,38266
    static void syst__init_buffer  (YY_BUFFER_STATE  b, FILE * file )syst__init_buffer1453,38727
    void syst__flush_buffer (YY_BUFFER_STATE  b )syst__flush_buffer1481,39472
void syst_push_buffer_state (YY_BUFFER_STATE new_buffer )syst_push_buffer_state1510,40164
void syst_pop_buffer_state (void)syst_pop_buffer_state1540,40944
static void syst_ensure_buffer_stack (void)syst_ensure_buffer_stack1559,41348
YY_BUFFER_STATE syst__scan_buffer  (char * base, yy_size_t  size )syst__scan_buffer1608,42985
YY_BUFFER_STATE syst__scan_string (yyconst char * yystr )syst__scan_string1645,44076
YY_BUFFER_STATE syst__scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )syst__scan_bytes1658,44502
#define YY_EXIT_FAILURE YY_EXIT_FAILURE1689,45246
static void yy_fatal_error (yyconst char* msg )yy_fatal_error1692,45280
#undef yylessyyless1700,45459
#define yyless(yyless1701,45473
int syst_get_lineno  (void)syst_get_lineno1720,45947
FILE *syst_get_in  (void)syst_get_in1729,46047
FILE *syst_get_out  (void)syst_get_out1737,46137
yy_size_t syst_get_leng  (void)syst_get_leng1745,46243
char *syst_get_text  (void)syst_get_text1754,46342
void syst_set_lineno (int  line_number )syst_set_lineno1763,46464
void syst_set_in (FILE *  in_str )syst_set_in1775,46698
void syst_set_out (FILE *  out_str )syst_set_out1780,46765
int syst_get_debug  (void)syst_get_debug1785,46836
void syst_set_debug (int  bdebug )syst_set_debug1790,46901
static int yy_init_globals (void)yy_init_globals1795,46977
int syst_lex_destroy  (void)syst_lex_destroy1824,47680
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )yy_flex_strncpy1850,48249
static int yy_flex_strlen (yyconst char * s )yy_flex_strlen1859,48410
void *syst_alloc (yy_size_t  size )syst_alloc1869,48527
void *syst_realloc  (void * ptr, yy_size_t  size )syst_realloc1874,48601
void syst_free (void * ptr )syst_free1886,49060
#define YYTABLES_NAME YYTABLES_NAME1891,49160
#define SYMBOLS_SIZE SYMBOLS_SIZE1897,49217
char * sc_internal_symbol_table(char * name)sc_internal_symbol_table1899,49244
int syst_input()syst_input1923,49789
int syst_wrap(void)syst_wrap1929,49841
void sc_init_lex(void)sc_init_lex1937,49929
int syst_error(char *s)syst_error1945,50030

/home/dounia/MYPIPS/prod/linear/src/sc/sc-private.h,0

/home/dounia/MYPIPS/prod/linear/src/sc/sc_gram.c,8424
#define YYBISON YYBISON44,2055
#define YYBISON_VERSION YYBISON_VERSION47,2096
#define YYSKELETON_NAME YYSKELETON_NAME50,2151
#define YYPURE YYPURE53,2206
#define YYPUSH YYPUSH56,2245
#define YYPULL YYPULL59,2284
#define yyparse yyparse63,2354
#define yylex yylex64,2389
#define yyerror yyerror65,2422
#define yylval yylval66,2457
#define yychar yychar67,2491
#define yydebug yydebug68,2525
#define yynerrs yynerrs69,2560
bool syst_syntax_error;syst_syntax_error89,2921
Psysteme ps_yacc;ps_yacc91,2946
Value fac;        /* facteur multiplicatif suivant qu'on analyse un terme*/fac93,2965
int sens;       /* indique le sens de l'inegalitesens96,3117
short int cote; /* booleen indiquant quel membre est en cours d'analyse*/cote99,3277
Value b1, b2; /* element du vecteur colonne du systeme donne par l'analyse*/b1101,3352
Value b1, b2; /* element du vecteur colonne du systeme donne par l'analyse*/b2101,3352
Pcontrainte eq;   /* pointeur sur l'egalite ou l'inegaliteeq104,3467
short int operat;    /* dernier operateur rencontre                 */operat109,3648
#define OPINF OPINF114,3762
#define OPINFEGAL OPINFEGAL115,3778
#define OPEGAL OPEGAL116,3798
#define OPSUPEGAL OPSUPEGAL117,3815
#define OPSUP OPSUP118,3835
#define DROIT DROIT119,3851
#define GAUCHE GAUCHE120,3867
#   define YY_NULL YY_NULL128,4022
#   define YY_NULL YY_NULL130,4057
# undef YYERROR_VERBOSEYYERROR_VERBOSE136,4159
# define YYERROR_VERBOSE YYERROR_VERBOSE137,4183
# define YYERROR_VERBOSE YYERROR_VERBOSE139,4216
# define SYST_Y_TAB_HSYST_Y_TAB_H145,4365
# define YYDEBUG YYDEBUG148,4427
# define YYTOKENTYPEYYTOKENTYPE156,4531
   enum yytokentype {yytokentype159,4655
     ACCFERM = 258,ACCFERM160,4677
     ACCOUVR = 259,ACCOUVR161,4697
     CONSTANTE = 260,CONSTANTE162,4717
     EGAL = 261,EGAL163,4739
     IDENT = 262,IDENT164,4756
     INF = 263,INF165,4774
     INFEGAL = 264,INFEGAL166,4790
     MOINS = 265,MOINS167,4810
     PLUS = 266,PLUS168,4828
     SUP = 267,SUP169,4845
     SUPEGAL = 268,SUPEGAL170,4861
     VAR = 269,VAR171,4881
     VIRG = 270VIRG172,4897
#define ACCFERM ACCFERM176,4941
#define ACCOUVR ACCOUVR177,4961
#define CONSTANTE CONSTANTE178,4981
#define EGAL EGAL179,5003
#define IDENT IDENT180,5020
#define INF INF181,5038
#define INFEGAL INFEGAL182,5054
#define MOINS MOINS183,5074
#define PLUS PLUS184,5092
#define SUP SUP185,5109
#define SUPEGAL SUPEGAL186,5125
#define VAR VAR187,5145
#define VIRG VIRG188,5161
typedef union YYSTYPEYYSTYPE193,5236
    Value Value;Value198,5308
    Variable Variable;Variable199,5325
} YYSTYPE;YYSTYPE204,5396
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL205,5407
# define yystype yystype206,5437
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED207,5499
# undef shortshort234,5997
typedef YYTYPE_UINT8 yytype_uint8;yytype_uint8238,6039
typedef unsigned char yytype_uint8;yytype_uint8240,6080
typedef YYTYPE_INT8 yytype_int8;yytype_int8244,6143
typedef signed char yytype_int8;yytype_int8247,6276
typedef short int yytype_int8;yytype_int8249,6315
typedef YYTYPE_UINT16 yytype_uint16;yytype_uint16253,6375
typedef unsigned short int yytype_uint16;yytype_uint16255,6418
typedef YYTYPE_INT16 yytype_int16;yytype_int16259,6488
typedef short int yytype_int16;yytype_int16261,6529
#  define YYSIZE_T YYSIZE_T266,6608
#  define YYSIZE_T YYSIZE_T268,6663
#  define YYSIZE_T YYSIZE_T272,6869
#  define YYSIZE_T YYSIZE_T274,6902
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM278,6950
#   define YY_(YY_284,7120
#  define YY_(YY_288,7206
# define YYUSE(YYUSE294,7343
# define YYUSE(YYUSE296,7380
# define YYID(YYID301,7510
YYID (int yyi)YYID306,7646
#    define YYSTACK_ALLOC YYSTACK_ALLOC324,7926
#    define YYSTACK_ALLOC YYSTACK_ALLOC328,8089
#    define alloca alloca331,8209
#    define YYSTACK_ALLOC YYSTACK_ALLOC333,8245
#      define EXIT_SUCCESS EXIT_SUCCESS339,8572
#  define YYSTACK_FREE(YYSTACK_FREE348,8722
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM354,9119
#  define YYSTACK_ALLOC YYSTACK_ALLOC357,9201
#  define YYSTACK_FREE YYSTACK_FREE358,9234
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM360,9296
#    define EXIT_SUCCESS EXIT_SUCCESS367,9586
#   define YYMALLOC YYMALLOC371,9651
#   define YYFREE YYFREE378,9921
union yyallocyyalloc393,10407
  yytype_int16 yyss_alloc;yyss_alloc395,10423
  YYSTYPE yyvs_alloc;yyvs_alloc396,10450
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM400,10551
# define YYSTACK_BYTES(YYSTACK_BYTES404,10699
# define YYCOPY_NEEDED YYCOPY_NEEDED408,10814
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE415,11123
#   define YYCOPY(YYCOPY433,11674
#   define YYCOPY(YYCOPY436,11780
#define YYFINAL YYFINAL449,12256
#define YYLAST YYLAST451,12315
#define YYNTOKENS YYNTOKENS454,12377
#define YYNNTS YYNNTS456,12440
#define YYNRULES YYNRULES458,12495
#define YYNSTATES YYNSTATES460,12553
#define YYUNDEFTOK YYUNDEFTOK463,12649
#define YYMAXUTOK YYMAXUTOK464,12671
#define YYTRANSLATE(YYTRANSLATE466,12696
static const yytype_uint8 yytranslate[] =yytranslate470,12872
static const yytype_uint8 yyprhs[] =yyprhs505,14996
static const yytype_int8 yyrhs[] =yyrhs514,15352
static const yytype_uint16 yyrline[] =yyrline528,16084
static const char *const yytname[] =yytname540,16564
static const yytype_uint16 yytoknum[] =yytoknum553,17083
static const yytype_uint8 yyr1[] =yyr1561,17321
static const yytype_uint8 yyr2[] =yyr2570,17695
static const yytype_uint8 yydefact[] =yydefact581,18172
static const yytype_int8 yydefgoto[] =yydefgoto591,18568
#define YYPACT_NINF YYPACT_NINF599,18843
static const yytype_int8 yypact[] =yypact600,18867
static const yytype_int8 yypgoto[] =yypgoto610,19258
#define YYTABLE_NINF YYTABLE_NINF619,19643
static const yytype_int8 yytable[] =yytable620,19668
#define yypact_value_is_default(yypact_value_is_default628,19960
#define yytable_value_is_error(yytable_value_is_error631,20027
static const yytype_int8 yycheck[] =yycheck634,20087
static const yytype_uint8 yystos[] =yystos644,20476
#define yyerrok	yyerrok653,20841
#define yyclearin	yyclearin654,20876
#define YYEMPTY	YYEMPTY655,20913
#define YYEOF	YYEOF656,20935
#define YYACCEPT	YYACCEPT658,20953
#define YYABORT	YYABORT659,20987
#define YYERROR	YYERROR660,21020
#define YYFAIL	YYFAIL670,21419
#define YYRECOVERING(YYRECOVERING678,21739
#define YYBACKUP(YYBACKUP680,21780
#define YYTERROR	YYTERROR698,22684
#define YYERRCODE	YYERRCODE699,22703
# define YYLLOC_DEFAULT(YYLLOC_DEFAULT706,22931
#define YYRHSLOC(YYRHSLOC725,24144
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT732,24267
# define YYLEX YYLEX739,24403
# define YYLEX YYLEX741,24444
#  define YYFPRINTF YYFPRINTF749,24602
# define YYDPRINTF(YYDPRINTF752,24639
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT758,24746
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_value_print778,25288
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_print812,25995
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)yy_stack_print838,26841
# define YY_STACK_PRINT(YY_STACK_PRINT855,27202
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)yy_reduce_print869,27612
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT893,28216
int yydebug;yydebug901,28445
# define YYDPRINTF(YYDPRINTF903,28479
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT904,28504
# define YY_STACK_PRINT(YY_STACK_PRINT905,28559
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT906,28596
# define YYINITDEPTH YYINITDEPTH912,28730
# define YYMAXDEPTH YYMAXDEPTH923,29086
#   define yystrlen yystrlen931,29205
yystrlen (const char *yystr)yystrlen937,29389
#   define yystpcpy yystpcpy954,29684
yystpcpy (char *yydest, const char *yysrc)yystpcpy961,29920
yytnamerr (char *yyres, const char *yystr)yytnamerr989,30661
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,yysyntax_error1037,31690
# define YYCASE_(YYCASE_1116,35261
# undef YYCASE_YYCASE_1126,35812
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)yydestruct1173,37022
int yychar;yychar1200,37417
YYSTYPE yylval;yylval1203,37481
int yynerrs;yynerrs1206,37537
yyparse (void *YYPARSE_PARAM)yyparse1217,37718
#define YYPOPSTACK(YYPOPSTACK1273,38986

/home/dounia/MYPIPS/prod/linear/src/sc/sc_misc.c,437
sc_restricted_to_variables_transitive_closure(sc_restricted_to_variables_transitive_closure64,2049
bool sc_constrains_variable_p(Psysteme sc, Variable var, bool is_equations_p)sc_constrains_variable_p177,5244
bool sc_equations_constrain_variable_p(Psysteme sc, Variable var)sc_equations_constrain_variable_p190,5627
bool sc_inequalities_constrain_variable_p(Psysteme sc, Variable var)sc_inequalities_constrain_variable_p195,5748

/home/dounia/MYPIPS/prod/linear/src/sc/sc_gram.y,691
system	: inisys defvar ACCOUVR l_eq virg_opt ACCFERMsystem102,2694
inisys	:inisys105,2751
defvar	: VAR l_vardefvar114,2997
l_var	: newidl_var123,3191
l_eq	: eql_eq127,3233
eq	: debeq multi_membre op membre fin_mult_membre feqeq132,3266
debeq	:debeq135,3324
feq     :{ feq148,3493
membre	: addop terme membre154,3560
terme	: const ident terme159,3637
ident	: IDENT { $$ = rec_ident(ps_yacc, $1); }ident193,4613
newid	: IDENT	{ new_ident(ps_yacc,$1); }newid196,4664
const	: CONSTANTEconst202,4820
op	: INFop208,4866
addop	: PLUSaddop241,5677
multi_membre : membremulti_membre247,5762
fin_mult_membre :fin_mult_membre251,5854
virg_opt : VIRGvirg_opt282,6764

/home/dounia/MYPIPS/prod/linear/src/sc/sc_build_sc_nredund.c,957
bool ineq_redund_with_sc_p(sc, ineq)ineq_redund_with_sc_p59,1855
bool eq_redund_with_sc_p(sc, eq)eq_redund_with_sc_p99,2642
Psysteme extract_nredund_subsystem(s1, s2)extract_nredund_subsystem127,3187
void build_sc_nredund_1pass_ofl_ctrl(psc, ofl_ctrl)build_sc_nredund_1pass_ofl_ctrl190,5187
void sc_safe_build_sc_nredund_1pass(ps)sc_safe_build_sc_nredund_1pass243,6560
void build_sc_nredund_1pass(ps)build_sc_nredund_1pass269,7258
void build_sc_nredund_2pass_ofl_ctrl(psc,ofl_ctrl)build_sc_nredund_2pass_ofl_ctrl275,7369
void sc_safe_build_sc_nredund_2pass(ps)sc_safe_build_sc_nredund_2pass309,8239
void build_sc_nredund_2pass(Psysteme volatile *psc)build_sc_nredund_2pass331,8619
static bool sc_elim_triang_integer_redund_constraint_psc_elim_triang_integer_redund_constraint_p349,9169
Psysteme build_integer_sc_nredund(build_integer_sc_nredund432,11652
bool bound_redund_with_sc_p(sc,ineq1,ineq2,var)bound_redund_with_sc_p535,14994

/home/dounia/MYPIPS/prod/linear/src/sc/sc.h,2561
#define  sc_header_includedsc_header_included7,212
#define SYSTEME SYSTEME54,1725
typedef struct Ssysteme { Ssysteme76,2633
	Pcontrainte egalites;egalites77,2660
	Pcontrainte inegalites;inegalites78,2683
	int nb_eq;nb_eq79,2708
	int nb_ineq;nb_ineq80,2720
	int dimension;dimension81,2734
	Pbase base;base82,2750
} *Psysteme,Ssysteme;Psysteme83,2763
} *Psysteme,Ssysteme;Ssysteme83,2763
#define get_sc_debug_level(get_sc_debug_level156,6526
#define ifscdebug(ifscdebug157,6570
#define sc_nbre_egalites(sc_nbre_egalites161,6635
#define sc_nbre_inegalites(sc_nbre_inegalites162,6680
#define sc_egalites(sc_egalites163,6729
#define sc_inegalites(sc_inegalites164,6772
#define sc_base(sc_base165,6819
#define sc_dimension(sc_dimension166,6854
#define sc_add_eg(sc_add_eg178,7146
#define sc_add_ineg(sc_add_ineg179,7190
#define SC_EMPTY SC_EMPTY186,7409
#define SC_EMPTY_P(SC_EMPTY_P187,7444
#define SC_RN SC_RN196,7828
#define SC_RN_P(SC_RN_P197,7860
#define SC_UNDEFINED SC_UNDEFINED201,7964
#define SC_UNDEFINED_P(SC_UNDEFINED_P202,8003
#define NB_INEQ_MAX1 NB_INEQ_MAX1207,8220
#define NB_INEQ_MAX2 NB_INEQ_MAX2212,8413
#define sc_faisabilite(sc_faisabilite217,8544
#define sc_faisabilite_ofl(sc_faisabilite_ofl218,8629
#define sc_feasible_ofl(sc_feasible_ofl220,8722
#define sc_elim_redond(sc_elim_redond221,8807
#define sc_triang_elim_redond(sc_triang_elim_redond222,8855
#define sc_rm_empty_constraints(sc_rm_empty_constraints223,8917
#define sc_kill_db_eg(sc_kill_db_eg224,8992
#define sc_safe_kill_db_eg(sc_safe_kill_db_eg225,9048
#define non_redundent_subsystem(non_redundent_subsystem226,9114
#define sc_nredund_ofl(sc_nredund_ofl227,9194
#define sc_nredund_optim(sc_nredund_optim228,9275
#define sc_nredund(sc_nredund229,9336
#define sc_projection_on_list_of_variables(sc_projection_on_list_of_variables230,9391
#define combiner(combiner232,9490
#define combiner_ofl(combiner_ofl234,9600
#define exact_combiner_ofl(exact_combiner_ofl236,9715
#define eq_v_min_coeff(eq_v_min_coeff238,9838
#define sc_projection_ofl_with_eq(sc_projection_ofl_with_eq239,9919
#define cond_suff_comb_integer(cond_suff_comb_integer241,10040
#define cond_suff_comb_integer_ofl(cond_suff_comb_integer_ofl243,10157
#define sc_projection_int_along_vecteur(sc_projection_int_along_vecteur245,10279
#define integer_projection(integer_projection247,10420
typedef int (*two_int_infop)[2];two_int_infop250,10514
typedef int (* constraint_cmp_func_t)constraint_cmp_func_t252,10548

/home/dounia/MYPIPS/prod/linear/src/sc/sc_oppose.c,41
Psysteme sc_oppose(ps)sc_oppose58,1731

/home/dounia/MYPIPS/prod/linear/src/sc/sc_simplex_feasibility_mulprec.c,121
bool sc_simplex_feasibility_ofl_ctrl_mulprec(Psysteme sys, int ofl_ctrl)sc_simplex_feasibility_ofl_ctrl_mulprec51,1434

/home/dounia/MYPIPS/prod/linear/src/sc/sc_elim_redund.c,216
Psysteme sc_inequations_elim_redund(Psysteme ps)sc_inequations_elim_redund63,1939
Psysteme sc_elim_redund(Psysteme ps)sc_elim_redund100,3000
Psysteme sc_safe_elim_redund(Psysteme ps)sc_safe_elim_redund125,3533

/home/dounia/MYPIPS/prod/linear/src/sc/sc_elim_simple_redund.c,596
bool sc_elim_simple_redund_with_eq(ps,eg)sc_elim_simple_redund_with_eq69,2406
bool sc_elim_simple_redund_with_ineq(ps,ineg)sc_elim_simple_redund_with_ineq130,4693
int sc_check_inequality_redundancy(Pcontrainte ineq, Psysteme ps)sc_check_inequality_redundancy175,5891
void sc_elim_empty_constraints(ps, process_equalities)sc_elim_empty_constraints232,7381
Psysteme sc_elim_db_constraints(ps)sc_elim_db_constraints317,9834
Psysteme sc_safe_elim_db_constraints(Psysteme ps)sc_safe_elim_db_constraints370,11029
Psysteme sc_elim_double_constraints(ps)sc_elim_double_constraints529,15440

/home/dounia/MYPIPS/prod/linear/src/sc/sc_alloc.c,888
#define MALLOC(MALLOC42,1057
Psysteme sc_new(void)sc_new55,1548
Pbase sc_to_minimal_basis(Psysteme ps)sc_to_minimal_basis76,1977
void sc_creer_base(ps)sc_creer_base129,3512
void sc_fix(Psysteme s)sc_fix141,3751
Pbase sc_base_dup(nbv,b)sc_base_dup162,4375
Psysteme sc_dup(Psysteme ps)sc_dup176,4593
Psysteme sc_copy(Psysteme ps)sc_copy230,5963
void sc_rm(ps)sc_rm277,7138
Psysteme sc_init_with_sc(sc)sc_init_with_sc303,7633
Psysteme sc_empty(b)sc_empty319,8034
Psysteme sc_rn(b)sc_rn336,8442
bool sc_empty_p(sc)sc_empty_p350,8776
bool sc_rn_p(sc)sc_rn_p369,9206
void sc_add_egalite(Psysteme p, Pcontrainte e)sc_add_egalite389,9944
void sc_add_inegalite(Psysteme p, Pcontrainte i)sc_add_inegalite406,10426
void sc_add_egalites(Psysteme p, Pcontrainte i)sc_add_egalites415,10575
void sc_add_inegalites(Psysteme p, Pcontrainte i)sc_add_inegalites432,11006

/home/dounia/MYPIPS/prod/linear/src/sc/sc_eval.c,568
#define HUGE HUGE45,1077
static bool huge_system(Psysteme ps)huge_system46,1094
bool sc_value_of_variable(ps, var, pval)sc_value_of_variable70,2064
bool sc_minmax_of_variable(ps, var, pmin, pmax)sc_minmax_of_variable143,3579
void sc_minmax_of_variables(ps1,ps2,b)sc_minmax_of_variables212,5408
void sc_force_variable_to_zero(ps, var)sc_force_variable_to_zero251,6417
sc_minmax_of_variable2(volatile Psysteme ps,sc_minmax_of_variable2330,8788
#define level level334,8971
#define if_debug_sc_minmax_of_variable2 if_debug_sc_minmax_of_variable2336,8990

/home/dounia/MYPIPS/prod/linear/src/sc/sc_debug.c,6030
#define SC_DEBUG_LEVEL SC_DEBUG_LEVEL46,1160
#define SC_SWITCH_HEURISTIC_FLAG SC_SWITCH_HEURISTIC_FLAG47,1200
#define FLAG_CONTROL_DIMENSION_CONVEX_HULL FLAG_CONTROL_DIMENSION_CONVEX_HULL58,1509
#define FLAG_CONTROL_NUMBER_CONSTRAINTS_CONVEX_HULL FLAG_CONTROL_NUMBER_CONSTRAINTS_CONVEX_HULL59,1584
#define FLAG_CONTROL_DIMENSION_PROJECTION FLAG_CONTROL_DIMENSION_PROJECTION60,1677
#define FLAG_CONTROL_NUMBER_CONSTRAINTS_PROJECTION FLAG_CONTROL_NUMBER_CONSTRAINTS_PROJECTION61,1750
#define FLAG_FILTERING_TIMEOUT_JANUS FLAG_FILTERING_TIMEOUT_JANUS65,1926
#define FLAG_FILTERING_TIMEOUT_LINEAR_SIMPLEX FLAG_FILTERING_TIMEOUT_LINEAR_SIMPLEX66,1989
#define FLAG_FILTERING_TIMEOUT_FM FLAG_FILTERING_TIMEOUT_FM67,2070
#define FLAG_FILTERING_TIMEOUT_CONVEX_HULL FLAG_FILTERING_TIMEOUT_CONVEX_HULL68,2127
#define FLAG_FILTERING_TIMEOUT_PROJECTION FLAG_FILTERING_TIMEOUT_PROJECTION69,2202
#define FLAG_FILTERING_DIMENSION_FEASIBILITY FLAG_FILTERING_DIMENSION_FEASIBILITY72,2356
#define FLAG_FILTERING_NUMBER_CONSTRAINTS_FEASIBILITY FLAG_FILTERING_NUMBER_CONSTRAINTS_FEASIBILITY73,2435
#define FLAG_FILTERING_DENSITY_FEASIBILITY FLAG_FILTERING_DENSITY_FEASIBILITY74,2532
#define FLAG_FILTERING_MAGNITUDE_FEASIBILITY FLAG_FILTERING_MAGNITUDE_FEASIBILITY75,2607
#define FLAG_FILTERING_DIMENSION_PROJECTION FLAG_FILTERING_DIMENSION_PROJECTION77,2687
#define FLAG_FILTERING_NUMBER_CONSTRAINTS_PROJECTION FLAG_FILTERING_NUMBER_CONSTRAINTS_PROJECTION78,2764
#define FLAG_FILTERING_DENSITY_PROJECTION FLAG_FILTERING_DENSITY_PROJECTION79,2859
#define FLAG_FILTERING_MAGNITUDE_PROJECTION FLAG_FILTERING_MAGNITUDE_PROJECTION80,2932
#define FLAG_FILTERING_DIMENSION_CONVEX_HULL FLAG_FILTERING_DIMENSION_CONVEX_HULL82,3010
#define FLAG_FILTERING_NUMBER_CONSTRAINTS_CONVEX_HULL FLAG_FILTERING_NUMBER_CONSTRAINTS_CONVEX_HULL83,3089
#define FLAG_FILTERING_DENSITY_CONVEX_HULL FLAG_FILTERING_DENSITY_CONVEX_HULL84,3186
#define FLAG_FILTERING_MAGNITUDE_CONVEX_HULL FLAG_FILTERING_MAGNITUDE_CONVEX_HULL85,3261
int sc_debug_level = 0;sc_debug_level89,3349
int sc_switch_heuristic_flag = 0;sc_switch_heuristic_flag90,3373
int filtering_timeout_J = 0;filtering_timeout_J94,3426
int filtering_timeout_S = 0;filtering_timeout_S95,3455
int filtering_timeout_FM = 0;filtering_timeout_FM96,3484
int filtering_timeout_CH = 0;filtering_timeout_CH97,3514
int filtering_timeout_projection = 0;filtering_timeout_projection98,3544
int filtering_dimension_feasibility = 0;filtering_dimension_feasibility100,3583
int filtering_number_constraints_feasibility = 0;filtering_number_constraints_feasibility101,3624
int filtering_density_feasibility = 0;filtering_density_feasibility102,3674
long int filtering_magnitude_feasibility = 0;// need to cast to Valuefiltering_magnitude_feasibility103,3713
int filtering_dimension_projection = 0;filtering_dimension_projection105,3784
int filtering_number_constraints_projection = 0;filtering_number_constraints_projection106,3824
int filtering_density_projection = 0;filtering_density_projection107,3873
long int filtering_magnitude_projection = 0;// need to cast to Valuefiltering_magnitude_projection108,3911
int filtering_dimension_convex_hull = 0;filtering_dimension_convex_hull110,3981
int filtering_number_constraints_convex_hull = 0;filtering_number_constraints_convex_hull111,4022
int filtering_density_convex_hull = 0;filtering_density_convex_hull112,4072
long int filtering_magnitude_convex_hull = 0;// need to cast to Valuefiltering_magnitude_convex_hull113,4111
void set_sc_debug_level(int l)set_sc_debug_level121,4345
static void set_sc_switch_heuristic_flag(int l)set_sc_switch_heuristic_flag126,4407
static void set_filtering_timeout_J(int l)set_filtering_timeout_J135,4527
static void set_filtering_timeout_S(int l)set_filtering_timeout_S139,4601
static void set_filtering_timeout_FM(int l)set_filtering_timeout_FM143,4679
static void set_filtering_timeout_convex_hull(int l)set_filtering_timeout_convex_hull147,4758
static void set_filtering_timeout_projection(int l)set_filtering_timeout_projection151,4846
static void set_filtering_dimension_feasibility(int l)set_filtering_dimension_feasibility158,5010
static void set_filtering_number_constraints_feasibility(int l)set_filtering_number_constraints_feasibility162,5109
static void set_filtering_density_feasibility(int l)set_filtering_density_feasibility166,5226
static void set_filtering_magnitude_feasibility(long int l)set_filtering_magnitude_feasibility170,5321
static void set_filtering_dimension_projection(int l)set_filtering_dimension_projection175,5426
static void set_filtering_number_constraints_projection(int l)set_filtering_number_constraints_projection179,5523
static void set_filtering_density_projection(int l)set_filtering_density_projection183,5638
static void set_filtering_magnitude_projection(long int l)set_filtering_magnitude_projection187,5731
static void set_filtering_dimension_convex_hull(int l)set_filtering_dimension_convex_hull192,5834
static void set_filtering_number_constraints_convex_hull(int l)set_filtering_number_constraints_convex_hull196,5933
static void set_filtering_density_convex_hull(int l)set_filtering_density_convex_hull200,6050
static void set_filtering_magnitude_convex_hull(long int l)set_filtering_magnitude_convex_hull204,6145
typedef char * (*var_name_t)(Variable);var_name_t211,6335
static var_name_t * var_name_stack = NULL;var_name_stack213,6376
static int var_name_stack_index = 0; /* next available chunck */var_name_stack_index214,6419
static int var_name_stack_size = 0;var_name_stack_size215,6484
void sc_variable_name_push(char * (*fun)(Variable))sc_variable_name_push217,6521
static void sc_variable_name_init(void)sc_variable_name_init228,6819
void sc_variable_name_pop(void)sc_variable_name_pop239,7082
char * default_variable_to_string(Variable v)default_variable_to_string245,7179
void initialize_sc(char *(*var_to_string)(Variable))initialize_sc253,7400

/home/dounia/MYPIPS/prod/linear/src/sc/sc_simplex_feasibility_fixprec.c,4719
static int NB_EQ = 0;NB_EQ53,1599
static int NB_INEQ = 0;NB_INEQ54,1621
#define DEBUG(DEBUG61,1795
#undef DEBUGDEBUG63,1826
#define DEBUG(DEBUG64,1839
#define DEBUG1(DEBUG168,1891
#undef DEBUG1DEBUG170,1923
#define DEBUG1(DEBUG171,1937
#define DEBUG2(DEBUG275,1990
#undef DEBUG2DEBUG277,2022
#define DEBUG2(DEBUG278,2036
#define DEBUG3(DEBUG382,2089
#undef DEBUG3DEBUG384,2121
#define DEBUG3(DEBUG385,2135
#define CONTROLING_TIMEOUT_SIMPLEX CONTROLING_TIMEOUT_SIMPLEX91,2212
control_catch_alarm_Simplex (int sig)control_catch_alarm_Simplex94,2262
  PTR_NIL = INTPTR_MIN+767,PTR_NIL105,2504
  INFINI = INTPTR_MAX-767,INFINI106,2532
  MAX_VAR = 1971, /* nombre max de variables */MAX_VAR107,2559
  MAXVAL = 576,MAXVAL111,2703
#define DIMENSION DIMENSION118,2753
#define NUMERO NUMERO119,2785
#define SOLUBLE(SOLUBLE120,2820
#define CREVARVISIBLE CREVARVISIBLE121,2867
#define CREVARCACHEE CREVARCACHEE122,2923
#define tag(tag127,3093
#define G(G136,3352
#define GCD(GCD149,3614
#define GCDZZN(GCDZZN172,4757
#define GCD_ZERO_CTRL(GCD_ZERO_CTRL181,4974
#define SIMPL(SIMPL197,5556
#define SIMPLIFIE(SIMPLIFIE213,5971
#define AFF(AFF224,6217
#define AFF_PX(AFF_PX225,6288
#define INV(INV226,6338
#define INV_ZERO_CTRL(INV_ZERO_CTRL232,6606
#define METINFINI(METINFINI235,6773
#define MET_ZERO(MET_ZERO236,6831
#define MET_UN(MET_UN237,6889
#define EGAL1(EGAL1239,6948
#define EGAL0(EGAL0240,6989
#define NUL(NUL241,7028
#define NEGATIF(NEGATIF243,7066
#define POSITIF(POSITIF247,7191
#define SUP1(SUP1251,7316
#define EGAL_MACRO(EGAL_MACRO255,7495
#define INF_MACRO(INF_MACRO266,8000
#define DIV_MACRO(DIV_MACRO292,8713
#define MUL_MACRO(MUL_MACRO317,9226
#define SUB_MACRO(SUB_MACRO331,9528
#define FULL_PIVOT_MACRO_SIOUX(FULL_PIVOT_MACRO_SIOUX361,10587
#define FULL_PIVOT_MACRO_DIRECT(FULL_PIVOT_MACRO_DIRECT377,11200
#define direct_p(direct_p393,11727
#define FULL_PIVOT_MACRO(FULL_PIVOT_MACRO398,11896
#define PARTIAL_PIVOT_MACRO_SIOUX(PARTIAL_PIVOT_MACRO_SIOUX413,12271
#define PARTIAL_PIVOT_MACRO_DIRECT(PARTIAL_PIVOT_MACRO_DIRECT421,12522
#define PARTIAL_PIVOT_MACRO(PARTIAL_PIVOT_MACRO431,12809
#define PIVOT_MACRO(PIVOT_MACRO449,13314
#undef value_protected_multvalue_protected_mult482,14845
#define value_protected_mult(value_protected_mult483,14873
#define MULT(MULT488,15033
#define MULTOFL(MULTOFL489,15075
#define DIV(DIV491,15131
#define DIVOFL(DIVOFL492,15178
#define MUL(MUL494,15239
#define MULOFL(MULOFL495,15286
#define SUB(SUB497,15347
#define SUBOFL(SUBOFL498,15394
#define PIVOT(PIVOT500,15455
#define PIVOTOFL(PIVOTOFL501,15514
#define EGAL(EGAL503,15587
#define EGALOFL(EGALOFL504,15632
#define INF(INF506,15691
#define INFOFL(INFOFL507,15734
static frac frac0={(Value)0,(Value)1,0} ;frac0508,15790
    Variable nom;nom515,15886
    int numero; numero516,15904
    int hash ;hash517,15921
    Value val ;val518,15936
    intptr_t succ ;succ519,15952
} hashtable_t;hashtable_t520,15972
void frac_init(frac *f, int n)frac_init523,15989
void frac_simpl(Value  *a,Value *b)frac_simpl533,16134
void frac_simplifie(frac *f)frac_simplifie553,16648
void frac_div(frac *x,frac y,frac z, bool ofl_ctrl)frac_div567,16877
void  frac_mul(frac *x,frac y,frac z, bool ofl_ctrl)frac_mul598,17463
void frac_sub(frac *X,frac A,frac B, bool ofl_ctrl)frac_sub615,17865
void full_pivot_sioux(frac *X,frac A,frac B,frac C,frac D,bool ofl_ctrl)full_pivot_sioux652,18825
void full_pivot_direct(frac *X,frac A,frac B,frac C,frac D,bool ofl_ctrl)full_pivot_direct681,19741
void  full_pivot(frac *X,frac A,frac B,frac C,frac D,bool ofl_ctrl)full_pivot710,20822
void partial_pivot_sioux(frac *X,frac B,frac C,frac D,bool ofl_ctrl)partial_pivot_sioux726,21148
void partial_pivot_direct(frac *X,frac B,frac C,frac D,bool ofl_ctrl)partial_pivot_direct736,21427
void  partial_pivot(frac *X,frac B,frac C,frac D,bool ofl_ctrl)partial_pivot755,22029
void  pivot(frac *X,frac A,frac B,frac C,frac D,bool ofl_ctrl)pivot770,22284
dump_hashtable(hashtable_t hashtable[]) {dump_hashtable813,23526
static int nbvariables, variablescachees[MAX_VAR], variables[MAX_VAR] ; nbvariables830,24118
static int nbvariables, variablescachees[MAX_VAR], variables[MAX_VAR] ; variablescachees830,24118
static int nbvariables, variablescachees[MAX_VAR], variables[MAX_VAR] ; variables830,24118
static void printfrac(frac x) {printfrac832,24192
dump_tableau(char *msg, tableau *t, int colonnes) {dump_tableau839,24360
static int hash(Variable s) hash867,25264
sc_simplex_feasibility_ofl_ctrl_fixprec(sc_simplex_feasibility_ofl_ctrl_fixprec888,25786

/home/dounia/MYPIPS/prod/linear/src/sc/sc_normalize.c,4064
static void negate_value_interval(Value * pmin, Value * pmax)negate_value_interval50,1297
static void swap_values(Value * p1, Value * p2)swap_values57,1441
static void swap_value_intervals(Value * px_min, Value * px_max,swap_value_intervals64,1535
static void update_lower_or_upper_bound(Pvecteur * bound_p,update_lower_or_upper_bound122,3887
static bool update_lower_and_upper_bounds(Pvecteur * ubound_p,update_lower_and_upper_bounds169,5212
simplify_constraint_with_bounding_box(Pcontrainte eq,simplify_constraint_with_bounding_box251,7662
static Pvecteur compute_x_and_y_bounds(compute_x_and_y_bounds327,10345
static bool eligible_for_coefficient_reduction_with_bounding_box_p(Pvecteur v,eligible_for_coefficient_reduction_with_bounding_box_p462,14208
static bool small_slope_and_first_quadrant_p(Pvecteur v)small_slope_and_first_quadrant_p531,16394
new_constraint_for_coefficient_reduction_with_bounding_box(Pvecteur v,new_constraint_for_coefficient_reduction_with_bounding_box572,17515
static Pvecteur vect_make_line(Variable x, Variable y,vect_make_line671,20193
static bool find_first_integer_point_in_between(Value x0,find_first_integer_point_in_between705,21362
static bool find_integer_point_to_the_right(Value x0,find_integer_point_to_the_right865,26006
static bool find_integer_point_to_the_left(Value x0,find_integer_point_to_the_left879,26382
static Value eval_2D_vecteur(Pvecteur v, Variable x, Variable y, Value xv, Value yv)eval_2D_vecteur894,26810
Pcontrainte build_convex_constraints_from_vertices(Variable x, Variable y,build_convex_constraints_from_vertices916,27482
Pcontrainte find_intermediate_constraints_recursively(Pvecteur v,find_intermediate_constraints_recursively995,30244
Pcontrainte find_intermediate_constraints(Pvecteur v, Variable x, Variable y,find_intermediate_constraints1091,33679
small_positive_slope_reduce_coefficients_with_bounding_box(Pvecteur v,small_positive_slope_reduce_coefficients_with_bounding_box1205,37697
static void update_coefficient_signs_in_vector(Pvecteur v, int cb,update_coefficient_signs_in_vector1429,45424
static void update_coefficient_signs_in_constraints(Pcontrainte eq, int cb,update_coefficient_signs_in_constraints1444,45806
static void check_coefficient_reduction(Pvecteur v, Pcontrainte ineq,check_coefficient_reduction1466,46481
#define MAX_NUMBER_OF_CONSTRAINTS MAX_NUMBER_OF_CONSTRAINTS1477,46845
static Pcontrainte reduce_coefficients_with_bounding_box(Pvecteur v,reduce_coefficients_with_bounding_box1569,49780
Psysteme add_bounding_box_constraints(Psysteme ps, Pbase cb, Pbase lb, Pbase ub,add_bounding_box_constraints1627,51633
Psysteme sc_bounded_normalization(Psysteme ps)sc_bounded_normalization1767,57668
Psysteme sc_normalize(Psysteme ps)sc_normalize2152,70298
Psysteme sc_normalize2(sc_normalize22274,74300
Psysteme sc_add_normalize_eq(ps, eq)sc_add_normalize_eq2407,78227
Psysteme sc_add_normalize_ineq(ps, ineq)sc_add_normalize_ineq2435,78638
Psysteme sc_safe_normalize(ps)sc_safe_normalize2468,79230
static Psysteme sc_rational_feasibility(Psysteme sc)sc_rational_feasibility2476,79319
Psysteme sc_strong_normalize(Psysteme ps)sc_strong_normalize2512,80566
Psysteme sc_strong_normalize3(Psysteme ps)sc_strong_normalize32521,80740
Psysteme sc_strong_normalize_and_check_feasibility(sc_strong_normalize_and_check_feasibility2535,81016
Psysteme sc_strong_normalize2(volatile Psysteme ps)sc_strong_normalize22825,89067
#define if_debug_sc_strong_normalize_2 if_debug_sc_strong_normalize_22828,89122
Psysteme sc_strong_normalize4(Psysteme ps, char * (*variable_name)(Variable))sc_strong_normalize43013,93800
Psysteme sc_strong_normalize5(Psysteme ps, char * (*variable_name)(Variable))sc_strong_normalize53028,94145
sc_strong_normalize_and_check_feasibility2(sc_strong_normalize_and_check_feasibility23064,95360
#define if_debug_sc_strong_normalize_and_check_feasibility2 if_debug_sc_strong_normalize_and_check_feasibility23071,95524
void sc_gcd_normalize(Psysteme ps)sc_gcd_normalize3337,102992

/home/dounia/MYPIPS/prod/linear/src/sc/sc_feasibility.c,2991
#define EXCEPTION_PRINT_LINEAR_SIMPLEX EXCEPTION_PRINT_LINEAR_SIMPLEX72,2287
#define EXCEPTION_PRINT_FM EXCEPTION_PRINT_FM73,2331
#define EXCEPTION_PRINT_JANUS EXCEPTION_PRINT_JANUS74,2363
#define FILTERING_TIMEOUT_FM FILTERING_TIMEOUT_FM76,2399
#define FILTERING_TIMEOUT_LINEAR_SIMPLEX FILTERING_TIMEOUT_LINEAR_SIMPLEX77,2449
#define FILTERING_TIMEOUT_JANUS FILTERING_TIMEOUT_JANUS78,2510
#define FILTERING_DIMENSION_FEASIBILITY FILTERING_DIMENSION_FEASIBILITY80,2563
#define FILTERING_NUMBER_CONSTRAINTS_FEASIBILITY FILTERING_NUMBER_CONSTRAINTS_FEASIBILITY81,2635
#define FILTERING_DENSITY_FEASIBILITY FILTERING_DENSITY_FEASIBILITY82,2725
#define FILTERING_MAGNITUDE_FEASIBILITY FILTERING_MAGNITUDE_FEASIBILITY83,2793
#define SWITCH_HEURISTIC_FLAG SWITCH_HEURISTIC_FLAG87,2895
static int feasibility_sc_counter = 0;feasibility_sc_counter89,2951
bool FM_timeout = false;FM_timeout91,2991
bool J_timeout = false;J_timeout92,3016
bool S_timeout = false;S_timeout93,3040
sc_rational_feasibility_ofl_ctrl(sc, ofl_ctrl, ofl_res)sc_rational_feasibility_ofl_ctrl102,3144
sc_integer_feasibility_ofl_ctrl(sc,ofl_ctrl, ofl_res)sc_integer_feasibility_ofl_ctrl111,3317
filtering_catch_alarm_FM (int sig)filtering_catch_alarm_FM126,3543
filtering_catch_alarm_J (int sig)filtering_catch_alarm_J132,3627
filtering_catch_alarm_S (int sig)filtering_catch_alarm_S138,3709
decision_data(decision_data156,4195
chose_variable_to_project_for_feasability(Psysteme s, Pbase b, bool ineq)chose_variable_to_project_for_feasability188,5100
static bool sc_fm_project_variablessc_fm_project_variables296,7424
#define LINEAR_SIMPLEX_PROJECT_EQ_METHOD LINEAR_SIMPLEX_PROJECT_EQ_METHOD348,8551
#define LINEAR_SIMPLEX_NO_PROJECT_EQ_METHOD LINEAR_SIMPLEX_NO_PROJECT_EQ_METHOD349,8595
#define FM_METHOD FM_METHOD350,8642
#define JANUS_METHOD JANUS_METHOD351,8663
#define ALL_METHOD ALL_METHOD352,8687
#define HEURISTIC1 HEURISTIC1359,8896
#define HEURISTIC2 HEURISTIC2360,8952
#define HEURISTIC3 HEURISTIC3361,9019
#define HEURISTIC4 HEURISTIC4362,9117
static int method_used = 0; /* means LINEAR_SIMPLEX :-) */method_used364,9387
static bool internal_sc_feasibilityinternal_sc_feasibility366,9447
sc_feasibility_ofl_ctrl(sc_feasibility_ofl_ctrl630,18218
sc_fourier_motzkin_feasibility_ofl_ctrl(s, integer_p, ofl_ctrl)sc_fourier_motzkin_feasibility_ofl_ctrl714,20641
sc_fourier_motzkin_feasibility_ofl_ctrl_timeout_ctrl(sc,int_p,ofl_ctrl)sc_fourier_motzkin_feasibility_ofl_ctrl_timeout_ctrl764,21837
sc_simplexe_feasibility_ofl_ctrl_timeout_ctrl(sc, project_eq_p, int_p, ofl_ctrl)sc_simplexe_feasibility_ofl_ctrl_timeout_ctrl837,23566
sc_janus_feasibility_ofl_ctrl_timeout_ctrl(sc,ofl_ctrl)sc_janus_feasibility_ofl_ctrl_timeout_ctrl911,25447
static Psysteme simplify_big_coeff(Psysteme sc)simplify_big_coeff1012,28351
bool efficient_sc_check_inequality_feasibility(Pvecteur v, Psysteme prec)efficient_sc_check_inequality_feasibility1033,28909

/home/dounia/MYPIPS/prod/linear/src/sc/sc_new_loop_bound.c,400
Psysteme new_loop_boundnew_loop_bound51,1424
Psysteme get_other_constraints(psyst, vars)get_other_constraints84,2172
algorithm_row_echelon_generic(algorithm_row_echelon_generic134,3457
algorithm_row_echelon(algorithm_row_echelon248,6834
void sc_set_row_echelon_redundancy(bool b __attribute__ ((unused)))sc_set_row_echelon_redundancy258,7036
void algorithm_tilingalgorithm_tiling292,8179

/home/dounia/MYPIPS/prod/linear/src/sc/sc_integer_analyze.c,222
bool var_with_unity_coeff_p(sc, var)var_with_unity_coeff_p46,1297
void sc_integer_projection_information(sc_integer_projection_information87,2454
constraint_integer_combination(constraint_integer_combination234,6628

/home/dounia/MYPIPS/prod/linear/src/sc/sc_read.c,783
Pcontrainte p_eg_fin;p_eg_fin76,2356
Pcontrainte p_ineg_fin;p_ineg_fin79,2428
Pvecteur p_pred;p_pred82,2507
Pvecteur p_membre_courant;p_membre_courant84,2525
Pvecteur cp;cp87,2600
char *nom_var[100];nom_var89,2614
#define OPINF OPINF94,2678
#define OPINFEGAL OPINFEGAL95,2694
#define OPEGAL OPEGAL96,2714
#define OPSUPEGAL OPSUPEGAL97,2731
#define OPSUP OPSUP98,2751
#define CHAINE CHAINE99,2767
void init_globals()init_globals102,2848
void new_ident(Psysteme ps, Variable s)new_ident118,3224
Variable rec_ident(Psysteme ps, Variable s)rec_ident136,3709
void creer_eg(ps,peq)creer_eg159,4232
void creer_ineg(ps,peq,sens)creer_ineg185,4853
Psysteme sc_reversal(sc)sc_reversal208,5320
Pcontrainte contrainte_reversal(c)contrainte_reversal227,5752

/home/dounia/MYPIPS/prod/linear/src/sc/sc_simplex_feasibility.h,5448
#define LINEAR_SC_SIMPLEX_FEASIBILITY_HLINEAR_SC_SIMPLEX_FEASIBILITY_H34,1107
#define DEBUG(DEBUG50,1394
#define DEBUG(DEBUG52,1423
static void* safe_malloc(size_t size)safe_malloc56,1479
typedef int var_t;var_t75,1775
#define VAR_NULL VAR_NULL80,1865
#define VAR_MAXNB VAR_MAXNB85,1928
#define var_fprint(var_fprint90,2006
#define var_print(var_print95,2108
typedef struct vec_s {vec_s111,2451
	var_t var; /**< mapped variable */var112,2474
	qval_t coeff; /**< value associated to the variable */coeff113,2510
	struct vec_s* succ; /**< rest of the vector */succ114,2566
} vec_s, *vec_p;vec_s115,2614
} vec_s, *vec_p;vec_p115,2614
#define VEC_NULL VEC_NULL120,2661
#define vec_init(vec_init125,2730
static void vec_clear(vec_p* pvec)vec_clear130,2817
static void vec_set(vec_p* pvec, vec_p vec)vec_set143,3017
static void vec_append_atfirst(vec_p* pvec, var_t var, qval_t coeff)vec_append_atfirst169,3588
static void vec_append(vec_p* pvec, var_t var, qval_t coeff)vec_append182,3909
static void vec_get_coeff(qval_t coeff, vec_p vec, var_t var)vec_get_coeff195,4219
static void vec_iadd(vec_p* pvec, vec_p vec)vec_iadd211,4512
static void vec_imul(vec_p* pvec, qval_t coeff)vec_imul247,5370
static void vec_iaddmul(vec_p* pvec, qval_t coeff, vec_p vec)vec_iaddmul263,5666
static void vec_ineg(vec_p vec)vec_ineg308,6701
static int NOWUNUSED vec_fprint(FILE* stream, vec_p vec)vec_fprint318,6873
#define vec_print(vec_print348,7585
	CONSTR_EQ, /**< equality */CONSTR_EQ365,7916
	CONSTR_LE /**< inequality */CONSTR_LE366,7945
} constrrel_t;constrrel_t367,7975
typedef struct constr_s {constr_s372,8029
	vec_p vec; /**< coefficients of variables */vec373,8055
	constrrel_t rel; /**< equality or inequality relation */rel374,8101
	qval_t cst; /**< constant term */cst375,8159
} constr_s, *constr_p;constr_s376,8194
} constr_s, *constr_p;constr_p376,8194
typedef constr_s constr_t[1];constr_t381,8256
static void constr_init(constr_p constr)constr_init386,8340
static void constr_clear(constr_p constr)constr_clear396,8510
static void NOWUNUSED constr_set(constr_p constr1, constr_p constr2)constr_set405,8653
#define constr_get_coeff(constr_get_coeff415,8918
static void constr_iadd(constr_p constr1, constr_p constr2)constr_iadd422,9099
static void constr_imul(constr_p constr, qval_t coeff)constr_imul434,9445
static void constr_iaddmul(constr_p constr1, qval_t coeff, constr_p constr2)constr_iaddmul444,9718
static void constr_makepos(constr_p constr)constr_makepos461,10153
static void constr_apply_pivot(constr_p constr, var_t pivot_var,constr_apply_pivot474,10468
static int NOWUNUSED constr_fprint(FILE* stream, constr_p constr)constr_fprint488,10788
#define constr_print(constr_print504,11105
typedef struct table_s {table_s521,11567
	constr_t obj; /**< objective function and value */obj522,11592
	constr_t* constrs; /**< constraints */constrs523,11644
	int nbvars; /**< number of variables */nbvars524,11684
	int nbconstrs; /**< number of constraints */nbconstrs525,11725
} table_s, *table_p;table_s526,11771
} table_s, *table_p;table_p526,11771
typedef table_s table_t[1];table_t531,11829
static void table_init(table_p tbl, int nbconstrs)table_init536,11928
static void table_clear(table_p tbl)table_clear551,12238
#define table_get_nbvars(table_get_nbvars564,12452
#define table_get_nbconstrs(table_get_nbconstrs569,12543
static void table_makepos(table_p tbl)table_makepos576,12737
static void table_addsignvars(table_p tbl)table_addsignvars593,13303
static void table_addofsvars(table_p tbl)table_addofsvars666,15335
static void table_canonicalize(table_p tbl)table_canonicalize688,15883
static void table_set_obj(table_p tbl)table_set_obj714,16438
static void table_addobjvars(table_p tbl)table_addobjvars728,16722
static void table_prepare(table_p tbl)table_prepare748,17192
static var_t table_get_pivotvar(table_p tbl)table_get_pivotvar765,17601
static var_t table_get_assocvar(table_p tbl, int row)table_get_assocvar781,17926
static int table_get_pivotrow(table_p tbl, var_t var)table_get_pivotrow818,18806
static bool table_get_pivot(table_p tbl, var_t* pvar, int* prow)table_get_pivot855,19828
static void table_apply_pivot(table_p tbl, var_t var, int row)table_apply_pivot865,20045
static void table_run_simplex(table_p tbl)table_run_simplex888,20658
static bool table_get_feasibility(table_p tbl)table_get_feasibility920,21325
static int NOWUNUSED table_fprint(FILE* stream, table_p tbl)table_fprint930,21518
#define table_print(table_print961,22216
	int nbvars; /**< number of variables */nbvars978,22655
	Variable names[VAR_MAXNB]; /** names of variables */names979,22696
} vartbl_s, *vartbl_p;vartbl_s980,22750
} vartbl_s, *vartbl_p;vartbl_p980,22750
typedef vartbl_s vartbl_t[1];vartbl_t985,22810
static void vartbl_init(vartbl_p vartbl)vartbl_init990,22890
#define vartbl_clear(vartbl_clear998,23006
static var_t vartbl_find(vartbl_p vartbl, Variable name)vartbl_find1004,23129
static void vec_set_vecteur(vartbl_t vartbl, vec_p* pvec, Pvecteur vec)vec_set_vecteur1019,23395
static void constr_set_contrainte(vartbl_t vartbl,constr_set_contrainte1037,23775
static void table_init_set_systeme(table_p tbl, Psysteme sys)table_init_set_systeme1054,24199
static inline bool sc_get_feasibility(Psysteme sys, int ofl_ctrl)sc_get_feasibility1085,24992

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-reduc.c,561
Ppolynome polynome_var_subst(pp, var, ppsubst)polynome_var_subst47,1365
int polynome_degree(pp, var)polynome_degree93,2672
int polynome_max_degree(Ppolynome pp)polynome_max_degree113,3212
Ppolynome polynome_factorize(pp, var, n)polynome_factorize131,3716
float polynome_TCST(pp)polynome_TCST156,4302
bool polynome_constant_p(pp)polynome_constant_p180,4890
Pbase polynome_used_var(pp, is_inferior_var)polynome_used_var204,5491
bool polynome_contains_var(pp, var)polynome_contains_var238,6485
bool polynome_equal(pp1, pp2)polynome_equal257,6883

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-alloc.c,545
Pmonome new_monome()new_monome47,1236
Ppolynome new_polynome()new_polynome63,1633
Pmonome make_monome(float coeff, Variable var, Value expo)make_monome80,2083
Ppolynome make_polynome(float coeff, Variable var, Value expo)make_polynome100,2550
Ppolynome monome_to_new_polynome(pm)monome_to_new_polynome114,2944
Pmonome monome_dup(pm)monome_dup133,3329
void monome_rm(ppm)monome_rm155,3789
void polynome_rm(ppp)polynome_rm171,4140
Ppolynome polynome_free(pp)polynome_free192,4603
Ppolynome polynome_dup(pp)polynome_dup212,5004

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-private.c,352
Pmonome monome_del_var(pm, var)monome_del_var47,1253
bool monome_colin(pm1, pm2)monome_colin77,2010
bool monome_equal(pm1, pm2)monome_equal93,2420
float Bernouilli(i)Bernouilli108,2806
int factorielle(n)factorielle136,3565
double intpower(d, n)intpower155,3837
bool is_inferior_monome(pm1, pm2, is_inferior_var)is_inferior_monome179,4559

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-error.c,308
void polynome_error(const char * name, char * fmt, ...)polynome_error62,1812
void good_polynome_assert(char * function, ...)good_polynome_assert84,2358
bool monome_check(pm)monome_check110,3046
bool polynome_check(pp)polynome_check131,3582
bool is_polynome_a_monome(pp)is_polynome_a_monome162,4402

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-scal.c,603
void polynome_scalar_mult(ppp, factor)polynome_scalar_mult46,1246
Ppolynome polynome_scalar_multiply(pp, factor)polynome_scalar_multiply65,1779
void polynome_scalar_add(ppp, term)polynome_scalar_add86,2275
Ppolynome polynome_scalar_addition(pp, term)polynome_scalar_addition101,2662
Ppolynome polynome_power_n(pp, n)polynome_power_n121,3104
Ppolynome polynome_nth_root(Ppolynome p, int n) {polynome_nth_root177,4539
Ppolynome number_replaces_var(pp, var, num)number_replaces_var201,5313
Ppolynome polynome_incr(pp)polynome_incr226,5830
Ppolynome polynome_decr(pp)polynome_decr246,6166

/home/dounia/MYPIPS/prod/linear/src/polynome/polynome-local.h,1946
#define POLYNOME_INCLUDEDPOLYNOME_INCLUDED128,4457
typedef struct Smonome {Smonome130,4484
    float coeff;coeff131,4509
    Pvecteur term;term132,4526
} Smonome, *Pmonome;Smonome133,4545
} Smonome, *Pmonome;Pmonome133,4545
typedef struct Spolynome {Spolynome135,4567
    Pmonome monome;monome136,4594
    struct Spolynome *succ;succ137,4614
} Spolynome, *Ppolynome;Spolynome138,4642
} Spolynome, *Ppolynome;Ppolynome138,4642
#define monome_coeff(monome_coeff142,4694
#define monome_term(monome_term143,4733
#define polynome_monome(polynome_monome144,4770
#define polynome_succ(polynome_succ145,4813
#define is_single_monome(is_single_monome149,4949
#define monome_constant_new(monome_constant_new151,5042
#define monome_power1_new(monome_power1_new152,5105
#define MONOME_NUL MONOME_NUL155,5225
#define MONOME_NUL_P(MONOME_NUL_P156,5261
#define MONOME_UNDEFINED MONOME_UNDEFINED157,5305
#define MONOME_UNDEFINED_P(MONOME_UNDEFINED_P158,5347
#define MONOME_CONSTANT_P(MONOME_CONSTANT_P159,5403
#define POLYNOME_NUL POLYNOME_NUL161,5457
#define POLYNOME_NUL_P(POLYNOME_NUL_P162,5497
#define POLYNOME_UNDEFINED POLYNOME_UNDEFINED163,5545
#define POLYNOME_UNDEFINED_P(POLYNOME_UNDEFINED_P164,5591
#define MONOME_COEFF_MULTIPLY_SYMBOL MONOME_COEFF_MULTIPLY_SYMBOL166,5652
#define MONOME_VAR_MULTIPLY_SYMBOL MONOME_VAR_MULTIPLY_SYMBOL167,5693
#define POLYNOME_NUL_SYMBOL POLYNOME_NUL_SYMBOL168,5732
#define POLYNOME_UNDEFINED_SYMBOL POLYNOME_UNDEFINED_SYMBOL169,5764
#define MONOME_NUL_SYMBOL MONOME_NUL_SYMBOL170,5821
#define MONOME_UNDEFINED_SYMBOL MONOME_UNDEFINED_SYMBOL171,5862
#define MAX_NAME_LENGTH MAX_NAME_LENGTH173,5916
#define PNOME_MACH_EPS PNOME_MACH_EPS175,5944
#define PNOME_FLOAT_N_DECIMALES PNOME_FLOAT_N_DECIMALES176,6026
#define PNOME_FLOAT_TO_EXP_LEVEL PNOME_FLOAT_TO_EXP_LEVEL177,6108
#define PNOME_FLOAT_TO_FRAC_LEVEL PNOME_FLOAT_TO_FRAC_LEVEL178,6190

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-unaires.c,384
void polynome_negate(ppp)polynome_negate45,1202
Ppolynome polynome_opposed(pp)polynome_opposed59,1613
Ppolynome polynome_sum_of_power(ppsup, p)polynome_sum_of_power79,2193
Ppolynome polynome_sigma(pp, var, ppinf, ppsup)polynome_sigma160,4706
Ppolynome polynome_sort(ppp, is_inferior_var)polynome_sort229,6688
void polynome_chg_var(ppp,v_old,v_new)polynome_chg_var264,7810

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-bin.c,708
void polynome_monome_add(ppp, pm)polynome_monome_add50,1398
Ppolynome polynome_monome_addition(pp, pm)polynome_monome_addition112,3453
void polynome_add(ppp, pp2)polynome_add171,5325
Ppolynome polynome_addition(pp, pp2)polynome_addition195,5887
static void monome_monome_mult(ppm, pm2)monome_monome_mult225,6564
Ppolynome polynome_monome_mult(pp, pm)polynome_monome_mult266,7674
Ppolynome polynome_mult(pp1, pp2)polynome_mult287,8216
Pmonome monome_monome_div(pm1, pm2)monome_monome_div314,8939
Ppolynome polynome_monome_div(pp, pm)polynome_monome_div356,10032
Ppolynome polynome_div(pp1, pp2)polynome_div381,10673
Ppolynome vecteur_to_polynome(Pvecteur pv)vecteur_to_polynome406,11351

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-root.c,76
Pvecteur polynome_roots(Ppolynome p, Variable var) {polynome_roots48,1312

/home/dounia/MYPIPS/prod/linear/src/polynome/polynome.h,2011
#define  polynome_header_includedpolynome_header_included7,230
#define POLYNOME_INCLUDEDPOLYNOME_INCLUDED135,4721
typedef struct Smonome {Smonome137,4748
    float coeff;coeff138,4773
    Pvecteur term;term139,4790
} Smonome, *Pmonome;Smonome140,4809
} Smonome, *Pmonome;Pmonome140,4809
typedef struct Spolynome {Spolynome142,4831
    Pmonome monome;monome143,4858
    struct Spolynome *succ;succ144,4878
} Spolynome, *Ppolynome;Spolynome145,4906
} Spolynome, *Ppolynome;Ppolynome145,4906
#define monome_coeff(monome_coeff149,4958
#define monome_term(monome_term150,4997
#define polynome_monome(polynome_monome151,5034
#define polynome_succ(polynome_succ152,5077
#define is_single_monome(is_single_monome156,5213
#define monome_constant_new(monome_constant_new158,5306
#define monome_power1_new(monome_power1_new159,5369
#define MONOME_NUL MONOME_NUL162,5489
#define MONOME_NUL_P(MONOME_NUL_P163,5525
#define MONOME_UNDEFINED MONOME_UNDEFINED164,5569
#define MONOME_UNDEFINED_P(MONOME_UNDEFINED_P165,5611
#define MONOME_CONSTANT_P(MONOME_CONSTANT_P166,5667
#define POLYNOME_NUL POLYNOME_NUL168,5721
#define POLYNOME_NUL_P(POLYNOME_NUL_P169,5761
#define POLYNOME_UNDEFINED POLYNOME_UNDEFINED170,5809
#define POLYNOME_UNDEFINED_P(POLYNOME_UNDEFINED_P171,5855
#define MONOME_COEFF_MULTIPLY_SYMBOL MONOME_COEFF_MULTIPLY_SYMBOL173,5916
#define MONOME_VAR_MULTIPLY_SYMBOL MONOME_VAR_MULTIPLY_SYMBOL174,5957
#define POLYNOME_NUL_SYMBOL POLYNOME_NUL_SYMBOL175,5996
#define POLYNOME_UNDEFINED_SYMBOL POLYNOME_UNDEFINED_SYMBOL176,6028
#define MONOME_NUL_SYMBOL MONOME_NUL_SYMBOL177,6085
#define MONOME_UNDEFINED_SYMBOL MONOME_UNDEFINED_SYMBOL178,6126
#define MAX_NAME_LENGTH MAX_NAME_LENGTH180,6180
#define PNOME_MACH_EPS PNOME_MACH_EPS182,6208
#define PNOME_FLOAT_N_DECIMALES PNOME_FLOAT_N_DECIMALES183,6290
#define PNOME_FLOAT_TO_EXP_LEVEL PNOME_FLOAT_TO_EXP_LEVEL184,6372
#define PNOME_FLOAT_TO_FRAC_LEVEL PNOME_FLOAT_TO_FRAC_LEVEL185,6454

/home/dounia/MYPIPS/prod/linear/src/polynome/pnome-io.c,1016
void float_to_frac(x, ps)float_to_frac54,1431
void monome_fprint(fd, pm, pb, plus_sign, variable_name)monome_fprint90,2661
char *monome_sprint(pm, pb, plus_sign, variable_name)monome_sprint109,3198
void polynome_fprint(fd, pp, variable_name, is_inferior_var)polynome_fprint173,4758
char *polynome_sprint(pp, variable_name, is_inferior_var)polynome_sprint197,5614
#define POLYNOME_BUFFER_SIZE POLYNOME_BUFFER_SIZE202,5771
char *default_variable_name(var)default_variable_name242,6887
int default_is_inferior_var(var1, var2)default_is_inferior_var265,7418
int default_is_inferior_varval(Pvecteur varval1, Pvecteur varval2)default_is_inferior_varval276,7758
int default_is_inferior_pvarval(Pvecteur * pvarval1, Pvecteur * pvarval2)default_is_inferior_pvarval286,8142
static void remove_blanks(ps)remove_blanks292,8345
static float parse_coeff(ps)parse_coeff307,8553
static char *parse_var_name(ps)parse_var_name337,9142
Ppolynome polynome_sscanf(sp, name_to_variable)polynome_sscanf359,9845

/home/dounia/MYPIPS/prod/linear/src/matrix/matrix.h,829
#define  matrix_header_includedmatrix_header_included7,224
    Value denominator;denominator71,2819
    int number_of_lines;number_of_lines72,2842
    int number_of_columns;number_of_columns73,2867
    Value * coefficients;coefficients74,2894
} * Pmatrix, Smatrix;Pmatrix75,2920
} * Pmatrix, Smatrix;Smatrix75,2920
#define MATRIX_UNDEFINED MATRIX_UNDEFINED77,2943
#define matrix_free(matrix_free80,3034
#define MATRIX_ELEM(MATRIX_ELEM87,3238
#define MATRIX_DENOMINATOR(MATRIX_DENOMINATOR93,3479
#define MATRIX_NB_LINES(MATRIX_NB_LINES94,3538
#define MATRIX_NB_COLUMNS(MATRIX_NB_COLUMNS95,3599
#define matrix_triangular_inferieure_p(matrix_triangular_inferieure_p100,3761
#define matrix_triangular_superieure_p(matrix_triangular_superieure_p106,3953
#define SUB_MATRIX_ELEM(SUB_MATRIX_ELEM113,4188

/home/dounia/MYPIPS/prod/linear/src/matrix/matrix_io.c,249
void matrix_fprint(FILE * f, Pmatrix	a)matrix_fprint44,1139
void matrix_print(a)matrix_print70,1872
void matrix_fscan(f,a,n,m)matrix_fscan93,2476
void matrix_pr_quot(FILE * f, Value a, Value b __attribute__ ((unused)))matrix_pr_quot137,3579

/home/dounia/MYPIPS/prod/linear/src/matrix/matrix.c,1492
Value * matrix_elem_ref(Pmatrix M, int r, int c)matrix_elem_ref41,1019
Value matrix_elem(Pmatrix M, int r, int c)matrix_elem49,1247
void matrix_transpose(const Pmatrix	A, Pmatrix	At)matrix_transpose64,1686
void matrix_multiply(const Pmatrix a, const Pmatrix b, Pmatrix c)matrix_multiply95,2661
void matrix_normalize(Pmatrix	a)matrix_normalize136,3866
void matrix_normalizec(Pmatrix MAT)matrix_normalizec187,5323
void matrix_swap_columns(Pmatrix A, int	c1, int c2)matrix_swap_columns209,5875
void matrix_swap_rows(Pmatrix A, int r1, int r2)matrix_swap_rows230,6408
void matrix_assign(Pmatrix  A, Pmatrix B)matrix_assign259,7068
bool matrix_equality(Pmatrix  A, Pmatrix B)matrix_equality273,7452
void matrix_nulle(Pmatrix Z)matrix_nulle293,7865
bool matrix_nulle_p(Pmatrix Z)matrix_nulle_p311,8230
bool matrix_diagonal_p(Pmatrix Z)matrix_diagonal_p336,8780
bool matrix_triangular_p(Pmatrix Z, bool inferieure)matrix_triangular_p367,9471
bool matrix_triangular_unimodular_p(Pmatrix Z, bool inferieure)matrix_triangular_unimodular_p403,10314
void matrix_substract(Pmatrix a, Pmatrix b, Pmatrix c)matrix_substract435,11215
void matrix_add(Pmatrix a, Pmatrix b, Pmatrix c)matrix_add471,12163
void matrix_subtraction_column(Pmatrix MAT, int c1, int c2, Value x)matrix_subtraction_column518,13461
void matrix_subtraction_line(Pmatrix MAT, int r1, int r2, Value x)matrix_subtraction_line541,14186
void matrix_uminus(Pmatrix A, Pmatrix mA)matrix_uminus558,14550

/home/dounia/MYPIPS/prod/linear/src/matrix/sub-matrix.c,842
#define MALLOC(MALLOC51,1387
#define FREE(FREE52,1419
int matrix_line_nnul(MAT,level)matrix_line_nnul72,2146
void matrix_perm_col(MAT,k,level)matrix_perm_col115,3557
void matrix_perm_line(MAT,k,level)matrix_perm_line150,4602
void matrix_min(MAT,i_min,j_min,level)matrix_min196,5940
void matrix_maj_col(A,P,level)matrix_maj_col256,7568
void matrix_maj_line(A,Q,level)matrix_maj_line294,8565
void matrix_identity(ID,level)matrix_identity322,9330
bool matrix_identity_p(ID,level)matrix_identity_p352,10267
int matrix_line_el(MAT,level)matrix_line_el379,10859
int matrix_col_el(MAT,level)matrix_col_el401,11417
void matrix_coeff_nnul(MAT,lg_nnul,cl_nnul,level)matrix_coeff_nnul421,11923
void ordinary_sub_matrix(A, A_sub, i1, i2, j1, j2)ordinary_sub_matrix469,13234
void insert_sub_matrix(insert_sub_matrix487,13729

/home/dounia/MYPIPS/prod/linear/src/matrix/matrix-local.h,766
    Value denominator;denominator64,2563
    int number_of_lines;number_of_lines65,2586
    int number_of_columns;number_of_columns66,2611
    Value * coefficients;coefficients67,2638
} * Pmatrix, Smatrix;Pmatrix68,2664
} * Pmatrix, Smatrix;Smatrix68,2664
#define MATRIX_UNDEFINED MATRIX_UNDEFINED70,2687
#define matrix_free(matrix_free73,2778
#define MATRIX_ELEM(MATRIX_ELEM80,2982
#define MATRIX_DENOMINATOR(MATRIX_DENOMINATOR86,3223
#define MATRIX_NB_LINES(MATRIX_NB_LINES87,3282
#define MATRIX_NB_COLUMNS(MATRIX_NB_COLUMNS88,3343
#define matrix_triangular_inferieure_p(matrix_triangular_inferieure_p93,3505
#define matrix_triangular_superieure_p(matrix_triangular_superieure_p99,3697
#define SUB_MATRIX_ELEM(SUB_MATRIX_ELEM106,3932

/home/dounia/MYPIPS/prod/linear/src/matrix/determinant.c,137
void  matrix_determinant(a, result)matrix_determinant54,1458
void matrix_sub_determinant(a,i,j,result)matrix_sub_determinant149,4323

/home/dounia/MYPIPS/prod/linear/src/matrix/inversion.c,417
void matrix_unimodular_triangular_inversion(u,inv_u,infer)matrix_unimodular_triangular_inversion53,1606
void matrix_diagonal_inversion(s,inv_s)matrix_diagonal_inversion93,2718
void matrix_triangular_inversion(h,inv_h,infer)matrix_triangular_inversion137,4251
void matrix_general_inversion(a,inv_a)matrix_general_inversion216,6518
void matrix_unimodular_inversion(u,inv_u)matrix_unimodular_inversion261,7848

/home/dounia/MYPIPS/prod/linear/src/matrix/alloc.c,95
Pmatrix matrix_new(int m, int n)matrix_new41,999
void matrix_rm(Pmatrix a)matrix_rm52,1285

/home/dounia/MYPIPS/prod/linear/src/matrix/hermite.c,177
void matrix_hermite(MAT,P,H,Q,det_p,det_q)matrix_hermite78,2467
int matrix_hermite_rank(a)matrix_hermite_rank174,5065
int matrix_dim_hermite (H)matrix_dim_hermite194,5500

/home/dounia/MYPIPS/prod/linear/src/matrix/smith.c,238
#define MALLOC(MALLOC42,1020
#define FREE(FREE43,1064
void matrix_smith(MAT,P,D,Q)matrix_smith68,1916
int matrices_to_1D_lattice(Pmatrix A, Pmatrix B, int n, int m, int i, Value * gcd_p, Value * c_p)matrices_to_1D_lattice195,5469
