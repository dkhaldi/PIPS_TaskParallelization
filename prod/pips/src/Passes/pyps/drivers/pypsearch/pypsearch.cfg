[CustomGenerator]
# possible values are:
# inline (inlining), unroll (loop_unroll), red_var_exp (reduction_variable_expansion), interchange (loop_interchange)
#inline:
#unfold:
#fusion:
loop_parallelisation:

[UniqGenerator]
#flatten_code:
#forward_substitute:
#split_initializations:

[LoopGenerator]
reduction_variable_expansion:

# Just give the name of the transformation, and it'll be applied to modules
# examples: ompify_code, privatize_module, forward_substitute, partial_eval, icm, internalize_parallel_code, sac,
# split_update_operator, if_conversion_init, if_conversion, if_convversion_compact, simd_atomizer: sac_simd_register_width=128, ...

# if you want to add properties, do so:
#transfoName: prop1=val1,prop2=val2,prop3=val3
# Val must be the same format as when you put properties in a tpips. For example strings must be surrounded by '"', true and false are TRUE and FALSE,
# and ints should be put directly
