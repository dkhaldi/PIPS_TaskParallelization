#ifndef _newgen_property_included
#define _newgen_property_included
#define _gen_property_start 26
/*
 * THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY NEWGEN.
 *
 * PLEASE DO NOT MODIFY IT.
 */

#define property_domain (_gen_property_start+0)
#if !defined(_newgen_property_domain_defined_)
#define _newgen_property_domain_defined_
#define PROPERTY_NEWGEN_DOMAIN (property_domain)
#define property_NEWGEN_DOMAIN (property_domain)
typedef struct _newgen_struct_property_ * property;
#endif /* _newgen_property_domain_defined_ */

/* PROPERTY
 */
#define PROPERTY(x) ((property)((x).p))
#define property_CAST(x) PROPERTY(x)
#define PROPERTY_CAST(x) PROPERTY(x)
#define PROPERTY_(x) ((x).e)
#define PROPERTY_TYPE property
#define property_TYPE property
#define property_undefined ((property)gen_chunk_undefined)
#define property_undefined_p(x) ((x)==property_undefined)

extern property copy_property(property);
extern void free_property(property);
extern property check_property(property);
extern bool property_consistent_p(property);
extern bool property_defined_p(property);
#define gen_PROPERTY_cons gen_property_cons
extern list gen_property_cons(property, list);
extern void property_assign_contents(property, property);
extern void property_non_recursive_free(property);
extern void write_property(FILE*, property);
extern property read_property(FILE*);
enum property_utype {
  is_property_int,
  is_property_bool,
  is_property_string
};
extern string property_tag_as_string(enum property_utype);
extern property make_property(enum property_utype, void *);
extern property make_property_int(intptr_t);
extern property make_property_bool(bool);
extern property make_property_string(string);

struct _newgen_struct_property_ {
  intptr_t _type_;
  enum property_utype _property_tag__;
  union {
    intptr_t _property_int_; /* int:int */
    gen_chunk _property_bool_; /* bool:bool */
    string _property_string_; /* string:string */
  } _property_union_;
};

#define property_domain_number(x) ((x)->_type_)
#define property_tag(x) ((x)->_property_tag__)
#define property_int_p(x) (property_tag(x)==is_property_int)
#define property_int_(x) property_int(x) /* old hack compatible */
#define property_int(x) ((x)->_property_union_._property_int_)
#define property_bool_p(x) (property_tag(x)==is_property_bool)
#define property_bool_(x) property_bool(x) /* old hack compatible */
#define property_bool(x) ((x)->_property_union_._property_bool_.b)
#define property_string_p(x) (property_tag(x)==is_property_string)
#define property_string_(x) property_string(x) /* old hack compatible */
#define property_string(x) ((x)->_property_union_._property_string_)

#define property_spec "\
--NEWGEN-START 26\n\
property = int:int + bool:bool + string:string;\n\
"
#endif
