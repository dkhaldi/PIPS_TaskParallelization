<html>

<body>

<head> <title>PIPS: Related Projects</title> </head>

<center>

<h1> Related Projects </h1>

<IMG SRC=images/logo-pips.half-size.gif>

</center>


Many research prototypes have been developped to test new compilation
techniques. Here are a few:

<ul>
  <li> <a href="http://www.gmd.de/SCAI/lab/adaptor/adaptor_home.html">Adaptor</A>
(GMD)
  <li> <a href="http://www.apc.waseda.ac.jp/"> Advanced
  Parallelizing Compiler (APC)</a> (Waseda)
  <li> <a href="http://www.cscs.ch/~wylie/CSCS-NEC/IntroSum.html">Annaï</a> (ETH/NEC Switzerland)
  <li> <a href="http://www.ens-lyon.fr/LIP/groupes/apte/bclt/bouclettes.html">
       Bouclette</a> (LIP/ENS-Lyon)
  <li> <a href="http://www.gre.ac.uk/~captool/index.html">CAPTools</a> (Greenwich)
  <li> <a
  href="http://ptolemy.eecs.berkeley.edu/~kienhuis/compaan/web/index.html"> Compaan </a>, (Delft/Berkeley) (see also <a href="http://www.gigascale.org/compaan">GSRC</a>): Compaan is an effort to compile Nested Loop Programs written in Matlab into a Process Network description.
  <li> <a href="http://www.cs.rice.edu/fortran-tools/DSystem/DSystem.html">
       D System</A> (CRPC/Rice University)
  <li> <a href="http://www.crim.ca/Domaines_Services/APAR/Anglais/eppp.html">
       EPPP</A> (CRIM Montreal)
  <li> Fortran D95 at Rice University (see D System)
  <li> <a href="http://sunmp.elis.rug.ac.be/fpt">FPT</a>,
       the Fortran Parallel Transformer (Ghent, Belgium)
  <li> <a href="http://www-acaps.cs.mcgill.ca/info/McCAT/McCAT.html">
       McCAT Compiler </a> (McGill)
  <li> <a href="http://brahms.fmi.uni-passau.de/cl/loopo/index.html">
       LooPo </a>, Polyhedral Loop Parallelizer (Passau)
  <li> <a href="http://nci.pgroup.com/nci_index.html">
       National Compiler Infrastructure (NCI) </a>, SUIF (PGI, Stanford University)
  <li> <a href="http://www.ens-lyon.fr/~gsilber/nestor/index.html">
       Nestor </a>, automatic loop nest parallelization (ENS-Lyon/LIP)
  <li> <a href="http://www.research.ibm.com/people/h/hind">
       NPIC </a>, New Patz Interprocedural Compiler, Michael Hind (pointer analysis,
       conditional constant propagation, object-oriented design)
  <li> OSCAR
  <li> <a href="http://www.cs.umd.edu/projects/omega/index.html">Omega,
	Petit</a> (Maryland)
  <li> <a href="http://icps.u-strasbg.fr/opera/home.html">Opera</a> (Strasbourg)
  <li> <a href="http://www.prism.uvsq.fr/english/parallel/paf/autom_us.html">PAF</a>, 
	Paralléliseur de Programme Fortran, Systematic Construction of
	Parallel and Distribued Programs (PRISM/UVSQ)
  <li> <a href="http://www.ece.nwu.edu/cpdc/Paradigm/Paradigm.html">
  Paradigm </a> (CSRD and Northwestern University).  Distributed memory
  message passing machines such as the IBM SP-2, the Intel Paragon, and
  the Thinking Machines CM-5 offer significant advantages over
  shared-memory multiprocessors in terms of cost and
  scalability. Unfortunately, to extract all that computational power from
  these machines, users have to write efficient software for them, which
  is an extremely laborious process. One major reason for this difficulty
  is the absence of a single global shared address space. As a result, the
  programmer himself has to manually distribute code and data on
  processors, and manage communication among tasks explicitly. Clearly,
  there is a need for efficient parallel programming support on these
  machines. The PARADIGM compiler project addresses that problem by
  developing an automated means to convert sequential programs,
  automatically parallelizing them by compiler dependence analysis, and
  compiling them for efficient execution on distributed memory machines.
  <li> Parafrase (CSRD/UIUC)
  <li> <a href="http://www.csrd.uiuc.edu/parafrase2/index.html"> Parafrase-2 </a>
  <li> Parascope (Rice)
  <li> <a href="http://www.irisa.fr/EXTERNE/projet/pampa/PANDORE/pandore.html"> Pandore </a>
(<a href="http://www.irisa.fr/EXTERNE/projet/pampa/Pampa_anglais.html"> PAMPA </a>/IRISA)
  <li> Petit, see Omega entry (UMD)
  <li> PFC, RN (Rice)
  <li> <a href="http://www.cri.mines-paristech.fr/pips"> PIPS </a>, Paralléliseur Interprocédural de Programmes Scientifiques (CRI/ENSMP)
  <li> <a href="http://ptolemy.eecs.berkeley.edu"> Ptolemy </a>,
  (Berkeley). The Ptolemy projects studies modeling, simulation, and
  design of concurrent, real-time, embedded systems.
  <li> <a href=http://www.irisa.fr/EXTERNE/projet/pampa/PREPARE/prepare.html>Prepare</A> (Esprit Project/IRISA)
  <li> PTRAN, PTRAN-2 (Watson Research Center/IBM)
  <li> <a href="http://polaris.cs.uiuc.edu/polaris/polaris.html">Polaris</a>
(CSRD/UIUC)
  <li> <a href="http://www.ics.uci.edu/~ahalambi/promis.html">PROMIS</a>
compiler (UIUC-UCI). PROMIS is an advanced multilingual and retargetable
parallelizing and optimizing compiler under development at the University
of Illinois at Urbana-Champaign and the University of
California-Irvine. Both the basic research work and the development ofthe
prototype compiler are based on a radically different design methodology,
in contrast to the design approaches used by virtually all commercial and
experimental compilers.
  <li> <a href="http://www.extreme.indiana.edu/sage/index.html">Sage++</a>,
       also used by the <a href="http://www.irisa.fr/EXTERNE/projet/caps/Caps_francais.html"> CAPS </a> project
  <li> Superb (Bonn)
  <li> <a href="http://suif.stanford.edu"> SUIF </a> (Stanford)
  <li> Tiny, <a href="http://cse.ogi.edu/Sparse/nascent.html"> Nascent </a>
       (OGI)
  <li> <a href="http://www.ens-lyon.fr/~desprez/FILES/RESEARCH/SOFT/TransTOOL">
       TransTOOL </a> (LIP/ENS-Lyon)
  <li> <a href="http://www.trimaran.org">
       Trimaran </a> (NYU, HP, UIUC) Compiler optimization and performance
       monitoring infrastructure with emphasis on Explicitly Parallel
       Instruction Computing (EPIC). TRIMARAN is co-developed by the CAR
       Group of HP-Labs,
       the IMPACT Group of the University of Illinois and the ReaCT-ILP
       Laboratory 
       of New York University.
  <li> <a href="http://www.vcpc.univie.ac.at/activities/r_and_d/vfcs.html">
       Vienna Fortran Compilation System (VFCS) </A> (University of Vienna)
  <li> We use the
	<a
	href="http://www.informatik.uni-bremen.de/~inform/forschung/daVinci">daVinci</a>
	 graph viewer in PIPS
  <li> ...
  <li> <a href="http://www.rwcp.or.jp/lab/PDC-hitachi/PDC-hitachi-e.html">
       WPP (Whole Program Parallelizer) </a> 
        Real World Computing Partnership Multi-Processor Computing Hitachi Laboratory (Hitachi)
</ul>
<hr>

See also Microsoft Research, Oregon State University (OSU).

<P>
Advanced commercial compilers include:

<ul>

  <li> Compaq Fortran 95 for Linux Alpha

  <li> <a href="http://www.semdesigns.com/Product/DMS/DMSToolkit.html">
  The DMS Software Reengineering Toolkit </a>

  <li>  <a href="http://developer.intel.com"> Intel F95 compiler </a>

  <li> the KAP preprocessor family from KAI

  <li> the MIPS compiler from SGI

  <li> compilers from PGI

  <li> <a href="http://www.psrv.com/vast_parallel.htm"> the VAST
 preprocessor family</a> from Pacific Sierra/APR

  <li> ...

</ul>

<P>
Related areas include:

<ul>

  <li> <a href="http://www.cs.nmsu.edu/~jeffery/aadebug.html"> Algorithmic and Automatic Debugging</a>

  <li> ...

</ul>

#include "go_back.html"


</body>
</html>
