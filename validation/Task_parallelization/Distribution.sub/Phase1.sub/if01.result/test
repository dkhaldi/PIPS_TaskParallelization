
Init Code

int main()
{
   int i, j;                                                            /*0004*/
#pragma distributed on_cluster=0
   {
      i = 0;                                                            /*0006*/
      j = 0;                                                            /*0007*/
   }

#pragma distributed on_cluster=1
   if (rand())                                                          /*0010*/
      i++;                                                              /*0011*/
   else
      j++;                                                              /*0014*/

#pragma distributed on_cluster=2
   if (rand())                                                          /*0017*/
      i++;                                                              /*0018*/
   else
      j++;                                                              /*0021*/

   return 0;                                                            /*0024*/
}

TASK_MAPPING

int main()
{
   int i, j;                                                            /*0004*/
#pragma distributed on_cluster=0
   {
      i = 0;                                                            /*0006*/
      j = 0;                                                            /*0007*/
   }

#pragma distributed on_cluster=1
   if (rand())                                                          /*0010*/
      i++;                                                              /*0011*/
   else
      j++;                                                              /*0014*/

#pragma distributed on_cluster=2
   if (rand())                                                          /*0017*/
      i++;                                                              /*0018*/
   else
      j++;                                                              /*0021*/

   return 0;                                                            /*0024*/
}

VARIABLE_REPLICATION

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
   int i, j;                                                            /*0004*/
#pragma distributed on_cluster=0
   {
      i = 0;                                                            /*0006*/
      j = 0;                                                            /*0007*/
   }

#pragma distributed on_cluster=1
   if (rand())                                                          /*0010*/
      i++;                                                              /*0011*/
   else
      j++;                                                              /*0014*/

#pragma distributed on_cluster=2
   if (rand())                                                          /*0017*/
      i++;                                                              /*0018*/
   else
      j++;                                                              /*0021*/

   return 0;                                                            /*0024*/
}

COPY_VALUE_OF_WRITE

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
   int i, j;                                                            /*0004*/
#pragma distributed on_cluster=0
   {
      i = 0;                                                            /*0006*/
      __i_0 = i;
      __i_1 = i;
      __i_2 = i;
      __i_3 = i;
      j = 0;                                                            /*0007*/
      __j_0 = j;
      __j_1 = j;
      __j_2 = j;
      __j_3 = j;
   }

#pragma distributed on_cluster=1
   if (rand()) {                                                        /*0010*/
      i++;                                                              /*0011*/
      __i_0 = i;
      __i_1 = i;
      __i_2 = i;
      __i_3 = i;
   }
   else {
      j++;                                                              /*0014*/
      __j_0 = j;
      __j_1 = j;
      __j_2 = j;
      __j_3 = j;
   }

#pragma distributed on_cluster=2
   if (rand()) {                                                        /*0017*/
      i++;                                                              /*0018*/
      __i_0 = i;
      __i_1 = i;
      __i_2 = i;
      __i_3 = i;
   }
   else {
      j++;                                                              /*0021*/
      __j_0 = j;
      __j_1 = j;
      __j_2 = j;
      __j_3 = j;
   }

   return 0;                                                            /*0024*/
}

ELIMINATE_ORIGINAL_VARIABLES

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
   int i, j;                                                            /*0004*/
#pragma distributed on_cluster=0
   {
      __i_0 = 0;                                                        /*0006*/
      __i_0 = __i_0;
      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
      __j_0 = 0;                                                        /*0007*/
      __j_0 = __j_0;
      __j_1 = __j_0;
      __j_2 = __j_0;
      __j_3 = __j_0;
   }

#pragma distributed on_cluster=1
   if (rand()) {                                                        /*0010*/
      __i_1++;                                                          /*0011*/
      __i_0 = __i_1;
      __i_1 = __i_1;
      __i_2 = __i_1;
      __i_3 = __i_1;
   }
   else {
      __j_1++;                                                          /*0014*/
      __j_0 = __j_1;
      __j_1 = __j_1;
      __j_2 = __j_1;
      __j_3 = __j_1;
   }

#pragma distributed on_cluster=2
   if (rand()) {                                                        /*0017*/
      __i_2++;                                                          /*0018*/
      __i_0 = __i_2;
      __i_1 = __i_2;
      __i_2 = __i_2;
      __i_3 = __i_2;
   }
   else {
      __j_2++;                                                          /*0021*/
      __j_0 = __j_2;
      __j_1 = __j_2;
      __j_2 = __j_2;
      __j_3 = __j_2;
   }

   return 0;                                                            /*0024*/
}

CLEAN_DECLARATIONS

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
#pragma distributed on_cluster=0
   {
      __i_0 = 0;                                                        /*0006*/
      __i_0 = __i_0;
      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
      __j_0 = 0;                                                        /*0007*/
      __j_0 = __j_0;
      __j_1 = __j_0;
      __j_2 = __j_0;
      __j_3 = __j_0;
   }

#pragma distributed on_cluster=1
   if (rand()) {                                                        /*0010*/
      __i_1++;                                                          /*0011*/
      __i_0 = __i_1;
      __i_1 = __i_1;
      __i_2 = __i_1;
      __i_3 = __i_1;
   }
   else {
      __j_1++;                                                          /*0014*/
      __j_0 = __j_1;
      __j_1 = __j_1;
      __j_2 = __j_1;
      __j_3 = __j_1;
   }

#pragma distributed on_cluster=2
   if (rand()) {                                                        /*0017*/
      __i_2++;                                                          /*0018*/
      __i_0 = __i_2;
      __i_1 = __i_2;
      __i_2 = __i_2;
      __i_3 = __i_2;
   }
   else {
      __j_2++;                                                          /*0021*/
      __j_0 = __j_2;
      __j_1 = __j_2;
      __j_2 = __j_2;
      __j_3 = __j_2;
   }

   return 0;                                                            /*0024*/
}

IDENTITY_ELIMINATION

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
#pragma distributed on_cluster=0
   {
      __i_0 = 0;                                                        /*0006*/

      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
      __j_0 = 0;                                                        /*0007*/

      __j_1 = __j_0;
      __j_2 = __j_0;
      __j_3 = __j_0;
   }

#pragma distributed on_cluster=1
   if (rand()) {                                                        /*0010*/
      __i_1++;                                                          /*0011*/
      __i_0 = __i_1;

      __i_2 = __i_1;
      __i_3 = __i_1;
   }
   else {
      __j_1++;                                                          /*0014*/
      __j_0 = __j_1;

      __j_2 = __j_1;
      __j_3 = __j_1;
   }

#pragma distributed on_cluster=2
   if (rand()) {                                                        /*0017*/
      __i_2++;                                                          /*0018*/
      __i_0 = __i_2;
      __i_1 = __i_2;

      __i_3 = __i_2;
   }
   else {
      __j_2++;                                                          /*0021*/
      __j_0 = __j_2;
      __j_1 = __j_2;

      __j_3 = __j_2;
   }

   return 0;                                                            /*0024*/
}


Final Code

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3, __j_0, __j_1, __j_2, __j_3;
#pragma distributed on_cluster=0
   {
      __i_0 = 0;

      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
      __j_0 = 0;

      __j_1 = __j_0;
      __j_2 = __j_0;
      __j_3 = __j_0;
   }

#pragma distributed on_cluster=1
   if (rand()) {
      __i_1++;
      __i_0 = __i_1;

      __i_2 = __i_1;
      __i_3 = __i_1;
   }
   else {
      __j_1++;
      __j_0 = __j_1;

      __j_2 = __j_1;
      __j_3 = __j_1;
   }

#pragma distributed on_cluster=2
   if (rand()) {
      __i_2++;
      __i_0 = __i_2;
      __i_1 = __i_2;

      __i_3 = __i_2;
   }
   else {
      __j_2++;
      __j_0 = __j_2;
      __j_1 = __j_2;

      __j_3 = __j_2;
   }

   return 0;
}
