*DECK D2ESP
      SUBROUTINE D2ESP(CORE)
      IMPLICIT REAL*8(A-H,O-Z)
C
C     CONTROL ROUTINE FOR THE 'IN-CORE' CALCULATION OF THE
C     TWO-ELECTRON CONTRIBUTIONS TO THE HARTREE-FOCK FIRST
C     DERIVATIVES.
C
C     ******************************************************************
C     IOP(  )  ... OPTIONS:
C     ******************************************************************
C
C     IOP(18) ... PROGRAM ACCURACY OPTION (LIKE IN L311).
C     0 ... COMPUTE DERIVATIVE CONTRIBUTIONS WITH 10**(-8)
C           ACCURACY.
C     1 ... 'TEST' OPTION ... DO AS ACCURATELY AS POSSIBLE.
C     2 ... USE THE ORIGINAL 'BERNY' VALUES.
C
C     IOP(27) ... FILE INITIALIZATION CONTROL.
C     1 ... READ IN PREVIOUS DERIVATIVE CONTRIBUTIONS
C           FROM FILE IRWFX BEFORE COMPUTING ANYTHING.
C
C     IOP(28) ... SKIP OPTION TO DEFER INTEGRAL EVALUATION
C                 TO L703.
C     0 ... COMPUTE AS NORMAL.
C     1 ... DO ALL GRADIENT INTEGRALS IN L703.
C
C     IOP(34) ... DUMP OPTION.
C     0 ... NO DUMPING.
C     1 ... USUAL SYSTEM STUFF.
C     2 ... DUMP DERIVATIVE CONTRIBUTIONS FROM WITHIN SHELL LOOPS.
C
C     THIS ROUTINE SERVES TWO MAJOR PURPOSES:
C     1.  PERFORM INITIALIZATION CHORES, LIKE RECOVERING PERTINENT
C         COMMON BLOCKS FROM THE RW-FILES.
C     2.  ALLOCATE MEMORY.  CERTAIN ARRAYS DEPEND ON THE NUMBER
C         OF BASIS FUNCTIONS AND NUMBER OF ATOMS.
C         SPACE FOR THESE THINGS IS ALLOCATED FROM THE SINGLE ARRAY
C         'CORE'.
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS,AON
      LOGICAL USESYM
      COMMON /IOP/    IOP(50)
      COMMON /MOL/    NATOMS,ICHARG,MULTIP,NAE,NBE,NE,NBASIS,
     $                IAN(401),ATMCHG(400),C(1200)
      COMMON/B/EXX(1200),C1(1200),C2(1200),C3(1200),
     $         X(400),Y(400),Z(400),JAN(400),SHELLA(400),SHELLN(400),
     $         SHELLT(400),SHELLC(400),AOS(400),AON(400),NSHELL,MAXTYP
      DIMENSION C4(400),SHLADF(400)
      EQUIVALENCE(C4(1),C3(401)),(SHLADF(1),C3(801))
      COMMON/IO/IN,IOUT,IPUNCH
      COMMON/GRSYM/NOP1,NOP2,JTRANS(3,8)
      DIMENSION CORE(1)
      COMMON/HAMSAV/NORB,NHAM
      DATA IRWB,IRWPT,IRWPA,IRWPB,IRWPTI,IRWF1,IRWSYM
     $    / 506, 532 , 528 , 530 , 533 ,  584 , 579   /
      DATA IRWSY1/551/, MAXSHL/400/, IRWHAM/568/, IRWMOA/524/,
     $     TWO/2.0D0/, IONDDO/566/
 1000 FORMAT(' F=',5D13.6)
 1010 FORMAT(' AJ:')
 1020 FORMAT(' AK:')
 2002 FORMAT(39H NO CODE YET FOR COMPLEX UHF ... SORRY.)
C
C     INITIALIZE THIS LINK.
C
C***      CALL DRUM
C***      CALL TRAKIO(6HD2ESP ,1)
      LENB = 15*MAXSHL+INTOWP(2+7*MAXSHL)
      LRWSY1 = INTOWP(26)
C
C     FILL LOCAL OPTIONS.
      ICRIT=MOD(IOP(18),10)
      INITF=IOP(27)
      IACC=IOP(28)
      ISYMGR=IOP(30)
      IPRINT=IOP(33)
      IDUMP=IOP(34)
      ICHECK = IOP(40)
      INDDO = IOP(41)
      IF(INDDO.NE.0.AND.ICHECK.EQ.0) ICHECK = 3
      NTT=(NBASIS*(NBASIS+1))/2
      NAT3=3*NATOMS
C***      CALL GETNOP(NOP1,NOP2)
      NOP1=1
C
C     DEFER EXECUTION OF THIS LINK IF POSSIBLE.
      IF(IACC.GT.0)GO TO 100
      CALL ILSW(2,24,IFRC)
      IF(IFRC.EQ.1)GO TO 100
C
C     FETCH /B/ FROM THE RW-FILES.
C***      CALL TREAD(IRWB,EXX(1),LENB,1,LENB,1,0)
C***
C
C     DETERMINE TYPE OF SCF.
C     DEFINITION OF ISCF:
C        ISCF = 0 ... RRHF
C               1 ... RUHF/ROHF
C               2 ... CRHF
C               3 ... CUHF
C               4 ... GVB
C
      NDEN=1
      CALL ILSW(2,1,ISCF)
      CALL ILSW(2,22,IREST)
      IF(ISCF.EQ.0.AND.IREST.EQ.1) ISCF = 1
      IF(ISCF.EQ.0.AND.IREST.EQ.2) ISCF = 4
      IF(ISCF.NE.0.AND.ISCF.NE.4) NDEN=2
      ISCFP=ISCF+1
      NORB = 0
      NHAM = 0
      NONC1 = 1
C***      IF(ISCF.EQ.4) CALL FILEIO(2,-IRWHAM,INTOWP(2),NORB,0)
C
C     ALLOCATE STORAGE IN 'CORE'.
C           CORE(1)=VEE
      IVEE=1
C           FXYZ(3*NATOMS)
      IFXYZ=IVEE+1
C           WORK ARRAY FOR ADDING IN ONE-ELECTRON FORCES.
      JFXYZ=IFXYZ+3*NATOMS
C           ALLOCATE NDEN DENSITY MATRICES.
      IDM=JFXYZ+3*NATOMS
      IDN=IDM
      IF(NDEN.EQ.2)IDN=IDM+NTT
C           CHECK FOR OVER-RUN.
      INEQ=IDN+NTT
      IFROZE=INEQ+INTOWP(NATOMS*NOP1)
      INCONF=IFROZE+INTOWP(NATOMS)
      IFHAM=INCONF+INTOWP(NORB)
      IAJ=IFHAM+NHAM
      IAK=IAJ+NHAM*NHAM
      LENHAM=IAK+NHAM*NHAM-INCONF
      IMO=INCONF+LENHAM
      LENMO = 0
      IF(ISCF.EQ.4) LENMO = NBASIS*NBASIS
      IFLAGS = IMO + LENMO
      ISCVEN = IFLAGS + 1
      ISCVEE = ISCVEN + 1
      ISCVNN = ISCVEE + 1
      IHDIAG = ISCVNN + 1
      IBETA = IHDIAG + NBASIS
      IFIRST = IBETA + NBASIS
      ISHLBF = IFIRST + INTOWP(NBASIS)
      IEND = ISHLBF + INTOWP(NBASIS) - 1
      LENNDO = IEND + 1 - IFLAGS

C     PLV
      IF1 = IEND + 1
      IAJ1 = IF1 + NONC1
      IAK1 = IAJ1 + NONC1*NONC1
C     PLV

C
C     GET MEMORY.
C***      CALL GETSCM(IEND,CORE(1),JJJMEM,6HD2ESP1,0)
      CALL LCLEAR(NBASIS,CORE(IFIRST))
C***      IF(INDDO.NE.0) CALL FILEIO(2,-IONDDO,LENNDO,CORE(IFLAGS),0)
      IF(INDDO.EQ.0) CORE(ISCVEE) = DBLE(1)
C***      CALL FRZAT1(NATOMS,CORE(IFROZE))
      CALL LCLEAR(NATOMS,CORE(IFROZE))
C
C     READ IN DENSITY MATRICES FROM RW-FILES.
      DO 9988 I=1,NTT
 9988 CORE(IDM-1+I)=0.2D0
C***      GO TO(30,40,50,60,70),ISCFP
C
C     REAL-RHF.
C***   30 CALL TREAD(IRWPT,CORE(IDM),NTT,1,NTT,1,0)
C***      GO TO 80
C
C     REAL-UHF.
C***   40 CALL TREAD(IRWPA,CORE(IDM),NTT,1,NTT,1,0)
C***      CALL TREAD(IRWPB,CORE(IDN),NTT,1,NTT,1,0)
C***      GO TO 80
C
C     COMPLEX RHF.
C***   50 CALL TREAD(IRWPT ,CORE(IDM),NTT,1,NTT,1,0)
C***      CALL TREAD(IRWPTI,CORE(IDN),NTT,1,NTT,1,0)
C***      GO TO 80
C
C     COMPLEX UHF ... NO CODE YET.
C***   60 WRITE(IOUT,2002)
C***      CALL LNK1E
C
C     GVB AND GENERAL WAVEFUNCTIONS OF THE FH + AJ + BK TYPE.
C***   70 CALL FILEIO(2,IRWHAM,LENHAM,CORE(INCONF),0)
C***      IST = IFHAM
C***      IEN = IFHAM + NHAM - 1
C***      IF(IDUMP.NE.0) WRITE(6,1000) (CORE(I),I=IST,IEN)
C***      IF(IDUMP.NE.0) WRITE(6,1010)
C***      IF(IDUMP.NE.0) CALL MATOUT(CORE(IAJ),NHAM,NHAM,NHAM,NHAM)
C***      IF(IDUMP.NE.0) WRITE(6,1020)
C***      IF(IDUMP.NE.0) CALL MATOUT(CORE(IAK),NHAM,NHAM,NHAM,NHAM)
C***      CALL FILEIO(2,-IRWMOA,NBASIS**2,CORE(IMO),0)
C***      CALL OCOUNT(NORB,CORE(INCONF),NONCOR)
C***      NONC1 = MAX0(NONCOR,1)
C***      IF1 = IEND + 1
C***      IAJ1 = IF1 + NONC1
C***      IAK1 = IAJ1 + NONC1*NONC1
C***      NGET = IAK1 + NONC1*NONC1 - IF1
C***      CALL GETSCM(NGET,CORE(IF1),JJJMEM,6HGVBGRD,0)
C***      CALL NEWFJK(NORB,NHAM,NBASIS,NBASIS,NONCOR,NONC1,CORE(INCONF),
C***     $    CORE(IFHAM),CORE(IAJ),CORE(IAK),CORE(IMO),CORE(IDM),
C***     $    CORE(IF1),CORE(IAJ1),CORE(IAK1))
C***      IF(NONCOR.EQ.0) CALL ASCALE(NTT,TWO,CORE(IDM),CORE(IDM))
C***      IF(NONCOR.EQ.0) ISCF = 0
C***      IF(NONCOR.EQ.0) ISCFP = 1
C
C     IF SYMMETRY IS AVAILABLE, RECOVER THE INFORMATION
C     FROM THE RW-FILES, AND PREPARE TO USE IT.
   80 CALL ILSW(2,26,NOSYM)
      USESYM=(NOSYM.EQ.0).AND.(ISYMGR.EQ.0).AND.(NOP1.GT.1)
      IF(.NOT.USESYM)GO TO 90
C     READ IN SYMMETRY INFORMATION.
C***      CALL TREAD(IRWSY1,NOP1,LRWSY1,1,LRWSY1,1,0)
C***      LEN=INTOWP(NATOMS*NOP1)
C***      CALL TREAD(IRWSYM,CORE(INEQ),LEN,1,LEN,1,0)
   90 CONTINUE
C
C     CLEAR OUT ACCUMULATION ARRAY.
      CALL ACLEAR(NAT3,CORE(IFXYZ))
C
C     CALCULATE 2-ELECTRON CONTRIBUTION TO HARTREE-FOCK FORCES.
C     ROUTINE RETURNS WITH VEE, AND FORCE CONTRIBUTIONS IN
C     FXYZ.
C
      CALL TWLDRV(ISCF,CORE(IDM),CORE(IDN),ICRIT,USESYM,NOP1,JTRANS,
     $    CORE(INEQ),NATOMS,C,CORE(IVEE),CORE(IFXYZ),IDUMP,CORE(IFROZE),
     $    NONCOR,NONC1,CORE(IF1),CORE(IAJ1),CORE(IAK1),CORE(IMO),NBASIS,
     $    INDDO,ATMCHG,CORE(IFIRST),ICHECK)

C
C     RECOVER PREVIOUS INFORMATION (IF REQUESTED) AND ADD IN  THIS 
C     LINK'S CONTRIBUTIONS.
C***      CALL ACLEAR(NAT3,CORE(JFXYZ))
C***      IF(INITF.EQ.1) CALL FILEIO(2,-IRWF1,NAT3,CORE(JFXYZ),0)
C***      IF(IPRINT.GE.2)
C***     $   CALL DMPFRC(IOUT,8HL702INPT,8,NATOMS,CORE(JFXYZ))
C***      IF(IPRINT.GE.2)
C***     $   CALL DMPFRC(IOUT,8H2-E PART,8,NATOMS,CORE(IFXYZ))
C***      CALL AADD(NAT3,CORE(IFXYZ),CORE(JFXYZ),CORE(JFXYZ))
C***      IF(IPRINT.GE.1)
C***     $   CALL DMPFRC(IOUT,8HL702 OUT,8,NATOMS,CORE(JFXYZ))
C***      CALL TWRITE(IRWF1,CORE(JFXYZ),NAT3,1,NAT3,1,0)
  100 CONTINUE
C***      CALL TRAKIO(6HD2ESP ,2)
C***      CALL CHAINX(0)
      RETURN
      END
