
PROPER EFFECTS

int formal_parameter04(my_struct *p)
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p
   (p->one)[0] = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p
   (p->two->one)[0] = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b1 
//                               *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p
   (p->two->two->one)[0] = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b1 
//                               *ANY_MODULE*:*ANYWHERE*_b1 
//                               *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p
   (p->two->two->two->one)[0] = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b1 
//                               *ANY_MODULE*:*ANYWHERE*_b1 
//                               *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b1
//             <    is read   >: p
   p->two->two->two->two = 0;
   return 0;
}

PROPER POINTER EFFECTS

int formal_parameter04(my_struct *p)
{
//             <    is read   >: p
//             <    is written>: p[0].one[0]
   (p->one)[0] = 0;
//             <    is read   >: p p[0].two
//             <    is written>: p[0].two[0].one[0]
   (p->two->one)[0] = 0;
//             <    is read   >: p p[0].two p[0].two[0].two
//             <    is written>: p[0].two[0].two[0].one[0]
   (p->two->two->one)[0] = 0;
//             <    is read   >: p p[0].two p[0].two[0].two 
//                               p[0].two[0].two[0].two
//             <    is written>: p[0].two[0].two[0].two[0].one[0]
   (p->two->two->two->one)[0] = 0;
//             <    is read   >: p p[0].two p[0].two[0].two 
//                               p[0].two[0].two[0].two
//             <    is written>: p[0].two[0].two[0].two[0].two
   p->two->two->two->two = 0;
   return 0;
}

POINTS TO


// Points To IN:
// _p_1.two -> *NULL* , MAY
// _p_1.two -> _p_1_2__1 , MAY
// _p_1_2__1.two -> *NULL* , MAY
// _p_1_2__1.two -> _p_1_2__1_2__1 , MAY
// _p_1_2__1_2__1.two -> *NULL* , MAY
// _p_1_2__1_2__1.two -> _p_1_2__1_2__1_2__1 , MAY
// p -> *NULL* , MAY
// p -> _p_1 , MAY


// Points To OUT:
// _p_1.two -> _p_1_2__1 , EXACT
// _p_1_2__1.two -> _p_1_2__1_2__1 , EXACT
// _p_1_2__1_2__1.two -> _p_1_2__1_2__1_2__1 , EXACT
// _p_1_2__1_2__1_2__1.two -> *NULL* , EXACT
// p -> _p_1 , EXACT

int formal_parameter04(my_struct *p)
{

// Points To:
// p -> *NULL* , MAY
// p -> _p_1 , MAY

   (p->one)[0] = 0;

// Points To:
// _p_1.two -> *NULL* , MAY
// _p_1.two -> _p_1_2__1 , MAY
// p -> _p_1 , EXACT

   (p->two->one)[0] = 0;

// Points To:
// _p_1.two -> _p_1_2__1 , EXACT
// _p_1_2__1.two -> *NULL* , MAY
// _p_1_2__1.two -> _p_1_2__1_2__1 , MAY
// p -> _p_1 , EXACT

   (p->two->two->one)[0] = 0;

// Points To:
// _p_1.two -> _p_1_2__1 , EXACT
// _p_1_2__1.two -> _p_1_2__1_2__1 , EXACT
// _p_1_2__1_2__1.two -> *NULL* , MAY
// _p_1_2__1_2__1.two -> _p_1_2__1_2__1_2__1 , MAY
// p -> _p_1 , EXACT

   (p->two->two->two->one)[0] = 0;

// Points To:
// _p_1.two -> _p_1_2__1 , EXACT
// _p_1_2__1.two -> _p_1_2__1_2__1 , EXACT
// _p_1_2__1_2__1.two -> _p_1_2__1_2__1_2__1 , EXACT
// p -> _p_1 , EXACT

   p->two->two->two->two = 0;

// Points To:
// _p_1.two -> _p_1_2__1 , EXACT
// _p_1_2__1.two -> _p_1_2__1_2__1 , EXACT
// _p_1_2__1_2__1.two -> _p_1_2__1_2__1_2__1 , EXACT
// _p_1_2__1_2__1_2__1.two -> *NULL* , EXACT
// p -> _p_1 , EXACT

   return 0;
}
