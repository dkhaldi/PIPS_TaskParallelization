
POINTS-TO


// Points To IN:
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// _l_1_2__1[0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1[0][0].next -> _l_1_2__1_2__1[0][0][0] , MAY
// _l_1_2__1_2__1[0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1[0][0][0].next -> _l_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> _l_1_2__1_2__1_2__1_2__1[0]
//    [0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL_POINTER*
//     , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// nil -> *NULL_POINTER* , EXACT


// Points To OUT:
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// nil -> *NULL_POINTER* , EXACT

void list_free(list l)
{

// Points To:
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY

   list n = l, p = l;

// Points To:
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// n -> *NULL_POINTER* , MAY
// n -> _l_1[0] , MAY
// nil -> *NULL_POINTER* , EXACT
// p -> *NULL_POINTER* , MAY
// p -> _l_1[0] , MAY

   while (n!=nil) {

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// _l_1_2__1[0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1[0][0].next -> _l_1_2__1_2__1[0][0][0] , MAY
// _l_1_2__1_2__1[0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1[0][0][0].next -> _l_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> _l_1_2__1_2__1_2__1_2__1[0]
//    [0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL_POINTER*
//     , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// l -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// l -> undefined , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// n -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// n -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// n -> _l_1[0] , MAY
// n -> _l_1_2__1[0][0] , MAY
// n -> _l_1_2__1_2__1[0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1[0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// nil -> *NULL_POINTER* , EXACT
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _l_1[0] , MAY
// p -> _l_1_2__1[0][0] , MAY
// p -> _l_1_2__1_2__1[0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1[0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY

      n = n->next;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// _l_1_2__1[0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1[0][0].next -> _l_1_2__1_2__1[0][0][0] , MAY
// _l_1_2__1_2__1[0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1[0][0][0].next -> _l_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> _l_1_2__1_2__1_2__1_2__1[0]
//    [0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL_POINTER*
//     , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// l -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// l -> undefined , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// n -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// n -> *NULL_POINTER* , MAY
// n -> _l_1_2__1[0][0] , MAY
// n -> _l_1_2__1_2__1[0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1[0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// nil -> *NULL_POINTER* , EXACT
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _l_1[0] , MAY
// p -> _l_1_2__1[0][0] , MAY
// p -> _l_1_2__1_2__1[0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1[0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// p -> _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY

      free(p);

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// _l_1_2__1[0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1[0][0].next -> _l_1_2__1_2__1[0][0][0] , MAY
// _l_1_2__1_2__1[0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1[0][0][0].next -> _l_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1[0][0][0][0].next -> _l_1_2__1_2__1_2__1_2__1[0]
//    [0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL_POINTER*
//     , MAY
// _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    *NULL_POINTER* , MAY
// _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// l -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// l -> undefined , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// n -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// n -> *NULL_POINTER* , MAY
// n -> _l_1_2__1[0][0] , MAY
// n -> _l_1_2__1_2__1[0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1[0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// n -> _l_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// nil -> *NULL_POINTER* , EXACT
// p -> undefined , EXACT

      p = n;
   }

// Points To:
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// n -> *NULL_POINTER* , EXACT
// nil -> *NULL_POINTER* , EXACT
// p -> *NULL_POINTER* , MAY
// p -> _l_1[0] , MAY

   return;
}
