
POINTS TO for "main"


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i, j, k;

// Points To: none

   float x, y;
   //syst * my_syst;
   //part * curr_part1, *curr_part2;
   
   // initializations

// Points To: none

   syst *my_syst = (syst *) malloc(sizeof(syst));

// Points To:
// *HEAP*_l_44.tab_dom[*] -> undefined , EXACT
// my_syst -> *HEAP*_l_44 , MAY

   for(i = 0; i <= 9; i += 1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

      (my_syst->tab_dom)[i] = (dom *) malloc(sizeof(dom));

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

      for(j = 0; j <= 99; j += 1)

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

         ((my_syst->tab_dom)[i]->tab_part)[j] = (part *) malloc(sizeof(part));
   }

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

   x = 0;

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

   y = 0;

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

   
   // computations
   for(i = 0; i <= 9; i += 1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

      dom *curr_dom = (my_syst->tab_dom)[i];

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// curr_dom -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY


      for(j = 0; j <= 99; j += 1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// curr_dom -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

         part *curr_part1;

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// curr_dom -> undefined , MAY
// 0`2`3`curr_part1 -> undefined , EXACT
// my_syst -> *HEAP*_l_44 , MAY

         curr_part1 = (curr_dom->tab_part)[j];

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`3`curr_part1 -> *HEAP*_l_48 , MAY
// 0`2`3`curr_part1 -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY


         curr_part1->x = x+0.01*(float) j;

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`3`curr_part1 -> *HEAP*_l_48 , MAY
// my_syst -> *HEAP*_l_44 , MAY

         curr_part1->y = y+0.01*(float) j;
      }

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// curr_dom -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY


      for(j = 0; j <= 99; j += 1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// curr_dom -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

         part *curr_part1 = (curr_dom->tab_part)[j];

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`4`curr_part1 -> *HEAP*_l_48 , MAY
// 0`2`4`curr_part1 -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY


         for(k = j+1; k <= 99; k += 1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`4`curr_part1 -> *HEAP*_l_48 , MAY
// 0`2`4`curr_part1 -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

            part *curr_part2 = (curr_dom->tab_part)[k];

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`4`curr_part1 -> *HEAP*_l_48 , MAY
// 0`2`4`curr_part1 -> undefined , MAY
// curr_part2 -> *HEAP*_l_48 , MAY
// curr_part2 -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY


            if (dist(curr_part1, curr_part2)<0.1) {

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`4`curr_part1 -> *HEAP*_l_48 , MAY
// curr_part2 -> *HEAP*_l_48 , MAY
// my_syst -> *HEAP*_l_44 , MAY

               curr_part1->x_new = curr_part1->x-0.1;

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// curr_dom -> *HEAP*_l_46 , MAY
// 0`2`4`curr_part1 -> *HEAP*_l_48 , MAY
// curr_part2 -> *HEAP*_l_48 , MAY
// my_syst -> *HEAP*_l_44 , MAY

               curr_part1->y_new = curr_part1->y-0.1;
            }
         }
      }
   }

// Points To:
// *HEAP*_l_44.tab_dom[*] -> *HEAP*_l_46 , MAY
// *HEAP*_l_44.tab_dom[*] -> undefined , MAY
// *HEAP*_l_46.tab_part[*] -> *HEAP*_l_48 , MAY
// *HEAP*_l_46.tab_part[*] -> undefined , MAY
// my_syst -> *HEAP*_l_44 , MAY

   
   // final IOs (& free()...)
   
   return 0;
}

