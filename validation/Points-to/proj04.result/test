
PROPER EFFECTS

int main(void)
{
//             <    is written>: i j
   int i = 0, j = 0;
//             <    is written>: pp
   int **pp = (void *) 0;
//             <    is read   >: __TIME_EFFECTS:KALI
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __TIME_EFFECTS:KALI

   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
   if (alea()) {
//             <    is written>: pi
      int *pi = &i;
//             <    is written>: pp
      pp = &pi;
   }
   else {
//             <    is written>: pj
      int *pj = &j;
//             <    is written>: pp
      pp = &pj;
   }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pp stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

   printf("pp=%p\n", pp);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: pp
   
   // possible segfault.
   // should generate an error while analyzing?
   **pp = 0;
   return 0;
}

PROPER POINTER EFFECTS

int main(void)
{
//             <    is written>: i j
   int i = 0, j = 0;
//             <    is written>: pp
   int **pp = (void *) 0;
//             <    is read   >: __TIME_EFFECTS:KALI
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __TIME_EFFECTS:KALI

   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
   if (alea()) {
//             <    is written>: pi
      int *pi = &i;
//             <    is written>: pp
      pp = &pi;
   }
   else {
//             <    is written>: pj
      int *pj = &j;
//             <    is written>: pp
      pp = &pj;
   }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pp stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

   printf("pp=%p\n", pp);
//             <    is read   >: pp pp[0]
//             <    is written>: pp[0][0]
   
   // possible segfault.
   // should generate an error while analyzing?
   **pp = 0;
   return 0;
}

POINTS TO


// Points To IN: none


// Points To OUT: unreachable

int main(void)
{

// Points To: none

   int i = 0, j = 0;

// Points To: none

   int **pp = (void *) 0;

// Points To:
// pp -> *NULL* , EXACT


   srand(time((void *) 0));

// Points To:
// pp -> *NULL* , EXACT

   if (alea()) {

// Points To:
// pp -> *NULL* , EXACT

      int *pi = &i;

// Points To:
// pi -> i , EXACT
// pp -> *NULL* , EXACT

      pp = &pi;
   }
   else {

// Points To:
// pp -> *NULL* , EXACT

      int *pj = &j;

// Points To:
// pj -> j , EXACT
// pp -> *NULL* , EXACT

      pp = &pj;
   }

// Points To:
// pp -> undefined , EXACT


   printf("pp=%p\n", pp);

// Points To: unreachable

   
   // possible segfault.
   // should generate an error while analyzing?
   **pp = 0;

// Points To: unreachable

   return 0;
}
