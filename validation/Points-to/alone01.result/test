
POINTS-TO


// Points To IN: none


// Points To OUT:
// aligned_malloc -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY

void * aligned_malloc(size_t size, size_t align_size)
{

// Points To: none

   // BEGIN BLOCK


// Points To: none

   char *ptr, *ptr2, *aligned_ptr;

// Points To:
// aligned_ptr -> undefined , EXACT
// ptr -> undefined , EXACT
// ptr2 -> undefined , EXACT

   int align_mask = align_size-1;

// Points To:
// aligned_ptr -> undefined , EXACT
// ptr -> undefined , EXACT
// ptr2 -> undefined , EXACT


   ptr = (char *) malloc(size+align_size+sizeof(int));

// Points To:
// aligned_ptr -> undefined , EXACT
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> undefined , EXACT

   if (ptr==(void *) 0)

// Points To: unreachable

      return (void *) 0;

// Points To:
// aligned_ptr -> undefined , EXACT
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> undefined , EXACT


   ptr2 = ptr+sizeof(int);

// Points To:
// aligned_ptr -> undefined , EXACT
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> *HEAP*_l_262[*] , MAY

   aligned_ptr = ptr2+(align_size-((size_t) ptr2&align_mask));

// Points To:
// aligned_ptr -> *HEAP*_l_262[*] , MAY
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> *HEAP*_l_262[*] , MAY

   
   
   ptr2 = aligned_ptr-sizeof(int);

// Points To:
// aligned_ptr -> *HEAP*_l_262[*] , MAY
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> *HEAP*_l_262[*] , MAY

   *((int *) ptr2) = (int) (aligned_ptr-ptr);

// Points To:
// aligned_ptr -> *HEAP*_l_262[*] , MAY
// ptr -> *HEAP*_l_262[0] , MAY
// ptr2 -> *HEAP*_l_262[*] , MAY


   return (void *) aligned_ptr;
   // END BLOCK
}
