
Points-to for "list_next"


// Points To IN:
// _l_1[0].next -> *NULL* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> *NULL* , MAY
// l -> _l_1[0] , MAY
// nil -> *NULL* , EXACT


// Points To OUT:
// _l_1[0].next -> *NULL* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> *NULL* , MAY
// l -> _l_1[0] , MAY
// list_next -> *NULL* , MAY
// list_next -> _l_1_2__1[0][0] , MAY
// nil -> *NULL* , EXACT

list list_next(list l)
{

// Points To: none

   list n;

// Points To:
// _l_1[0].next -> *NULL* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> *NULL* , MAY
// l -> _l_1[0] , MAY
// n -> undefined , EXACT
// nil -> *NULL* , EXACT

   if (l==nil)

// Points To:
// l -> *NULL* , EXACT
// n -> undefined , EXACT
// nil -> *NULL* , EXACT

      n = nil;
   else

// Points To:
// _l_1[0].next -> *NULL* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> _l_1[0] , EXACT
// n -> undefined , EXACT
// nil -> *NULL* , EXACT

      n = l->next;

// Points To:
// _l_1[0].next -> *NULL* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> *NULL* , MAY
// l -> _l_1[0] , MAY
// n -> *NULL* , MAY
// n -> _l_1_2__1[0][0] , MAY
// nil -> *NULL* , EXACT

   return n;
}

Proper effects for "list_next"

list list_next(list l)
{
   list n;
//             <    is read   >: l nil
   if (l==nil)
//             <    is read   >: nil
//             <    is written>: n
      n = nil;
   else
//             <    is read   >: _l_1[0].next l
//             <    is written>: n
      n = l->next;
//             <    is read   >: n
   return n;
}

Cumulated effects for "list_next"

//             <may be read   >: _l_1[0].next
//             <    is read   >: l nil
list list_next(list l)
{
   list n;
//             <may be read   >: _l_1[0].next
//             <    is read   >: l nil
//             <    is written>: n
   if (l==nil)
//             <    is read   >: nil
//             <    is written>: n
      n = nil;
   else
//             <    is read   >: _l_1[0].next l
//             <    is written>: n
      n = l->next;
//             <    is read   >: n
   return n;
}

Points-to for "list_len"


// Points To IN:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT


// Points To OUT:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

int list_len(list ll)
{

// Points To: none

   int n = 0;

// Points To:
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY

   list c = ll;

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1[0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1[0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1[0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1[0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT

   c = list_next(c);

// Points To:
// _ll_1[0].next -> *NULL* , MAY
// _ll_1[0].next -> _ll_1_2__1[0][0] , MAY
// _ll_1_2__1[0][0].next -> *NULL* , MAY
// _ll_1_2__1[0][0].next -> _ll_1_2__1_2__1[0][0][0] , MAY
// _ll_1_2__1_2__1[0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1[0][0][0].next -> _ll_1_2__1_2__1_2__1[0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1[0][0][0][0].next -> _ll_1_2__1_2__1_2__1_2__1[
//    0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1[0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> *NULL*
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].
//    next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0
//    ][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][
//    0][0].next -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1
//    [0][0][0][0][0][0][0][0][0][0] , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> *NULL* , MAY
// _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0
//    ][0][0][0][0].next -> 
//    _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0
//    ][0][0][0][0][0] , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0]
//    [0][0][0][0][0][0] , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1[0] , MAY
// nil -> *NULL* , EXACT


   return n;
}

Errors and warnings: none expected

