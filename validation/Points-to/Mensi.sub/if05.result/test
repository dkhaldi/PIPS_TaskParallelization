
POINTS TO for "init"


// Points To IN:
// p -> *NULL* , MAY
// p -> _p_1 , MAY


// Points To OUT:
// p -> _p_1 , EXACT

void init(int *p)
{

// Points To:
// p -> *NULL* , MAY
// p -> _p_1 , MAY

   if (p==(void *) 0)

// Points To:
// p -> *NULL* , EXACT

      exit(1);
   else

// Points To:
// p -> _p_1 , EXACT

      *p = 0;
}

Proper effects with points-to for "init"

void init(int *p)
{
//             <    is read   >: p
   if (p==(void *) 0)
      exit(1);
   else
//             <    is read   >: p
//             <    is written>: _p_1
      *p = 0;
}

Cumulated effects with points-to for "init"

//             <may be written>: _p_1
//             <    is read   >: p
void init(int *p)
{
//             <may be written>: _p_1
//             <    is read   >: p
   if (p==(void *) 0)
      exit(1);
   else
//             <    is read   >: p
//             <    is written>: _p_1
      *p = 0;
}

POINTS TO for "main"


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int init_p = 1;

// Points To: none

   int *q = (void *) 0;

// Points To:
// q -> *NULL* , EXACT

   if (init_p)

// Points To:
// q -> *NULL* , EXACT

      q = &init_p;

// Points To:
// q -> *NULL* , MAY
// q -> init_p , MAY

   init(q);

// Points To:
// q -> init_p , EXACT

   return 0;
}
(activate_phase) Rule `INTERPROCEDURAL_POINTS_TO_ANALYSIS' already active
