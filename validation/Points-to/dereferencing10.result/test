
Proper effetcs for "dereferencing10"

int main()
{
   int ****p, ***p_1, **p_2, *p_3;
   int i, j;
   int ***q_1, **q_2, *q_3;
//             <    is written>: i
   i = 0;
//             <    is written>: j
   j = 1;
//             <    is written>: p_3
   p_3 = &i;
//             <    is written>: q_3
   q_3 = &j;
//             <    is written>: p_2
   p_2 = &p_3;
//             <    is written>: q_2
   q_2 = &q_3;
//             <    is written>: p_1
   p_1 = &p_2;
//             <    is written>: q_1
   q_1 = &q_2;
//             <    is written>: p
   p = &p_1;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   ***p = q_3;
   
   
   
   
   return 0;
}

Proper Pointer effetcs for "dereferencing10"

int main()
{
   int ****p, ***p_1, **p_2, *p_3;
   int i, j;
   int ***q_1, **q_2, *q_3;
//             <    is written>: i
   i = 0;
//             <    is written>: j
   j = 1;
//             <    is written>: p_3
   p_3 = &i;
//             <    is written>: q_3
   q_3 = &j;
//             <    is written>: p_2
   p_2 = &p_3;
//             <    is written>: q_2
   q_2 = &q_3;
//             <    is written>: p_1
   p_1 = &p_2;
//             <    is written>: q_1
   q_1 = &q_2;
//             <    is written>: p
   p = &p_1;
//             <    is read   >: p p[0] p[0][0] q_3
//             <    is written>: p[0][0][0]
   ***p = q_3;
   
   
   
   
   return 0;
}

POINTS TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int ****p, ***p_1, **p_2, *p_3;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> undefined , EXACT

   int i, j;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> undefined , EXACT

   int ***q_1, **q_2, *q_3;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> undefined , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> undefined , EXACT

   i = 0;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> undefined , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> undefined , EXACT

   j = 1;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> undefined , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> undefined , EXACT

   p_3 = &i;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> i , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> undefined , EXACT

   q_3 = &j;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> undefined , EXACT
// p_3 -> i , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> j , EXACT

   p_2 = &p_3;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> i , EXACT
// q_1 -> undefined , EXACT
// q_2 -> undefined , EXACT
// q_3 -> j , EXACT

   q_2 = &q_3;

// Points To:
// p -> undefined , EXACT
// p_1 -> undefined , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> i , EXACT
// q_1 -> undefined , EXACT
// q_2 -> q_3 , EXACT
// q_3 -> j , EXACT

   p_1 = &p_2;

// Points To:
// p -> undefined , EXACT
// p_1 -> p_2 , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> i , EXACT
// q_1 -> undefined , EXACT
// q_2 -> q_3 , EXACT
// q_3 -> j , EXACT

   q_1 = &q_2;

// Points To:
// p -> undefined , EXACT
// p_1 -> p_2 , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> i , EXACT
// q_1 -> q_2 , EXACT
// q_2 -> q_3 , EXACT
// q_3 -> j , EXACT

   p = &p_1;

// Points To:
// p -> p_1 , EXACT
// p_1 -> p_2 , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> i , EXACT
// q_1 -> q_2 , EXACT
// q_2 -> q_3 , EXACT
// q_3 -> j , EXACT

   ***p = q_3;

// Points To:
// p -> p_1 , EXACT
// p_1 -> p_2 , EXACT
// p_2 -> p_3 , EXACT
// p_3 -> j , EXACT
// q_1 -> q_2 , EXACT
// q_2 -> q_3 , EXACT
// q_3 -> j , EXACT

   
   
   
   
   return 0;
}
