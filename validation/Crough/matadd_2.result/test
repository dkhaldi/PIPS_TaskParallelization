! This is mainly to test that a random lower/uppercase works between
! Fortran and C with CROGH called from C_PRINTED_FILE
      PROGRAM MATADD
      INTEGER M
      INTEGER N
      PARAMETER (M = 402, N = 160)
      INTEGER I, J
      REAL A(M, N), B(M, N), C(M, N)

      DO I = 1, M                                                       0010
         DO J = 1, N                                                    0011
            B(I,J) = I                                                  0012
            C(I,J) = J                                                  0013
         ENDDO
      ENDDO

      DO I = 1, M                                                       0017
         DO J = 1, N                                                    0018
            A(I,J) = B(I,J)+C(I,J)                                      0019
         ENDDO
      ENDDO

      END
/* C pretty print for module MATADD. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

int
main (int argc, char *argv[])
{
  static const int m = 402;
  static const int n = 160;
  int i;
  int j;
  float a[160][402];
  float b[160][402];
  float c[160][402];

  for (i = 1; i <= m; i++)
    {
      for (j = 1; j <= n; j++)
	{
	  b[j - 1][i - 1] = i;
	  c[j - 1][i - 1] = j;
	}
    }
  for (i = 1; i <= m; i++)
    {
      for (j = 1; j <= n; j++)
	{
	  a[j - 1][i - 1] = (b[j - 1][i - 1] + c[j - 1][i - 1]);
	}
    }
  return 0;
}
