
// IN Pointer values: none


// OUT Pointer values: none

int main()
{

// Pointer values: none

   int i;

// Pointer values: none

   mystruct s1, s2;

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);


   i = 0;

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);

   do {

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);

      mystruct tab_s[2];

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[*].a == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[*].b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[*].c == *ANY_MODULE*:*UNDEFINED* (exact);

      tab_s[0] = s1;

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[0].a == s1.a (exact);
// tab_s[0].b[*] == s1.b[*] (may);
// tab_s[0].c == s1.c (exact);
// tab_s[*].a == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].b[*] == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].c == *ANY_MODULE*:*UNDEFINED* (may);

      tab_s[1] = s1;

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[0].a == s1.a (exact);
// tab_s[0].b[*] == s1.b[*] (may);
// tab_s[0].c == s1.c (exact);
// tab_s[1].a == s1.a (exact);
// tab_s[1].b[*] == s1.b[*] (may);
// tab_s[1].c == s1.c (exact);
// tab_s[*].a == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].b[*] == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].c == *ANY_MODULE*:*UNDEFINED* (may);

      tab_s[1] = s2;

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);
// tab_s[0].a == s1.a (exact);
// tab_s[0].b[*] == s1.b[*] (may);
// tab_s[0].c == s1.c (exact);
// tab_s[1].a == s2.a (exact);
// tab_s[1].b[*] == s2.b[*] (may);
// tab_s[1].c == s2.c (exact);
// tab_s[*].a == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].b[*] == *ANY_MODULE*:*UNDEFINED* (may);
// tab_s[*].c == *ANY_MODULE*:*UNDEFINED* (may);

      i++;
   }
   while (i<10);

// Pointer values:
// s1.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s1.c == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.a == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.b[*] == *ANY_MODULE*:*UNDEFINED* (exact);
// s2.c == *ANY_MODULE*:*UNDEFINED* (exact);

   return 0;
}
