
Cumulated Effects

//             <    is read   >: p[2].N1 p[2].N2
//             <    is written>: p[1].N1 p[1].N2
int main(int argc, char *argv[])
{
//             <    is read   >: p[2].N1 p[2].N2
//             <    is written>: p[1].N1 p[1].N2
   //p[2].N1 = 1;
   //p[2].N2 = 2;
   p[1] = p[2];
   return 0;
}

Transformers


//  T(main,p[1][N1],p[1][N2]) {main==0, p[1][N1]==p[2][N1],
//    p[1][N2]==p[2][N2]}

int main(int argc, char *argv[])
{

//  T(p[1][N1],p[1][N2]) {p[1][N1]==p[2][N1], p[1][N2]==p[2][N2]}

   //p[2].N1 = 1;
   //p[2].N2 = 2;
   p[1] = p[2];

//  T(main) {main==0}

   return 0;
}

Preconditions


//  P() {}

int main(int argc, char *argv[])
{

//  P() {}

   //p[2].N1 = 1;
   //p[2].N2 = 2;
   p[1] = p[2];

//  P(p[1][N1],p[1][N2]) {p[1][N1]==p[2][N1], p[1][N2]==p[2][N2]}

   return 0;
}
