
Codes with TRANSFORMERS for functions


//  T() {}

void STAP_Mat_Invert(int ntt, int nsa, Cplfloat mat[ntt][nsa][ntt][nsa], Cplfloat matinv[ntt][nsa][ntt][nsa])
{


//  T() {}

   double inv[ntt*nsa+1][2*ntt*nsa+1][3];

//  T() {}

   float pivot[3], coef[3];

//  T() {}

   float re, im;


//  T(i1,i2,j,j1,j2,k1,k2,l1,l2) {i1==0, i2==0, j==0, j1==0, j2==0,
//    k1==0, k2==0, l1==0, l2==0}

   int i, i1 = 0, i2 = 0, j = 0, j1 = 0, j2 = 0, k, k1 = 0, k2 = 0, l, l1 = 0, l2 = 0;

//  T(i,i1,i2,j,j1,j2,k,k1,l) {i1#init==0, i2#init==0, j#init==0,
//    j1#init==0, j2#init==0, k1==1, k1#init==0, k2==0, l1==0, l2==0}

   
   // MOTIF
   for(k1 = 1; k1 <= 1; k1 += 1) {

//  T(i1,i2,j1,j2) {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt}

      for(i1 = 0; i1 <= ntt-1; i1 += 1)

//  T(i2,j1,j2) {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa}

         for(i2 = 0; i2 <= nsa-1; i2 += 1)

//  T(j1,j2) {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt}

            for(j1 = 0; j1 <= ntt-1; j1 += 1)

//  T(j2) {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

               for(j2 = 0; j2 <= nsa-1; j2 += 1) {

//  T() {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

                  inv[i1*nsa+i2+1][j1*nsa+j2+1][1] = mat[i1][i2][j1][j2].re;

//  T() {k1==1, k2==0, l1==0, l2==0, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

                  inv[i1*nsa+i2+1][j1*nsa+j2+1][2] = mat[i1][i2][j1][j2].im;
               }

//  T(i,j) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

      for(i = 1; i <= nsa*ntt+1-1; i += 1)

//  T(j) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1, 1<=j}

         for(j = 1; j <= nsa*ntt+1-1; j += 1)

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1, 1<=j}

            if (i==j) {

//  T() {i==j, k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

               inv[i][nsa*ntt+j][1] = 1.0;

//  T() {i==j, k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

               inv[i][nsa*ntt+j][2] = 0.0;
            }
            else {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 3<=i+j, 0<=i1, ntt<=i1,
//    1<=j}

               inv[i][nsa*ntt+j][1] = 0.0;

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 3<=i+j, 0<=i1, ntt<=i1,
//    1<=j}

               inv[i][nsa*ntt+j][2] = 0.0;
            }

//  T(i,j,k,l) {k1==1, k2==0, l1==0, l2==0, 1<=i, 1<=i#init, 0<=i1,
//    ntt<=i1}

      for(i = 1; i <= ntt*nsa+1-1; i += 1) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

         pivot[1] = inv[i][i][1];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

         pivot[2] = inv[i][i][2];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}


         if (pivot[1]==0.) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, ntt<=i1}

            printf("\n Pivot nul re = %f , im = %f\n", pivot[1], pivot[2]);

//  T() {0==-1}

            exit(0);
         }

//  T(j) {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1}

         for(j = i; j <= 2*ntt*nsa+1-1; j += 1) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1}

            re = inv[i][j][1];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1}

            im = inv[i][j][2];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1}

            inv[i][j][1] = (re*pivot[1]+im*pivot[2])/(pivot[1]*pivot[1]+pivot[2]*pivot[2]);

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1}

            inv[i][j][2] = (im*pivot[1]-re*pivot[2])/(pivot[1]*pivot[1]+pivot[2]*pivot[2]);
         }

//  T(k,l) {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1,
//    1<=k}

         
         
         for(k = 1; k <= ntt*nsa+1-1; k += 1)

//  T(l) {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 0<=i1, ntt<=i1,
//    1<=k}

            if (i!=k) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 3<=i+k, 0<=i1,
//    ntt<=i1, 1<=k}

               coef[1] = inv[k][i][1];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 3<=i+k, 0<=i1,
//    ntt<=i1, 1<=k}

               coef[2] = inv[k][i][2];

//  T(l) {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 3<=i+k, i<=l, 0<=i1,
//    ntt<=i1, 1<=k}


               for(l = i; l <= 2*ntt*nsa+1-1; l += 1) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 3<=i+k, i<=l, 0<=i1,
//    ntt<=i1, 1<=k}

                  inv[k][l][1] -= coef[1]*inv[i][l][1]-coef[2]*inv[i][l][2];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, i<=j, 3<=i+k, i<=l, 0<=i1,
//    ntt<=i1, 1<=k}

                  inv[k][l][2] -= coef[1]*inv[i][l][2]+coef[2]*inv[i][l][1];
               }
            }
      }

//  T(i1,i2,j1,j2) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1,
//    i1+1<=ntt, 0<=i1#init, ntt<=i1#init}

      
      
      for(i1 = 0; i1 <= ntt-1; i1 += 1)

//  T(i2,j1,j2) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, i1+1<=ntt,
//    0<=i2, i2+1<=nsa}

         for(i2 = 0; i2 <= nsa-1; i2 += 1)

//  T(j1,j2) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, i1+1<=ntt,
//    0<=i2, i2+1<=nsa, 0<=j1, j1+1<=ntt}

            for(j1 = 0; j1 <= ntt-1; j1 += 1)

//  T(j2) {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

               for(j2 = 0; j2 <= nsa-1; j2 += 1) {

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

                  matinv[i1][i2][j1][j2].re = (float) inv[i1*nsa+i2+1][j1*nsa+j2+nsa*ntt+1][1];

//  T() {k1==1, k2==0, l1==0, l2==0, 1<=i, 0<=i1, i1+1<=ntt, 0<=i2,
//    i2+1<=nsa, 0<=j1, j1+1<=ntt, 0<=j2, j2+1<=nsa}

                  matinv[i1][i2][j1][j2].im = (float) inv[i1*nsa+i2+1][j1*nsa+j2+nsa*ntt+1][2];
               }
   }
}
