
Points-to


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i, j, *p, *q;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT


   if (rand()) {

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT

      p = &i;

// Points To:
// p -> i , EXACT
// q -> undefined , EXACT

      q = &j;
   }
   else {

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT

      p = &j;

// Points To:
// p -> j , EXACT
// q -> undefined , EXACT

      q = &i;
   }

// Points To:
// p -> i , MAY
// p -> j , MAY
// q -> i , MAY
// q -> j , MAY


   return 0;
}

PROPER  EFFECTS

int main()
{
   int i, j, *p, *q;
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED

   if (rand()) {
//             <    is written>: p
      p = &i;
//             <    is written>: q
      q = &j;
   }
   else {
//             <    is written>: p
      p = &j;
//             <    is written>: q
      q = &i;
   }

   return 0;
}

Transformers with point-to


//  T(main) {main==0}

int main()
{

//  T() {}

   int i, j, *p, *q;

//  T(p,q) {&i+&j==p+q}


   if (rand()) {

//  T(p) {&i==p}

      p = &i;

//  T(q) {&i==p, &j==q}

      q = &j;
   }
   else {

//  T(p) {&j==p}

      p = &j;

//  T(q) {&i==q, &j==p}

      q = &i;
   }

//  T(main) {&i+&j==p+q, main==0}


   return 0;
}

Preconditions with point-to


//  P() {}

int main()
{

//  P() {}

   int i, j, *p, *q;

//  P() {}


   if (rand()) {

//  P() {}

      p = &i;

//  P(p) {&i==p}

      q = &j;
   }
   else {

//  P() {}

      p = &j;

//  P(p) {&j==p}

      q = &i;
   }

//  P(p,q) {&i+&j==p+q}


   return 0;
}

Warnings

