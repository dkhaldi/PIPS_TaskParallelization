
Points-to inc01b


// Points To IN: none


// Points To OUT: none

int inc01b()
{

// Points To: none

   int i = 0;

// Points To: none

   int *p;

// Points To:
// p -> undefined , EXACT


   p = &i;

// Points To:
// p -> i , EXACT

   (*p)++;

// Points To:
// p -> i , EXACT

   // Here, i==1
   return i;
}

PROPER EFFECTS inc01b

int inc01b()
{
//             <    is written>: i
   int i = 0;
   int *p;
//             <    is written>: p

   p = &i;
//             <    is read   >: i p
//             <    is written>: i
   (*p)++;
//             <    is read   >: i
   // Here, i==1
   return i;
}

CUMULATED EFFECTS inc01b

int inc01b()
{
//             <    is written>: i
   int i = 0;
   int *p;
//             <    is written>: p

   p = &i;
//             <    is read   >: i p
//             <    is written>: i
   (*p)++;
//             <    is read   >: i
   // Here, i==1
   return i;
}

Transformers with point-to inc01b


//  T(inc01b) {inc01b==1}

int inc01b()
{

//  T(i) {i==0}

   int i = 0;

//  T() {i==0}

   int *p;

//  T(p) {&i==p, i==0}


   p = &i;

//  T(i) {&i==p, i==1, i#init==0}

   (*p)++;

//  T(inc01b) {&i==p, i==1, inc01b==1}

   // Here, i==1
   return i;
}

Preconditions with point-to inc01b


//  P() {}

int inc01b()
{

//  P() {}

   int i = 0;

//  P(i) {i==0}

   int *p;

//  P(i) {i==0}


   p = &i;

//  P(i,p) {&i==p, i==0}

   (*p)++;

//  P(i,p) {&i==p, i==1}

   // Here, i==1
   return i;
}
