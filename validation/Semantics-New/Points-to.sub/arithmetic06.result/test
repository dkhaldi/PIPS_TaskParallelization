
Points-to


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int a[10], i = 2;

// Points To: none

   int *p, *q;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT


   q = &a[0];

// Points To:
// p -> undefined , EXACT
// q -> a[0] , EXACT

   p = q+i;

// Points To:
// p -> a[*] , MAY
// q -> a[0] , EXACT


   return 0;
}

PROPER  EFFECTS

int main()
{
//             <    is written>: i
   int a[10], i = 2;
   int *p, *q;
//             <    is written>: q

   q = &a[0];
//             <    is read   >: i q
//             <    is written>: p
   p = q+i;

   return 0;
}

Transformers with point-to


//  T(main) {main==0}

int main()
{

//  T(i) {i==2}

   int a[10], i = 2;

//  T() {i==2}

   int *p, *q;

//  T(q) {&a[0]==q, i==2}


   q = &a[0];

//  T(p) {&a[0]+2sizeof(int)==p, &a[0]==q, i==2}

   p = q+i;

//  T(main) {&a[0]+2sizeof(int)==p, &a[0]==q, i==2, main==0}


   return 0;
}

Preconditions with point-to


//  P() {}

int main()
{

//  P() {}

   int a[10], i = 2;

//  P(i) {i==2}

   int *p, *q;

//  P(i) {i==2}


   q = &a[0];

//  P(i,q) {&a[0]==q, i==2}

   p = q+i;

//  P(i,p,q) {&a[0]+2sizeof(int)==p, &a[0]==q, i==2}


   return 0;
}

Warnings

TRANSFORMERS_INTER_FULL_WITH_POINTS_TO[main] (have_null_value_in_pointer_expression_p) line 11 
at statement:

	p = q+i;


TODO : Need to check if q is indirectly NULL
TRANSFORMERS_INTER_FULL_WITH_POINTS_TO[main] (pointer_binary_operation_to_transformer) line 11 
at statement:

	p = q+i;


Operator TOP-LEVEL:+C not analyzed
TRANSFORMERS_INTER_FULL_WITH_POINTS_TO[main] (have_null_value_in_pointer_expression_p) line 11 
at statement:

	p = q+i;


TODO : Need to check if q is indirectly NULL
TRANSFORMERS_INTER_FULL_WITH_POINTS_TO[main] (pointer_binary_operation_to_transformer) line 11 
at statement:

	p = q+i;


Operator TOP-LEVEL:+C not analyzed
