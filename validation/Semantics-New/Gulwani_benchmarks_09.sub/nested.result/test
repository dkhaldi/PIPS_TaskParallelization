
TRANSFORMERS


//  T() {}

void nested()
{


//  T() {}

   int x, y, m, t;

//  T() {t==0, y==0, 0<=m}

   if (!(y==0&&m>=0&&t==0))

//  T() {0==-1}

      exit(0);

//  T(t,y) {t#init==0, y#init==0, 1<=m, t<=m, t+1<=m+y, y+1<=m, y<=t,
//    0<=y}


   while (y<m) {

//  T(y) {y==y#init+1, 1<=m, y<=m}

      y++;

//  T(t) {t==0, 1<=m, y<=m}

      t = 0;

//  T(t) {t#init==0, 1<=m, y<=m, 0<=t, t+1<=y, 1<=y}

      while (t<y)

//  T(t) {t==t#init+1, y<=m, t<=y, 1<=y}

         t++;
   }

//  T() {m==t, m==y, 0<=m}

   if (!(t==m))

//  T() {0==-1}

      exit(1);
}

PRECONDITIONS


//  P() {}

void nested()
{


//  P() {}

   int x, y, m, t;

//  P() {}

   if (!(y==0&&m>=0&&t==0))

//  P() {}

      exit(0);

//  P() {t==0, y==0, 0<=m}


   while (y<m) {

//  P(t,y) {t<=m, t+1<=m+y, y+1<=m, y<=t, 0<=y}

      y++;

//  P(t,y) {1<=m, t<=m, t+2<=m+y, y<=m, y<=t+1, 1<=y}

      t = 0;

//  P(t,y) {t==0, 1<=m, y<=m, 1<=y}

      while (t<y)

//  P(t,y) {y<=m, 0<=t, t+1<=y}

         t++;
   }

//  P(t,y) {m==t, m==y, 0<=m}

   if (!(t==m))

//  P() {0==-1}

      exit(1);
}
