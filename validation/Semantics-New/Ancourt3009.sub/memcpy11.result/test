
Points-To for "main"


// Points To IN: none


// Points To OUT: none

int main(int argc, char **argv)
{

// Points To: none

   char buffer_in2[10][10];

// Points To: none

   char buffer_out2[10][10];

// Points To: none


   memcpy(buffer_out2[0], buffer_in2[0], 4);

// Points To: none

   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

// Points To:
// buffer_in2[0] -> buffer_in2[0][0] , EXACT
// buffer_out2[0] -> buffer_out2[0][0] , EXACT


   return 0;
}

Proper effects with points-to for "main"

int main(int argc, char **argv)
{
//             <    is declared>: buffer_in2
   char buffer_in2[10][10];
//             <    is declared>: buffer_out2
   char buffer_out2[10][10];
//             <    is read   >: buffer_in2[0][0:4-1]
//             <    is written>: buffer_out2[0][0:4-1]
//             <    is referenced>: buffer_in2 buffer_out2

   memcpy(buffer_out2[0], buffer_in2[0], 4);
//             <may be read   >: buffer_in2[0][*]
//             <may be written>: buffer_out2[0][*]
//             <    is referenced>: buffer_in2 buffer_out2
   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

   return 0;
}

Cumulated effects with poins-to for "main"

int main(int argc, char **argv)
{
//             <    is declared>: buffer_in2
   char buffer_in2[10][10];
//             <    is declared>: buffer_out2
   char buffer_out2[10][10];
//             <may be read   >: buffer_in2[0][*]
//             <may be written>: buffer_out2[0][*]
//             <    is referenced>: buffer_in2 buffer_out2

   memcpy(buffer_out2[0], buffer_in2[0], 4);
//             <may be read   >: buffer_in2[0][*]
//             <may be written>: buffer_out2[0][*]
//             <    is referenced>: buffer_in2 buffer_out2
   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

   return 0;
}

Transformers for "main"


//  T(main) {main==0}

int main(int argc, char **argv)
{

//  T() {}

   char buffer_in2[10][10];

//  T() {}

   char buffer_out2[10][10];

//  T() {}


   memcpy(buffer_out2[0], buffer_in2[0], 4);

//  T() {}

   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

//  T(main) {main==0}


   return 0;
}

Preconditions for "main"


//  P() {}

int main(int argc, char **argv)
{

//  P() {}

   char buffer_in2[10][10];

//  P() {}

   char buffer_out2[10][10];

//  P() {}


   memcpy(buffer_out2[0], buffer_in2[0], 4);

//  P() {}

   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

//  P() {}


   return 0;
}

Convex array regions with points-to for "main"

int main(int argc, char **argv)
{

//  <buffer_in2-WE-EXACT-{}>

   char buffer_in2[10][10];

//  <buffer_out2-WE-EXACT-{}>

   char buffer_out2[10][10];

//  <buffer_in2-RE-EXACT-{}>
//  <buffer_in2[PHI1][PHI2]-R-EXACT-{PHI1==0, 0<=PHI2, PHI2<=3}>
//  <buffer_out2-RE-EXACT-{}>
//  <buffer_out2[PHI1][PHI2]-W-EXACT-{PHI1==0, 0<=PHI2, PHI2<=3}>


   memcpy(buffer_out2[0], buffer_in2[0], 4);

//  <buffer_in2-RE-EXACT-{}>
//  <buffer_in2[PHI1][PHI2]-R-EXACT-{PHI1==0, 0<=PHI2, PHI2<=3}>
//  <buffer_out2-RE-EXACT-{}>
//  <buffer_out2[PHI1][PHI2]-W-EXACT-{PHI1==0, 0<=PHI2, PHI2<=3}>

   mymemcpy(buffer_out2[0], buffer_in2[0], 4);

   return 0;
}
