
TRANSFORMERS


//  T(main) {main==-1}

int main()
{

//  T(i,j) {i==0, j==0}

   int i = 0, j = 0;

//  T(c) {c==-3, i==0, j==0}

   int c = -3;

//  T(i) {c==-3, i==-1, i#init==0, j==0}


   if (!c>0)

//  T() {0==-1}

      i = 1;
   else

//  T(i) {c==-3, i==-1, i#init==0, j==0}

      i = -1;

//  T(j) {c==-3, i==-1, j==1, j#init==0}


   if (!(c>0))

//  T(j) {c==-3, i==-1, j==1, j#init==0}

      j = 1;
   else

//  T() {0==-1}

      j = -1;

//  T() {c==-3, i==-1, j==1}

   
   // Expected: i==-1, j==1
   printf("i=%d, j=%d\n", i, j);

//  T(main) {c==-3, i==-1, j==1, main==-1}


   return i;
}

PRECONDITIONS


//  P() {}

int main()
{

//  P() {}

   int i = 0, j = 0;

//  P(i,j) {i==0, j==0}

   int c = -3;

//  P(c,i,j) {c==-3, i==0, j==0}


   if (!c>0)

//  P() {0==-1}

      i = 1;
   else

//  P(c,i,j) {c==-3, i==0, j==0}

      i = -1;

//  P(c,i,j) {c==-3, i==-1, j==0}


   if (!(c>0))

//  P(c,i,j) {c==-3, i==-1, j==0}

      j = 1;
   else

//  P() {0==-1}

      j = -1;

//  P(c,i,j) {c==-3, i==-1, j==1}

   
   // Expected: i==-1, j==1
   printf("i=%d, j=%d\n", i, j);

//  P(c,i,j) {c==-3, i==-1, j==1}


   return i;
}
