
TRANSFORMERS


//  T() {0==-1}

void run(void)
{


//  T() {}

   int i, d, c;

//  T(c,d,i) {c==0, d==0, i==0}

   i = d = c = 0;

//  T(c,d,i) {c==0, c#init==0, d==i, d#init==0, i#init==0, 0<=d}


   while (1) {

//  T(c,i) {c+i#init==c#init+i, i#init<=i}

      while (flip())

//  T(c,i) {c==c#init+1, i==i#init+1, c<=0, d<=i}

         if (c<0) {

//  T(c) {c==c#init+1, c<=0}

            c++;

//  T(i) {i==i#init+1, c<=0}

            i++;

//  T() {c<=0, d<=i}

            if (i<d)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {0<=c}

            while (1)

//  T() {0<=c}

               ;

//  T(c,i) {c==1, c#init==0, i==i#init+1, d<=i}

      if (c==0) {

//  T(c) {c==1, c#init==0}

         c++;

//  T(i) {c==1, i==i#init+1}

         i++;

//  T() {c==1, d<=i}

         if (i<d)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {}

         while (1)

//  T() {}

            ;

//  T(c,d) {c==1, c#init+d#init==d+1, d#init<=d, d<=i}

      while (flip())

//  T(c,d) {c==c#init-1, d==d#init+1, 1<=c, d<=i}

         if (c>=2) {

//  T(c) {c==c#init-1, 1<=c}

            c--;

//  T(d) {d==d#init+1, 1<=c}

            d++;

//  T() {1<=c, d<=i}

            if (i<d)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {c<=1}

            while (1)

//  T() {c<=1}

               ;

//  T(c,d) {c==0, c#init==1, d==d#init+1, d<=i}

      if (c==1) {

//  T(c) {c==0, c#init==1, d<=i}

         c--;

//  T(d) {c==0, d==d#init+1, d<=i+1}

         d++;

//  T() {c==0, d<=i}

         if (i<d)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {0==-1}

         while (1)

//  T() {0==-1}

            ;
   }
}

PRECONDITIONS


//  P() {}

void run(void)
{


//  P() {}

   int i, d, c;

//  P() {}

   i = d = c = 0;

//  P(c,d,i) {c==0, d==0, i==0}


   while (1) {

//  P(c,d,i) {c==0, d==i, 0<=d}

      while (flip())

//  P(c,d,i) {c==0, d==i, 0<=d}

         if (c<0) {

//  P() {0==-1}

            c++;

//  P() {0==-1}

            i++;

//  P() {0==-1}

            if (i<d)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(c,d,i) {c==0, d==i, 0<=d}

            while (1)

//  P(c,d,i) {c==0, d==i, 0<=d}

               ;

//  P(c,d,i) {c==0, d==i, 0<=d}

      if (c==0) {

//  P(c,d,i) {c==0, d==i, 0<=d}

         c++;

//  P(c,d,i) {c==1, d==i, 0<=d}

         i++;

//  P(c,d,i) {c==1, d==i-1, 0<=d}

         if (i<d)

//  P() {0==-1}

            checking_error();
      }
      else

//  P() {0==-1}

         while (1)

//  P() {0==-1}

            ;

//  P(c,d,i) {c==1, d==i-1, 0<=d}

      while (flip())

//  P(c,d,i) {c==1, d==i-1, 0<=d}

         if (c>=2) {

//  P() {0==-1}

            c--;

//  P() {0==-1}

            d++;

//  P() {0==-1}

            if (i<d)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(c,d,i) {c==1, d==i-1, 0<=d}

            while (1)

//  P(c,d,i) {c==1, d==i-1, 0<=d}

               ;

//  P(c,d,i) {c==1, d==i-1, 0<=d}

      if (c==1) {

//  P(c,d,i) {c==1, d==i-1, 0<=d}

         c--;

//  P(c,d,i) {c==0, d==i-1, 0<=d}

         d++;

//  P(c,d,i) {c==0, d==i, 1<=d}

         if (i<d)

//  P() {0==-1}

            checking_error();
      }
      else

//  P() {0==-1}

         while (1)

//  P() {0==-1}

            ;
   }
}
