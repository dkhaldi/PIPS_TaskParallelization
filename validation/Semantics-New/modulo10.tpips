setenv WS=modulo10

# Issue: if REFINE_TRANSFORMERS is not applied before getting the
# preconditions, the preconditions are more precise after inlining

# This is logical because the inlining implies a recomputation of the
# transformers and because the interprocedural preconditions are then
# available and because the transformers must be computed in context,
# i.e. using whatever precondition is available.

# FI: I have to think more about the in context option and the
# availability of the preconditions.

delete $WS

setproperty ABORT_ON_USER_ERROR TRUE

create $WS $WS.c
setproperty UNSPAGHETTIFY_TEST_RESTRUCTURING TRUE
setproperty SEMANTICS_FIX_POINT_OPERATOR "derivative"
setproperty UNSPAGHETTIFY_RECURSIVE_DECOMPOSITION TRUE
setproperty ALIASING_ACROSS_IO_STREAMS FALSE
setproperty SEMANTICS_COMPUTE_TRANSFORMERS_IN_CONTEXT TRUE
setproperty CONSTANT_PATH_EFFECTS FALSE
setproperty MEMORY_EFFECTS_ONLY FALSE


echo
echo Source code unrolled
echo
setproperty LOOP_LABEL "unroll"
setproperty UNROLL_RATE 4
apply UNROLL[kernel]




echo
echo Source code with transformers
echo
activate PRINT_CODE_TRANSFORMERS
display PRINTED_FILE[kernel]

echo
echo Source code with preconditions
echo
apply REFINE_TRANSFORMERS[%ALLFUNC]
activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[kernel]


echo
echo Source code with preconditions after inlining !
echo
apply INLINING[kernel]
#activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[main]


close

echo
echo Warnings
echo

shell cat $WS.database/Warnings

#delete $WS
quit
