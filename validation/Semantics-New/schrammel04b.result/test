
TRANSFORMERS


//  T(main) {main==0}

int main()
{

//  T(p,x1,x2) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2}

   int x1 = foo(), y, x2 = 2-foo(), p = 1;

//  T(y) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2, 0<=y, y<=1}

   y = foo();

//  T(p,x1,x2,y) {p#init==1, 1<=p, p<=20, x1#init+y#init<=x1+y,
//    0<=x1+y, 0<=x1#init, x1#init<=1, 1<=x2#init, x2#init<=2,
//    0<=y#init, y#init<=1}

   while (p<=20) {

//  T(x1,x2,y) {p<=20, 2x1+2x2<=p, 2x1#init+2x2#init<=p,
//    x1#init+y#init<=x1+y}

      //
      // Expected result by Schrammel/Jeannet (the third inequality is also the
      // second one):
      // 1<=x1+x2, 0<=x2<=1, 0<=x1
      // In fact, 0 <= x2 <=2 because of the first iteration
      // Also true: 0<=x1<= ~p/2
      //printf("p=%d, x1=%d, x2=%d\n", p, x1, x2);
      while (2*x1+2*x2<=p&&alea()) {

//  T(x1) {x1#init+y==x1-1, p<=20, 2x1#init+2x2<=p}

         x1 = x1+y+1;

//  T(x2) {x2==y, p<=20, 2x1+2x2#init<=p+2x2+2}

         x2 = y;

//  T(y) {x2==y#init, p<=20, 0<=y, y<=1}

         y = foo();
      }

//  T(p) {p==p#init+1, p<=21}

      p++;
   }

//  T(y) {p==21, y==y#init, 0<=x1+y}


   y = y;

//  T(main) {main==0, p==21, 0<=x1+y}

   return 0;
}

PRECONDITIONS


//  P() {}

int main()
{

//  P() {}

   int x1 = foo(), y, x2 = 2-foo(), p = 1;

//  P(p,x1,x2) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2}

   y = foo();

//  P(p,x1,x2,y) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2, 0<=y, y<=1}

   while (p<=20) {

//  P(p,x1,x2,y) {1<=p, p<=20, 0<=x1, 0<=y, y<=1}

      //
      // Expected result by Schrammel/Jeannet (the third inequality is also the
      // second one):
      // 1<=x1+x2, 0<=x2<=1, 0<=x1
      // In fact, 0 <= x2 <=2 because of the first iteration
      // Also true: 0<=x1<= ~p/2
      //printf("p=%d, x1=%d, x2=%d\n", p, x1, x2);
      while (2*x1+2*x2<=p&&alea()) {

//  P(p,x1,x2,y) {1<=p, p<=20, 2x1+2x2<=p, 0<=x1, 0<=y, y<=1}

         x1 = x1+y+1;

//  P(p,x1,x2,y) {1<=p, p<=20, 2x1+2x2<=p+2y+2, y+1<=x1, 0<=y, y<=1}

         x2 = y;

//  P(p,x1,x2,y) {x2==y, 1<=p, p<=20, x2+1<=x1, 0<=x2, x2<=1}

         y = foo();
      }

//  P(p,x1,x2,y) {1<=p, p<=20, 0<=x1, 0<=y, y<=1}

      p++;
   }

//  P(p,x1,x2,y) {p==21, 0<=x1, 0<=y, y<=1}


   y = y;

//  P(p,x1,x2,y) {p==21, 0<=x1, 0<=y, y<=1}

   return 0;
}

Try to refine the transformers: first refinement


TRANSFORMERS after first refinement


//  T(main) {main==0}

int main()
{

//  T(p,x1,x2) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2}

   int x1 = foo(), y, x2 = 2-foo(), p = 1;

//  T(y) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2, 0<=y, y<=1}

   y = foo();

//  T(p,x1,x2,y) {p#init==1, 1<=p, p<=20, 11<=10p+x2,
//    x2#init+10<=10p+x2, y#init+1<=p+y, y+1<=p+y#init, 0<=x1,
//    10x1#init+x2#init<=10x1+x2,
//    10x1#init+x2#init+11y#init<=10x1+x2+11y, x1#init+2y#init<=x1+2y,
//    x1#init+y<=x1+y#init, 1<=10x1+x2, 0<=x1#init, x1#init<=1,
//    1<=x2#init, x2#init<=2, 0<=y, y<=1, 0<=y#init, y#init<=1}

   while (p<=20) {

//  T(x1,x2,y) {1<=p, p<=20, 2x1+2x2<=p, 2x1#init+2x2#init<=p, 0<=x1,
//    10x1#init+x2#init<=10x1+x2,
//    10x1#init+x2#init+11y#init<=10x1+x2+11y, x1#init+2y#init<=x1+2y,
//    x1#init+y<=x1+y#init, 0<=x1#init, 0<=y, y<=1, 0<=y#init,
//    y#init<=1}

      //
      // Expected result by Schrammel/Jeannet (the third inequality is also the
      // second one):
      // 1<=x1+x2, 0<=x2<=1, 0<=x1
      // In fact, 0 <= x2 <=2 because of the first iteration
      // Also true: 0<=x1<= ~p/2
      //printf("p=%d, x1=%d, x2=%d\n", p, x1, x2);
      while (2*x1+2*x2<=p&&alea()) {

//  T(x1) {x1#init+y==x1-1, 1<=p, p<=20, 2x1#init+2x2<=p, 0<=x1#init,
//    0<=y, y<=1}

         x1 = x1+y+1;

//  T(x2) {x2==y, 1<=p, p<=20, 2x1+2x2#init<=p+2x2+2, x2+1<=x1, 0<=x2,
//    x2<=1}

         x2 = y;

//  T(y) {x2==y#init, 1<=p, p<=20, x2+1<=x1, 0<=x2, x2<=1, 0<=y, y<=1}

         y = foo();
      }

//  T(p) {p==p#init+1, 2<=p, p<=21, 0<=x1, 0<=y, y<=1}

      p++;
   }

//  T(y) {p==21, y==y#init, 0<=x1, 21<=320x1+21x2, 1<=51x1+x2,
//    1<=40x1+x2, 0<=25x1+6x2+989, 1<=25x1+x2, 1<=21x1+x2, 1<=20x1+x2,
//    1<=10x1+x2, 0<=3x1+x2+198, 1<=20x1+x2+31y, 1<=20x1+x2+20y,
//    1<=20x1+x2+y, 10y<=20x1+x2+9, 1<=10x1+x2+11y, 0<=x1+x2+2y+198,
//    0<=x2+199, 0<=y, y<=1}


   y = y;

//  T(main) {main==0, p==21, 0<=x1, 21<=320x1+21x2, 1<=51x1+x2,
//    1<=40x1+x2, 0<=25x1+6x2+989, 1<=25x1+x2, 1<=21x1+x2, 1<=20x1+x2,
//    1<=10x1+x2, 0<=3x1+x2+198, 1<=20x1+x2+31y, 1<=20x1+x2+20y,
//    1<=20x1+x2+y, 10y<=20x1+x2+9, 1<=10x1+x2+11y, 0<=x1+x2+2y+198,
//    0<=x2+199, 0<=y, y<=1}

   return 0;
}

PRECONDITIONS after first refinement


//  P() {}

int main()
{

//  P() {}

   int x1 = foo(), y, x2 = 2-foo(), p = 1;

//  P(p,x1,x2) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2}

   y = foo();

//  P(p,x1,x2,y) {p==1, 0<=x1, x1<=1, 1<=x2, x2<=2, 0<=y, y<=1}

   while (p<=20) {

//  P(p,x1,x2,y) {p<=20, 0<=x1, 1<=x1+x2, 0<=x2, x2<=2, 0<=y, y<=1}

      //
      // Expected result by Schrammel/Jeannet (the third inequality is also the
      // second one):
      // 1<=x1+x2, 0<=x2<=1, 0<=x1
      // In fact, 0 <= x2 <=2 because of the first iteration
      // Also true: 0<=x1<= ~p/2
      //printf("p=%d, x1=%d, x2=%d\n", p, x1, x2);
      while (2*x1+2*x2<=p&&alea()) {

//  P(p,x1,x2,y) {p<=20, 2x1+2x2<=p, 0<=x2, 0<=y, y<=1}

         x1 = x1+y+1;

//  P(p,x1,x2,y) {1<=p, p<=20, 2x1+2x2<=p+2y+2, y+1<=x1, 0<=x2, 0<=y,
//    y<=1}

         x2 = y;

//  P(p,x1,x2,y) {x2==y, 1<=p, p<=20, 2x1<=p+2x2+2, x2+1<=x1, 0<=x2,
//    x2<=1}

         y = foo();
      }

//  P(p,x1,x2,y) {p<=20, 0<=x1, 1<=x1+x2, 0<=x2, x2<=2, 0<=y, y<=1}

      p++;
   }

//  P(p,x1,x2,y) {p==21, 0<=x1, 1<=x1+x2, 0<=x2, x2<=2, 0<=y, y<=1}


   y = y;

//  P(p,x1,x2,y) {p==21, 0<=x1, 1<=x1+x2, 1<=20x1+x2+31y,
//    1<=20x1+x2+20y, 1<=20x1+x2+y, 10y<=20x1+x2+9, 1<=10x1+x2+11y,
//    0<=x2, x2<=2, 0<=y, y<=1}

   return 0;
}
