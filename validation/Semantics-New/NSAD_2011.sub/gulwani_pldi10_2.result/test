
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int n0, n, m, s, i;

//  T(n0) {0<=n0}

   n0 = rand();

//  T(m) {0<=m, 0<=n0}

   m = rand();

//  T(n) {n==n0, 0<=m, 0<=n}

   n = n0;

//  T() {n==n0, 1<=m, 1<=n}

   if (!(n>0&&m>0))

//  T() {0==-1}

      deadlock();

//  T(s) {n==n0, s==1, 1<=m, 1<=n}

   s = 1;

//  T(i) {i==0, n==n0, s==1, 1<=m, 1<=n}

   i = 0;

//  T() {i==0, n==n0, s==1, 1<=m, 1<=n}

   if (!(i<=n0))

//  T() {0==-1}

      checking_error();

//  T(i,m,n,s) {i+n==i#init+n#init, i+n==n0, m#init+n<=m+n#init,
//    m+n<=m#init+n#init, m+n+2s<=m#init+n#init+2s#init, n+1<=m+n0,
//    0<=n, n+s<=n0+1, 1<=n0, 1<=s, s<=2}

   while (rand_b())

//  T(i,m,n,s) {i+n==i#init+n#init, m#init+n#init+2s#init==m+n+4,
//    n+s==n#init+1, i<=n0, m#init+n<=m+n#init, m+n<=m#init+n#init,
//    n#init<=n+1, 1<=n0}

      if (rand_b()) {

//  T() {s==1, 1<=m, 1<=n, 1<=n0}

         if (!(n>0&&m>0&&s==1))

//  T() {0==-1}

            deadlock();

//  T(n) {n==n#init-1, s==1, 1<=m, 0<=n, 1<=n0}

         n--;

//  T(m) {m==m#init-1, s==1, 0<=m, 0<=n, 1<=n0}

         m--;

//  T(i) {i==i#init+1, s==1, 0<=m, 0<=n, 1<=n0}

         i++;

//  T(s) {s==2, s#init==1, 0<=m, 0<=n, 1<=n0}

         s = 2;

//  T() {s==2, i<=n0, 0<=m, 0<=n, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==2, 1<=n, 1<=n0}

         if (!(n>0&&s==2))

//  T() {0==-1}

            deadlock();

//  T(n) {n==n#init-1, s==2, 0<=n, 1<=n0}

         n--;

//  T(m) {m==m#init+1, s==2, 0<=n, 1<=n0}

         m++;

//  T(i) {i==i#init+1, s==2, 0<=n, 1<=n0}

         i++;

//  T() {s==2, i<=n0, 0<=n, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {s==2, 1<=n0}

         if (!(s==2))

//  T() {0==-1}

            deadlock();

//  T(s) {s==1, s#init==2, 1<=n0}

         s = 1;

//  T() {s==1, i<=n0, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int n0, n, m, s, i;

//  T(n0) {0<=n0}

   n0 = rand();

//  T(m) {0<=m, 0<=n0}

   m = rand();

//  T(n) {n==n0, 0<=m, 0<=n}

   n = n0;

//  T() {n==n0, 1<=m, 1<=n}

   if (!(n>0&&m>0))

//  T() {0==-1}

      deadlock();

//  T(s) {n==n0, s==1, 1<=m, 1<=n}

   s = 1;

//  T(i) {i==0, n==n0, s==1, 1<=m, 1<=n}

   i = 0;

//  T() {i==0, n==n0, s==1, 1<=m, 1<=n}

   if (!(i<=n0))

//  T() {0==-1}

      checking_error();

//  T(i,m,n,s) {i==n#init, i==n0, i#init==0, n==0, s==2, s#init==1,
//    m#init<=i+m, m+2<=i+m#init, 0<=m, 1<=m#init}

   if (rand_b()) {

//  T(i,m,n,s) {i+n==i#init+n#init, i+n==n0, s==1, s#init==1,
//    i#init+m#init<=i+m, i#init+m<=i+m#init, 1<=m, 2<=m+n, 0<=n,
//    n<=n0, 2<=n+n0}

      while (rand_b()) {

//  T(i,m,n,s) {i+m#init==i#init+m+2, m+n==m#init+n#init-2, s==2,
//    s#init==1, i<=n0, 1<=m, m<=m#init, m#init<=m+1, 1<=n, 1<=n0}

         if (rand_b()) {

//  T() {s==1, 2<=m, 2<=n, 1<=n0}

            if (!(n>0&&m>0&&s==1&&n>1&&m>1))

//  T() {0==-1}

               deadlock();

//  T(n) {n==n#init-1, s==1, 2<=m, 1<=n, 1<=n0}

            n--;

//  T(m) {m==m#init-1, s==1, 1<=m, 1<=n, 1<=n0}

            m--;

//  T(i) {i==i#init+1, s==1, 1<=m, 1<=n, 1<=n0}

            i++;

//  T(s) {s==2, s#init==1, 1<=m, 1<=n, 1<=n0}

            s = 2;

//  T() {s==2, i<=n0, 1<=m, 1<=n, 1<=n0}

            if (!(i<=n0))

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {m==1, s==1, 2<=n, 1<=n0}

            if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  T() {0==-1}

               deadlock();

//  T(n) {m==1, n==n#init-1, s==1, 1<=n, 1<=n0}

            n--;

//  T(m) {m==0, m#init==1, s==1, 1<=n, 1<=n0}

            m--;

//  T(i) {i==i#init+1, m==0, s==1, 1<=n, 1<=n0}

            i++;

//  T(s) {m==0, s==2, s#init==1, 1<=n, 1<=n0}

            s = 2;

//  T() {m==0, s==2, i<=n0, 1<=n, 1<=n0}

            if (!(i<=n0))

//  T() {0==-1}

               checking_error();

//  T() {m==0, s==2, i<=n0, 2<=n, 1<=n0}

            if (!(n>0&&s==2&&n>1))

//  T() {0==-1}

               deadlock();

//  T(n) {m==0, n==n#init-1, s==2, i<=n0, 1<=n, 1<=n0}

            n--;

//  T(m) {m==1, m#init==0, s==2, i<=n0, 1<=n, 1<=n0}

            m++;

//  T(i) {i==i#init+1, m==1, s==2, i<=n0+1, 1<=n, 1<=n0}

            i++;

//  T() {m==1, s==2, i<=n0, 1<=n, 1<=n0}

            if (!(i<=n0))

//  T() {0==-1}

               checking_error();
         }

//  T(i,m,n) {i+m#init==i#init+m, m+n==m#init+n#init, s==2, i<=n0,
//    1<=m, m#init<=m, 1<=n, 1<=n0}

         while (rand_b()) {

//  T() {s==2, 2<=n, 1<=n0}

            if (!(n>0&&s==2&&n>1))

//  T() {0==-1}

               deadlock();

//  T(n) {n==n#init-1, s==2, 1<=n, 1<=n0}

            n--;

//  T(m) {m==m#init+1, s==2, 1<=n, 1<=n0}

            m++;

//  T(i) {i==i#init+1, s==2, 1<=n, 1<=n0}

            i++;

//  T() {s==2, i<=n0, 1<=n, 1<=n0}

            if (!(i<=n0))

//  T() {0==-1}

               checking_error();
         }

//  T() {s==2, i+1<=m+n0, 1<=m, 2<=m+n, 1<=n0}

         if (!(s==2))

//  T() {0==-1}

            deadlock();

//  T(s) {s==1, s#init==2, i+1<=m+n0, 1<=m, 2<=m+n, 1<=n0}

         s = 1;

//  T() {s==1, i+1<=m+n0, i<=n0, 1<=m, 2<=m+n, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }

//  T(i,m,n,s) {i+n==n0, i#init+n#init==n0, m+n==m#init+n#init-2,
//    s==2, s#init==1, 0<=i#init, 1<=m, m<=m#init, m#init<=m+1,
//    m+3<=m#init+n#init}

      if (rand_b()) {

//  T() {i+n==n0, s==1, 2<=m, n+1<=m+n0, 2<=n, n<=n0, 1<=n0}

         if (!(n>0&&m>0&&s==1&&n>1&&m>1))

//  T() {0==-1}

            deadlock();

//  T(n) {i+n==n0-1, n==n#init-1, s==1, 2<=m, n+2<=m+n0, 1<=n,
//    n+1<=n0, 1<=n0}

         n--;

//  T(m) {i+n==n0-1, m==m#init-1, s==1, 1<=m, n+1<=m+n0, 1<=n,
//    n+1<=n0, 1<=n0}

         m--;

//  T(i) {i==i#init+1, i+n==n0, s==1, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         i++;

//  T(s) {i+n==n0, s==2, s#init==1, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         s = 2;

//  T() {i+n==n0, s==2, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {i+n==n0, m==1, s==1, 2<=n, n<=n0, 1<=n0}

         if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  T() {0==-1}

            deadlock();

//  T(n) {i+n==n0-1, m==1, n==n#init-1, s==1, 1<=n, n+1<=n0, 1<=n0}

         n--;

//  T(m) {i+n==n0-1, m==0, m#init==1, s==1, 1<=n, n+1<=n0, 1<=n0}

         m--;

//  T(i) {i==i#init+1, i+n==n0, m==0, s==1, 1<=n, n+1<=n0, 1<=n0}

         i++;

//  T(s) {i+n==n0, m==0, s==2, s#init==1, 1<=n, n+1<=n0, 1<=n0}

         s = 2;

//  T() {i+n==n0, m==0, s==2, 1<=n, n+1<=n0, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();

//  T() {i+n==n0, m==0, s==2, 2<=n, n+1<=n0, 1<=n0}

         if (!(n>0&&s==2&&n>1))

//  T() {0==-1}

            deadlock();

//  T(n) {i+n==n0-1, m==0, n==n#init-1, s==2, 1<=n, n+2<=n0, 1<=n0}

         n--;

//  T(m) {i+n==n0-1, m==1, m#init==0, s==2, 1<=n, n+2<=n0, 1<=n0}

         m++;

//  T(i) {i==i#init+1, i+n==n0, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

         i++;

//  T() {i+n==n0, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }

//  T(i,m,n) {i+m#init==i#init+m, i+n==n0, m+n==m#init+n#init, s==2,
//    1<=i, 1<=m, m#init<=m, 1<=n}

      while (rand_b()) {

//  T() {s==2, 2<=n, 2<=n0}

         if (!(n>0&&s==2&&n>1))

//  T() {0==-1}

            deadlock();

//  T(n) {n==n#init-1, s==2, 1<=n, 2<=n0}

         n--;

//  T(m) {m==m#init+1, s==2, 1<=n, 2<=n0}

         m++;

//  T(i) {i==i#init+1, s==2, 1<=n, 2<=n0}

         i++;

//  T() {s==2, i<=n0, 1<=n, 2<=n0}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }

//  T() {i==n0-1, n==1, s==2, 1<=i, 1<=m}

      if (!(n>0&&s==2&&n==1))

//  T() {0==-1}

         deadlock();

//  T(n) {i==n0-1, n==0, n#init==1, s==2, 1<=i, 1<=m}

      n--;

//  T(m) {i==n0-1, m==m#init+1, n==0, s==2, 1<=i, 2<=m}

      m++;

//  T(i) {i==i#init+1, i==n0, n==0, s==2, 2<=i, 2<=m}

      i++;

//  T() {i==n0, n==0, s==2, 2<=i, 2<=m}

      if (!(i<=n0))

//  T() {0==-1}

         checking_error();
   }
   else if (rand_b()) {

//  T() {i==0, m==1, n==n0, s==1, 2<=n}

      if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  T() {0==-1}

         deadlock();

//  T(n) {i==0, m==1, n==n#init-1, n==n0-1, s==1, 1<=n}

      n--;

//  T(m) {i==0, m==0, m#init==1, n==n0-1, s==1, 1<=n}

      m--;

//  T(i) {i==1, i#init==0, m==0, n==n0-1, s==1, 1<=n}

      i++;

//  T(s) {i==1, m==0, n==n0-1, s==2, s#init==1, 1<=n}

      s = 2;

//  T() {i==1, m==0, n==n0-1, s==2, 1<=n}

      if (!(i<=n0))

//  T() {0==-1}

         checking_error();

//  T(i,m,n) {i==2, i#init==1, m==1, m#init==0, n==0, n#init==1,
//    n0==2, s==2}

      if (rand_b()) {

//  T() {i==1, m==0, n==n0-1, s==2, 1<=n}

         if (!(s==2))

//  T() {0==-1}

            deadlock();

//  T(s) {i==1, m==0, n==n0-1, s==1, s#init==2, 1<=n}

         s = 1;

//  T() {i==1, m==0, n==n0-1, s==1, 1<=n}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         deadlock();
      }
      else {

//  T() {i==1, m==0, n==1, n0==2, s==2}

         if (!(n>0&&s==2&&n==1))

//  T() {0==-1}

            deadlock();

//  T(n) {i==1, m==0, n==0, n#init==1, n0==2, s==2}

         n--;

//  T(m) {i==1, m==1, m#init==0, n==0, n0==2, s==2}

         m++;

//  T(i) {i==2, i#init==1, m==1, n==0, n0==2, s==2}

         i++;

//  T() {i==2, m==1, n==0, n0==2, s==2}

         if (!(i<=n0))

//  T() {0==-1}

            checking_error();
      }
   }
   else {

//  T() {i==0, n==1, n0==1, s==1, 1<=m}

      if (!(n>0&&m>0&&s==1&&n==1))

//  T() {0==-1}

         deadlock();

//  T(n) {i==0, n==0, n#init==1, n0==1, s==1, 1<=m}

      n--;

//  T(m) {i==0, m==m#init-1, n==0, n0==1, s==1, 0<=m}

      m--;

//  T(i) {i==1, i#init==0, n==0, n0==1, s==1, 0<=m}

      i++;

//  T(s) {i==1, n==0, n0==1, s==2, s#init==1, 0<=m}

      s = 2;

//  T() {i==1, n==0, n0==1, s==2, 0<=m}

      if (!(i<=n0))

//  T() {0==-1}

         checking_error();
   }

//  T() {i==n0, n==0, s==2, 1<=i, 0<=m}

   if (!(s==2))

//  T() {0==-1}

      deadlock();

//  T(s) {i==n0, n==0, s==1, s#init==2, 1<=i, 0<=m}

   s = 1;

//  T() {i==n0, n==0, s==1, 1<=i, 0<=m}

   if (!(i<=n0))

//  T() {0==-1}

      checking_error();
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int n0, n, m, s, i;

//  P() {}

   n0 = rand();

//  P(n0) {0<=n0}

   m = rand();

//  P(m,n0) {0<=m, 0<=n0}

   n = n0;

//  P(m,n,n0) {n==n0, 0<=m, 0<=n}

   if (!(n>0&&m>0))

//  P(m,n,n0) {n==n0, 0<=m, 0<=n}

      deadlock();

//  P(m,n,n0) {n==n0, 1<=m, 1<=n}

   s = 1;

//  P(m,n,n0,s) {n==n0, s==1, 1<=m, 1<=n}

   i = 0;

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

   if (!(i<=n0))

//  P() {0==-1}

      checking_error();

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

   while (rand_b())

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

      if (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(n>0&&m>0&&s==1))

//  P(i,m,n,n0,s) {i+n==n0, 1<=i, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0,
//    1<=s, s<=2}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, n+1<=m+n0, 1<=n, n<=n0, 1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 1<=m, n+2<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         m--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         s = 2;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(n>0&&s==2))

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+1<=m+n0, 1<=n, n+1<=n0, 1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, n+2<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         m++;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, n+3<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+3<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(s==2))

//  P(i,m,n,n0,s) {i+n==n0, s==1, n+1<=m+n0, 0<=n, n<=n0, 1<=n0}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+1<=m+n0, 0<=n, n+1<=n0, 1<=n0}

         s = 1;

//  P(i,m,n,n0,s) {i+n==n0, s==1, n+1<=m+n0, 0<=n, n+1<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int n0, n, m, s, i;

//  P() {}

   n0 = rand();

//  P(n0) {0<=n0}

   m = rand();

//  P(m,n0) {0<=m, 0<=n0}

   n = n0;

//  P(m,n,n0) {n==n0, 0<=m, 0<=n}

   if (!(n>0&&m>0))

//  P(m,n,n0) {n==n0, 0<=m, 0<=n}

      deadlock();

//  P(m,n,n0) {n==n0, 1<=m, 1<=n}

   s = 1;

//  P(m,n,n0,s) {n==n0, s==1, 1<=m, 1<=n}

   i = 0;

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

   if (!(i<=n0))

//  P() {0==-1}

      checking_error();

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

   if (rand_b()) {

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

      while (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 2<=m+n, 0<=n, n<=n0, 2<=n+n0}

         if (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 2<=m+n, 0<=n, n<=n0, 2<=n+n0}

            if (!(n>0&&m>0&&s==1&&n>1&&m>1))

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=i, i+2<=m+n0, i+2<=2n0, 1<=m,
//    0<=n}

               deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==1, 2<=m, 2<=n, n<=n0, 2<=n+n0}

            n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 2<=m, 1<=n, n+1<=n0, 1<=n0}

            m--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 1<=m, 1<=n, n+1<=n0, 1<=n0}

            i++;

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 1<=n, n+1<=n0, 1<=n0}

            s = 2;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0, 1<=n0}

            if (!(i<=n0))

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 2<=m+n, 0<=n, n<=n0, 2<=n+n0}

            if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=i, i+2<=m+n0, i+2<=2n0, 1<=m,
//    0<=n}

               deadlock();

//  P(i,m,n,n0,s) {i+n==n0, m==1, s==1, 2<=n, n<=n0, 2<=n+n0}

            n--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==1, s==1, 1<=n, n+1<=n0, 1<=n0}

            m--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==0, s==1, 1<=n, n+1<=n0, 1<=n0}

            i++;

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==1, 1<=n, n+1<=n0, 1<=n0}

            s = 2;

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 1<=n, n+1<=n0, 1<=n0}

            if (!(i<=n0))

//  P() {0==-1}

               checking_error();

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 1<=n, n+1<=n0, 1<=n0}

            if (!(n>0&&s==2&&n>1))

//  P(i,m,n,n0,s) {i==n0-1, m==0, n==1, s==2, 1<=i}

               deadlock();

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 2<=n, n+1<=n0, 1<=n0}

            n--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==0, s==2, 1<=n, n+2<=n0, 1<=n0}

            m++;

//  P(i,m,n,n0,s) {i+n==n0-1, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

            i++;

//  P(i,m,n,n0,s) {i+n==n0, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

            if (!(i<=n0))

//  P() {0==-1}

               checking_error();
         }

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

         while (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

            if (!(n>0&&s==2&&n>1))

//  P(i,m,n,n0,s) {i==n0-1, n==1, s==2, 1<=i, 1<=m}

               deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 2<=n, n+1<=n0}

            n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, 1<=m, 1<=n, n+2<=n0, 1<=n0}

            m++;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, 2<=m, 1<=n, n+2<=n0, 1<=n0}

            i++;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 2<=m, 1<=n, n+2<=n0, 1<=n0}

            if (!(i<=n0))

//  P() {0==-1}

               checking_error();
         }

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

         if (!(s==2))

//  P() {0==-1}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

         s = 1;

//  P(i,m,n,n0,s) {i+n==n0, s==1, i+1<=m+n0, 1<=m, 1<=n, n+1<=n0,
//    1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 1<=n, n<=n0}

      if (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 1<=n, n<=n0}

         if (!(n>0&&m>0&&s==1&&n>1&&m>1))

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=i, 1<=m, 1<=n}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==1, 2<=m, 2<=n, n<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 2<=m, n+2<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         m--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         s = 2;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, n+1<=m+n0, 1<=n, n+1<=n0,
//    1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, 1<=n, n<=n0}

         if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=i, 1<=m, 1<=n}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, m==1, s==1, 2<=n, n<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==1, s==1, 1<=n, n+1<=n0, 1<=n0}

         m--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==0, s==1, 1<=n, n+1<=n0, 1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==1, 1<=n, n+1<=n0, 1<=n0}

         s = 2;

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 1<=n, n+1<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 1<=n, n+1<=n0, 1<=n0}

         if (!(n>0&&s==2&&n>1))

//  P(i,m,n,n0,s) {i==n0-1, m==0, n==1, s==2, 1<=i}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, m==0, s==2, 2<=n, n+1<=n0, 1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, m==0, s==2, 1<=n, n+2<=n0, 1<=n0}

         m++;

//  P(i,m,n,n0,s) {i+n==n0-1, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, m==1, s==2, 1<=n, n+2<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

      while (rand_b()) {

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

         if (!(n>0&&s==2&&n>1))

//  P(i,m,n,n0,s) {i==n0-1, n==1, s==2, 1<=i, 1<=m}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 2<=n, n+1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, 1<=m, 1<=n, n+2<=n0, 2<=n0}

         m++;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, 2<=m, 1<=n, n+2<=n0, 2<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 2<=m, 1<=n, n+2<=n0, 2<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 1<=n, n+1<=n0}

      if (!(n>0&&s==2&&n==1))

//  P(i,m,n,n0,s) {i+n==n0, s==2, 1<=m, 2<=n, n+1<=n0}

         deadlock();

//  P(i,m,n,n0,s) {i==n0-1, n==1, s==2, 1<=i, 1<=m}

      n--;

//  P(i,m,n,n0,s) {i==n0-1, n==0, s==2, 1<=i, 1<=m}

      m++;

//  P(i,m,n,n0,s) {i==n0-1, n==0, s==2, 1<=i, 2<=m}

      i++;

//  P(i,m,n,n0,s) {i==n0, n==0, s==2, 2<=i, 2<=m}

      if (!(i<=n0))

//  P() {0==-1}

         checking_error();
   }
   else if (rand_b()) {

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

      if (!(n>0&&m>0&&s==1&&n>1&&m==1))

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

         deadlock();

//  P(i,m,n,n0,s) {i==0, m==1, n==n0, s==1, 2<=n}

      n--;

//  P(i,m,n,n0,s) {i==0, m==1, n==n0-1, s==1, 1<=n}

      m--;

//  P(i,m,n,n0,s) {i==0, m==0, n==n0-1, s==1, 1<=n}

      i++;

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==1, 1<=n}

      s = 2;

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 1<=n}

      if (!(i<=n0))

//  P() {0==-1}

         checking_error();

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 1<=n}

      if (rand_b()) {

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 1<=n}

         if (!(s==2))

//  P() {0==-1}

            deadlock();

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 1<=n}

         s = 1;

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==1, 1<=n}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==1, 1<=n}

         deadlock();
      }
      else {

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 1<=n}

         if (!(n>0&&s==2&&n==1))

//  P(i,m,n,n0,s) {i==1, m==0, n==n0-1, s==2, 2<=n}

            deadlock();

//  P(i,m,n,n0,s) {i==1, m==0, n==1, n0==2, s==2}

         n--;

//  P(i,m,n,n0,s) {i==1, m==0, n==0, n0==2, s==2}

         m++;

//  P(i,m,n,n0,s) {i==1, m==1, n==0, n0==2, s==2}

         i++;

//  P(i,m,n,n0,s) {i==2, m==1, n==0, n0==2, s==2}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
   }
   else {

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

      if (!(n>0&&m>0&&s==1&&n==1))

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 2<=n}

         deadlock();

//  P(i,m,n,n0,s) {i==0, n==1, n0==1, s==1, 1<=m}

      n--;

//  P(i,m,n,n0,s) {i==0, n==0, n0==1, s==1, 1<=m}

      m--;

//  P(i,m,n,n0,s) {i==0, n==0, n0==1, s==1, 0<=m}

      i++;

//  P(i,m,n,n0,s) {i==1, n==0, n0==1, s==1, 0<=m}

      s = 2;

//  P(i,m,n,n0,s) {i==1, n==0, n0==1, s==2, 0<=m}

      if (!(i<=n0))

//  P() {0==-1}

         checking_error();
   }

//  P(i,m,n,n0,s) {i==n0, n==0, s==2, 1<=i, 0<=m}

   if (!(s==2))

//  P() {0==-1}

      deadlock();

//  P(i,m,n,n0,s) {i==n0, n==0, s==2, 1<=i, 0<=m}

   s = 1;

//  P(i,m,n,n0,s) {i==n0, n==0, s==1, 1<=i, 0<=m}

   if (!(i<=n0))

//  P() {0==-1}

      checking_error();
}
