
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int s, x, y;

//  T(s) {s==1}

   s = 1;

//  T(x) {s==1, x==0}

   x = 0;

//  T(y) {s==1, x==0, y==50}

   y = 50;

//  T() {s==1, x==0, y==50}

   if (s==2&&y!=100)

//  T() {0==-1}

      checking_error();

//  T(s,x,y) {1<=s, s<=2, s#init<=s, x#init+y<=x+y#init, y<=x+50,
//    50<=y, y#init<=y}

   while (rand_b())

//  T(s,x,y) {s+x==x#init+2, s#init==1, x<=x#init+1,
//    x#init+y<=x+y#init, y#init<=y}

      if (rand_b()) {

//  T() {s==1, x<=49}

         if (!(s==1&&x<50))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+1, x<=50}

         x++;

//  T() {s==1, x<=50}

         if (s==2&&y!=100)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, 50<=x, x<=99}

         if (!(s==1&&50<=x&&x<100))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+1, 51<=x, x<=100}

         x++;

//  T(y) {s==1, y==y#init+1, 51<=x, x<=100}

         y++;

//  T() {s==1, 51<=x, x<=100}

         if (s==2&&y!=100)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {s==1, 100<=x}

         if (!(s==1&&x>=100))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, 100<=x}

         s = 2;

//  T() {s==2, y==100, 100<=x}

         if (s==2&&y!=100)

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int s, x, y;

//  T(s) {s==1}

   s = 1;

//  T(x) {s==1, x==0}

   x = 0;

//  T(y) {s==1, x==0, y==50}

   y = 50;

//  T() {s==1, x==0, y==50}

   if (s==2&&y!=100)

//  T() {0==-1}

      checking_error();

//  T(x) {s==1, y==50, 0<=x, x<=49, x#init<=x}

   while (rand_b()) {

//  T() {s==1, y==50, x<=48}

      if (!(s==1&&x<49))

//  T() {0==-1}

         deadlock();

//  T(x) {s==1, x==x#init+1, y==50, x<=49}

      x++;

//  T() {s==1, y==50, x<=49}

      if (s==2&&y!=100)

//  T() {0==-1}

         checking_error();
   }

//  T() {s==1, x==49, y==50}

   if (!(s==1&&x==49))

//  T() {0==-1}

      deadlock();

//  T(x) {s==1, x==50, x#init==49, y==50}

   x++;

//  T() {s==1, x==50, y==50}

   if (s==2&&y!=100)

//  T() {0==-1}

      checking_error();

//  T(x,y) {s==1, x==y, x#init==y#init, 50<=x, x<=99, x#init<=x}

   while (rand_b()) {

//  T() {s==1, 50<=x, x<=98}

      if (!(s==1&&50<=x&&x<99))

//  T() {0==-1}

         deadlock();

//  T(x) {s==1, x==x#init+1, 51<=x, x<=99}

      x++;

//  T(y) {s==1, y==y#init+1, 51<=x, x<=99}

      y++;

//  T() {s==1, 51<=x, x<=99}

      if (s==2&&y!=100)

//  T() {0==-1}

         checking_error();
   }

//  T() {s==1, x==99, y==99}

   if (!(s==1&&x==99))

//  T() {0==-1}

      deadlock();

//  T(x) {s==1, x==100, x#init==99, y==99}

   x++;

//  T(y) {s==1, x==100, y==100, y#init==99}

   y++;

//  T() {s==1, x==100, y==100}

   if (s==2&&y!=100)

//  T() {0==-1}

      checking_error();

//  T() {s==1, x==100, y==100}

   if (!(s==1&&x>=100))

//  T() {0==-1}

      deadlock();

//  T(s) {s==2, s#init==1, x==100, y==100}

   s = 2;

//  T() {s==2, x==100, y==100}

   if (s==2&&y!=100)

//  T() {0==-1}

      checking_error();
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int s, x, y;

//  P() {}

   s = 1;

//  P(s) {s==1}

   x = 0;

//  P(s,x) {s==1, x==0}

   y = 50;

//  P(s,x,y) {s==1, x==0, y==50}

   if (s==2&&y!=100)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, x==0, y==50}

   while (rand_b())

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

      if (rand_b()) {

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

         if (!(s==1&&x<50))

//  P(s,x,y) {1<=s, s<=2, 100<=50s+x, y<=x+50, 50<=y}

            deadlock();

//  P(s,x,y) {s==1, x<=49, y<=x+50, 50<=y}

         x++;

//  P(s,x,y) {s==1, x<=50, y<=x+49, 50<=y}

         if (s==2&&y!=100)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

         if (!(s==1&&50<=x&&x<100))

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

            deadlock();

//  P(s,x,y) {s==1, 50<=x, x<=99, y<=x+50, 50<=y}

         x++;

//  P(s,x,y) {s==1, 51<=x, x<=100, y<=x+49, 50<=y}

         y++;

//  P(s,x,y) {s==1, 51<=x, x<=100, y<=x+50, 51<=y}

         if (s==2&&y!=100)

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

         if (!(s==1&&x>=100))

//  P(s,x,y) {1<=s, s<=2, y<=x+50, 50<=y}

            deadlock();

//  P(s,x,y) {s==1, 100<=x, y<=x+50, 50<=y}

         s = 2;

//  P(s,x,y) {s==2, 100<=x, y<=x+50, 50<=y}

         if (s==2&&y!=100)

//  P(s,x,y) {s==2, 100<=x, y<=x+50, 50<=y}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int s, x, y;

//  P() {}

   s = 1;

//  P(s) {s==1}

   x = 0;

//  P(s,x) {s==1, x==0}

   y = 50;

//  P(s,x,y) {s==1, x==0, y==50}

   if (s==2&&y!=100)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, x==0, y==50}

   while (rand_b()) {

//  P(s,x,y) {s==1, y==50, 0<=x, x<=49}

      if (!(s==1&&x<49))

//  P(s,x,y) {s==1, x==49, y==50}

         deadlock();

//  P(s,x,y) {s==1, y==50, 0<=x, x<=48}

      x++;

//  P(s,x,y) {s==1, y==50, 1<=x, x<=49}

      if (s==2&&y!=100)

//  P() {0==-1}

         checking_error();
   }

//  P(s,x,y) {s==1, y==50, 0<=x, x<=49}

   if (!(s==1&&x==49))

//  P(s,x,y) {s==1, y==50, 0<=x, x<=48}

      deadlock();

//  P(s,x,y) {s==1, x==49, y==50}

   x++;

//  P(s,x,y) {s==1, x==50, y==50}

   if (s==2&&y!=100)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, x==50, y==50}

   while (rand_b()) {

//  P(s,x,y) {s==1, x==y, 50<=x, x<=99}

      if (!(s==1&&50<=x&&x<99))

//  P(s,x,y) {s==1, x==99, y==99}

         deadlock();

//  P(s,x,y) {s==1, x==y, 50<=x, x<=98}

      x++;

//  P(s,x,y) {s==1, x==y+1, 51<=x, x<=99}

      y++;

//  P(s,x,y) {s==1, x==y, 51<=x, x<=99}

      if (s==2&&y!=100)

//  P() {0==-1}

         checking_error();
   }

//  P(s,x,y) {s==1, x==y, 50<=x, x<=99}

   if (!(s==1&&x==99))

//  P(s,x,y) {s==1, x==y, 50<=x, x<=98}

      deadlock();

//  P(s,x,y) {s==1, x==99, y==99}

   x++;

//  P(s,x,y) {s==1, x==100, y==99}

   y++;

//  P(s,x,y) {s==1, x==100, y==100}

   if (s==2&&y!=100)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, x==100, y==100}

   if (!(s==1&&x>=100))

//  P() {0==-1}

      deadlock();

//  P(s,x,y) {s==1, x==100, y==100}

   s = 2;

//  P(s,x,y) {s==2, x==100, y==100}

   if (s==2&&y!=100)

//  P() {0==-1}

      checking_error();
}
