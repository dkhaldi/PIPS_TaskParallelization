
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int x0, y0, x, y, n, m, s, c1, c2;

//  T(x0) {0<=x0}

   x0 = rand();

//  T(y0) {0<=x0, 0<=y0}

   y0 = rand();

//  T(x) {x==x0, 0<=x, 0<=y0}

   x = x0;

//  T(y) {x==x0, y==y0, 0<=x, 0<=y}

   y = y0;

//  T(n) {x==x0, y==y0, 0<=n, 0<=x, 0<=y}

   n = rand();

//  T(m) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 0<=y}

   m = rand();

//  T() {x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   if (!(n>=x0&&m>=y0))

//  T() {0==-1}

      deadlock();

//  T(s) {s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   s = 1;

//  T(c1,c2) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n,
//    x<=n, 0<=x, 0<=y}

   c1 = c2 = 0;

//  T() {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n,
//    0<=x, 0<=y}

   if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

      checking_error();

//  T(c1,c2,s,x,y) {c1+x#init==c1#init+x, c1+x0==x, c2+y0<=m, y0<=m,
//    x<=n, 1<=s, s<=2, s#init+x#init<=s+x, x#init<=x, x0<=x, 0<=x0,
//    y#init<=y, y0<=y, 0<=y0}

   while (rand_b())

//  T(c1,c2,s,x,y) {c1+s==c1#init+2, s+s#init+y#init==y+3,
//    s+x==x#init+2, c1+x0<=n, c2+y0<=m, y0<=m, x0<=n, s<=2,
//    3<=s+s#init, s#init<=2, 0<=x0, 0<=y0}

      if (rand_b()) {

//  T() {s==1, y0<=m, x+1<=n, x0<=n, 0<=x0, 0<=y0}

         if (!(s==1&&x<n))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y0<=m, x+1<=n, x0<=n, 0<=x0, 0<=y0}

         s = 2;

//  T() {s==2, c1+x0<=n, c2+y0<=m, y0<=m, x+1<=n, x0<=n, 0<=x0, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==2, y+1<=m, y0<=m, x0<=n, 0<=x0, 0<=y0}

         if (!(s==2&&y<m))

//  T() {0==-1}

            deadlock();

//  T(y) {s==2, y==y#init+1, y<=m, y0<=m, x0<=n, 0<=x0, 0<=y0}

         y++;

//  T(c2) {c2==c2#init+1, s==2, y<=m, y0<=m, x0<=n, 0<=x0, 0<=y0}

         c2++;

//  T() {s==2, c1+x0<=n, c2+y0<=m, y<=m, y0<=m, x0<=n, 0<=x0, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {s==2, y0<=m, x0<=n, 0<=x0, 0<=y0}

         if (!(s==2))

//  T() {0==-1}

            deadlock();

//  T(s) {s==1, s#init==2, y0<=m, x0<=n, 0<=x0, 0<=y0}

         s = 1;

//  T(x) {s==1, x==x#init+1, y0<=m, x0<=n, 0<=x0, 0<=y0}

         x++;

//  T(c1) {c1==c1#init+1, s==1, y0<=m, x0<=n, 0<=x0, 0<=y0}

         c1++;

//  T(c2) {c2==0, s==1, y0<=m, x0<=n, 0<=x0, 0<=y0}

         c2 = 0;

//  T() {c2==0, s==1, c1+x0<=n, y0<=m, x0<=n, 0<=x0, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int x0, y0, x, y, n, m, s, c1, c2;

//  T(x0) {0<=x0}

   x0 = rand();

//  T(y0) {0<=x0, 0<=y0}

   y0 = rand();

//  T(x) {x==x0, 0<=x, 0<=y0}

   x = x0;

//  T(y) {x==x0, y==y0, 0<=x, 0<=y}

   y = y0;

//  T(n) {x==x0, y==y0, 0<=n, 0<=x, 0<=y}

   n = rand();

//  T(m) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 0<=y}

   m = rand();

//  T() {x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   if (!(n>=x0&&m>=y0))

//  T() {0==-1}

      deadlock();

//  T(s) {s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   s = 1;

//  T(c1,c2) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n,
//    x<=n, 0<=x, 0<=y}

   c1 = c2 = 0;

//  T() {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n,
//    0<=x, 0<=y}

   if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

      checking_error();

//  T(c1,c2,s,x,y) {c1+x#init==n, c1+x#init==x, c1#init==0, c2==0,
//    c2#init==0, s==1, s#init==1, x#init==x0, y#init==y0, 0<=c1,
//    y#init<=m, 0<=x#init, y#init<=y, 0<=y#init}

   if (x<n)

//  T(c1,c2,s,x,y) {c1+x#init==n, c1#init==0, c2==0, c2#init==0, n==x,
//    s==1, s#init==1, x#init==x0, y#init==y0, 1<=c1, y#init<=m,
//    0<=x#init, y#init<=y, 0<=y#init}

      if (y<m) {

//  T(c1,c2,s,x,y) {c1+x#init==c1#init+x, c1+x0==x, c2==0, s==1,
//    s#init==1, c1#init<=c1, y0+1<=m, x+1<=n, x0<=x, 0<=x0,
//    y#init<=y, y0<=y, 0<=y0}

         while (rand_b()) {

//  T() {s==1, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0, 0<=y0}

            if (!(s==1&&x<n))

//  T() {0==-1}

               deadlock();

//  T(s) {s==2, s#init==1, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0, 0<=y0}

            s = 2;

//  T() {s==2, c1+x0<=n, c2+y0<=m, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0,
//    0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();

//  T(c2,y) {c2+y#init==c2#init+y, s==2, c1+x0<=n, c2+y0<=m, y0+1<=m,
//    x+1<=n, x0+1<=n, 0<=x0, y#init<=y, 0<=y0}

            while (rand_b()) {

//  T() {s==2, c1+x0<=n, y+2<=m, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0,
//    0<=y0}

               if (!(s==2&&y<m-1))

//  T() {0==-1}

                  deadlock();

//  T(y) {s==2, y==y#init+1, c1+x0<=n, y+1<=m, y0+1<=m, x+1<=n,
//    x0+1<=n, 0<=x0, 0<=y0}

               y++;

//  T(c2) {c2==c2#init+1, s==2, c1+x0<=n, y+1<=m, y0+1<=m, x+1<=n,
//    x0+1<=n, 0<=x0, 0<=y0}

               c2++;

//  T() {s==2, c1+x0<=n, c2+y0<=m, y+1<=m, y0+1<=m, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

               if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

                  checking_error();
            }

//  T() {s==2, c1+x0<=n, y0+1<=m, x+2<=n, x0+1<=n, 0<=x0, 0<=y0}

            if (!(s==2&&x<n-1))

//  T() {0==-1}

               deadlock();

//  T(s) {s==1, s#init==2, c1+x0<=n, y0+1<=m, x+2<=n, x0+1<=n, 0<=x0,
//    0<=y0}

            s = 1;

//  T(x) {s==1, x==x#init+1, c1+x0<=n, y0+1<=m, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

            x++;

//  T(c1) {c1==c1#init+1, s==1, c1+x0<=n+1, y0+1<=m, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

            c1++;

//  T(c2) {c2==0, s==1, c1+x0<=n+1, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0,
//    0<=y0}

            c2 = 0;

//  T() {c2==0, s==1, c1+x0<=n, y0+1<=m, x+1<=n, x0+1<=n, 0<=x0,
//    0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();
         }

//  T() {c1+x0==x, s==1, 0<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x,
//    0<=x0, y0<=y, 0<=y0}

         if (!(s==1&&x<n))

//  T() {0==-1}

            deadlock();

//  T(s) {c1+x0==x, s==2, s#init==1, 0<=m, y0+1<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         s = 2;

//  T() {c1+x0==x, s==2, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();

//  T(c2,y) {c1+x0==x, c2+y#init==c2#init+y, s==2, c2#init<=c2,
//    c2+y0<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, y0<=y,
//    0<=y0}

         while (rand_b()) {

//  T() {c1+x0==x, s==2, y+2<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n,
//    x0<=x, 0<=x0, 0<=y0}

            if (!(s==2&&y<m-1))

//  T() {0==-1}

               deadlock();

//  T(y) {c1+x0==x, s==2, y==y#init+1, y+1<=m, y0+1<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            y++;

//  T(c2) {c1+x0==x, c2==c2#init+1, s==2, y+1<=m, y0+1<=m, 0<=n,
//    x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            c2++;

//  T() {c1+x0==x, s==2, c2+y0<=m, y+1<=m, y0+1<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();
         }

//  T(c1,c2,s,x,y) {c1==c1#init+1, c1+x0==n, c2==0, n==x, n==x#init+1,
//    s==1, s#init==2, 1<=c1, c1<=n, c2#init+y+2y0<=m+2y#init,
//    y0+1<=m, 0<=n, y#init<=y, y<=y#init+1, y0<=y#init, 0<=y0}

         if (rand_b()) {

//  T() {c1+x0==x, m==y+1, s==2, 0<=c1, x+1<=c1+n, c1<=x,
//    c2+2y0+1<=2m, 0<=m, y0+1<=m, 0<=n, x+1<=n, 0<=y0}

            if (!(s==2&&y==m-1))

//  T() {0==-1}

               deadlock();

//  T(y) {c1+x0==x, m==y, m==y#init+1, s==2, 0<=c1, x+1<=c1+n, c1<=x,
//    c2+2y0+1<=2m, 0<=m, y0+1<=m, 0<=n, x+1<=n, 0<=y0}

            y++;

//  T(c2) {c1+x0==x, c2==c2#init+1, m==y, s==2, 0<=c1, x+1<=c1+n,
//    c1<=x, c2+2y0<=2m, 0<=m, y0+1<=m, 0<=n, x+1<=n, 0<=y0}

            c2++;

//  T() {c1+x0==x, m==y, s==2, 0<=c1, x+1<=c1+n, c1<=x, c2+2y0<=2m,
//    c2+y0<=m, 0<=m, y0+1<=m, 0<=n, x+1<=n, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();

//  T() {c1+x0==n-1, m==y, n==x+1, s==2, 0<=c1, c1+1<=n, c2+2y0<=2m,
//    c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=y0}

            if (!(s==2&&x==n-1))

//  T() {0==-1}

               deadlock();

//  T(s) {c1+x0==n-1, m==y, n==x+1, s==1, s#init==2, 0<=c1, c1+1<=n,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=y0}

            s = 1;

//  T(x) {c1+x0==n-1, m==y, n==x, n==x#init+1, s==1, 0<=c1, c1+1<=n,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=y0}

            x++;

//  T(c1) {c1==c1#init+1, c1+x0==n, m==y, n==x, s==1, 1<=c1, c1<=n,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=y0}

            c1++;

//  T(c2) {c1+x0==n, c2==0, m==y, n==x, s==1, 1<=c1, c1<=n,
//    c2#init+2y0<=2m, c2#init+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=y0}

            c2 = 0;

//  T() {c1+x0==n, c2==0, m==y, n==x, s==1, 1<=c1, c1<=n, 0<=m,
//    y0+1<=m, 0<=n, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {c1+x0==n-1, n==x+1, s==2, 0<=c1, c1+1<=n, c2+2y0<=m+y, 0<=m,
//    y0+1<=m, 0<=n, y0<=y, 0<=y0}

            if (!(s==2&&x==n-1))

//  T() {0==-1}

               deadlock();

//  T(s) {c1+x0==n-1, n==x+1, s==1, s#init==2, 0<=c1, c1+1<=n,
//    c2+2y0<=m+y, 0<=m, y0+1<=m, 0<=n, y0<=y, 0<=y0}

            s = 1;

//  T(x) {c1+x0==n-1, n==x, n==x#init+1, s==1, 0<=c1, c1+1<=n,
//    c2+2y0<=m+y, 0<=m, y0+1<=m, 0<=n, y0<=y, 0<=y0}

            x++;

//  T(c1) {c1==c1#init+1, c1+x0==n, n==x, s==1, 1<=c1, c1<=n,
//    c2+2y0<=m+y, 0<=m, y0+1<=m, 0<=n, y0<=y, 0<=y0}

            c1++;

//  T(c2) {c1+x0==n, c2==0, n==x, s==1, 1<=c1, c1<=n,
//    c2#init+2y0<=m+y, 0<=m, y0+1<=m, 0<=n, y0<=y, 0<=y0}

            c2 = 0;

//  T() {c1+x0==n, c2==0, n==x, s==1, 1<=c1, c1<=n, 0<=m, y0+1<=m,
//    0<=n, y0<=y, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();
         }
      }
      else {

//  T(c1,c2,s,x) {c1+x#init==c1#init+x, c1+x0==x, c2==0, m==y, m==y0,
//    s==1, s#init==1, c2#init<=0, 0<=m, x+1<=n, x#init<=x, x0<=x,
//    0<=x0}

         while (rand_b()) {

//  T() {m==y, m==y0, s==1, 0<=m, x+1<=n, x0+1<=n, 0<=x0}

            if (!(s==1&&x<n))

//  T() {0==-1}

               deadlock();

//  T(s) {m==y, m==y0, s==2, s#init==1, 0<=m, x+1<=n, x0+1<=n, 0<=x0}

            s = 2;

//  T() {m==y, m==y0, s==2, c1+x0<=n, c2<=0, 0<=m, x+1<=n, x0+1<=n,
//    0<=x0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();

//  T() {m==y, m==y0, s==2, c1+x0<=n, c2<=0, 0<=m, x+2<=n, x0+1<=n,
//    0<=x0}

            if (!(s==2&&x<n-1))

//  T() {0==-1}

               deadlock();

//  T(s) {m==y, m==y0, s==1, s#init==2, c1+x0<=n, c2<=0, 0<=m, x+2<=n,
//    x0+1<=n, 0<=x0}

            s = 1;

//  T(x) {m==y, m==y0, s==1, x==x#init+1, c1+x0<=n, c2<=0, 0<=m,
//    x+1<=n, x0+1<=n, 0<=x0}

            x++;

//  T(c1) {c1==c1#init+1, m==y, m==y0, s==1, c1+x0<=n+1, c2<=0, 0<=m,
//    x+1<=n, x0+1<=n, 0<=x0}

            c1++;

//  T(c2) {c2==0, m==y, m==y0, s==1, c1+x0<=n+1, c2#init<=0, 0<=m,
//    x+1<=n, x0+1<=n, 0<=x0}

            c2 = 0;

//  T() {c2==0, m==y, m==y0, s==1, c1+x0<=n, 0<=m, x+1<=n, x0+1<=n,
//    0<=x0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

               checking_error();
         }

//  T() {c1+x0==x, m==y, m==y0, s==1, 0<=c2, 0<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0}

         if (!(s==1&&x<n))

//  T() {0==-1}

            deadlock();

//  T(s) {c1+x0==x, m==y, m==y0, s==2, s#init==1, 0<=c2, 0<=m, 0<=n,
//    x+1<=n, x0+1<=n, x0<=x, 0<=x0}

         s = 2;

//  T() {c1+x0==x, c2==0, m==y, m==y0, s==2, 0<=m, 0<=n, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();

//  T() {c1+x0==n-1, c2==0, m==y, m==y0, n==x+1, s==2, 0<=m, 0<=n,
//    x0+1<=n, 0<=x0}

         if (!(s==2&&x==n-1))

//  T() {0==-1}

            deadlock();

//  T(s) {c1+x0==n-1, c2==0, m==y, m==y0, n==x+1, s==1, s#init==2,
//    0<=m, 0<=n, x0+1<=n, 0<=x0}

         s = 1;

//  T(x) {c1+x0==n-1, c2==0, m==y, m==y0, n==x, n==x#init+1, s==1,
//    0<=m, 0<=n, x0+1<=n, 0<=x0}

         x++;

//  T(c1) {c1==c1#init+1, c1+x0==n, c2==0, m==y, m==y0, n==x, s==1,
//    0<=m, 0<=n, x0+1<=n, 0<=x0}

         c1++;

//  T(c2) {c1+x0==n, c2==0, c2#init==0, m==y, m==y0, n==x, s==1, 0<=m,
//    0<=n, x0+1<=n, 0<=x0}

         c2 = 0;

//  T() {c1+x0==n, c2==0, m==y, m==y0, n==x, s==1, 0<=m, 0<=n,
//    x0+1<=n, 0<=x0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  T() {0==-1}

            checking_error();
      }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int x0, y0, x, y, n, m, s, c1, c2;

//  P() {}

   x0 = rand();

//  P(x0) {0<=x0}

   y0 = rand();

//  P(x0,y0) {0<=x0, 0<=y0}

   x = x0;

//  P(x,x0,y0) {x==x0, 0<=x, 0<=y0}

   y = y0;

//  P(x,x0,y,y0) {x==x0, y==y0, 0<=x, 0<=y}

   n = rand();

//  P(n,x,x0,y,y0) {x==x0, y==y0, 0<=n, 0<=x, 0<=y}

   m = rand();

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 0<=y}

   if (!(n>=x0&&m>=y0))

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 1<=x+y, 0<=y}

      deadlock();

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x,
//    0<=y}

   s = 1;

//  P(m,n,s,x,x0,y,y0) {s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n,
//    0<=x, 0<=y}

   c1 = c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

      checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   while (rand_b())

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0<=m, y0<=m, x<=n, 1<=s,
//    s<=2, x0<=x, 0<=x0, y0<=y, 0<=y0}

      if (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0<=m, y0<=m, x<=n, 1<=s,
//    s<=2, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(s==1&&x<n))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, 0<=c1, c2+y0<=m, y0<=m, x<=n,
//    1<=s, s<=2, 0<=x0, y0<=y, 0<=y0}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, c2+y0<=m, y0<=m, x+1<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

         s = 2;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, c2+y0<=m, y0<=m, x+1<=n,
//    x0<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0<=m, y0<=m, x<=n, 1<=s,
//    s<=2, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(s==2&&y<m))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0<=m, y0<=m, x<=n, 1<=s,
//    s<=2, x0<=x, 0<=x0, y0<=y, 0<=y0}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, c2+y0<=m, y+1<=m, y0<=m,
//    x<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         y++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, c2+y0<=m, y<=m, y0<=m,
//    x<=n, x0<=n, x0<=x, 0<=x0, y0+1<=y, 0<=y0}

         c2++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, c2+y0<=m+1, y<=m, y0<=m,
//    x<=n, x0<=n, x0<=x, 0<=x0, y0+1<=y, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0==m+1, s==2, y<=m, y0<=m,
//    x<=n, x0<=n, x0<=x, 0<=x0, y0+1<=y, 0<=y0}

            checking_error();
      }
      else {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2+y0<=m, y0<=m, x<=n, 1<=s,
//    s<=2, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(s==2))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, c2+y0<=m, y0<=m, x<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, c2+y0<=m, y0<=m, x<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

         s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, c2+y0<=m, y0<=m, x<=n,
//    x0<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x-1, s==1, c2+y0<=m, y0<=m,
//    x<=n+1, x0<=n, x0+1<=x, 0<=x0, y0<=y, 0<=y0}

         c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, c2+y0<=m, y0<=m, x<=n+1,
//    x0<=n, x0+1<=x, 0<=x0, y0<=y, 0<=y0}

         c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0<=m, x<=n+1,
//    x0<=n, x0+1<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, n+1<=c1+x0,
//    y0<=m, x<=n+1, x0<=n, x0+1<=x, 0<=x0, y0<=y, 0<=y0}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int x0, y0, x, y, n, m, s, c1, c2;

//  P() {}

   x0 = rand();

//  P(x0) {0<=x0}

   y0 = rand();

//  P(x0,y0) {0<=x0, 0<=y0}

   x = x0;

//  P(x,x0,y0) {x==x0, 0<=x, 0<=y0}

   y = y0;

//  P(x,x0,y,y0) {x==x0, y==y0, 0<=x, 0<=y}

   n = rand();

//  P(n,x,x0,y,y0) {x==x0, y==y0, 0<=n, 0<=x, 0<=y}

   m = rand();

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 0<=y}

   if (!(n>=x0&&m>=y0))

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, 0<=n, 0<=x, 1<=x+y, 0<=y}

      deadlock();

//  P(m,n,x,x0,y,y0) {x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n, 0<=x,
//    0<=y}

   s = 1;

//  P(m,n,s,x,x0,y,y0) {s==1, x==x0, y==y0, 0<=m, y<=m, 0<=n, x<=n,
//    0<=x, 0<=y}

   c1 = c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

      checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y<=m, 0<=n, x<=n, 0<=x, 0<=y}

   if (x<n)

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y<=m, 0<=n, x+1<=n, 0<=x, 0<=y}

      if (y<m) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, s==1, x==x0, y==y0, 0<=m,
//    y+1<=m, 0<=n, x+1<=n, 0<=x, 0<=y}

         while (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0+1<=m, x+1<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

            if (!(s==1&&x<n))

//  P() {0==-1}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0+1<=m, x+1<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

            s = 2;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==2, y0+1<=m, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==2, y0+1<=m, x+1<=n,
//    x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

            while (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

               if (!(s==2&&y<m-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, m<=y+1, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

                  deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, y+2<=m, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

               y++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0+1<=y, y+1<=m, y0+1<=m, x+1<=n, x0+1<=n, x0<=x, 0<=x0,
//    0<=y0}

               c2++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 1<=c2, c2+y0<=m,
//    c2+y0<=y, y+1<=m, y0+1<=m, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

               if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

                  checking_error();
            }

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            if (!(s==2&&x<n-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, n==x+1, s==2, 0<=c2,
//    c2+y0+1<=m, c2+y0<=y, x0+1<=n, 0<=x0, 0<=y0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, x+2<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, y0+1<=m, x+2<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x-1, s==1, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, y0+1<=m, x+1<=n, x0+1<=n, x0+1<=x, 0<=x0, 0<=y0}

            c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==1, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, y0+1<=m, x+1<=n, x0+1<=n, x0+1<=x, 0<=x0, 0<=y0}

            c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0+1<=m, x+1<=n,
//    x0+1<=n, x0+1<=x, 0<=x0, y0<=y, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();
         }

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0+1<=m, x+1<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(s==1&&x<n))

//  P() {0==-1}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==1, y0+1<=m, x+1<=n,
//    x0<=x, 0<=x0, y0<=y, 0<=y0}

         s = 2;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==2, 0<=m, y0+1<=m,
//    0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

            checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, s==2, 0<=m, y0+1<=m,
//    0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, y0<=y, 0<=y0}

         while (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            if (!(s==2&&y<m-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, m<=y+1, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, y+2<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            y++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0+1<=y, y+1<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x,
//    0<=x0, 0<=y0}

            c2++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 1<=c2, c2+y0<=m,
//    c2+y0<=y, y+1<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0,
//    0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();
         }

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

         if (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            if (!(s==2&&y==m-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, 2c2+2y0+2<=m+y,
//    c2+y0+1<=m, c2+y0<=y, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0,
//    0<=y0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, m==y+1, s==2, 0<=c2,
//    c2+y0+1<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            y++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, m==y, s==2, 0<=c1, 0<=c2,
//    c2+2y0+1<=2m, c2+y0+1<=m, 0<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

            c2++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, m==y, s==2, 0<=c1, 1<=c2,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, m==y, s==2, 0<=c1, 1<=c2,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, x+1<=n, x0+1<=n,
//    0<=x0, 0<=y0}

            if (!(s==2&&x==n-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, m==y, s==2, 0<=c1, 1<=c2,
//    c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, x+2<=n, x0+1<=n,
//    0<=x0, 0<=y0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, m==y, n==x+1, s==2, 0<=c1,
//    1<=c2, c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=x0, 0<=y0}

            s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, m==y, n==x+1, s==1, 0<=c1,
//    1<=c2, c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=x0, 0<=y0}

            x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, m==y, n==x, s==1, 0<=c1,
//    1<=c2, c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=x0, 0<=y0}

            c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, m==y, n==x, s==1, 1<=c1,
//    1<=c2, c2+2y0<=2m, c2+y0<=m, 0<=m, y0+1<=m, 0<=n, 0<=x0, 0<=y0}

            c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, c2==0, m==y, n==x, s==1,
//    1<=c1, 0<=m, y0+1<=m, 0<=n, 0<=x0, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

            if (!(s==2&&x==n-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, s==2, 0<=c2, c2+y0+1<=m,
//    c2+y0<=y, 0<=n, x+2<=n, x0+1<=n, x0<=x, 0<=x0, 0<=y0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, n==x+1, s==2, 0<=c2,
//    c2+y0+1<=m, c2+y0<=y, 0<=n, x0+1<=n, 0<=x0, 0<=y0}

            s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, n==x+1, s==1, 0<=c1, 0<=c2,
//    c2+2y0<=m+y, c2+y0+1<=m, c2+y0<=y, 0<=m, y0+1<=m, 0<=n, 0<=x0,
//    y0<=y, 0<=y0}

            x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, n==x, s==1, 0<=c1, 0<=c2,
//    c2+2y0<=m+y, c2+y0+1<=m, c2+y0<=y, 0<=m, y0+1<=m, 0<=n, 0<=x0,
//    y0<=y, 0<=y0}

            c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, n==x, s==1, 1<=c1, 0<=c2,
//    c2+2y0<=m+y, c2+y0+1<=m, c2+y0<=y, 0<=m, y0+1<=m, 0<=n, 0<=x0,
//    y0<=y, 0<=y0}

            c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, c2==0, n==x, s==1, 1<=c1,
//    0<=m, 2y0<=m+y, y0+1<=m, 0<=n, 0<=x0, y0<=y, 0<=y0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();
         }
      }
      else {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1==0, c2==0, m==y, m==y0, s==1, x==x0,
//    0<=m, 0<=n, x+1<=n, 0<=x}

         while (rand_b()) {

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0<=x, 0<=x0}

            if (!(s==1&&x<n))

//  P() {0==-1}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0<=x, 0<=x0}

            s = 2;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, x+1<=n, x0+1<=n, x0<=x, 0<=x0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, x+1<=n, x0+1<=n, x0<=x, 0<=x0}

            if (!(s==2&&x<n-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, c2==0, m==y, m==y0, n==x+1,
//    s==2, 0<=m, x0+1<=n, 0<=x0}

               deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, x+2<=n, x0+1<=n, x0<=x, 0<=x0}

            s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+2<=n, x0+1<=n, x0<=x, 0<=x0}

            x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x-1, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0+1<=n, x0+1<=x, 0<=x0}

            c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0+1<=n, x0+1<=x, 0<=x0}

            c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0+1<=n, x0+1<=x, 0<=x0}

            if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

               checking_error();
         }

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0<=x, 0<=x0}

         if (!(s==1&&x<n))

//  P() {0==-1}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==1,
//    0<=m, x+1<=n, x0<=x, 0<=x0}

         s = 2;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

            checking_error();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, 0<=n, x+1<=n, x0+1<=n, x0<=x, 0<=x0}

         if (!(s==2&&x==n-1))

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==x, c2==0, m==y, m==y0, s==2,
//    0<=m, 0<=n, x+2<=n, x0+1<=n, x0<=x, 0<=x0}

            deadlock();

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, c2==0, m==y, m==y0, n==x+1,
//    s==2, 0<=m, 0<=n, x0+1<=n, 0<=x0}

         s = 1;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, c2==0, m==y, m==y0, n==x+1,
//    s==1, 0<=m, 0<=n, x0+1<=n, 0<=x0}

         x++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n-1, c2==0, m==y, m==y0, n==x,
//    s==1, 0<=m, 0<=n, x0+1<=n, 0<=x0}

         c1++;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, c2==0, m==y, m==y0, n==x,
//    s==1, 0<=m, 0<=n, x0+1<=n, 0<=x0}

         c2 = 0;

//  P(c1,c2,m,n,s,x,x0,y,y0) {c1+x0==n, c2==0, m==y, m==y0, n==x,
//    s==1, 0<=m, 0<=n, x0+1<=n, 0<=x0}

         if (!(c1<=n-x0&&c2<=m-y0))

//  P() {0==-1}

            checking_error();
      }
}
