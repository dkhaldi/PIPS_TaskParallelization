
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int n, m, x, y, c;

//  T(n) {0<=n}

   n = rand();

//  T(m) {0<=m, 0<=n}

   m = rand();

//  T() {0<=m, m<=n, 0<=n}

   if (!(n>=m))

//  T() {0==-1}

      deadlock();

//  T(c,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   x = y = c = 0;

//  T() {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   if (!(c<=n))

//  T() {0==-1}

      checking_error();

//  T(c,x,y) {c==x, c==y, c#init==x#init, c#init==y#init, 0<=c,
//    c#init<=c, c<=n, 0<=m, m<=n}

   while (rand_b())

//  T(c,x,y) {c==c#init+1, x==x#init+1, y==y#init+1, c<=n, 0<=m, m<=n}

      if (rand_b()) {

//  T() {0<=m, m<=n, 0<=n, x+1<=n}

         if (!(x<n))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 0<=m, m<=n, 0<=n, x<=n}

         x++;

//  T(y) {y==y#init+1, 0<=m, m<=n, 0<=n, x<=n}

         y++;

//  T(c) {c==c#init+1, 0<=m, m<=n, 0<=n, x<=n}

         c++;

//  T() {c<=n, 0<=m, m<=n, 0<=n, x<=n}

         if (!(c<=n))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {0<=m, m<=n, y+1<=m, 0<=n}

         if (!(y<m))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 0<=m, m<=n, y+1<=m, 0<=n}

         x++;

//  T(y) {y==y#init+1, 0<=m, m<=n, y<=m, 0<=n}

         y++;

//  T(c) {c==c#init+1, 0<=m, m<=n, y<=m, 0<=n}

         c++;

//  T() {c<=n, 0<=m, m<=n, y<=m, 0<=n}

         if (!(c<=n))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int n, m, x, y, c;

//  T(n) {0<=n}

   n = rand();

//  T(m) {0<=m, 0<=n}

   m = rand();

//  T() {0<=m, m<=n, 0<=n}

   if (!(n>=m))

//  T() {0==-1}

      deadlock();

//  T(c,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   x = y = c = 0;

//  T() {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   if (!(c<=n))

//  T() {0==-1}

      checking_error();

//  T() {c==0, x==0, y==0, 0<=m, m<=n}

   if (x<n) goto l99999;

//  T() {c==0, m==0, n==0, x==0, y==0}

   if (y<m) {
   }
   else {
      goto L4;
   }

//  T() {0==-1}

L3:   ;

//  T() {0==-1}

   while (rand_b()) {

//  T() {0==-1}

      if (!(x>=n&&y<m-1))

//  T() {0==-1}

         deadlock();

//  T() {0==-1}

      x++;

//  T() {0==-1}

      y++;

//  T() {0==-1}

      c++;

//  T() {0==-1}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }

//  T() {0==-1}

   if (!(x>=n&&y==m-1))

//  T() {0==-1}

      deadlock();

//  T() {0==-1}

   x++;

//  T() {0==-1}

   y++;

//  T() {0==-1}

   c++;

//  T() {0==-1}

   if (!(c<=n))

//  T() {0==-1}

      checking_error();
   goto L4;
l99999:   ;

//  T() {c==0, x==0, y==0, 0<=m, m<=n, 1<=n}

   if (y<m) goto L1;

//  T() {c==m, c==x, c==y, 0<=c, c+1<=n}

   
   
   
   
   
   
L2:   ;

//  T(c,x,y) {c==x, c==y, c#init==y#init, x#init==y#init, m<=c,
//    c+1<=n, y#init<=c, 0<=m}

   while (rand_b()) {

//  T() {0<=m, m+1<=n, m<=y, x+2<=n}

      if (!(x<n-1&&y>=m))

//  T() {0==-1}

         deadlock();

//  T(x) {x==x#init+1, 0<=m, m+1<=n, m<=y, x+1<=n}

      x++;

//  T(y) {y==y#init+1, 0<=m, m+1<=n, m+1<=y, x+1<=n}

      y++;

//  T(c) {c==c#init+1, 0<=m, m+1<=n, m+1<=y, x+1<=n}

      c++;

//  T() {c<=n, 0<=m, m+1<=n, m+1<=y, x+1<=n}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }

//  T() {c==n-1, c==x, c==y, m<=c, 0<=m}

   if (!(x==n-1&&y>=m))

//  T() {0==-1}

      deadlock();

//  T(x) {c==n-1, c==x-1, c==x#init, c==y, m<=c, 0<=m}

   x++;

//  T(y) {c==n-1, c==x-1, c==y-1, c==y#init, m<=c, 0<=m}

   y++;

//  T(c) {c==c#init+1, c==n, c==x, c==y, m+1<=c, 0<=m}

   c++;

//  T() {c==n, c==x, c==y, m+1<=c, 0<=m}

   if (!(c<=n))

//  T() {0==-1}

      checking_error();
   goto L4;

//  T() {c==0, x==0, y==0, 1<=m, m<=n, 1<=n}

L1:   ;

//  T(c,x,y) {c==x, c==y, c#init==y#init, x#init==y#init, 0<=c,
//    c+1<=m, y#init<=c, m<=n}

   while (rand_b())

//  T(c,x,y) {c==c#init+1, x==x#init+1, y==y#init+1, c<=n, 1<=m, m<=n,
//    y+1<=m, 1<=n, x+1<=n}

      if (rand_b()) {

//  T() {1<=m, m<=n, y+2<=m, 1<=n, x+2<=n}

         if (!(x<n-1&&y<m-1))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 1<=m, m<=n, y+2<=m, 1<=n, x+1<=n}

         x++;

//  T(y) {y==y#init+1, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         y++;

//  T(c) {c==c#init+1, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         c++;

//  T() {c<=n, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         if (!(c<=n))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {1<=m, m<=n, y+2<=m, 1<=n, x+2<=n}

         if (!(x<n-1&&y<m-1))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 1<=m, m<=n, y+2<=m, 1<=n, x+1<=n}

         x++;

//  T(y) {y==y#init+1, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         y++;

//  T(c) {c==c#init+1, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         c++;

//  T() {c<=n, 1<=m, m<=n, y+1<=m, 1<=n, x+1<=n}

         if (!(c<=n))

//  T() {0==-1}

            checking_error();
      }

//  T() {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) goto l99998;

//  T() {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) goto l99997;

//  T(c,x,y) {c==c#init+1, c==m, c==n, c==x, c==x#init+1, c==y,
//    c==y#init+1, 1<=c}

   if (rand_b()) {

//  T() {c==m-1, c==n-1, c==x, c==y, 0<=c}

      if (!(x==n-1&&y==m-1))

//  T() {0==-1}

         deadlock();

//  T(x) {c==m-1, c==n-1, c==x-1, c==x#init, c==y, 0<=c}

      x++;

//  T(y) {c==m-1, c==n-1, c==x-1, c==y-1, c==y#init, 0<=c}

      y++;

//  T(c) {c==c#init+1, c==m, c==n, c==x, c==y, 1<=c}

      c++;

//  T() {c==m, c==n, c==x, c==y, 1<=c}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   else {

//  T() {c==m-1, c==n-1, c==x, c==y, 0<=c}

      if (!(x==n-1&&y==m-1))

//  T() {0==-1}

         deadlock();

//  T(x) {c==m-1, c==n-1, c==x-1, c==x#init, c==y, 0<=c}

      x++;

//  T(y) {c==m-1, c==n-1, c==x-1, c==y-1, c==y#init, 0<=c}

      y++;

//  T(c) {c==c#init+1, c==m, c==n, c==x, c==y, 1<=c}

      c++;

//  T() {c==m, c==n, c==x, c==y, 1<=c}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   goto L4;
l99997:   ;

//  T() {0==-1}

   if (rand_b()) {

//  T() {0==-1}

      if (!(x==n-1&&y<m-1))

//  T() {0==-1}

         deadlock();

//  T() {0==-1}

      x++;

//  T() {0==-1}

      y++;

//  T() {0==-1}

      c++;

//  T() {0==-1}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   else {

//  T() {0==-1}

      if (!(x==n-1&&y<m-1))

//  T() {0==-1}

         deadlock();

//  T() {0==-1}

      x++;

//  T() {0==-1}

      y++;

//  T() {0==-1}

      c++;

//  T() {0==-1}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   goto L3;
l99998:   ;

//  T(c,x,y) {c==c#init+1, c==m, c==x, c==x#init+1, c==y, c==y#init+1,
//    1<=c, c+1<=n, 1<=n}

   if (rand_b()) {

//  T() {c==m-1, c==x, c==y, 0<=c, c+2<=n, 1<=n}

      if (!(x<n-1&&y==m-1))

//  T() {0==-1}

         deadlock();

//  T(x) {c==m-1, c==x-1, c==x#init, c==y, 0<=c, c+2<=n, 1<=n}

      x++;

//  T(y) {c==m-1, c==x-1, c==y-1, c==y#init, 0<=c, c+2<=n, 1<=n}

      y++;

//  T(c) {c==c#init+1, c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      c++;

//  T() {c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   else {

//  T() {c==m-1, c==x, c==y, 0<=c, c+2<=n, 1<=n}

      if (!(x<n-1&&y==m-1))

//  T() {0==-1}

         deadlock();

//  T(x) {c==m-1, c==x-1, c==x#init, c==y, 0<=c, c+2<=n, 1<=n}

      x++;

//  T(y) {c==m-1, c==x-1, c==y-1, c==y#init, 0<=c, c+2<=n, 1<=n}

      y++;

//  T(c) {c==c#init+1, c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      c++;

//  T() {c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      if (!(c<=n))

//  T() {0==-1}

         checking_error();
   }
   goto L2;

//  T() {c==n, c==x, c==y, m<=c, 0<=m}

L4:   ;
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int n, m, x, y, c;

//  P() {}

   n = rand();

//  P(n) {0<=n}

   m = rand();

//  P(m,n) {0<=m, 0<=n}

   if (!(n>=m))

//  P(m,n) {0<=m, n+1<=m, 0<=n}

      deadlock();

//  P(m,n) {0<=m, m<=n, 0<=n}

   x = y = c = 0;

//  P(c,m,n,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   if (!(c<=n))

//  P() {0==-1}

      checking_error();

//  P(c,m,n,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   while (rand_b())

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c<=n, 0<=m, m<=n}

      if (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c<=n, 0<=m, m<=n}

         if (!(x<n))

//  P(c,m,n,x,y) {c==n, c==x, c==y, 0<=c, m<=c, 0<=m}

            deadlock();

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+1<=n, 0<=m, m<=n}

         x++;

//  P(c,m,n,x,y) {c==x-1, c==y, 0<=c, c+1<=n, 0<=m, m<=n, 0<=n}

         y++;

//  P(c,m,n,x,y) {c==x-1, c==y-1, 0<=c, c+1<=n, 0<=m, m<=n, 0<=n}

         c++;

//  P(c,m,n,x,y) {c==x, c==y, 1<=c, c<=n, 0<=m, m<=n, 0<=n}

         if (!(c<=n))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c<=n, 0<=m, m<=n}

         if (!(y<m))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, m<=c, c<=n, 0<=m, m<=n}

            deadlock();

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+1<=m, c<=n, 0<=m, m<=n}

         x++;

//  P(c,m,n,x,y) {c==x-1, c==y, 0<=c, c+1<=m, c<=n, 0<=m, m<=n, 0<=n}

         y++;

//  P(c,m,n,x,y) {c==x-1, c==y-1, 0<=c, c+1<=m, c<=n, 0<=m, m<=n,
//    0<=n}

         c++;

//  P(c,m,n,x,y) {c==x, c==y, 1<=c, c<=m, c<=n+1, 0<=m, m<=n, 0<=n}

         if (!(c<=n))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int n, m, x, y, c;

//  P() {}

   n = rand();

//  P(n) {0<=n}

   m = rand();

//  P(m,n) {0<=m, 0<=n}

   if (!(n>=m))

//  P(m,n) {0<=m, n+1<=m, 0<=n}

      deadlock();

//  P(m,n) {0<=m, m<=n, 0<=n}

   x = y = c = 0;

//  P(c,m,n,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   if (!(c<=n))

//  P() {0==-1}

      checking_error();

//  P(c,m,n,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 0<=n}

   if (x<n) goto l99999;

//  P(c,m,n,x,y) {c==0, m==0, n==0, x==0, y==0}

   if (y<m) {
   }
   else {
      goto L4;
   }

//  P() {0==-1}

L3:   ;

//  P() {0==-1}

   while (rand_b()) {

//  P() {0==-1}

      if (!(x>=n&&y<m-1))

//  P() {0==-1}

         deadlock();

//  P() {0==-1}

      x++;

//  P() {0==-1}

      y++;

//  P() {0==-1}

      c++;

//  P() {0==-1}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }

//  P() {0==-1}

   if (!(x>=n&&y==m-1))

//  P() {0==-1}

      deadlock();

//  P() {0==-1}

   x++;

//  P() {0==-1}

   y++;

//  P() {0==-1}

   c++;

//  P() {0==-1}

   if (!(c<=n))

//  P() {0==-1}

      checking_error();
   goto L4;
l99999:   ;

//  P(c,m,n,x,y) {c==0, x==0, y==0, 0<=m, m<=n, 1<=n}

   if (y<m) goto L1;

//  P(c,m,n,x,y) {c==m, c==x, c==y, 0<=c, c+1<=n}

   
   
   
   
   
   
L2:   ;

//  P(c,m,n,x,y) {c==m, c==x, c==y, 0<=c, c+1<=n}

   while (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, m<=c, c+1<=n, 0<=m}

      if (!(x<n-1&&y>=m))

//  P(c,m,n,x,y) {c==n-1, c==x, c==y, m<=c, 0<=m}

         deadlock();

//  P(c,m,n,x,y) {c==x, c==y, m<=c, c+2<=n, 0<=m}

      x++;

//  P(c,m,n,x,y) {c==x-1, c==y, m<=c, c+2<=n, 0<=m, m+1<=n}

      y++;

//  P(c,m,n,x,y) {c==x-1, c==y-1, m<=c, c+2<=n, 0<=m, m+1<=n}

      c++;

//  P(c,m,n,x,y) {c==x, c==y, m+1<=c, c+1<=n, 0<=m, m+1<=n}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }

//  P(c,m,n,x,y) {c==x, c==y, m<=c, c+1<=n, 0<=m}

   if (!(x==n-1&&y>=m))

//  P(c,m,n,x,y) {c==x, c==y, m<=c, c+2<=n, 0<=m}

      deadlock();

//  P(c,m,n,x,y) {c==n-1, c==x, c==y, m<=c, 0<=m}

   x++;

//  P(c,m,n,x,y) {c==n-1, c==x-1, c==y, m<=c, 0<=m}

   y++;

//  P(c,m,n,x,y) {c==n-1, c==x-1, c==y-1, m<=c, 0<=m}

   c++;

//  P(c,m,n,x,y) {c==n, c==x, c==y, m+1<=c, 0<=m}

   if (!(c<=n))

//  P() {0==-1}

      checking_error();
   goto L4;

//  P(c,m,n,x,y) {c==0, x==0, y==0, 1<=m, m<=n, 1<=n}

L1:   ;

//  P(c,m,n,x,y) {c==0, x==0, y==0, 1<=m, m<=n, 1<=n}

   while (rand_b())

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+1<=m, m<=n}

      if (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+1<=m, m<=n}

         if (!(x<n-1&&y<m-1))

//  P(c,m,n,x,y) {c==m-1, c==x, c==y, 0<=c, c+1<=n}

            deadlock();

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+2<=m, c+2<=n, m<=n}

         x++;

//  P(c,m,n,x,y) {c==x-1, c==y, 0<=c, c+2<=m, c+2<=n, 1<=m, m<=n,
//    1<=n}

         y++;

//  P(c,m,n,x,y) {c==x-1, c==y-1, 0<=c, c+2<=m, c+2<=n, 1<=m, m<=n,
//    1<=n}

         c++;

//  P(c,m,n,x,y) {c==x, c==y, 1<=c, c+1<=m, c+1<=n, 1<=m, m<=n, 1<=n}

         if (!(c<=n))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+1<=m, m<=n}

         if (!(x<n-1&&y<m-1))

//  P(c,m,n,x,y) {c==m-1, c==x, c==y, 0<=c, c+1<=n}

            deadlock();

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, c+2<=m, c+2<=n, m<=n}

         x++;

//  P(c,m,n,x,y) {c==x-1, c==y, 0<=c, c+2<=m, c+2<=n, 1<=m, m<=n,
//    1<=n}

         y++;

//  P(c,m,n,x,y) {c==x-1, c==y-1, 0<=c, c+2<=m, c+2<=n, 1<=m, m<=n,
//    1<=n}

         c++;

//  P(c,m,n,x,y) {c==x, c==y, 1<=c, c+1<=m, c+1<=n, 1<=m, m<=n, 1<=n}

         if (!(c<=n))

//  P() {0==-1}

            checking_error();
      }

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) goto l99998;

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) goto l99997;

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x==n-1&&y==m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 2<=c+n, 1<=m, m<=n, 1<=n}

         deadlock();

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x, c==y, 0<=c}

      x++;

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x-1, c==y, 0<=c}

      y++;

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x-1, c==y-1, 0<=c}

      c++;

//  P(c,m,n,x,y) {c==m, c==n, c==x, c==y, 1<=c}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   else {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x==n-1&&y==m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 2<=c+n, 1<=m, m<=n, 1<=n}

         deadlock();

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x, c==y, 0<=c}

      x++;

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x-1, c==y, 0<=c}

      y++;

//  P(c,m,n,x,y) {c==m-1, c==n-1, c==x-1, c==y-1, 0<=c}

      c++;

//  P(c,m,n,x,y) {c==m, c==n, c==x, c==y, 1<=c}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   goto L4;
l99997:   ;

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x==n-1&&y<m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

         deadlock();

//  P() {0==-1}

      x++;

//  P() {0==-1}

      y++;

//  P() {0==-1}

      c++;

//  P() {0==-1}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   else {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x==n-1&&y<m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

         deadlock();

//  P() {0==-1}

      x++;

//  P() {0==-1}

      y++;

//  P() {0==-1}

      c++;

//  P() {0==-1}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   goto L3;
l99998:   ;

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

   if (rand_b()) {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x<n-1&&y==m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

         deadlock();

//  P(c,m,n,x,y) {c==m-1, c==x, c==y, 0<=c, c+2<=n, 1<=n}

      x++;

//  P(c,m,n,x,y) {c==m-1, c==x-1, c==y, 0<=c, c+2<=n, 1<=n}

      y++;

//  P(c,m,n,x,y) {c==m-1, c==x-1, c==y-1, 0<=c, c+2<=n, 1<=n}

      c++;

//  P(c,m,n,x,y) {c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   else {

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

      if (!(x<n-1&&y==m-1))

//  P(c,m,n,x,y) {c==x, c==y, 0<=c, 1<=m, m<=n, 1<=n}

         deadlock();

//  P(c,m,n,x,y) {c==m-1, c==x, c==y, 0<=c, c+2<=n, 1<=n}

      x++;

//  P(c,m,n,x,y) {c==m-1, c==x-1, c==y, 0<=c, c+2<=n, 1<=n}

      y++;

//  P(c,m,n,x,y) {c==m-1, c==x-1, c==y-1, 0<=c, c+2<=n, 1<=n}

      c++;

//  P(c,m,n,x,y) {c==m, c==x, c==y, 1<=c, c+1<=n, 1<=n}

      if (!(c<=n))

//  P() {0==-1}

         checking_error();
   }
   goto L2;

//  P(c,m,n,x,y) {c==n, c==x, c==y, m<=c, 0<=m}

L4:   ;
}
