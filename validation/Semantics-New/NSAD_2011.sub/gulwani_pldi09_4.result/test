
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int i, m, n, j1, j2;

//  T(m) {0<=m}

   m = rand();

//  T(n) {0<=m, 0<=n}

   n = rand();

//  T() {1<=m, m+1<=n, 0<=n}

   if (!(0<m&&m<n))

//  T() {0==-1}

      deadlock();

//  T(i) {i==n, 0<=i, m+1<=i, 1<=m}

   i = n;

//  T(j1,j2) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   j1 = j2 = 0;

//  T() {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   if (!(j1<=n&&j2<=n))

//  T() {0==-1}

      checking_error();

//  T(i,j1,j2) {0<=i, i+j1+j2<=i#init+j1#init+j2#init, 2<=i+2j1+2j2,
//    i+j1+j2<=n, 4<=i+2j2+2m, 0<=j1, j1#init<=j1, 0<=j2, j2#init<=j2,
//    1<=m, m+1<=n}

   while (rand_b())

//  T(i,j1,j2) {j1+j2==j1#init+j2#init+1, 0<=i, i+1<=i#init,
//    i#init+j1<=i+j1#init+m, j1#init<=j1, j1<=j1#init+1, j1<=n,
//    j2<=n, m+1<=n}

      if (rand_b()) {

//  T() {1<=i, i+1<=m, 1<=m, m+1<=n}

         if (!(i>0&&i<m))

//  T() {0==-1}

            deadlock();

//  T(i) {i==i#init-1, 0<=i, i+2<=m, 1<=m, m+1<=n}

         i--;

//  T(j1) {j1==j1#init+1, 0<=i, i+2<=m, 1<=m, m+1<=n}

         j1++;

//  T() {0<=i, i+2<=m, j1<=n, j2<=n, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {1<=i, m<=i, 1<=m, m+1<=n}

         if (!(i>0&&i>=m))

//  T() {0==-1}

            deadlock();

//  T(i) {i+m==i#init, 1<=i#init, m<=i#init, 1<=m, m+1<=n}

         i -= m;

//  T(j2) {j2==j2#init+1, 0<=i, 1<=m, m+1<=n}

         j2++;

//  T() {0<=i, j1<=n, j2<=n, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int i, m, n, j1, j2;

//  T(m) {0<=m}

   m = rand();

//  T(n) {0<=m, 0<=n}

   n = rand();

//  T() {1<=m, m+1<=n, 0<=n}

   if (!(0<m&&m<n))

//  T() {0==-1}

      deadlock();

//  T(i) {i==n, 0<=i, m+1<=i, 1<=m}

   i = n;

//  T(j1,j2) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   j1 = j2 = 0;

//  T() {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   if (!(j1<=n&&j2<=n))

//  T() {0==-1}

      checking_error();

//  T(i,j2) {j1==0, i+j2<=i#init+j2#init, m+1<=i+j2, i+j2<=n, m<=i,
//    0<=j2, j2#init<=j2, 1<=m}

   while (rand_b()) {

//  T() {j1==0, 1<=i, m<=i, 2m<=i, 1<=m, m+1<=n}

      if (!(i>0&&i>=m&&i>=2*m))

//  T() {0==-1}

         deadlock();

//  T(i) {i+m==i#init, j1==0, 1<=i#init, m<=i#init, 2m<=i#init, 1<=m,
//    m+1<=n}

      i -= m;

//  T(j2) {j1==0, j2==j2#init+1, 0<=i, m<=i, 1<=m, m+1<=n}

      j2++;

//  T() {j1==0, 0<=i, m<=i, j2<=n, 1<=m, m+1<=n, 0<=n}

      if (!(j1<=n&&j2<=n))

//  T() {0==-1}

         checking_error();
   }

//  T() {j1==0, 1<=i, i+j2<=n, m<=i, i+1<=2m, 0<=j2, 1<=m, m+1<=n,
//    0<=n}

   if (!(i>0&&i>=m&&i<2*m))

//  T() {0==-1}

      deadlock();

//  T(i) {i+m==i#init, j1==0, 1<=i#init, i#init+j2<=n, m<=i#init,
//    i#init+1<=2m, 0<=j2, 1<=m, m+1<=n, 0<=n}

   i -= m;

//  T(j2) {j1==0, j2==j2#init+1, 0<=i, i+j2+m<=n+1, i+1<=m, 1<=j2,
//    1<=m, m+1<=n, 0<=n}

   j2++;

//  T() {j1==0, 0<=i, i+j2+m<=n+1, i+1<=m, 1<=j2, j2<=n, 1<=m, m+1<=n,
//    0<=n}

   if (!(j1<=n&&j2<=n))

//  T() {0==-1}

      checking_error();

//  T(i,j1) {i+j1==i#init+j1#init, 0<=i, i<=i#init, i+j1+j2+m<=n+1,
//    i+j1+1<=m, 0<=j1, j1+m+1<=n, 1<=j2}

   while (rand_b()) {

//  T() {2<=i, i+1<=m, 1<=j2, j2+m<=n+1, 1<=m, m+1<=n}

      if (!(i>1&&i<m))

//  T() {0==-1}

         deadlock();

//  T(i) {i==i#init-1, 1<=i, i+2<=m, 1<=j2, j2+m<=n+1, 1<=m, m+1<=n}

      i--;

//  T(j1) {j1==j1#init+1, 1<=i, i+2<=m, 1<=j2, j2+m<=n+1, 1<=m,
//    m+1<=n}

      j1++;

//  T() {1<=i, i+2<=m, j1<=n, 1<=j2, j2+m<=n+1, j2<=n, 1<=m, m+1<=n}

      if (!(j1<=n&&j2<=n))

//  T() {0==-1}

         checking_error();
   }

//  T() {i==1, 0<=j1, j1+j2+m<=n, j1+2<=m, 1<=j2, j2<=n, 2<=m, m+1<=n,
//    0<=n}

   if (!(i==1&&i<m))

//  T() {0==-1}

      deadlock();

//  T(i) {i==0, i#init==1, 0<=j1, j1+j2+m<=n, j1+2<=m, 1<=j2, j2<=n,
//    2<=m, m+1<=n, 0<=n}

   i--;

//  T(j1) {i==0, j1==j1#init+1, 1<=j1, j1+j2+m<=n+1, j1+1<=m, 1<=j2,
//    j2<=n, 2<=m, m+1<=n, 0<=n}

   j1++;

//  T() {i==0, 1<=j1, j1+j2+m<=n+1, j1+1<=m, j1<=n, 1<=j2, j2<=n,
//    2<=m, m+1<=n, 0<=n}

   if (!(j1<=n&&j2<=n))

//  T() {0==-1}

      checking_error();
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int i, m, n, j1, j2;

//  P() {}

   m = rand();

//  P(m) {0<=m}

   n = rand();

//  P(m,n) {0<=m, 0<=n}

   if (!(0<m&&m<n))

//  P(m,n) {0<=m, 0<=n}

      deadlock();

//  P(m,n) {1<=m, m+1<=n, 0<=n}

   i = n;

//  P(i,m,n) {i==n, 0<=i, m+1<=i, 1<=m}

   j1 = j2 = 0;

//  P(i,j1,j2,m,n) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   if (!(j1<=n&&j2<=n))

//  P() {0==-1}

      checking_error();

//  P(i,j1,j2,m,n) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   while (rand_b())

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

      if (rand_b()) {

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(i>0&&i<m))

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

            deadlock();

//  P(i,j1,j2,m,n) {1<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, i+1<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         i--;

//  P(i,j1,j2,m,n) {0<=i, 1<=i+2j1+2j2, 5<=3i+4j1+4j2+2m,
//    7<=3i+2j1+4j2+4m, 3<=2i+2j1+3j2+m, i+j1+j2+1<=n, 11<=3i+4j2+8m,
//    3<=i+2j2+2m, i+2<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         j1++;

//  P(i,j1,j2,m,n) {0<=i, 3<=i+2j1+2j2, 9<=3i+4j1+4j2+2m,
//    9<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 11<=3i+4j2+8m,
//    3<=i+2j2+2m, i+2<=m, 1<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(i>0&&i>=m))

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, i+1<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

            deadlock();

//  P(i,j1,j2,m,n) {1<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, m<=i, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         i -= m;

//  P(i,j1,j2,m,n) {0<=i, 8<=3i+4j1+4j2+5m, 10<=3i+2j1+4j2+7m,
//    5<=2i+2j1+3j2+3m, 2<=i+2j1+2j2+m, i+j1+j2+m<=n, 14<=3i+4j2+11m,
//    4<=i+2j2+3m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         j2++;

//  P(i,j1,j2,m,n) {0<=i, 12<=3i+4j1+4j2+5m, 14<=3i+2j1+4j2+7m,
//    8<=2i+2j1+3j2+3m, 4<=i+2j1+2j2+m, i+j1+j2+m<=n+1,
//    18<=3i+4j2+11m, 6<=i+2j2+3m, 0<=j1, 1<=j2, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int i, m, n, j1, j2;

//  P() {}

   m = rand();

//  P(m) {0<=m}

   n = rand();

//  P(m,n) {0<=m, 0<=n}

   if (!(0<m&&m<n))

//  P(m,n) {0<=m, 0<=n}

      deadlock();

//  P(m,n) {1<=m, m+1<=n, 0<=n}

   i = n;

//  P(i,m,n) {i==n, 0<=i, m+1<=i, 1<=m}

   j1 = j2 = 0;

//  P(i,j1,j2,m,n) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   if (!(j1<=n&&j2<=n))

//  P() {0==-1}

      checking_error();

//  P(i,j1,j2,m,n) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   while (rand_b()) {

//  P(i,j1,j2,m,n) {j1==0, m+1<=i+j2, i+j2<=n, m<=i, 0<=j2, 1<=m}

      if (!(i>0&&i>=m&&i>=2*m))

//  P(i,j1,j2,m,n) {j1==0, m+1<=i+j2, i+j2<=n, m<=i, i+1<=2m, 0<=j2,
//    1<=m}

         deadlock();

//  P(i,j1,j2,m,n) {j1==0, 1<=i, m+1<=i+j2, i+j2<=n, m<=i, 2m<=i,
//    0<=j2, 1<=m}

      i -= m;

//  P(i,j1,j2,m,n) {j1==0, 0<=i, 1<=i+j2, i+j2+m<=n, m<=i, 0<=j2,
//    1<=m, m+1<=n}

      j2++;

//  P(i,j1,j2,m,n) {j1==0, 0<=i, 2<=i+j2, i+j2+m<=n+1, m<=i, 1<=j2,
//    1<=m, m+1<=n}

      if (!(j1<=n&&j2<=n))

//  P() {0==-1}

         checking_error();
   }

//  P(i,j1,j2,m,n) {j1==0, m+1<=i+j2, i+j2<=n, m<=i, 0<=j2, 1<=m}

   if (!(i>0&&i>=m&&i<2*m))

//  P(i,j1,j2,m,n) {j1==0, m+1<=i+j2, i+j2<=n, m<=i, 2m<=i, 0<=j2,
//    1<=m}

      deadlock();

//  P(i,j1,j2,m,n) {j1==0, 1<=i, m+1<=i+j2, i+j2<=n, m<=i, i+1<=2m,
//    0<=j2, 1<=m}

   i -= m;

//  P(i,j1,j2,m,n) {j1==0, 0<=i, 1<=i+j2, i+j2+m<=n, i+1<=m, 0<=j2,
//    1<=m, m+1<=n, 0<=n}

   j2++;

//  P(i,j1,j2,m,n) {j1==0, 0<=i, 2<=i+j2, i+j2+m<=n+1, i+1<=m, 1<=j2,
//    1<=m, m+1<=n, 0<=n}

   if (!(j1<=n&&j2<=n))

//  P() {0==-1}

      checking_error();

//  P(i,j1,j2,m,n) {j1==0, 0<=i, 2<=i+j2, i+j2+m<=n+1, i+1<=m, 1<=j2,
//    j2<=n, 1<=m, m+1<=n, 0<=n}

   while (rand_b()) {

//  P(i,j1,j2,m,n) {0<=i, i+j1+j2+m<=n+1, i+j1+1<=m, 2<=i+j2, 0<=j1,
//    1<=j2}

      if (!(i>1&&i<m))

//  P(i,j1,j2,m,n) {0<=i, i<=1, i+j1+j2+m<=n+1, i+j1+1<=m, 2<=i+j2,
//    0<=j1, 1<=j2}

         deadlock();

//  P(i,j1,j2,m,n) {2<=i, i+j1+j2+m<=n+1, i+j1+1<=m, i+1<=m, 0<=j1,
//    1<=j2}

      i--;

//  P(i,j1,j2,m,n) {1<=i, i+j1+j2+m<=n, i+j1+2<=m, i+2<=m, 0<=j1,
//    1<=j2, j2+m<=n+1, 1<=m, m+1<=n}

      j1++;

//  P(i,j1,j2,m,n) {1<=i, i+j1+j2+m<=n+1, i+j1+1<=m, i+2<=m, 1<=j1,
//    1<=j2, j2+m<=n+1, 1<=m, m+1<=n}

      if (!(j1<=n&&j2<=n))

//  P() {0==-1}

         checking_error();
   }

//  P(i,j1,j2,m,n) {0<=i, i+j1+j2+m<=n+1, i+j1+1<=m, 2<=i+j2, 0<=j1,
//    1<=j2}

   if (!(i==1&&i<m))

//  P(i,j1,j2,m,n) {0<=i, i+j1+j2+m<=n+1, i+j1+1<=m, 4<=i+2j2,
//    2<=i+j2, 0<=j1, 1<=j2}

      deadlock();

//  P(i,j1,j2,m,n) {i==1, 0<=j1, j1+j2+m<=n, j1+2<=m, 1<=j2, 2<=m}

   i--;

//  P(i,j1,j2,m,n) {i==0, 0<=j1, j1+j2+m<=n, j1+2<=m, 1<=j2, j2<=n,
//    2<=m, m+1<=n, 0<=n}

   j1++;

//  P(i,j1,j2,m,n) {i==0, 1<=j1, j1+j2+m<=n+1, j1+1<=m, 1<=j2, j2<=n,
//    2<=m, m+1<=n, 0<=n}

   if (!(j1<=n&&j2<=n))

//  P() {0==-1}

      checking_error();
}
