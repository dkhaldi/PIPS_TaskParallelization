
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int x, y, m, i;

//  T(i,x,y) {i==0, x==0, y==0}

   x = y = i = 0;

//  T(m) {i==0, x==0, y==0, 0<=m}

   m = rand();

//  T() {i==0, x==0, y==0, 0<=m}

   if (!(i<=100+m))

//  T() {0==-1}

      checking_error();

//  T(i,x,y) {i+x#init+y#init==i#init+x+y, x+y==i, i<=m+100, y<=i,
//    i<=y+100, 0<=m, x#init<=x, 0<=y, y#init<=y}

   while (rand_b())

//  T(i,x,y) {i==i#init+1, x+y==x#init+y#init+1, i<=m+100, 0<=m,
//    x+y<=y#init+100, y#init<=y, y<=y#init+1}

      if (rand_b()) {

//  T() {0<=m, y+1<=m, x<=99}

         if (!(x<100&&y<m))

//  T() {0==-1}

            deadlock();

//  T(y) {y==y#init+1, 0<=m, y<=m, x<=99}

         y++;

//  T(i) {i==i#init+1, 0<=m, y<=m, x<=99}

         i++;

//  T() {i<=m+100, 0<=m, y<=m, x<=99}

         if (!(i<=100+m))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {0<=m, m<=y, x<=99}

         if (!(x<100&&y>=m))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 0<=m, m<=y, x<=100}

         x++;

//  T(i) {i==i#init+1, 0<=m, m<=y, x<=100}

         i++;

//  T() {i<=m+100, 0<=m, m<=y, x<=100}

         if (!(i<=100+m))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int x, y, m, i;

//  T(i,x,y) {i==0, x==0, y==0}

   x = y = i = 0;

//  T(m) {i==0, x==0, y==0, 0<=m}

   m = rand();

//  T() {i==0, x==0, y==0, 0<=m}

   if (!(i<=100+m))

//  T() {0==-1}

      checking_error();

//  T(i,y) {i==m, i==y, i#init==0, x==0, y#init==0, 0<=i}

   if (y<m) {

//  T(i,y) {i==y, i#init==y#init, x==0, 0<=i, i+1<=m, y#init<=i}

      while (rand_b()) {

//  T() {x==0, 1<=m, y+2<=m}

         if (!(x<100&&y<m-1))

//  T() {0==-1}

            deadlock();

//  T(y) {x==0, y==y#init+1, 1<=m, y+1<=m}

         y++;

//  T(i) {i==i#init+1, x==0, 1<=m, y+1<=m}

         i++;

//  T() {x==0, i<=m+100, 1<=m, y+1<=m}

         if (!(i<=100+m))

//  T() {0==-1}

            checking_error();
      }

//  T() {i==m-1, i==y, x==0, 0<=i}

      if (!(x<100&&y==m-1))

//  T() {0==-1}

         deadlock();

//  T(y) {i==m-1, i==y-1, i==y#init, x==0, 0<=i}

      y++;

//  T(i) {i==i#init+1, i==m, i==y, x==0, 1<=i}

      i++;

//  T() {i==m, i==y, x==0, 1<=i}

      if (!(i<=100+m))

//  T() {0==-1}

         checking_error();
   }

//  T(i,x) {i+x#init==i#init+x, m+x==i, m==y, m<=i, i<=m+99, 0<=m,
//    x#init<=x}

   while (rand_b()) {

//  T() {m==y, 0<=m, x<=98}

      if (!(x<99&&y>=m))

//  T() {0==-1}

         deadlock();

//  T(x) {m==y, x==x#init+1, 0<=m, x<=99}

      x++;

//  T(i) {i==i#init+1, m==y, 0<=m, x<=99}

      i++;

//  T() {m==y, i<=m+100, 0<=m, x<=99}

      if (!(i<=100+m))

//  T() {0==-1}

         checking_error();
   }

//  T() {i==m+99, i==y+99, x==99, 99<=i}

   if (!(x==99&&y>=m))

//  T() {0==-1}

      deadlock();

//  T(x) {i==m+99, i==y+99, x==100, x#init==99, 99<=i}

   x++;

//  T(i) {i==i#init+1, i==m+100, i==y+100, x==100, 100<=i}

   i++;

//  T() {i==m+100, i==y+100, x==100, 100<=i}

   if (!(i<=100+m))

//  T() {0==-1}

      checking_error();
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int x, y, m, i;

//  P() {}

   x = y = i = 0;

//  P(i,x,y) {i==0, x==0, y==0}

   m = rand();

//  P(i,m,x,y) {i==0, x==0, y==0, 0<=m}

   if (!(i<=100+m))

//  P() {0==-1}

      checking_error();

//  P(i,m,x,y) {i==0, x==0, y==0, 0<=m}

   while (rand_b())

//  P(i,m,x,y) {x+y==i, i<=m+100, x<=i, 0<=m, 0<=x, x<=100}

      if (rand_b()) {

//  P(i,m,x,y) {x+y==i, i<=m+100, x<=i, 0<=m, 0<=x, x<=100}

         if (!(x<100&&y<m))

//  P(i,m,x,y) {x+y==i, i<=m+100, 0<=m, 0<=x, x<=100, 0<=y}

            deadlock();

//  P(i,m,x,y) {x+y==i, i<=m+100, x<=i, 0<=m, y+1<=m, 0<=x, x<=99}

         y++;

//  P(i,m,x,y) {x+y==i+1, i<=m+100, x<=i, 0<=m, y<=m, 0<=x, x<=99}

         i++;

//  P(i,m,x,y) {x+y==i, i<=m+101, x+1<=i, 0<=m, y<=m, 0<=x, x<=99}

         if (!(i<=100+m))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,m,x,y) {x+y==i, i<=m+100, x<=i, 0<=m, 0<=x, x<=100}

         if (!(x<100&&y>=m))

//  P(i,m,x,y) {x+y==i, i<=m+100, 101y+100<=i+100m, 0<=m, 0<=x,
//    x<=100, 0<=y}

            deadlock();

//  P(i,m,x,y) {x+y==i, i<=m+100, x<=i, 0<=m, m<=y, 0<=x, x<=99}

         x++;

//  P(i,m,x,y) {x+y==i+1, i<=m+100, x<=i+1, 0<=m, m<=y, 1<=x, x<=100}

         i++;

//  P(i,m,x,y) {x+y==i, i<=m+101, x<=i, 0<=m, m<=y, 1<=x, x<=100}

         if (!(i<=100+m))

//  P(i,m,x,y) {i==m+101, x+y==i, 101<=i, 1<=x, x<=100}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int x, y, m, i;

//  P() {}

   x = y = i = 0;

//  P(i,x,y) {i==0, x==0, y==0}

   m = rand();

//  P(i,m,x,y) {i==0, x==0, y==0, 0<=m}

   if (!(i<=100+m))

//  P() {0==-1}

      checking_error();

//  P(i,m,x,y) {i==0, x==0, y==0, 0<=m}

   if (y<m) {

//  P(i,m,x,y) {i==0, x==0, y==0, 1<=m}

      while (rand_b()) {

//  P(i,m,x,y) {i==y, x==0, 0<=i, i+1<=m}

         if (!(x<100&&y<m-1))

//  P(i,m,x,y) {i==m-1, i==y, x==0, 0<=i}

            deadlock();

//  P(i,m,x,y) {i==y, x==0, 0<=i, i+2<=m}

         y++;

//  P(i,m,x,y) {i==y-1, x==0, 0<=i, i+2<=m, 1<=m}

         i++;

//  P(i,m,x,y) {i==y, x==0, 1<=i, i+1<=m, 1<=m}

         if (!(i<=100+m))

//  P() {0==-1}

            checking_error();
      }

//  P(i,m,x,y) {i==y, x==0, 0<=i, i+1<=m}

      if (!(x<100&&y==m-1))

//  P(i,m,x,y) {i==y, x==0, 0<=i, i+2<=m}

         deadlock();

//  P(i,m,x,y) {i==m-1, i==y, x==0, 0<=i}

      y++;

//  P(i,m,x,y) {i==m-1, i==y-1, x==0, 0<=i}

      i++;

//  P(i,m,x,y) {i==m, i==y, x==0, 1<=i}

      if (!(i<=100+m))

//  P() {0==-1}

         checking_error();
   }

//  P(i,m,x,y) {i==m, i==y, x==0, 0<=i}

   while (rand_b()) {

//  P(i,m,x,y) {m+x==i, m==y, m<=i, i<=m+99, 0<=m}

      if (!(x<99&&y>=m))

//  P(i,m,x,y) {m+x==i, m==y, i<=m+99, 0<=m, 99<=x}

         deadlock();

//  P(i,m,x,y) {m+x==i, m==y, m<=i, 0<=m, x<=98}

      x++;

//  P(i,m,x,y) {m+x==i+1, m==y, m<=i, 0<=m, x<=99}

      i++;

//  P(i,m,x,y) {m+x==i, m==y, m+1<=i, 0<=m, x<=99}

      if (!(i<=100+m))

//  P() {0==-1}

         checking_error();
   }

//  P(i,m,x,y) {m+x==i, m==y, m<=i, i<=m+99, 0<=m}

   if (!(x==99&&y>=m))

//  P(i,m,x,y) {m+x==i, m==y, m<=i, 0<=m, x<=98}

      deadlock();

//  P(i,m,x,y) {i==m+99, i==y+99, x==99, 99<=i}

   x++;

//  P(i,m,x,y) {i==m+99, i==y+99, x==100, 99<=i}

   i++;

//  P(i,m,x,y) {i==m+100, i==y+100, x==100, 100<=i}

   if (!(i<=100+m))

//  P() {0==-1}

      checking_error();
}
