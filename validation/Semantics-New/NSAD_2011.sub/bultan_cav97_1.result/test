
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int s1, s2, a, b;

//  T(s1,s2) {s1==1, s2==1}

   s1 = s2 = 1;

//  T(a,b) {a==0, b==0, s1==1, s2==1}

   a = b = 0;

//  T() {a==0, b==0, s1==1, s2==1}

   if (s1==3&&s2==3)

//  T() {0==-1}

      checking_error();

//  T(a,b,s1,s2) {}

   while (rand_b())

//  T(a,b,s1,s2) {s1#init+s2#init<=s1+s2+2,
//    s1#init+2s2<=s1+2s2#init+2, s1+s2<=s1#init+s2#init+1,
//    2s1+s2#init<=2s1#init+s2+2}

      if (rand_b()) {

//  T() {s1==1}

         if (!(s1==1))

//  T() {0==-1}

            deadlock();

//  T(a) {a==b+1, s1==1}

         a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1}

         s1 = 2;

//  T() {a==b+1, s1==2}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s1==2}

         if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

            deadlock();

//  T(s1) {s1==3, s1#init==2}

         s1 = 3;

//  T() {s1==3}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s1==3}

         if (!(s1==3))

//  T() {0==-1}

            deadlock();

//  T(a) {a==0, s1==3}

         a = 0;

//  T(s1) {a==0, s1==1, s1#init==3}

         s1 = 1;

//  T() {a==0, s1==1}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s2==1}

         if (!(s2==1))

//  T() {0==-1}

            deadlock();

//  T(b) {a==b-1, s2==1}

         b = a+1;

//  T(s2) {a==b-1, s2==2, s2#init==1}

         s2 = 2;

//  T() {a==b-1, s2==2}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s2==2}

         if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

            deadlock();

//  T(s2) {s2==3, s2#init==2}

         s2 = 3;

//  T() {s2==3}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {s2==3}

         if (!(s2==3))

//  T() {0==-1}

            deadlock();

//  T(b) {b==0, s2==3}

         b = 0;

//  T(s2) {b==0, s2==1, s2#init==3}

         s2 = 1;

//  T() {b==0, s2==1}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int s1, s2, a, b;

//  T(s1,s2) {s1==1, s2==1}

   s1 = s2 = 1;

//  T(a,b) {a==0, b==0, s1==1, s2==1}

   a = b = 0;

//  T() {a==0, b==0, s1==1, s2==1}

   if (s1==3&&s2==3)

//  T() {0==-1}

      checking_error();

//  T(a,b,s1,s2) {b==0, s1==1, s1#init==1, s2==1, s2#init==1}

   while (rand_b())

//  T(a,b,s1,s2) {b==0, s1==s1#init, s2==s2#init}

      if (rand_b()) {

//  T() {s1==1}

         if (!(s1==1))

//  T() {0==-1}

            deadlock();

//  T(a) {a==b+1, s1==1}

         a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1}

         s1 = 2;

//  T() {a==b+1, s1==2}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();

//  T() {a==1, b==0, s1==2}

         if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

            deadlock();

//  T(s1) {a==1, b==0, s1==3, s1#init==2}

         s1 = 3;

//  T() {a==1, b==0, s1==3}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();

//  T() {a==1, b==0, s1==3}

         if (!(s1==3))

//  T() {0==-1}

            deadlock();

//  T(a) {a==0, a#init==1, b==0, s1==3}

         a = 0;

//  T(s1) {a==0, b==0, s1==1, s1#init==3}

         s1 = 1;

//  T() {a==0, b==0, s1==1}

         if (s1==3&&s2==3)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T(a,b,s1,s2) {s1==s1#init, s2==2, s2#init==1}

         if (rand_b()) {

//  T() {s2==1}

            if (!(s2==1))

//  T() {0==-1}

               deadlock();

//  T(b) {a==b-1, s2==1}

            b = a+1;

//  T(s2) {a==b-1, s2==2, s2#init==1}

            s2 = 2;

//  T() {a==b-1, s2==2}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {s1==1}

            if (!(s1==1))

//  T() {0==-1}

               deadlock();

//  T(a) {a==b+1, s1==1}

            a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1}

            s1 = 2;

//  T() {a==b+1, s1==2}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();

//  T(a,b,s1,s2) {a==0, a#init==b-1, a#init==b#init+1, s1==1,
//    s1#init==2, s2==2, s2#init==1}

            if (rand_b()) {

//  T() {a==b+1, s1==2, s2==1}

               if (!(s2==1))

//  T() {0==-1}

                  deadlock();

//  T(b) {a==b-1, a==b#init+1, s1==2, s2==1}

               b = a+1;

//  T(s2) {a==b-1, s1==2, s2==2, s2#init==1}

               s2 = 2;

//  T() {a==b-1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b-1, s1==2, s2==2}

               if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

                  deadlock();

//  T(s1) {a==b-1, s1==3, s1#init==2, s2==2}

               s1 = 3;

//  T() {a==b-1, s1==3, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b-1, s1==3, s2==2}

               if (!(s1==3))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==0, a#init==b-1, s1==3, s2==2}

               a = 0;

//  T(s1) {a==0, s1==1, s1#init==3, s2==2}

               s1 = 1;

//  T() {a==0, s1==1, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
            else {

//  T() {a==1, b==0, s1==2}

               if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

                  deadlock();

//  T(s1) {a==1, b==0, s1==3, s1#init==2}

               s1 = 3;

//  T() {a==1, b==0, s1==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==1, b==0, s1==3, s2==1}

               if (!(s2==1))

//  T() {0==-1}

                  deadlock();

//  T(b) {a==1, b==2, b#init==0, s1==3, s2==1}

               b = a+1;

//  T(s2) {a==1, b==2, s1==3, s2==2, s2#init==1}

               s2 = 2;

//  T() {a==1, b==2, s1==3, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==1, b==2, s1==3, s2==2}

               if (!(s1==3))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==0, a#init==1, b==2, s1==3, s2==2}

               a = 0;

//  T(s1) {a==0, b==2, s1==1, s1#init==3, s2==2}

               s1 = 1;

//  T() {a==0, b==2, s1==1, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
         }

//  T(a,b,s1,s2) {s1==s1#init, s2==2, s2#init==2, b#init<=b}

         while (rand_b()) {

//  T(a,s1,s2) {a==b+1, s1==2, s1#init==1, s2==3, s2#init==2}

            if (rand_b()) {

//  T() {s1==1}

               if (!(s1==1))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==b+1, s1==1}

               a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1}

               s1 = 2;

//  T() {a==b+1, s1==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b+1, s1==2, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

                  deadlock();

//  T(s2) {a==b+1, s1==2, s2==3, s2#init==2}

               s2 = 3;

//  T() {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
            else {

//  T() {s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

                  deadlock();

//  T(s2) {s2==3, s2#init==2}

               s2 = 3;

//  T() {s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {s1==1, s2==3}

               if (!(s1==1))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==b+1, s1==1, s2==3}

               a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1, s2==3}

               s1 = 2;

//  T() {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }

//  T() {a==b+1, s1==2, s2==3}

            if (!(s2==3))

//  T() {0==-1}

               deadlock();

//  T(b) {a==b#init+1, b==0, s1==2, s2==3}

            b = 0;

//  T(s2) {b==0, s1==2, s2==1, s2#init==3}

            s2 = 1;

//  T() {b==0, s1==2, s2==1}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();

//  T(a,b,s1,s2) {a==0, a#init==b-1, b#init==0, s1==1, s1#init==2,
//    s2==2, s2#init==1}

            if (rand_b()) {

//  T() {b==0, s1==2, s2==1}

               if (!(s2==1))

//  T() {0==-1}

                  deadlock();

//  T(b) {a==b-1, b#init==0, s1==2, s2==1}

               b = a+1;

//  T(s2) {a==b-1, s1==2, s2==2, s2#init==1}

               s2 = 2;

//  T() {a==b-1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b-1, s1==2, s2==2}

               if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

                  deadlock();

//  T(s1) {a==b-1, s1==3, s1#init==2, s2==2}

               s1 = 3;

//  T() {a==b-1, s1==3, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b-1, s1==3, s2==2}

               if (!(s1==3))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==0, a#init==b-1, s1==3, s2==2}

               a = 0;

//  T(s1) {a==0, s1==1, s1#init==3, s2==2}

               s1 = 1;

//  T() {a==0, s1==1, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
            else {

//  T() {b==0, s1==2, s2==1}

               if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

                  deadlock();

//  T(s1) {b==0, s1==3, s1#init==2, s2==1}

               s1 = 3;

//  T() {b==0, s1==3, s2==1}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {b==0, s1==3, s2==1}

               if (!(s2==1))

//  T() {0==-1}

                  deadlock();

//  T(b) {a==b-1, b#init==0, s1==3, s2==1}

               b = a+1;

//  T(s2) {a==b-1, s1==3, s2==2, s2#init==1}

               s2 = 2;

//  T() {a==b-1, s1==3, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b-1, s1==3, s2==2}

               if (!(s1==3))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==0, a#init==b-1, s1==3, s2==2}

               a = 0;

//  T(s1) {a==0, s1==1, s1#init==3, s2==2}

               s1 = 1;

//  T() {a==0, s1==1, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
         }

//  T(a,b,s1,s2) {b==0, s1==s1#init, s2==1, s2#init==2}

         if (rand_b()) {

//  T(a,s1,s2) {a==b+1, s1==2, s1#init==1, s2==3, s2#init==2}

            if (rand_b()) {

//  T() {s1==1, s2==2}

               if (!(s1==1))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==b+1, s1==1, s2==2}

               a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1, s2==2}

               s1 = 2;

//  T() {a==b+1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {a==b+1, s1==2, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

                  deadlock();

//  T(s2) {a==b+1, s1==2, s2==3, s2#init==2}

               s2 = 3;

//  T() {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }
            else {

//  T() {s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

                  deadlock();

//  T(s2) {s2==3, s2#init==2}

               s2 = 3;

//  T() {s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();

//  T() {s1==1, s2==3}

               if (!(s1==1))

//  T() {0==-1}

                  deadlock();

//  T(a) {a==b+1, s1==1, s2==3}

               a = b+1;

//  T(s1) {a==b+1, s1==2, s1#init==1, s2==3}

               s1 = 2;

//  T() {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  T() {0==-1}

                  checking_error();
            }

//  T() {a==b+1, s1==2, s2==3}

            if (!(s2==3))

//  T() {0==-1}

               deadlock();

//  T(b) {a==b#init+1, b==0, s1==2, s2==3}

            b = 0;

//  T(s2) {b==0, s1==2, s2==1, s2#init==3}

            s2 = 1;

//  T() {b==0, s1==2, s2==1}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();

//  T() {b==0, s1==2, s2==1}

            if (!(s1==2&&(a<b||b==0)))

//  T() {0==-1}

               deadlock();

//  T(s1) {b==0, s1==3, s1#init==2, s2==1}

            s1 = 3;

//  T() {b==0, s1==3, s2==1}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();

//  T() {b==0, s1==3, s2==1}

            if (!(s1==3))

//  T() {0==-1}

               deadlock();

//  T(a) {a==0, b==0, s1==3, s2==1}

            a = 0;

//  T(s1) {a==0, b==0, s1==1, s1#init==3, s2==1}

            s1 = 1;

//  T() {a==0, b==0, s1==1, s2==1}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {s2==2}

            if (!(s2==2&&(b<a||a==0)))

//  T() {0==-1}

               deadlock();

//  T(s2) {s2==3, s2#init==2}

            s2 = 3;

//  T() {s2==3}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();

//  T() {s2==3}

            if (!(s2==3))

//  T() {0==-1}

               deadlock();

//  T(b) {b==0, s2==3}

            b = 0;

//  T(s2) {b==0, s2==1, s2#init==3}

            s2 = 1;

//  T() {b==0, s2==1}

            if (s1==3&&s2==3)

//  T() {0==-1}

               checking_error();
         }
      }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int s1, s2, a, b;

//  P() {}

   s1 = s2 = 1;

//  P(s1,s2) {s1==1, s2==1}

   a = b = 0;

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

   if (s1==3&&s2==3)

//  P() {0==-1}

      checking_error();

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

   while (rand_b())

//  P(a,b,s1,s2) {}

      if (rand_b()) {

//  P(a,b,s1,s2) {}

         if (!(s1==1))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s1==1}

         a = b+1;

//  P(a,b,s1,s2) {a==b+1, s1==1}

         s1 = 2;

//  P(a,b,s1,s2) {a==b+1, s1==2}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(a,b,s1,s2) {}

         if (!(s1==2&&(a<b||b==0)))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s1==2}

         s1 = 3;

//  P(a,b,s1,s2) {s1==3}

         if (s1==3&&s2==3)

//  P(a,b,s1,s2) {s1==3, s2==3}

            checking_error();
      }
      else if (rand_b()) {

//  P(a,b,s1,s2) {}

         if (!(s1==3))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s1==3}

         a = 0;

//  P(a,b,s1,s2) {a==0, s1==3}

         s1 = 1;

//  P(a,b,s1,s2) {a==0, s1==1}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(a,b,s1,s2) {}

         if (!(s2==1))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s2==1}

         b = a+1;

//  P(a,b,s1,s2) {a==b-1, s2==1}

         s2 = 2;

//  P(a,b,s1,s2) {a==b-1, s2==2}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(a,b,s1,s2) {}

         if (!(s2==2&&(b<a||a==0)))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s2==2}

         s2 = 3;

//  P(a,b,s1,s2) {s2==3}

         if (s1==3&&s2==3)

//  P(a,b,s1,s2) {s1==3, s2==3}

            checking_error();
      }
      else {

//  P(a,b,s1,s2) {}

         if (!(s2==3))

//  P(a,b,s1,s2) {}

            deadlock();

//  P(a,b,s1,s2) {s2==3}

         b = 0;

//  P(a,b,s1,s2) {b==0, s2==3}

         s2 = 1;

//  P(a,b,s1,s2) {b==0, s2==1}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int s1, s2, a, b;

//  P() {}

   s1 = s2 = 1;

//  P(s1,s2) {s1==1, s2==1}

   a = b = 0;

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

   if (s1==3&&s2==3)

//  P() {0==-1}

      checking_error();

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

   while (rand_b())

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

      if (rand_b()) {

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

         if (!(s1==1))

//  P() {0==-1}

            deadlock();

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

         a = b+1;

//  P(a,b,s1,s2) {a==1, b==0, s1==1, s2==1}

         s1 = 2;

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

         if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

            deadlock();

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

         s1 = 3;

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

         if (!(s1==3))

//  P() {0==-1}

            deadlock();

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

         a = 0;

//  P(a,b,s1,s2) {a==0, b==0, s1==3, s2==1}

         s1 = 1;

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

         if (s1==3&&s2==3)

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

         if (rand_b()) {

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

            if (!(s2==1))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

            b = a+1;

//  P(a,b,s1,s2) {a==b-1, s1==1, s2==1}

            s2 = 2;

//  P(a,b,s1,s2) {a==b-1, s1==1, s2==2}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

            if (!(s1==1))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

            a = b+1;

//  P(a,b,s1,s2) {a==1, b==0, s1==1, s2==1}

            s1 = 2;

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

            if (rand_b()) {

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

               if (!(s2==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

               b = a+1;

//  P(a,b,s1,s2) {a==1, b==2, s1==2, s2==1}

               s2 = 2;

//  P(a,b,s1,s2) {a==1, b==2, s1==2, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==1, b==2, s1==2, s2==2}

               if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==2, s1==2, s2==2}

               s1 = 3;

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               if (!(s1==3))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               a = 0;

//  P(a,b,s1,s2) {a==0, b==2, s1==3, s2==2}

               s1 = 1;

//  P(a,b,s1,s2) {a==0, b==2, s1==1, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
            else {

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

               if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==0, s1==2, s2==1}

               s1 = 3;

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

               if (!(s2==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==0, s1==3, s2==1}

               b = a+1;

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==1}

               s2 = 2;

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               if (!(s1==3))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==1, b==2, s1==3, s2==2}

               a = 0;

//  P(a,b,s1,s2) {a==0, b==2, s1==3, s2==2}

               s1 = 1;

//  P(a,b,s1,s2) {a==0, b==2, s1==1, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
         }

//  P(a,b,s1,s2) {s1==1, s2==2, b<=a+2, a+1<=b}

         while (rand_b()) {

//  P(a,b,s1,s2) {s1==1, s2==2}

            if (rand_b()) {

//  P(a,b,s1,s2) {s1==1, s2==2}

               if (!(s1==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==2}

               a = b+1;

//  P(a,b,s1,s2) {a==b+1, s1==1, s2==2}

               s1 = 2;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               s2 = 3;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
            else {

//  P(a,b,s1,s2) {s1==1, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  P(a,b,s1,s2) {s1==1, s2==2, a<=b}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==2}

               s2 = 3;

//  P(a,b,s1,s2) {s1==1, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {s1==1, s2==3}

               if (!(s1==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==3}

               a = b+1;

//  P(a,b,s1,s2) {a==b+1, s1==1, s2==3}

               s1 = 2;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

            if (!(s2==3))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

            b = 0;

//  P(a,b,s1,s2) {b==0, s1==2, s2==3}

            s2 = 1;

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

            if (rand_b()) {

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

               if (!(s2==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

               b = a+1;

//  P(a,b,s1,s2) {a==b-1, s1==2, s2==1}

               s2 = 2;

//  P(a,b,s1,s2) {a==b-1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==b-1, s1==2, s2==2}

               if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==b-1, s1==2, s2==2}

               s1 = 3;

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               if (!(s1==3))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               a = 0;

//  P(a,b,s1,s2) {a==0, s1==3, s2==2}

               s1 = 1;

//  P(a,b,s1,s2) {a==0, s1==1, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
            else {

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

               if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

               s1 = 3;

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

               if (!(s2==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

               b = a+1;

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==1}

               s2 = 2;

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               if (!(s1==3))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==b-1, s1==3, s2==2}

               a = 0;

//  P(a,b,s1,s2) {a==0, s1==3, s2==2}

               s1 = 1;

//  P(a,b,s1,s2) {a==0, s1==1, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
         }

//  P(a,b,s1,s2) {s1==1, s2==2}

         if (rand_b()) {

//  P(a,b,s1,s2) {s1==1, s2==2}

            if (rand_b()) {

//  P(a,b,s1,s2) {s1==1, s2==2}

               if (!(s1==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==2}

               a = b+1;

//  P(a,b,s1,s2) {a==b+1, s1==1, s2==2}

               s1 = 2;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==2}

               s2 = 3;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }
            else {

//  P(a,b,s1,s2) {s1==1, s2==2}

               if (!(s2==2&&(b<a||a==0)))

//  P(a,b,s1,s2) {s1==1, s2==2, a<=b}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==2}

               s2 = 3;

//  P(a,b,s1,s2) {s1==1, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();

//  P(a,b,s1,s2) {s1==1, s2==3}

               if (!(s1==1))

//  P() {0==-1}

                  deadlock();

//  P(a,b,s1,s2) {s1==1, s2==3}

               a = b+1;

//  P(a,b,s1,s2) {a==b+1, s1==1, s2==3}

               s1 = 2;

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

               if (s1==3&&s2==3)

//  P() {0==-1}

                  checking_error();
            }

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

            if (!(s2==3))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {a==b+1, s1==2, s2==3}

            b = 0;

//  P(a,b,s1,s2) {b==0, s1==2, s2==3}

            s2 = 1;

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

            if (!(s1==2&&(a<b||b==0)))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {b==0, s1==2, s2==1}

            s1 = 3;

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

            if (!(s1==3))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {b==0, s1==3, s2==1}

            a = 0;

//  P(a,b,s1,s2) {a==0, b==0, s1==3, s2==1}

            s1 = 1;

//  P(a,b,s1,s2) {a==0, b==0, s1==1, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(a,b,s1,s2) {s1==1, s2==2}

            if (!(s2==2&&(b<a||a==0)))

//  P(a,b,s1,s2) {s1==1, s2==2, a<=b}

               deadlock();

//  P(a,b,s1,s2) {s1==1, s2==2}

            s2 = 3;

//  P(a,b,s1,s2) {s1==1, s2==3}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();

//  P(a,b,s1,s2) {s1==1, s2==3}

            if (!(s2==3))

//  P() {0==-1}

               deadlock();

//  P(a,b,s1,s2) {s1==1, s2==3}

            b = 0;

//  P(a,b,s1,s2) {b==0, s1==1, s2==3}

            s2 = 1;

//  P(a,b,s1,s2) {b==0, s1==1, s2==1}

            if (s1==3&&s2==3)

//  P() {0==-1}

               checking_error();
         }
      }
}
