
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int s, x, y;

//  T(s) {s==1}

   s = 1;

//  T(x) {s==1, 0<=x}

   x = rand();

//  T(y) {s==1, 0<=x, 0<=y}

   y = rand();

//  T() {s==1, 0<=x, 0<=y}

   if (x<0)

//  T() {0==-1}

      checking_error();

//  T(s,x,y) {1<=s, s<=2, 0<=x, 0<=y, y#init<=y}

   while (rand_b())

//  T(s,x,y) {s<=2, y+1<=s+y#init, 0<=x, y#init<=y}

      if (rand_b()) {

//  T() {s==1, 0<=x}

         if (!(s==1&&x>=0))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x}

         x += 2;

//  T() {s==1, 2<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==2}

         if (!(s==2))

//  T() {0==-1}

            deadlock();

//  T(x) {s==2, x==x#init+1}

         x++;

//  T(y) {s==2, y==y#init+1}

         y++;

//  T() {s==2, 0<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T(s) {s==2}

         if (!(s = 2))

//  T() {0==-1}

            deadlock();

//  T(x) {s==2, x+y==x#init}

         x -= y;

//  T(s) {s==1, s#init==2}

         s = 1;

//  T() {s==1, 0<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int s, x, y;

//  T(s) {s==1}

   s = 1;

//  T(x) {s==1, 0<=x}

   x = rand();

//  T(y) {s==1, 0<=x, 0<=y}

   y = rand();

//  T() {s==1, 0<=x, 0<=y}

   if (x<0)

//  T() {0==-1}

      checking_error();

//  T(x) {s==1, x#init<=x, y<=x, 0<=x#init, 0<=y}

   if (x<y) {

//  T(x) {s==1, 0<=x, x#init<=x, x+1<=y}

      while (rand_b()) {

//  T() {s==1, 0<=x, x+3<=y, 1<=y}

         if (!(s==1&&x>=0&&x+2<y))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x, x+1<=y, 1<=y}

         x += 2;

//  T() {s==1, 2<=x, x+1<=y, 1<=y}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }

//  T() {s==1, 0<=x, y<=x+2, 1<=y}

      if (!(s==1&&x>=0&&x+2>=y))

//  T() {0==-1}

         deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x, y<=x, 1<=y}

      x += 2;

//  T() {s==1, 2<=x, y<=x, 1<=y}

      if (x<0)

//  T() {0==-1}

         checking_error();
   }

//  T(s,x,y) {s==1, s#init==1, 0<=x, 0<=y, y#init<=y}

   while (rand_b())

//  T(s,x,y) {s==1, s#init==1, x#init+y<=2x+y#init, 0<=x#init,
//    y#init<=y}

      if (rand_b()) {

//  T() {s==1, 0<=x}

         if (!(s==1&&x>=0))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x}

         x += 2;

//  T() {s==1, 2<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T(s) {s==2, s#init==2, 0<=x, y<=x, 2y<=x}

         if (!((s = 2)&&x-y>=0&&x-y>=y))

//  T() {0==-1}

            deadlock();

//  T(x) {s==2, x+y==x#init, 0<=x#init, y<=x#init, 2y<=x#init}

         x -= y;

//  T(s) {s==1, s#init==2, 0<=x, 0<=x+y, y<=x}

         s = 1;

//  T() {s==1, 0<=x, 0<=x+y, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==1&&x>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            s = 2;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();

//  T() {0==-1}

            while (rand_b()) {

//  T() {0==-1}

               if (!(s==2))

//  T() {0==-1}

                  deadlock();

//  T() {0==-1}

               x++;

//  T() {0==-1}

               y++;

//  T() {0==-1}

               if (x<0)

//  T() {0==-1}

                  checking_error();
            }

//  T() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x -= y;

//  T() {0==-1}

            s = 1;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         s = 2;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x++;

//  T() {0==-1}

            y++;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y>=0&&x-y>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T(s) {s==2, s#init==2, 0<=x, y<=x, x+1<=2y}

         if (!((s = 2)&&x-y>=0&&x-y<y))

//  T() {0==-1}

            deadlock();

//  T(x) {s==2, x+y==x#init, 0<=x#init, y<=x#init, x#init+1<=2y}

         x -= y;

//  T(s) {s==1, s#init==2, 0<=x, 0<=x+y, x+1<=y}

         s = 1;

//  T() {s==1, 0<=x, 0<=x+y, x+1<=y}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x) {s==1, 0<=x, x#init<=x, x+1<=y}

         while (rand_b()) {

//  T() {s==1, 0<=x, x+3<=y, 1<=y}

            if (!(s==1&&x>=0&&x+2<y))

//  T() {0==-1}

               deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x, x+1<=y, 1<=y}

            x += 2;

//  T() {s==1, 2<=x, x+1<=y, 1<=y}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {s==1, 0<=x, y<=x+2, 1<=y}

         if (!(s==1&&x>=0&&x+2>=y))

//  T() {0==-1}

            deadlock();

//  T(x) {s==1, x==x#init+2, 2<=x, y<=x, 1<=y}

         x += 2;

//  T() {s==1, 2<=x, y<=x, 1<=y}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==1&&x>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            s = 2;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();

//  T() {0==-1}

            while (rand_b()) {

//  T() {0==-1}

               if (!(s==2))

//  T() {0==-1}

                  deadlock();

//  T() {0==-1}

               x++;

//  T() {0==-1}

               y++;

//  T() {0==-1}

               if (x<0)

//  T() {0==-1}

                  checking_error();
            }

//  T() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x -= y;

//  T() {0==-1}

            s = 1;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         s = 2;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x++;

//  T() {0==-1}

            y++;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y>=0&&x-y<y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==1&&x>=0&&x+2<y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x += 2;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!(s==1&&x>=0&&x+2>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x += 2;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y<y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         deadlock();
      }
      else {

//  T() {s==1, y<=x}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T(s) {s==2, s#init==1, y<=x}

         s = 2;

//  T() {s==2, 0<=x, y<=x}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T(x,y) {s==2, x+y#init==x#init+y, 0<=x, x#init<=x, y<=x}

         while (rand_b()) {

//  T() {s==2}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T(x) {s==2, x==x#init+1}

            x++;

//  T(y) {s==2, y==y#init+1}

            y++;

//  T() {s==2, 0<=x}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==1&&x>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            s = 2;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();

//  T() {0==-1}

            while (rand_b()) {

//  T() {0==-1}

               if (!(s==2))

//  T() {0==-1}

                  deadlock();

//  T() {0==-1}

               x++;

//  T() {0==-1}

               y++;

//  T() {0==-1}

               if (x<0)

//  T() {0==-1}

                  checking_error();
            }

//  T() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x -= y;

//  T() {0==-1}

            s = 1;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!(s==1&&x>=y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         s = 2;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         while (rand_b()) {

//  T() {0==-1}

            if (!(s==2))

//  T() {0==-1}

               deadlock();

//  T() {0==-1}

            x++;

//  T() {0==-1}

            y++;

//  T() {0==-1}

            if (x<0)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y<y))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         x -= y;

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (x<0)

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         deadlock();
      }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int s, x, y;

//  P() {}

   s = 1;

//  P(s) {s==1}

   x = rand();

//  P(s,x) {s==1, 0<=x}

   y = rand();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

   if (x<0)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

   while (rand_b())

//  P(s,x,y) {1<=s, s<=2, 0<=x, 0<=y}

      if (rand_b()) {

//  P(s,x,y) {1<=s, s<=2, 0<=x, 0<=y}

         if (!(s==1&&x>=0))

//  P(s,x,y) {s==2, 0<=x, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         x += 2;

//  P(s,x,y) {s==1, 2<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {1<=s, s<=2, 0<=x, 0<=y}

         if (!(s==2))

//  P(s,x,y) {s==1, 0<=x, 0<=y}

            deadlock();

//  P(s,x,y) {s==2, 0<=x, 0<=y}

         x++;

//  P(s,x,y) {s==2, 1<=x, 0<=y}

         y++;

//  P(s,x,y) {s==2, 1<=x, 1<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {1<=s, s<=2, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {1<=s, s<=2, 2<=s+y, 0<=x, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(s,x,y) {1<=s, s<=2, 0<=x, 0<=y}

         if (!(s = 2))

//  P() {0==-1}

            deadlock();

//  P(s,x,y) {s==2, 0<=x, 0<=y}

         x -= y;

//  P(s,x,y) {s==2, 0<=x+y, 0<=y}

         s = 1;

//  P(s,x,y) {s==1, 0<=x+y, 0<=y}

         if (x<0)

//  P(s,x,y) {s==1, x+1<=0, 0<=x+y, 0<=y}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int s, x, y;

//  P() {}

   s = 1;

//  P(s) {s==1}

   x = rand();

//  P(s,x) {s==1, 0<=x}

   y = rand();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

   if (x<0)

//  P() {0==-1}

      checking_error();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

   if (x<y) {

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

      while (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, x+1<=y}

         if (!(s==1&&x>=0&&x+2<y))

//  P(s,x,y) {s==1, 0<=x, y<=x+2, x+1<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, x+3<=y}

         x += 2;

//  P(s,x,y) {s==1, 2<=x, x+1<=y, 1<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }

//  P(s,x,y) {s==1, 0<=x, x+1<=y}

      if (!(s==1&&x>=0&&x+2>=y))

//  P(s,x,y) {s==1, 0<=x, x+3<=y}

         deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x+2, x+1<=y}

      x += 2;

//  P(s,x,y) {s==1, 2<=x, y<=x, x<=y+1, 1<=y}

      if (x<0)

//  P() {0==-1}

         checking_error();
   }

//  P(s,x,y) {s==1, y<=x, 0<=y}

   while (rand_b())

//  P(s,x,y) {s==1, 0<=x, 0<=y}

      if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=0))

//  P() {0==-1}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         x += 2;

//  P(s,x,y) {s==1, 2<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y>=0&&x-y>=y))

//  P(s,x,y) {s==2, y<=x, x+1<=2y, 0<=y}

            deadlock();

//  P(s,x,y) {s==2, y<=x, 2y<=x, 0<=y}

         x -= y;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         s = 1;

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  P(s,x,y) {s==2, y<=x, 0<=y}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==1&&x>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            s = 2;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();

//  P() {0==-1}

            while (rand_b()) {

//  P() {0==-1}

               if (!(s==2))

//  P() {0==-1}

                  deadlock();

//  P() {0==-1}

               x++;

//  P() {0==-1}

               y++;

//  P() {0==-1}

               if (x<0)

//  P() {0==-1}

                  checking_error();
            }

//  P() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x -= y;

//  P() {0==-1}

            s = 1;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!(s==1&&x>=y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         s = 2;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x++;

//  P() {0==-1}

            y++;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!((s = 2)&&x-y>=0&&x-y>=y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y>=0&&x-y<y))

//  P(s,x,y) {s==2, y<=x, 2y<=x, 0<=y}

            deadlock();

//  P(s,x,y) {s==2, y<=x, x+1<=2y, 0<=y}

         x -= y;

//  P(s,x,y) {s==2, 0<=x, x+1<=y, 0<=y}

         s = 1;

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, x+1<=y}

            if (!(s==1&&x>=0&&x+2<y))

//  P(s,x,y) {s==1, 0<=x, y<=x+2, x+1<=y}

               deadlock();

//  P(s,x,y) {s==1, 0<=x, x+3<=y}

            x += 2;

//  P(s,x,y) {s==1, 2<=x, x+1<=y, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==1, 0<=x, x+1<=y}

         if (!(s==1&&x>=0&&x+2>=y))

//  P(s,x,y) {s==1, 0<=x, x+3<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x+2, x+1<=y}

         x += 2;

//  P(s,x,y) {s==1, 2<=x, y<=x, x<=y+1, 1<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  P(s,x,y) {s==2, y<=x, 0<=y}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==1&&x>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            s = 2;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();

//  P() {0==-1}

            while (rand_b()) {

//  P() {0==-1}

               if (!(s==2))

//  P() {0==-1}

                  deadlock();

//  P() {0==-1}

               x++;

//  P() {0==-1}

               y++;

//  P() {0==-1}

               if (x<0)

//  P() {0==-1}

                  checking_error();
            }

//  P() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x -= y;

//  P() {0==-1}

            s = 1;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!(s==1&&x>=y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         s = 2;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x++;

//  P() {0==-1}

            y++;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!((s = 2)&&x-y>=0&&x-y<y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==1&&x>=0&&x+2<y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x += 2;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!(s==1&&x>=0&&x+2>=y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         x += 2;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y<0&&x-y<y))

//  P(s,x,y) {s==2, y<=x, 0<=y}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         deadlock();
      }
      else {

//  P(s,x,y) {s==1, 0<=x, 0<=y}

         if (!(s==1&&x>=y))

//  P(s,x,y) {s==1, 0<=x, x+1<=y, 0<=y}

            deadlock();

//  P(s,x,y) {s==1, 0<=x, y<=x, 0<=y}

         s = 2;

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P(s,x,y) {s==2, 0<=x, y<=x, 0<=y}

         while (rand_b()) {

//  P(s,x,y) {s==2, y<=x, 0<=y}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P(s,x,y) {s==2, y<=x, 0<=y}

            x++;

//  P(s,x,y) {s==2, y+1<=x, 0<=y}

            y++;

//  P(s,x,y) {s==2, y<=x, 1<=y}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P(s,x,y) {s==2, y<=x, 0<=y}

         if (!((s = 2)&&x-y<0&&x-y>=y))

//  P(s,x,y) {s==2, y<=x, 0<=y}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==1&&x>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            s = 2;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();

//  P() {0==-1}

            while (rand_b()) {

//  P() {0==-1}

               if (!(s==2))

//  P() {0==-1}

                  deadlock();

//  P() {0==-1}

               x++;

//  P() {0==-1}

               y++;

//  P() {0==-1}

               if (x<0)

//  P() {0==-1}

                  checking_error();
            }

//  P() {0==-1}

            if (!((s = 2)&&x-y<0&&x-y>=y))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x -= y;

//  P() {0==-1}

            s = 1;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!(s==1&&x>=y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         s = 2;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         while (rand_b()) {

//  P() {0==-1}

            if (!(s==2))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            x++;

//  P() {0==-1}

            y++;

//  P() {0==-1}

            if (x<0)

//  P() {0==-1}

               checking_error();
         }

//  P() {0==-1}

         if (!((s = 2)&&x-y<0&&x-y<y))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         x -= y;

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (x<0)

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         deadlock();
      }
}
