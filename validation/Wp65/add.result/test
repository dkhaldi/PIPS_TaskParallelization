      SUBROUTINE WP65(PROC_ID)
      INTEGER*4 idiv
      EXTERNAL idiv
      INTEGER*4 SIZE
      PARAMETER (SIZE = 100)
      INTEGER PROC_ID,BANK_ID,L,O,I_0,L_I,J_0,L_J,L_I_1,L_I_2,X200,
     &X201
      REAL*4 L_B_0_0(0:24,0:24),L_C_0_0(0:24,0:24),L_A_0_0(0:24,0:24)
     &,L_B_1_0(0:24,0:24),L_C_1_0(0:24,0:24)

C     WP65 DISTRIBUTED CODE FOR ADD

C     To scan the tile set for WP65
      DO 99978 I_0 = PROC_ID, 3, 4
         DO 99979 J_0 = 0, 3
            DOALL BANK_ID = 0, 3
               DO 99995 L_J = 0, 24
                  DO 99996 L = idiv(I_0+100*J_0, 16), idiv(96+I_0+100
     &            *J_0, 16)
                     L_I_1 = MAX(0, 100*BANK_ID-25*I_0-2500*J_0+400*L
     &               -100*L_J)
                     L_I_2 = MIN(24, 99+100*BANK_ID-25*I_0-2500*J_0+
     &               400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_B_0_0(L_I_1,
     &                  L_J), L_I_2-L_I_1+1)
                     ENDIF
99996                CONTINUE
99995             CONTINUE
99994          CONTINUE
            ENDDO
C           To scan each iteration of the current tile
            DO 99980 L_I = 0, 24
               DO 99981 L_J = 0, 24
                  X200 = 1+25*I_0+L_I
                  X201 = 1+25*J_0+L_J
                  L_B_0_0(L_I,L_J) = (X200-1)*SIZE+X201-1
                  L_C_0_0(L_I,L_J) = L_B_0_0(L_I,L_J)/(SIZE*SIZE)
200               CONTINUE
99981             CONTINUE
99980          CONTINUE
            DOALL BANK_ID = 0, 3
               DO 99989 L_J = 0, 24
                  DO 99990 L = MAX(idiv(I_0+100*J_0, 16), idiv(3-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(idiv(96+I_0+100*J_0, 
     &            16), idiv(99-BANK_ID, 4), idiv(-BANK_ID+25*J_0+L_J
     &            , 4))
                     L_I_1 = 0
                     L_I_2 = 24
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_B_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99990                CONTINUE
99989             CONTINUE
99988          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99983 L_J = 0, 24
                  DO 99984 L = MAX(idiv(I_0+100*J_0, 16), idiv(3-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(idiv(96+I_0+100*J_0, 
     &            16), idiv(99-BANK_ID, 4), idiv(-BANK_ID+25*J_0+L_J
     &            , 4))
                     L_I_1 = 0
                     L_I_2 = 24
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_C_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99984                CONTINUE
99983             CONTINUE
99982          CONTINUE
            ENDDO
99979       CONTINUE
99978    CONTINUE

C     To scan the tile set for WP65
      DO 99956 I_0 = PROC_ID, 3, 4
         DO 99957 J_0 = 0, 3
            DOALL BANK_ID = 0, 3
               DO 99972 L_J = 0, 24
                  DO 99973 L = idiv(I_0+100*J_0, 16), idiv(96+I_0+100
     &            *J_0, 16)
                     L_I_1 = MAX(0, 100*BANK_ID-25*I_0-2500*J_0+400*L
     &               -100*L_J)
                     L_I_2 = MIN(24, 99+100*BANK_ID-25*I_0-2500*J_0+
     &               400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_B_1_0(L_I_1,
     &                  L_J), L_I_2-L_I_1+1)
                     ENDIF
99973                CONTINUE
99972             CONTINUE
99971          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99967 L_J = 0, 24
                  DO 99968 L = idiv(I_0+100*J_0, 16), idiv(96+I_0+100
     &            *J_0, 16)
                     L_I_1 = MAX(0, 100*BANK_ID-25*I_0-2500*J_0+400*L
     &               -100*L_J)
                     L_I_2 = MIN(24, 99+100*BANK_ID-25*I_0-2500*J_0+
     &               400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_C_1_0(L_I_1,
     &                  L_J), L_I_2-L_I_1+1)
                     ENDIF
99968                CONTINUE
99967             CONTINUE
99966          CONTINUE
            ENDDO
C           To scan each iteration of the current tile
            DO 99958 L_I = 0, 24
               DO 99959 L_J = 0, 24
                  L_A_0_0(L_I,L_J) = L_B_1_0(L_I,L_J)+L_C_1_0(L_I,L_J
     &            )
400               CONTINUE
99959             CONTINUE
99958          CONTINUE
            DOALL BANK_ID = 0, 3
               DO 99961 L_J = 0, 24
                  DO 99962 L = MAX(idiv(I_0+100*J_0, 16), idiv(3-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(idiv(96+I_0+100*J_0, 
     &            16), idiv(99-BANK_ID, 4), idiv(-BANK_ID+25*J_0+L_J
     &            , 4))
                     L_I_1 = 0
                     L_I_2 = 24
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_A_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99962                CONTINUE
99961             CONTINUE
99960          CONTINUE
            ENDDO
99957       CONTINUE
99956    CONTINUE
      END
      SUBROUTINE BANK(BANK_ID)
      INTEGER*4 idiv
      EXTERNAL idiv
      INTEGER PROC_ID,BANK_ID,L,O,I_0,L_I,J_0,L_J,O_1,O_2
      REAL*4 ES_B(0:99,0:25),ES_C(0:99,0:25),ES_A(0:99,0:25)

C     BANK DISTRIBUTED CODE FOR ADD

C     To scan the tile set for BANK
      DO 99976 I_0 = 0, 3
         PROC_ID = MOD(I_0, 4)
         DO 99977 J_0 = 0, 3
            DO 99997 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99998 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  O_1 = MAX(0, -100*BANK_ID+25*I_0-400*L, -100*
     &            BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  O_2 = MIN(99, 9924-100*BANK_ID+25*I_0-400*L, 24-100
     &            *BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_B(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99998             CONTINUE
99997          CONTINUE
            DO 99991 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99992 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  DO 99993 O = MAX(0, -100*BANK_ID+25*I_0+2500*J_0-
     &            400*L+100*L_J), MIN(99, 24-100*BANK_ID+25*I_0+2500*
     &            J_0-400*L+100*L_J)
                     IF (idiv(175+100*BANK_ID-25*I_0+400*L+O, 100)
     &               .LE.idiv(100+100*BANK_ID-25*I_0+400*L+O, 100)
     &               ) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_B(O,L), 1)
                     ENDIF
99993                CONTINUE
99992             CONTINUE
99991          CONTINUE
            DO 99985 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99986 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  DO 99987 O = MAX(0, -100*BANK_ID+25*I_0+2500*J_0-
     &            400*L+100*L_J), MIN(99, 24-100*BANK_ID+25*I_0+2500*
     &            J_0-400*L+100*L_J)
                     IF (idiv(175+100*BANK_ID-25*I_0+400*L+O, 100)
     &               .LE.idiv(100+100*BANK_ID-25*I_0+400*L+O, 100)
     &               ) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_C(O,L), 1)
                     ENDIF
99987                CONTINUE
99986             CONTINUE
99985          CONTINUE
99977       CONTINUE
99976    CONTINUE

C     To scan the tile set for BANK
      DO 99954 I_0 = 0, 3
         PROC_ID = MOD(I_0, 4)
         DO 99955 J_0 = 0, 3
            DO 99974 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99975 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  O_1 = MAX(0, -100*BANK_ID+25*I_0-400*L, -100*
     &            BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  O_2 = MIN(99, 9924-100*BANK_ID+25*I_0-400*L, 24-100
     &            *BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_B(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99975             CONTINUE
99974          CONTINUE
            DO 99969 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99970 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  O_1 = MAX(0, -100*BANK_ID+25*I_0-400*L, -100*
     &            BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  O_2 = MIN(99, 9924-100*BANK_ID+25*I_0-400*L, 24-100
     &            *BANK_ID+25*I_0+2500*J_0-400*L+100*L_J)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_C(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99970             CONTINUE
99969          CONTINUE
            DO 99963 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99964 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  DO 99965 O = MAX(0, -100*BANK_ID+25*I_0+2500*J_0-
     &            400*L+100*L_J), MIN(99, 24-100*BANK_ID+25*I_0+2500*
     &            J_0-400*L+100*L_J)
                     IF (idiv(175+100*BANK_ID-25*I_0+400*L+O, 100)
     &               .LE.idiv(100+100*BANK_ID-25*I_0+400*L+O, 100)
     &               ) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_A(O,L), 1)
                     ENDIF
99965                CONTINUE
99964             CONTINUE
99963          CONTINUE
99955       CONTINUE
99954    CONTINUE
      END
