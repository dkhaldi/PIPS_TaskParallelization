int main(int argc, char *argv[])
{
   int i, j;

init_kernel:   i = 1;
compute_kernel:   j = i+2;

   printf("Value is %d\n", j);

   return 0;
}
int main(int argc, char *argv[])
{
   int i, j;

init_kernel:   i = 1;
compute_kernel:   j = i+2;

   printf("Value is %d\n", j);

   return 0;
}
All the kernel parameters should be passed correctly
void compute_kernel(int i, int j_0[1])
{
   // Declared as a patch variable by Pass Outlining
   int j;
   j = *j_0;
compute_kernel:   j = i+2;
   *j_0 = j;
}
void init_kernel(int i_0[1])
{
   // Declared as a patch variable by Pass Outlining
   int i;
   i = *i_0;

init_kernel:   i = 1;
   *i_0 = i;
}
int main(int argc, char *argv[])
{
   int i, j;
init_kernel:   init_kernel(&i);
compute_kernel:   compute_kernel(i, &j);

   printf("Value is %d\n", j);

   return 0;
}
void compute_kernel(int i, int j_0[1])
{
   // Declared as a patch variable by Pass Outlining
   int j;
   j = *j_0;
compute_kernel:   j = i+2;
   *j_0 = j;
}
void init_kernel(int i_0[1])
{
   // Declared as a patch variable by Pass Outlining
   int i;
   i = *i_0;

init_kernel:   i = 1;
   *i_0 = i;
}
int main(int argc, char *argv[])
{
   int i, j;
init_kernel:   init_kernel(&i);
compute_kernel:   compute_kernel(i, &j);

   printf("Value is %d\n", j);

   return 0;
}
