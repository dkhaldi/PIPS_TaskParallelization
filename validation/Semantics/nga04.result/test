
C  P() {}

      PROGRAM NGA04

C     Conditions for array bound checking: you want N<=33 and M <= 33
C     before the print statement. This is not true if the two loops are
C     not entered. The full postcondition is:

C     n <= 0 OR ( n >= 1 AND m <=0 ) OR ( 1 <= n <= 33 AND 1 <= m <= 33 )

C     To obtain useful conditions for array bound checking, you have to
C     enter the i loop, you have to know that n is positive. Maybe we
C     should sometimes use the array bound declaration and declare that
C     REAL A(N) implies N>=1 although it is not in the FOrtran standard

      REAL A(33,33)

C  P() {}


      READ *, N, M                                                      0016

C  P(M,N) {}


c      if(n.lt.5) stop
c      if(m.lt.5) stop

      DO I = 1, N                                                       0021

C  P(I,J,M,N) {1<=I, I<=N}

         DO J = 1, M                                                    0022

C  P(I,J,M,N) {1<=I, I<=N, 1<=J, J<=M}

            IF (I.GT.33) STOP                                           0023

C  P(I,J,M,N) {1<=I, I<=33, I<=N, 1<=J, J<=M}

            IF (J.GT.33) STOP                                           0024

C  P(I,J,M,N) {1<=I, I<=33, I<=N, 1<=J, J<=33, J<=M}

            A(I,J) = 0.                                                 0025
         ENDDO

C  P(I,J,M,N) {1<=I, I<=N, 1<=J, J<=34, M+1<=J}


         PRINT *, A, N, M                                               0028

      ENDDO

C  P(I,J,M,N) {1<=I, N+1<=I}


      PRINT *, A, N, M                                                  0032

      END
