
Transformers for "ABSVAL"


C  T(IS,M,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

      SUBROUTINE NON_LINEAR12 (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
!     X is used as a scalar variable below...
!      DIMENSION U(1), X(1), Y(1)
      DIMENSION U(1), Y(1)

C  T(IS,M,MX,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ,
C    NQ<=64}

C (0,1)
C     BEGIN BLOCK

C  T(IS) {0<=IS+1, IS<=1}

C (0,2)

      IF (X.GT.0) THEN                                                  0010

C  T(IS) {IS==-1}

C (0,3)
         IS = -1                                                        0011
      ELSE

C  T(IS) {IS==1}

C (0,4)
         IS = 1                                                         0013
      ENDIF

C  T(M) {0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,5)

      IF (X.GT.0) THEN                                                  0016

C  T(M) {M==5, 0<=IS+1, IS<=1}

C (0,6)
         M = 5                                                          0017
      ELSE

C  T(M) {M==6, 0<=IS+1, IS<=1}

C (0,7)
         M = 6                                                          0019
      ENDIF

C  T(NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (0,8)

      IF (X.GT.0) THEN                                                  0022

C  T(NQ) {NQ==1, 0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,9)
         NQ = 1                                                         0023
      ELSE

C  T(NQ) {NQ==64, 0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,10)
         NQ = 64                                                        0025
      ENDIF

C  T(MX) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (0,11)

      MX = MOD(K, 64)                                                   0028

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (0,12)

      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0030

C  T() {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (0,13)
         PRINT *, IS, M, MX                                             0032
      ELSE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, M<=MX, 0<=MX+63, MX<=63, 1<=NQ,
C    NQ<=64}

C (0,14)
         PRINT *, IS, M, MX                                             0034
      ENDIF

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (0,15)

      PRINT *, MX                                                       0037
C     END BLOCK
      END

Preconditions for "ABSVAL"


C  P() {}

      SUBROUTINE NON_LINEAR12 (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
!     X is used as a scalar variable below...
!      DIMENSION U(1), X(1), Y(1)
      DIMENSION U(1), Y(1)

C  P() {}

C (0,1)
C     BEGIN BLOCK

C  P() {}

C (0,2)

      IF (X.GT.0) THEN                                                  0010

C  P() {}

C (0,3)
         IS = -1                                                        0011
      ELSE

C  P() {}

C (0,4)
         IS = 1                                                         0013
      ENDIF

C  P(IS) {0<=IS+1, IS<=1}

C (0,5)

      IF (X.GT.0) THEN                                                  0016

C  P(IS) {0<=IS+1, IS<=1}

C (0,6)
         M = 5                                                          0017
      ELSE

C  P(IS) {0<=IS+1, IS<=1}

C (0,7)
         M = 6                                                          0019
      ENDIF

C  P(IS,M) {0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,8)

      IF (X.GT.0) THEN                                                  0022

C  P(IS,M) {0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,9)
         NQ = 1                                                         0023
      ELSE

C  P(IS,M) {0<=IS+1, IS<=1, 5<=M, M<=6}

C (0,10)
         NQ = 64                                                        0025
      ENDIF

C  P(IS,M,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (0,11)

      MX = MOD(K, 64)                                                   0028

C  P(IS,M,MX,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ,
C    NQ<=64}

C (0,12)

      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0030

C  P(IS,M,MX,NQ) {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58,
C    MX<=58IS+63, 58IS+MX<=63, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ,
C    NQ<=64}

C (0,13)
         PRINT *, IS, M, MX                                             0032
      ELSE

C  P(IS,M,MX,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, M<=MX, 0<=MX+63, MX<=63,
C    1<=NQ, NQ<=64}

C (0,14)
         PRINT *, IS, M, MX                                             0034
      ENDIF

C  P(IS,M,MX,NQ) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ,
C    NQ<=64}

C (0,15)

      PRINT *, MX                                                       0037
C     END BLOCK
      END
