
C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

      SUBROUTINE CFFT (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
      DIMENSION U(1), X(1), Y(1)

C  T(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (0,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (0,2)

C     Synthesize preconditions
      IF (IS.LT.-1.OR.IS.GT.1.OR.M.LT.5.OR.M.GT.6.OR.NQ.LT.1.OR.NQ      0009
     &.GT.64) STOP                                                      0009
C (0,5)

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (1,1)

C
      IF (IS.EQ.0) GOTO 99999                                           0014

C  T(K,L,M1,M2,MX,N,N1,N2) {L==1, M==M2+2, M1==2, N2==4, 0<=IS+1,
C    IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64, 8<=N1, N1<=16,
C    1<=NQ, NQ<=64}

C (22,1)
C     BEGIN BLOCK

C  T(K) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (22,2)
C
C   Check if input parameters are invalid.
C
      K = U(1)                                                          0047

C  T(MX) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,3)
      MX = MOD(K, 64)                                                   0048

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,4)
      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0049

C  T() {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,5)
C        BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,6)
C       WRITE (6, 1)  IS, M, MX
1        FORMAT('CFFTZ: EITHER U HAS NOT BEEN INITIALIZED, OR ELSE'/'ONE
     & OF THE INPUT PARAMETERS IS INVALID',3I5)                         0052
C       STOP
C        END BLOCK
      ENDIF

C  T(N) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (22,9)
C>> A normal call to CFFTZ starts here.  M1 is the number of the first
C     variant radix-2 Stockham iterations to be performed.  The second
C     variant is faster on most computers after the first few
C     iterations, since in the second variant it is not necessary to
C     access roots of unity in the inner DO loop.  Thus it is most
C     efficient to limit M1 to some value.  For many vector computers,
C     the optimum limit of M1 is 6.  For scalar systems, M1 should
C     probably be limited to 2.
C
      N = 2**M                                                          0065

C  T(M1) {M1==2, 0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N,
C    N<=64, 1<=NQ, NQ<=64}

C (22,10)
C      M1 = MIN (M / 2, 6)
      M1 = MIN(M/2, 2)                                                  0067

C  T(M2) {M==M2+2, M1==2, 0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63,
C    MX<=63, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (22,11)
      M2 = M-M1                                                         0068

C  T(N2) {M==M2+2, M1==2, N2==4, 0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63,
C    MX<=63, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (22,12)
      N2 = 2**M1                                                        0069

C  T(N1) {M==M2+2, M1==2, N2==4, 0<=IS+1, IS<=1, 5<=M, M<=6, M<=N1+1,
C    2M<=N1+4, 0<=MX+63, MX<=63, 32<=N, N<=64, 8<=N1, N1<=16, 1<=NQ,
C    NQ<=64}

C (22,13)
      N1 = 2**M2                                                        0070

C  T(L) {L==1, M==M2+2, M1==2, N2==4, 0<=IS+1, IS<=1, 5<=M, M<=6,
C    0<=MX+63, MX<=63, 32<=N, N<=64, 8<=N1, N1<=16, 1<=NQ, NQ<=64}

C (22,14)
      L = 1                                                             0074
C     END BLOCK
99997 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (14,1)
C
C   Perform one variant of the Stockham FFT.
C
C     DO loop 120 with exit had to be desugared
      IF (L.GT.M1) GOTO 99998                                           0074

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (21,1)
      CALL FFTZ1(IS, L, M, U, X, Y)                                     0075

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (12,1)
      IF (L.EQ.M1) GOTO 140                                             0076

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (13,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (13,2)
      CALL FFTZ1(IS, L+1, M, U, Y, X)                                   0077

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (13,3)
120   CONTINUE                                                          0078

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (13,4)
      L = L+2                                                           0074
C     END BLOCK
      GOTO 99997

C  T(L) {L==M1+1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,2)
C
C   Perform a transposition of Y treated as a N2 x N1 x 2 matrix.
C
140   CALL TRANS(N1, N2, Y, X)                                          0097

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0098

C  T(L) {L==M1+1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,4)
      L = M1+1                                                          0102
C     END BLOCK
99995 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (8,1)
C
C   Perform second variant of the Stockham FFT from X to Y and Y to X.
C
C     DO loop 150 with exit had to be desugared
      IF (L.GT.M) GOTO 99996                                            0102

C  T() {0<=IS+1, IS<=1, M+1<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (10,1)
      CALL FFTZ2(IS, L, M, U, X, Y)                                     0103

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (6,1)
      IF (L.EQ.M) GOTO 160                                              0104

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, M+2<=L, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (7,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, M<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (7,2)
      CALL FFTZ2(IS, L+1, M, U, Y, X)                                   0105

C  T() {0<=IS+1, IS<=1, M<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (7,3)
150   CONTINUE                                                          0106

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, M+2<=L, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (7,4)
      L = L+2                                                           0102
C     END BLOCK
      GOTO 99995

C  T(I) {I==1, 0<=IS+1, IS<=1, 5<=M, M<=6, N<=0, 1<=NQ, NQ<=64}

C (5,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (5,2)
C
C   Copy Y to X.
C
160   CONTINUE                                                          0112

C  T(I) {1<=I, I<=2N, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (5,3)
      DO 170 I = 1, 2*N                                                 0113

C  T() {I==1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=N, 1<=NQ, NQ<=64}

C (5,4)
C        BEGIN BLOCK

C  T() {I==1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=N, 1<=NQ, NQ<=64}

C (5,5)
         X(I) = Y(I)                                                    0114

C  T() {I==1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=N, 1<=NQ, NQ<=64}

C (5,6)
170      CONTINUE                                                       0115
C        END BLOCK
C     END BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (4,1)
C
180   CONTINUE                                                          0117
      RETURN
99996 CONTINUE
C
      GOTO 180
99998 CONTINUE

C  T(L) {L==M1+1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,2)
C
C   Perform a transposition of X treated as a N2 x N1 x 2 matrix.
C
      CALL TRANS(N1, N2, X, Y)                                          0082

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0083

C  T(L) {L==M1+1, 0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,4)
      L = M1+1                                                          0087
C     END BLOCK
99993 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (16,1)
C
C   Perform second variant of the Stockham FFT from Y to X and X to Y.
C
C     DO loop 130 with exit had to be desugared
      IF (L.GT.M) GOTO 99994                                            0087

C  T() {0<=IS+1, IS<=1, M+1<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,1)
      CALL FFTZ2(IS, L, M, U, Y, X)                                     0088

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (19,1)
      IF (L.EQ.M) GOTO 180                                              0089

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, M+2<=L, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (20,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, M<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (20,2)
      CALL FFTZ2(IS, L+1, M, U, X, Y)                                   0090

C  T() {0<=IS+1, IS<=1, M<=L, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (20,3)
130   CONTINUE                                                          0091

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, M+2<=L, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (20,4)
      L = L+2                                                           0087
C     END BLOCK
      GOTO 99993
99994 CONTINUE
C
      GOTO 160
99999 CONTINUE

C  T(I,J,KN,KU,LN,N,NU) {J==M+1, KU+N==KN, KU==LN+1, N==NU, 0<=I,
C    KU<=2I+1, 0<=IS+1, IS<=1, 6<=J, J<=7, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,1)
C     BEGIN BLOCK

C  T(N) {0<=IS+1, IS<=1, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,2)
C
C     Initialize the U array with sines and cosines in a manner that
C     permits stride one access at each FFT iteration.
C
      N = 2**M                                                          0019

C  T(NU) {N==NU, 0<=IS+1, IS<=1, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,3)
      NU = N                                                            0020

C  T() {N==NU, 0<=IS+1, IS<=1, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,4)
      U(1) = 64*N+M                                                     0021

C  T(KU) {KU==2, N==NU, 0<=IS+1, IS<=1, 5<=M, M<=6, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (2,5)
      KU = 2                                                            0022

C  T(KN) {KN==N+2, KN==NU+2, KU==2, 0<=IS+1, IS<=1, 34<=KN, KN<=66,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,6)
      KN = KU+NU                                                        0023

C  T(LN) {KN==N+2, KN==NU+2, KU==2, LN==1, 0<=IS+1, IS<=1, 34<=KN,
C    KN<=66, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,7)
      LN = 1                                                            0024

C  T(I,J,KN,KU,LN) {KN#init==N+2, KN#init==NU+2, KU==LN+1, KU#init==2,
C    LN#init==1, 0<=IS+1, IS<=1, 1<=J, J<=M, 34<=KN#init, KN#init<=66,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,8)
C
      DO 110 J = 1, M                                                   0026

C  T(I,KN,KU,LN) {KU+N==KN, KU#init+LN#init==KU, LN==2LN#init, N==NU,
C    0<=I, LN#init<=I, 0<=IS+1, IS<=1, 1<=J, J<=M, 5<=M, M<=6, 32<=N,
C    N<=64, 1<=NQ, NQ<=64}

C (2,9)
C        BEGIN BLOCK

C  T() {N==NU, 0<=IS+1, IS<=1, 1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (2,10)
         T = PI/LN                                                      0027

C  T(I) {N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J, J<=M, 5<=M, M<=6,
C    32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,11)
C
C   This loop is vectorizable.
C
         DO 100 I = 0, LN-1                                             0031

C  T() {I+KN==1, I+KU==1, N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J,
C    J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,12)
C           BEGIN BLOCK

C  T() {N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J, J<=M, 5<=M, M<=6,
C    32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,13)
            TI = I*T                                                    0032

C  T() {I+KU==1, N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J, J<=M,
C    5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,14)
            U(I+KU) = COS(TI)                                           0033

C  T() {I+KN==1, I+KU==1, N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J,
C    J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,15)
            U(I+KN) = SIN(TI)                                           0034

C  T() {I+KN==1, I+KU==1, N==NU, 0<=I, I+1<=LN, 0<=IS+1, IS<=1, 1<=J,
C    J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,16)
100         CONTINUE                                                    0035
C           END BLOCK

C  T(KU) {KU#init+LN==KU, N==NU, 0<=I, LN<=I, 0<=IS+1, IS<=1, 1<=J,
C    J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,17)
C
         KU = KU+LN                                                     0037

C  T(KN) {KU+N==KN, N==NU, 0<=I, LN<=I, 0<=IS+1, IS<=1, 1<=J, J<=M,
C    5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,18)
         KN = KU+NU                                                     0038

C  T(LN) {KU+N==KN, LN==2LN#init, N==NU, 0<=I, LN#init<=I, 0<=IS+1,
C    IS<=1, 1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,19)
         LN = 2*LN                                                      0039

C  T() {KU+N==KN, N==NU, 0<=I, LN<=2I, 0<=IS+1, IS<=1, 1<=J, J<=M,
C    5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,20)
110      CONTINUE                                                       0040
C        END BLOCK
C
C     END BLOCK
C     END BLOCK
      END

C  P() {}

      SUBROUTINE CFFT (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
      DIMENSION U(1), X(1), Y(1)

C  P() {}

C (0,1)
C     BEGIN BLOCK

C  P() {}

C (0,2)

C     Synthesize preconditions
      IF (IS.LT.-1.OR.IS.GT.1.OR.M.LT.5.OR.M.GT.6.OR.NQ.LT.1.OR.NQ      0009
     &.GT.64) STOP                                                      0009
C (0,5)

C  P() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (1,1)

C
      IF (IS.EQ.0) GOTO 99999                                           0014

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (22,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (22,2)
C
C   Check if input parameters are invalid.
C
      K = U(1)                                                          0047

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (22,3)
      MX = MOD(K, 64)                                                   0048

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,4)
      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0049

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1,
C    MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63, 58IS+MX<=63, 5<=M,
C    M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,5)
C        BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1,
C    MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63, 58IS+MX<=63, 5<=M,
C    M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,6)
C       WRITE (6, 1)  IS, M, MX
1        FORMAT('CFFTZ: EITHER U HAS NOT BEEN INITIALIZED, OR ELSE'/'ONE
     & OF THE INPUT PARAMETERS IS INVALID',3I5)                         0052
C       STOP
C        END BLOCK
      ENDIF

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 0<=MX+63, MX<=63, 1<=NQ, NQ<=64}

C (22,9)
C>> A normal call to CFFTZ starts here.  M1 is the number of the first
C     variant radix-2 Stockham iterations to be performed.  The second
C     variant is faster on most computers after the first few
C     iterations, since in the second variant it is not necessary to
C     access roots of unity in the inner DO loop.  Thus it is most
C     efficient to limit M1 to some value.  For many vector computers,
C     the optimum limit of M1 is 6.  For scalar systems, M1 should
C     probably be limited to 2.
C
      N = 2**M                                                          0065

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (22,10)
C      M1 = MIN (M / 2, 6)
      M1 = MIN(M/2, 2)                                                  0067

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {M1==2, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (22,11)
      M2 = M-M1                                                         0068

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {M==M2+2, M1==2, 0<=IS+1,
C    IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (22,12)
      N2 = 2**M1                                                        0069

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {M==M2+2, M1==2, N2==4,
C    0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (22,13)
      N1 = 2**M2                                                        0070

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {M==M2+2, M1==2, N2==4,
C    0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX+63, MX<=63, 32<=N, N<=64,
C    8<=N1, N1<=16, 1<=NQ, NQ<=64}

C (22,14)
      L = 1                                                             0074
C     END BLOCK
99997 CONTINUE

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (14,1)
C
C   Perform one variant of the Stockham FFT.
C
C     DO loop 120 with exit had to be desugared
      IF (L.GT.M1) GOTO 99998                                           0074

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, L<=M1,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (21,1)
      CALL FFTZ1(IS, L, M, U, X, Y)                                     0075

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (12,1)
      IF (L.EQ.M1) GOTO 140                                             0076

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (13,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (13,2)
      CALL FFTZ1(IS, L+1, M, U, Y, X)                                   0077

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (13,3)
120   CONTINUE                                                          0078

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (13,4)
      L = L+2                                                           0074
C     END BLOCK
      GOTO 99997

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {L==M1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {L==M1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,2)
C
C   Perform a transposition of Y treated as a N2 x N1 x 2 matrix.
C
140   CALL TRANS(N1, N2, Y, X)                                          0097

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {L==M1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0098

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {L==M1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (11,4)
      L = M1+1                                                          0102
C     END BLOCK
99995 CONTINUE

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (8,1)
C
C   Perform second variant of the Stockham FFT from X to Y and Y to X.
C
C     DO loop 150 with exit had to be desugared
      IF (L.GT.M) GOTO 99996                                            0102

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, L<=M,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (10,1)
      CALL FFTZ2(IS, L, M, U, X, Y)                                     0103

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (6,1)
      IF (L.EQ.M) GOTO 160                                              0104

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (7,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (7,2)
      CALL FFTZ2(IS, L+1, M, U, Y, X)                                   0105

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (7,3)
150   CONTINUE                                                          0106

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (7,4)
      L = L+2                                                           0102
C     END BLOCK
      GOTO 99995

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (5,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (5,2)
C
C   Copy Y to X.
C
160   CONTINUE                                                          0112

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (5,3)
      DO 170 I = 1, 2*N                                                 0113

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {1<=I, I<=2N, 0<=IS+1,
C    IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (5,4)
C        BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=N, 1<=NQ, NQ<=64}

C (5,5)
         X(I) = Y(I)                                                    0114

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==1, 0<=IS+1, IS<=1,
C    5<=M, M<=6, 1<=N, 1<=NQ, NQ<=64}

C (5,6)
170      CONTINUE                                                       0115
C        END BLOCK
C     END BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (4,1)
C
180   CONTINUE                                                          0117
      RETURN
99996 CONTINUE
C
      GOTO 180
99998 CONTINUE

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M1+1<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M1+1<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,2)
C
C   Perform a transposition of X treated as a N2 x N1 x 2 matrix.
C
      CALL TRANS(N1, N2, X, Y)                                          0082

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M1+1<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0083

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M1+1<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,4)
      L = M1+1                                                          0087
C     END BLOCK
99993 CONTINUE

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (16,1)
C
C   Perform second variant of the Stockham FFT from Y to X and X to Y.
C
C     DO loop 130 with exit had to be desugared
      IF (L.GT.M) GOTO 99994                                            0087

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, L<=M,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,1)
      CALL FFTZ2(IS, L, M, U, Y, X)                                     0088

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (19,1)
      IF (L.EQ.M) GOTO 180                                              0089

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (20,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, 5<=M,
C    M<=6, 1<=NQ, NQ<=64}

C (20,2)
      CALL FFTZ2(IS, L+1, M, U, X, Y)                                   0090

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (20,3)
130   CONTINUE                                                          0091

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {0<=IS+1, IS<=1, M<=L,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (20,4)
      L = L+2                                                           0087
C     END BLOCK
      GOTO 99993
99994 CONTINUE
C
      GOTO 160
99999 CONTINUE

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (2,1)
C     BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (2,2)
C
C     Initialize the U array with sines and cosines in a manner that
C     permits stride one access at each FFT iteration.
C
      N = 2**M                                                          0019

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, 5<=M, M<=6, 32<=N,
C    N<=64, 1<=NQ, NQ<=64}

C (2,3)
      NU = N                                                            0020

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, N==NU, 5<=M, M<=6,
C    32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,4)
      U(1) = 64*N+M                                                     0021

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, N==NU, 5<=M, M<=6,
C    32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,5)
      KU = 2                                                            0022

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==2, N==NU, 5<=M,
C    M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,6)
      KN = KU+NU                                                        0023

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KN==N+2, KN==NU+2,
C    KU==2, 34<=KN, KN<=66, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,7)
      LN = 1                                                            0024

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KN==N+2, KN==NU+2,
C    KU==2, LN==1, 34<=KN, KN<=66, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,8)
C
      DO 110 J = 1, M                                                   0026

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==LN+1, N==NU,
C    1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,9)
C        BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==LN+1, N==NU,
C    1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,10)
         T = PI/LN                                                      0027

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==LN+1, N==NU,
C    1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ, NQ<=64}

C (2,11)
C
C   This loop is vectorizable.
C
         DO 100 I = 0, LN-1                                             0031

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==LN+1, N==NU,
C    0<=I, I+2<=KU, 1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,12)
C           BEGIN BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, KU==LN+1, N==NU,
C    0<=I, I+2<=KU, 1<=J, J<=M, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,13)
            TI = I*T                                                    0032

C  P() {0==-1}

C (2,14)
            U(I+KU) = COS(TI)                                           0033

C  P() {0==-1}

C (2,15)
            U(I+KN) = SIN(TI)                                           0034

C  P() {0==-1}

C (2,16)
100         CONTINUE                                                    0035
C           END BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==0, IS==0, KU==LN+1,
C    N==NU, 1<=J, J<=M, KU<=1, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,17)
C
         KU = KU+LN                                                     0037

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==0, IS==0, KU==2LN+1,
C    N==NU, 1<=J, J<=M, LN<=0, 5<=M, M<=6, 32<=N, N<=64, 1<=NQ,
C    NQ<=64}

C (2,18)
         KN = KU+NU                                                     0038

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==0, IS==0, 2LN+N==KN-1,
C    KU==2LN+1, N==NU, 1<=J, J<=M, LN<=0, 5<=M, M<=6, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (2,19)
         LN = 2*LN                                                      0039

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {I==0, IS==0, KU+N==KN,
C    KU==LN+1, N==NU, 1<=J, J<=M, KU<=1, 5<=M, M<=6, 32<=N, N<=64,
C    1<=NQ, NQ<=64}

C (2,20)
110      CONTINUE                                                       0040
C        END BLOCK
C
C     END BLOCK
C     END BLOCK
      END

