
Parsed code for "extern03!"

// BEGIN BLOCK
/* Check that successive external floating point dependent
   initializations are properly taken into account.

   Transformers are computed "in context". Make sure that the
   precondition is used in the declarations.

   In fact, program_precondition should then be a prerequisite for
   transformer computation, but it would only be useful when a "main"
   is analyzed.
 */

float delta = 1.;
float delta2 = delta+2.;

extern int main();
// END BLOCK

Cumulated effects for "main"

//             <    is read   >: delta delta2
int main()
{
//             <    is read   >: delta delta2
   // BEGIN BLOCK
//             <    is written>: i
   float i = 0.;
//             <    is written>: k
   int k = 1;
//             <    is read   >: delta i
//             <    is written>: i

   i = i+delta;
//             <    is read   >: delta i
//             <    is written>: i
   i = i+delta;
//             <    is read   >: delta2 i
//             <    is written>: i
   i = i+delta2;
   // END BLOCK
}

Transformers for "main"


//  T() {delta==1., delta2==3.}

int main()
{

//  T() {delta==1., delta2==3.}

   // BEGIN BLOCK

//  T(i) {delta2==1.+2., delta==1., i==0}

   float i = 0.;

//  T(k) {3.==1.+2., delta==1., delta2==3., i==0, k==1}

   int k = 1;

//  T(i) {3.==1.+2., delta==1., i==1., delta2==3., i#init==0, k==1}


   i = i+delta;

//  T(i) {3.==1.+2., delta==1., i==21., i#init==1., delta2==3., k==1}

   i = i+delta;

//  T(i) {delta==1., i==2.+3., i#init==2., delta2==3., k==1}

   i = i+delta2;
   // END BLOCK
}

Preconditions for "main"


//  P() {delta2==1.+2., delta==1.}

int main()
{

//  P() {delta==1., delta2==3.}

   // BEGIN BLOCK

//  P() {delta==1., delta2==3.}

   float i = 0.;

//  P(i) {delta==1., delta2==3., i==0}

   int k = 1;

//  P(i,k) {delta==1., delta2==3., i==0, k==1}


   i = i+delta;

//  P(i,k) {delta==1., i==1., delta2==3., k==1}

   i = i+delta;

//  P(i,k) {delta==1., i==2., delta2==3., k==1}

   i = i+delta2;
   // END BLOCK
}
