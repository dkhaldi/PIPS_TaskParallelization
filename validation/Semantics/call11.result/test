
Source code with proper effects

double call11(void)
{
//             <    is written>: x
   double x = 3.;                                                       /*0007*/
//             <    is read   >: j
//             <    is written>: j
   j++;                                                                 /*0008*/
//             <    is read   >: x

   return x;                                                            /*0010*/
}

Source code with cumulated effects

//             <    is read   >: j
//             <    is written>: j
double call11(void)
{
//             <    is written>: x
   double x = 3.;                                                       /*0007*/
//             <    is read   >: j
//             <    is written>: j
   j++;                                                                 /*0008*/
//             <    is read   >: x

   return x;                                                            /*0010*/
}

Source code with transformers for "call11"


//  T(j) {j==j#init+1}

double call11(void)
{

//  T() {}

   double x = 3.;                                                       /*0007*/

//  T(j) {j==j#init+1}

   j++;                                                                 /*0008*/

//  T() {}


   return x;                                                            /*0010*/
}

Source code with transformers for "main"


//  T(j) {j==j#init+1}

int main()
{

//  T(ai) {ai==3}

   int ai = 3;                                                          /*0015*/

//  T(j) {j==j#init+1}


   call11();                                                            /*0017*/

//  T(ai) {ai==0}


   ai = 0;                                                              /*0019*/
}

Source code with preconditions for "call11"


//  P() {j==0}

double call11(void)
{

//  P() {j==0}

   double x = 3.;                                                       /*0007*/

//  P() {j==0}

   j++;                                                                 /*0008*/

//  P(j) {j==1, j#init==0}


   return x;                                                            /*0010*/
}

Source code with preconditions for "main"


//  P() {j==0}

int main()
{

//  P() {j==0}

   int ai = 3;                                                          /*0015*/

//  P(ai) {ai==3, j==0}


   call11();                                                            /*0017*/

//  P(ai,j) {ai==3, j==1, j#init==0}


   ai = 0;                                                              /*0019*/
}

Warnings

(activate_phase) Rule `C_PARSER' already active
(activate_phase) Rule `PRINT_CODE_TRANSFORMERS' already active
TRANSFORMERS_INTER_FULL[main] (call_to_transformer) line 17 
at statement:

	call11();


Result of function "call11" ignored. Should it be casted to "(void)"?
(activate_phase) Rule `PRINT_CODE_PRECONDITIONS' already active
INTERPROCEDURAL_SUMMARY_PRECONDITION[call11!] (ordinary_summary_precondition) empty precondition to call11! because not in call tree from main.
