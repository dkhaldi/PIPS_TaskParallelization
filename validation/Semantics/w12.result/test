
TRANSFORMERS


C  T() {}

      PROGRAM W12

C     Assignments in body: check that the initial condition I=0 and the
C     body exit condition 0<=I<=1 are merged as entry condition for the
C     loop body before the fixpoint is computed.

C     To obtain a precise loop transformer, the transformer for the
C     entered loop and the transformer for the non-entered loop should
C     be computed and their convex hull taken, but it is not useful,
C     since the operation is performed when preconditions are computed.

C     This is not really interesting. The first preconditions are correct.

      INTEGER I

C  T(I) {0<=I, I<=1}

C (0,1)
C     BEGIN BLOCK

C  T(I) {I==0}

C (0,2)

      I = 0                                                             0016

C  T(I) {I#init==0, 0<=I, I<=1}

C (0,3)

      DO WHILE (X.GT.0.)                                                0018

C  T(I) {0<=I, I<=1}

C (0,4)
         IF (I.EQ.1) THEN                                               0019

C  T(I) {I==0, I#init==1}

C (0,5)
            I = 0                                                       0020
         ELSE

C  T(I) {I==1}

C (0,6)
C           let's hope that i==0 here... but it's not possible,
C           unless transformers are recomputed using preconditions.
            I = 1                                                       0024
         ENDIF
      ENDDO

C  T() {0<=I, I<=1}

C (0,7)

      PRINT *, I                                                        0028

C     END BLOCK
      END

PRECONDITIONS 


C  P() {}

      PROGRAM W12

C     Assignments in body: check that the initial condition I=0 and the
C     body exit condition 0<=I<=1 are merged as entry condition for the
C     loop body before the fixpoint is computed.

C     To obtain a precise loop transformer, the transformer for the
C     entered loop and the transformer for the non-entered loop should
C     be computed and their convex hull taken, but it is not useful,
C     since the operation is performed when preconditions are computed.

C     This is not really interesting. The first preconditions are correct.

      INTEGER I

C  P() {}

C (0,1)
C     BEGIN BLOCK

C  P() {}

C (0,2)

      I = 0                                                             0016

C  P(I) {I==0}

C (0,3)

      DO WHILE (X.GT.0.)                                                0018

C  P(I) {0<=I, I<=1}

C (0,4)
         IF (I.EQ.1) THEN                                               0019

C  P(I) {I==1}

C (0,5)
            I = 0                                                       0020
         ELSE

C  P(I) {I==0}

C (0,6)
C           let's hope that i==0 here... but it's not possible,
C           unless transformers are recomputed using preconditions.
            I = 1                                                       0024
         ENDIF
      ENDDO

C  P(I) {0<=I, I<=1}

C (0,7)

      PRINT *, I                                                        0028

C     END BLOCK
      END

REFINED TRANSFORMERS


C  T() {}

      PROGRAM W12

C     Assignments in body: check that the initial condition I=0 and the
C     body exit condition 0<=I<=1 are merged as entry condition for the
C     loop body before the fixpoint is computed.

C     To obtain a precise loop transformer, the transformer for the
C     entered loop and the transformer for the non-entered loop should
C     be computed and their convex hull taken, but it is not useful,
C     since the operation is performed when preconditions are computed.

C     This is not really interesting. The first preconditions are correct.

      INTEGER I

C  T(I) {0<=I, I<=1}

C (0,1)
C     BEGIN BLOCK

C  T(I) {I==0}

C (0,2)

      I = 0                                                             0016

C  T(I) {I#init==0, 0<=I, I<=1}

C (0,3)

      DO WHILE (X.GT.0.)                                                0018

C  T(I) {I+I#init==1, 0<=I, I<=1}

C (0,4)
         IF (I.EQ.1) THEN                                               0019

C  T(I) {I==0, I#init==1}

C (0,5)
            I = 0                                                       0020
         ELSE

C  T(I) {I==1, I#init==0}

C (0,6)
C           let's hope that i==0 here... but it's not possible,
C           unless transformers are recomputed using preconditions.
            I = 1                                                       0024
         ENDIF
      ENDDO

C  T() {0<=I, I<=1}

C (0,7)

      PRINT *, I                                                        0028

C     END BLOCK
      END

PRECONDITIONS WITH REFINED TRANSFORMERS


C  P() {}

      PROGRAM W12

C     Assignments in body: check that the initial condition I=0 and the
C     body exit condition 0<=I<=1 are merged as entry condition for the
C     loop body before the fixpoint is computed.

C     To obtain a precise loop transformer, the transformer for the
C     entered loop and the transformer for the non-entered loop should
C     be computed and their convex hull taken, but it is not useful,
C     since the operation is performed when preconditions are computed.

C     This is not really interesting. The first preconditions are correct.

      INTEGER I

C  P() {}

C (0,1)
C     BEGIN BLOCK

C  P() {}

C (0,2)

      I = 0                                                             0016

C  P(I) {I==0}

C (0,3)

      DO WHILE (X.GT.0.)                                                0018

C  P(I) {0<=I, I<=1}

C (0,4)
         IF (I.EQ.1) THEN                                               0019

C  P(I) {I==1}

C (0,5)
            I = 0                                                       0020
         ELSE

C  P(I) {I==0}

C (0,6)
C           let's hope that i==0 here... but it's not possible,
C           unless transformers are recomputed using preconditions.
            I = 1                                                       0024
         ENDIF
      ENDDO

C  P(I) {0<=I, I<=1}

C (0,7)

      PRINT *, I                                                        0028

C     END BLOCK
      END
