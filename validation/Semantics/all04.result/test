
Initial code with preconditions for ALL04 after cleanup


C  P() {K==3}

C     Check that all static initialization are taken into account:
C     k==3 in OUTPUT

C     Check also that dead paths in the call graph are not used: 
C     l==1 in OUTPUT

      PROGRAM ALL04
      COMMON /BAR/ K

C  P() {K==3}

      CALL FOO1(I)                                                      0009

C  P(I) {I==1, K==3}

      PRINT *, I, K                                                     0010
      END

Initial code with preconditions for FOO1 after cleanup


C  P() {ALL04:K==3}


      SUBROUTINE FOO1(J)

C  P() {ALL04:K==3}

      J = 1                                                             0003

C  P(J) {ALL04:K==3, J==1}

      CALL OUTPUT(J)                                                    0004
      END

Initial code with preconditions for FOO2 after cleanup


C  P() {0==-1}


      SUBROUTINE FOO2(J)
      COMMON /BAR/ K
      DATA K /3/

C  P() {0==-1}

      J = 2                                                             0005

C  P() {0==-1}

      CALL FOO3(J)                                                      0006
      END

Initial code with preconditions for FOO3 after cleanup


C  P() {0==-1}


      SUBROUTINE FOO3(J)

C  P() {0==-1}

      CALL OUTPUT(J)                                                    0003
      END

Initial code with preconditions for OUTPUT after cleanup


C  P() {K==3, L==1}


      SUBROUTINE OUTPUT(L)
      COMMON /BAR/ K

C  P() {K==3, L==1}

      PRINT *, L, K                                                     0004
      END

Code for ALL04 after cleanup

C     Check that all static initialization are taken into account:
C     k==3 in OUTPUT

C     Check also that dead paths in the call graph are not used: 
C     l==1 in OUTPUT

      PROGRAM ALL04
      COMMON /BAR/ K
      CALL FOO1(I)                                                      0009
      PRINT *, 1, 3                                                     0010
      END

Code for FOO1 after cleanup


      SUBROUTINE FOO1(J)
      J = 1                                                             0003
      CALL OUTPUT(1)                                                    0004
      END

Code for FOO2 after cleanup


      SUBROUTINE FOO2(J)
      COMMON /BAR/ K
      DATA K /3/
      END

Code for FOO3 after cleanup


      SUBROUTINE FOO3(J)
      END

Code for OUTPUT after cleanup


      SUBROUTINE OUTPUT(L)
      COMMON /BAR/ K
      PRINT *, 1, 3                                                     0004
      END
