
C  T() {}

      PROGRAM NGA06

C  T(I,J,N) {0<=I, 1<=N, NTYPES+1<=N}

C     BEGIN BLOCK

C  T(I) {I==0}


C     The transformer returned by the inner loop does not include the
C     exit condition because it is used to compute the inner loop body
C     precondition.

C     This inner loop transformer should be updated after storage. This
C     should be done in statement_to_transformer().

      I = 0                                                             0010

C  T(I,J,N) {I#init<=I, 1<=N, N<=NTYPES}

c      if(nsp.lt.1) stop
c      if(ntypes.lt.1) stop

      DO N = 1, NTYPES                                                  0014

C  T(I,J) {I+NSP==I#init+J-1, I#init<=I, I#init<=I+NSP}

C        BEGIN BLOCK

C  T(I,J) {I#init+J==I+1, 1<=J, J<=NSP}

         DO J = 1, NSP                                                  0015

C  T(I) {I==I#init+1}

            I = I+1                                                     0016
         ENDDO

C  T(I) {I+NSP==I#init}

         I = I-NSP                                                      0018
C        END BLOCK
      ENDDO

C  T() {}


      PRINT *, I                                                        0021

C     END BLOCK
      END

C  P() {}

      PROGRAM NGA06

C  P() {}

C     BEGIN BLOCK

C  P() {}


C     The transformer returned by the inner loop does not include the
C     exit condition because it is used to compute the inner loop body
C     precondition.

C     This inner loop transformer should be updated after storage. This
C     should be done in statement_to_transformer().

      I = 0                                                             0010

C  P(I) {I==0}

c      if(nsp.lt.1) stop
c      if(ntypes.lt.1) stop

      DO N = 1, NTYPES                                                  0014

C  P(I,J,N) {0<=I, 1<=N, N<=NTYPES}

C        BEGIN BLOCK

C  P(I,J,N) {0<=I, 1<=N, N<=NTYPES}

         DO J = 1, NSP                                                  0015

C  P(I,J,N) {J<=I+1, 1<=J, J<=NSP, 1<=N, N<=NTYPES}

            I = I+1                                                     0016
         ENDDO

C  P(I,J,N) {J<=I+1, 1<=J, NSP+1<=J, 1<=N, N<=NTYPES}

         I = I-NSP                                                      0018
C        END BLOCK
      ENDDO

C  P(I,J,N) {0<=I, 1<=N, NTYPES+1<=N}


      PRINT *, I                                                        0021

C     END BLOCK
      END

