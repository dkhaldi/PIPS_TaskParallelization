// OMP style
int main()
{
   float a[10][10][10][10][10];                                         /*0002*/
   int i, j, k, l, m;                                                   /*0003*/
   float x;                                                             /*0004*/
   float z;                                                             /*0005*/
   float y;                                                             /*0006*/

   i = 0;                                                               /*0008*/
   j = 0;                                                               /*0009*/
   k = 0;                                                               /*0010*/
   l = 0;                                                               /*0011*/
   m = 0;                                                               /*0012*/
   x = 2.12;                                                            /*0013*/

#pragma omp parallel for private(j)
   for(i = 0; i <= 9; i += 1)                                           /*0015*/
#pragma omp parallel for private(k,z)
      for(j = 0; j <= 9; j += 1) {                                      /*0016*/
         z = 0.0;                                                       /*0017*/
#pragma omp parallel for private(l,z)
         for(k = 0; k <= 9; k += 1) {                                   /*0018*/
            z = k*2.0;                                                  /*0019*/
#pragma omp parallel for private(m)
            for(l = 0; l <= 9; l += 1)                                  /*0020*/
#pragma omp parallel for private(y)
               for(m = 0; m <= 9; m += 1) {                             /*0021*/
                  y = 2.0;                                              /*0022*/
                  y = 3.5+x+z;                                          /*0023*/
                  a[i][j][k][l][m] = x*y;                               /*0024*/
               }
         }
      }
   return 0;                                                            /*0030*/
}
