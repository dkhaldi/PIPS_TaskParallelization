###################### pi-STEP/pi.database/Src/PI_PARDO_HYBRID.f ######################
      SUBROUTINE PI_PARDO_HYBRID(CONTRIB, I, ITER, NUM_ITER, X)
      implicit none
      include "STEP.h"
      INTEGER STEP_COMM_RANK, STEP_I_UP, STEP_I_LOW, STEP_COMM_SIZE, 
     &I, NUM_ITER
      REAL*8 CONTRIB, ITER, X
!$omp master
      CALL STEP_CONSTRUCT_BEGIN(STEP_PARALLEL_DO)
      CALL STEP_GET_COMMSIZE(STEP_COMM_SIZE)
      CALL STEP_COMPUTE_LOOPSLICES(1, NUM_ITER, 1, STEP_COMM_SIZE)
      CALL STEP_INITREDUCTION(CONTRIB, STEP_SUM_REDUCE, STEP_REAL8)
!$omp end master
!$omp barrier

C BEGIN WORK
      CALL STEP_GET_RANK(STEP_COMM_RANK)
      CALL STEP_GET_LOOPBOUNDS(STEP_COMM_RANK, STEP_I_LOW, STEP_I_UP)
!$omp parallel do reduction(+: CONTRIB)

      DO I = STEP_I_LOW, STEP_I_UP
         X = (I-0.5)*ITER
         CONTRIB = CONTRIB+4.0/(1.0+X*X)
         PRINT *, I, X, CONTRIB
      ENDDO
!$omp end parallel do
C END WORK
!$omp master
      CALL STEP_REDUCTION(CONTRIB)
      CALL STEP_CONSTRUCT_END(STEP_PARALLEL_DO)
!$omp end master
!$omp barrier
      END
###################### pi-STEP/pi.database/Src/pi.f ######################
      PROGRAM PI
! MIL-STD-1753 Fortran extension not in PIPS
      implicit none
      INTEGER I, NUM_ITER
      DOUBLE PRECISION X, MY_PI, CONTRIB, ITER
      CALL STEP_INIT_FORTRAN_ORDER
      CONTRIB = 0.0
      NUM_ITER = 10
      ITER = 1.0/NUM_ITER
      CALL PI_PARDO_HYBRID(CONTRIB, I, ITER, NUM_ITER, X)

      MY_PI = ITER*CONTRIB

      PRINT *, MY_PI
      CALL STEP_FINALIZE
      END
