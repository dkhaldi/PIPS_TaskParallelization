
POINTS TO for wilson_aliasing


// Points To IN:
// _q_2 -> _q_2_2 , EXACT
// _r_3 -> _r_3_3 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT


// Points To OUT:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _r_3_3 , EXACT
// _r_3 -> _r_3_3 , EXACT

void f(int **p, int **q, int **r)
{

// Points To:
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   *p = *q;

// Points To:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _q_2_2 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   *q = *r;

// Points To:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _r_3_3 , EXACT
// _r_3 -> _r_3_3 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   return;
}

// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int x, y, z;

// Points To: none

   int *x0 = &x, *y0 = &y, *z0 = &z;

// Points To:
// x0 -> x , EXACT
// y0 -> y , EXACT
// z0 -> z , EXACT

   if (1)

// Points To:
// x0 -> x , EXACT
// y0 -> y , EXACT
// z0 -> z , EXACT

      f(&x0, &y0, &x0);

// Points To:
// x0 -> x , EXACT
// y0 -> y , EXACT
// z0 -> z , EXACT


   return 0;
}

// Points To IN: none


// Points To OUT: none


// Points To: none

void f(int **p, int **q, int **r);


// Points To: none

int main();

PROPER  EFFECTS WITH POINTS TO

void f(int **p, int **q, int **r)
{
//             <    is read   >: _q_2 p q
//             <    is written>: _p_1
   *p = *q;
//             <    is read   >: _r_3 q r
//             <    is written>: _q_2
   *q = *r;
   return;
}
int main()
{
   int x, y, z;
//             <    is written>: x0 y0 z0
   int *x0 = &x, *y0 = &y, *z0 = &z;
   if (1)
//             <    is read   >: f:_q_2 f:_r_3
//             <    is written>: f:_p_1 f:_q_2
      f(&x0, &y0, &x0);

   return 0;
}
void f(int **p, int **q, int **r);

int main();

CUMULATED  EFFECTS WITH POINTS TO

//             <    is read   >: _q_2 _r_3 p q r
//             <    is written>: _p_1 _q_2
void f(int **p, int **q, int **r)
{
//             <    is read   >: _q_2 p q
//             <    is written>: _p_1
   *p = *q;
//             <    is read   >: _r_3 q r
//             <    is written>: _q_2
   *q = *r;
   return;
}
//             <may be read   >: f:_q_2 f:_r_3
//             <may be written>: f:_p_1 f:_q_2
int main()
{
   int x, y, z;
//             <    is written>: x0 y0 z0
   int *x0 = &x, *y0 = &y, *z0 = &z;
//             <may be read   >: f:_q_2 f:_r_3
//             <may be written>: f:_p_1 f:_q_2
   if (1)
//             <    is read   >: f:_q_2 f:_r_3
//             <    is written>: f:_p_1 f:_q_2
      f(&x0, &y0, &x0);

   return 0;
}
void f(int **p, int **q, int **r);

int main();

POINTS TO for wilson_aliasing


// Points To IN:
// _q_2 -> _q_2_2 , EXACT
// _r_3 -> _r_3_3 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT


// Points To OUT:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _r_3_3 , EXACT
// _r_3 -> _r_3_3 , EXACT

void f(int **p, int **q, int **r)
{

// Points To:
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   *p = *q;

// Points To:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _q_2_2 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   *q = *r;

// Points To:
// _p_1 -> _q_2_2 , EXACT
// _q_2 -> _r_3_3 , EXACT
// _r_3 -> _r_3_3 , EXACT
// p -> _p_1 , EXACT
// q -> _q_2 , EXACT
// r -> _r_3 , EXACT

   return;
}

// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int x, y, z;

// Points To: none

   int *x0 = &x, *y0 = &y, *z0 = &z;

// Points To:
// x0 -> x , EXACT
// y0 -> y , EXACT
// z0 -> z , EXACT

   if (1)

// Points To:
// x0 -> x , EXACT
// y0 -> y , EXACT
// z0 -> z , EXACT

      f(&x0, &y0, &x0);

// Points To:
// x0 -> *ANY_MODULE*:*NOWHERE* , MAY
// x0 -> x , MAY
// y0 -> *ANY_MODULE*:*NOWHERE* , MAY
// y0 -> y , MAY
// z0 -> z , EXACT


   return 0;
}

// Points To IN: none


// Points To OUT: none


// Points To: none

void f(int **p, int **q, int **r);


// Points To: none

int main();
INIT_POINTS_TO_ANALYSIS[f] (init_points_to_analysis) Property ALIASING_ACROSS_TYPES is ignored
INIT_POINTS_TO_ANALYSIS[main] (init_points_to_analysis) Property ALIASING_ACROSS_TYPES is ignored
INIT_POINTS_TO_ANALYSIS[wilson_aliasing!] (init_points_to_analysis) Property ALIASING_ACROSS_TYPES is ignored
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (points_to_interprocedural) Aliasing between arguments, we have to create a new context
 