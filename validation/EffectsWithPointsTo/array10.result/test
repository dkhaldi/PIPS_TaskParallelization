
Points-to for "foo"


// Points To IN: none


// Points To OUT:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

int foo(int *p)
{

// Points To: none

   int b[100];

// Points To: none

   p = &b[0];

// Points To:
// p -> b[0] , EXACT

   a[*p+1] = 2.;

// Points To:
// p -> b[0] , EXACT

   return 0;
}

Proper effects with points-to for "foo"

int foo(int *p)
{
   int b[100];
//             <    is written>: p
   p = &b[0];
//             <    is read   >: b[0] p
//             <    is written>: a[*p+1]
   a[*p+1] = 2.;
   return 0;
}

Points-to for "bar"


// Points To IN: none


// Points To OUT:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

int bar(int *p)
{

// Points To: none

   int b[100];

// Points To: none

   p = &b[0];

// Points To:
// p -> b[0] , EXACT

   a[*p++] = 2.;

// Points To:
// p -> b[1] , EXACT

   return 0;
}

Proper effects with points-to for "bar"

int bar(int *p)
{
   int b[100];
//             <    is written>: p
   p = &b[0];
//             <    is read   >: b[0] p
//             <    is written>: a[*p++] p
   a[*p++] = 2.;
   return 0;
}

Points-to for "toto"


// Points To IN: none


// Points To OUT:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

int toto(int *p)
{

// Points To: none

   int *q;

// Points To:
// q -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   int b[100];

// Points To:
// q -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   p = &b[0];

// Points To:
// p -> b[0] , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   a[*(q = p++)] = 2.;

// Points To:
// p -> b[1] , EXACT
// q -> b[0] , EXACT

   return 0;
}

Proper effects with points-to for "toto"

int toto(int *p)
{
   int *q;
   int b[100];
//             <    is written>: p
   p = &b[0];
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: a[*(q = p++)] p q
   a[*(q = p++)] = 2.;
   return 0;
}
