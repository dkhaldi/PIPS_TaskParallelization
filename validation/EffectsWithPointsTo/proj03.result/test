
int main(void)
{
//             <    is written>: i
   int i = 1;
//             <    is written>: pi
   int *pi = &i;
//             <    is written>: pp
   int **pp = &pi;
//             <    is written>: j
   int j = 2;
//             <    is read   >: __TIME_EFFECTS:KALI
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __TIME_EFFECTS:KALI

   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]

   if (alea()) {
//             <    is written>: pj
      int *pj = &j;
//             <    is written>: pp
      pp = &pj;
//             <    is read   >: pj pp
//             <    is written>: j
      **pp = 0;
   }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pp stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   
   // pp may points to a dead value in the stack
   printf("%p\n", pp);
//             <    is read   >: pi pp
//             <    is written>: i
   
   // possible segfault.
   // should generate an error while analyzing?
   **pp = 0;
   return 0;
}
static int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: r _RANDOM_EFFECTS:GEN_SEED
   int r = rand();
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: r stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%d\n", r);
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2==1;
}

 *********************** Use-Def Chains *********************

	14 --> 33 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
	15 --> 33 with conflicts
		from <pi-W-EXACT> to <pi-R-EXACT>
	16 --> 24 with conflicts
		from <pp-W-EXACT> to <pp-W-EXACT>
	16 --> 25 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	16 --> 29 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	16 --> 33 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	17 --> 25 with conflicts
		from <j-W-EXACT> to <j-W-EXACT>
	19 --> 21 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-R-EXACT>
	23 --> 25 with conflicts
		from <pj-W-EXACT> to <pj-R-EXACT>
	24 --> 25 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	24 --> 29 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	24 --> 33 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>

****************** End of Dependence Graph ******************
