End of property settings
void flgr2d_arith_add_fgINT32(FLGR_Data2D *datdest, FLGR_Data2D *data1, FLGR_Data2D *data2)
{
   FLGR_Data1D **pdest = datdest->row;                                  /*0080*/
   FLGR_Data1D **p1 = data1->row;                                       /*0081*/
   FLGR_Data1D **p2 = data2->row;                                       /*0082*/
   int i;                                                               /*0083*/
   i = 0;                                                               /*0084*/
   while (i<data1->size_y) {                                            /*0085*/
      flgr1d_arith_add_fgINT32(*pdest, *p1, *p2);                       /*0086*/
      i++, pdest++, p1++, p2++;                                         /*0087*/
   }
   return;                                                              /*0089*/
}
void flgr2d_arith_add_fgINT32(FLGR_Data2D *datdest, FLGR_Data2D *data1, FLGR_Data2D *data2)
{
   FLGR_Data1D **pdest = datdest->row;                                  /*0003*/
   /*0080*/
   FLGR_Data1D **p1 = data1->row;                                       /*0004*/
   /*0081*/
   FLGR_Data1D **p2 = data2->row;                                       /*0005*/
   /*0082*/
   int i;                                                               /*0006*/
   /*0083*/
   //PIPS generated variable
   fgINT32 _return0, _return1, _return2, _return3, _return4;            /*0008*/
   i = 0;                                                               /*0009*/
   /*0084*/
   while (i<data1->size_y) {                                            /*0010*/
      {
         //PIPS generated variable
         FLGR_Data1D *P_0, *P_1, *P_2;                                  /*0013*/
         P_0 = *pdest;                                                  /*0014*/
         P_1 = *p1;                                                     /*0015*/
         P_2 = *p2;                                                     /*0016*/
         {
            int j;                                                      /*0018*/
            /*0060*/
            fgINT32 *psrc1 = (fgINT32 *) P_1->array;                    /*0019*/
            /*0061*/
            fgINT32 *psrc2 = (fgINT32 *) P_2->array;                    /*0020*/
            /*0062*/
            fgINT32 *pdest = (fgINT32 *) P_0->array;                    /*0021*/
            /*0063*/
            fgINT32 v1;                                                 /*0022*/
            /*0064*/
            fgINT32 v2;                                                 /*0023*/
            /*0065*/
            fgINT32 result;                                             /*0024*/
            /*0066*/
            int spp = P_0->spp;                                         /*0025*/
            /*0067*/
            int length = P_0->length*spp;                               /*0026*/
            /*0068*/
            for(j = 0; j <= length-1; j += 1) {                         /*0027*/
               /*0069*/
               _return3 = psrc1[j];                                     /*0028*/
               _return0 = _return3;                                     /*0031*/
               v1 = _return0;                                           /*0034*/
               _return4 = psrc2[j];                                     /*0035*/
               _return1 = _return4;                                     /*0038*/
               v2 = _return1;                                           /*0041*/
               _return2 = v1+v2;                                        /*0042*/
               result = _return2;                                       /*0045*/
               pdest[j] = result;                                       /*0046*/
               /*0034*/
               ;
            }
         }
      }
      i++, pdest++, p1++, p2++;                                         /*0054*/
   }
   return;                                                              /*0056*/
}
