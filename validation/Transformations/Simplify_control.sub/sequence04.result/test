#
# Parsed printed file
#
void sequence04()
{
   int i = 4;
   
   /* This assert cannot be cleaned up using preconditions only */
   4>3?(void) 0:__assert_fail("4>3", "./sequence04.c", 12, __func__);

   return;
}
#
# Printed file
#
void sequence04()
{
   int i = 4;
   
   /* This assert cannot be cleaned up using preconditions only */
   4>3?(void) 0:__assert_fail("4>3", "./sequence04.c", 12, __func__);

   return;
}
#
# Cumulated effects
#
void sequence04()
{
//             <    is written>: i
   int i = 4;
//             <may be read   >: __func__
   
   /* This assert cannot be cleaned up using preconditions only */
   4>3?(void) 0:__assert_fail("4>3", "./sequence04.c", 12, __func__);

   return;
}
#
# simplify control
#
void sequence04()
{
   int i = 4;
   
   /* This assert cannot be cleaned up using preconditions only */
   (void) 0;

   return;
}
#
# simplify control a second time
#
void sequence04()
{
   int i = 4;
   
   /* This assert cannot be cleaned up using preconditions only */
   
   return;
}
