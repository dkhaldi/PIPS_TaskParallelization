
Initial code

int main(int argc, char *argv[])
{
   int i, j = 1;
loop:
   for(i = 0; i <= 99; i += 1)
      j += 2*i;
   return j;
}

Code after unrolling

int main(int argc, char *argv[])
{
   int i, j = 1;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
loop:   LU_NUB0 = 100;
   LU_IB0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= LU_IB0-1; LU_IND0 += 1) {
      j += 2*(LU_IND0*1+0);
l99999:      ;
   }
   for(LU_IND0 = LU_IB0; LU_IND0 <= LU_NUB0-1; LU_IND0 += 4) {
      j += 2*((LU_IND0+0)*1+0);
      j += 2*((LU_IND0+1)*1+0);
      j += 2*((LU_IND0+2)*1+0);
      j += 2*((LU_IND0+3)*1+0);
l99998:      ;
   }
   i = 0+MAX0(LU_NUB0, 0)*1;
   return j;
}

Code after dead code elimination

int main(int argc, char *argv[])
{
   int i, j = 1;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 100;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = LU_IB0; LU_IND0 <= LU_NUB0-1; LU_IND0 += 4) {
      j += 2*((LU_IND0+0)*1+0);
      j += 2*((LU_IND0+1)*1+0);
      j += 2*((LU_IND0+2)*1+0);
      j += 2*((LU_IND0+3)*1+0);
   }
   i = 0+MAX0(LU_NUB0, 0)*1;
   return j;
}

Unsplit resulting code

#
# compile generated c_unroll1
#
