//
// Init Code
//
int main()
{
   int a[10], i;
   int l;
   int u;
   
   //al, au are totaly useless for this code but will be revive with LOOP_BOUND_MINIMIZATION_WITH_OUT_REGIONS
   int al, au;
   al = l;
   au = u;

   for(i = l; i <= u-1; i += 1)
      a[i-l] = i;

   for(i = l; i <= u-1; i += 1)
      if (i<10)
         a[i] = i;

   for(i = 0; i <= 9; i += 1)
      printf("a[%d]=%d", i, a[i]);

   return 0;
}

OUT regions for live02

int main()
{
   int a[10], i;
   int l;
   int u;
   
   //al, au are totaly useless for this code but will be revive with LOOP_BOUND_MINIMIZATION_WITH_OUT_REGIONS
   int al, au;
   al = l;
   au = u;

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=9, PHI1+l+1<=au, al==l, au==u}>


   for(i = l; i <= u-1; i += 1)

//  <a[PHI1]-OUT-MAY-{PHI1+l==i, 0<=PHI1, PHI1<=9, al==l, au==u,
//    i+1<=au}>

      a[i-l] = i;

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=9, al<=PHI1, PHI1+1<=au, al==l,
//    au==u}>


   for(i = l; i <= u-1; i += 1)

//  <a[PHI1]-OUT-MAY-{PHI1==i, 0<=PHI1, al==l, au==u, al<=i, i+1<=au,
//    i<=9}>

      if (i<10)

//  <a[PHI1]-OUT-MAY-{PHI1==i, 0<=PHI1, al==l, au==u, al<=i, i+1<=au,
//    i<=9}>

         a[i] = i;

//  <__IO_EFFECTS:LUNS[PHI1]-OUT-EXACT-{PHI1==1, al==l, au==u}>


   for(i = 0; i <= 9; i += 1)

//  <stdout[PHI1]-OUT-MAY-{PHI1==0, 0<=i, i<=9}>
//  <__IO_EFFECTS:LUNS[PHI1]-OUT-EXACT-{PHI1==1, al==l, au==u, 0<=i,
//    i<=9}>

      printf("a[%d]=%d", i, a[i]);

   return 0;
}
//
// Source code for live02 after LOOP_BOUND_MINIMIZATION_WITH_OUT_REGIONS
//
i 
i 
int main()
{
   int a[10], i;
   int l;
   int u;
   
   //al, au are totaly useless for this code but will be revive with LOOP_BOUND_MINIMIZATION_WITH_OUT_REGIONS
   int al, au;
   al = l;
   au = u;

   for(i = al; i <= pips_min(2, au-1, l+9); i += 1)
      a[i-l] = i;

   for(i = pips_max(2, al, 0); i <= pips_min(2, 9, au-1); i += 1)
      if (i<10)
         a[i] = i;

   for(i = 0; i <= 9; i += 1)
      printf("a[%d]=%d", i, a[i]);

   return 0;
}

Warnings

