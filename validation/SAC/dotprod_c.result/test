
Initial code

float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   for(i = 0; i <= 199; i += 1)
      a += b[i]*c[i];
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   for(i = 0; i <= 199; i += 1)
      a = a+b[i]*c[i];
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   for(i = 0; i <= 199; i += 1)
      a = a+b[i]*c[i];
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   for(i = 0; i <= 199; i += 1)
      a = a+b[i]*c[i];
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   //PIPS generated variable
   float F_0;
   for(i = 0; i <= 199; i += 1) {
      F_0 = b[i]*c[i];
      a = a+F_0;
   }
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   //PIPS generated variable
   float F_0;
   for(i = 0; i <= 199; i += 4) {
      F_0 = b[i]*c[i];
      a = a+F_0;
      F_0 = b[i+1]*c[i+1];
      a = a+F_0;
      F_0 = b[i+2]*c[i+2];
      a = a+F_0;
      F_0 = b[i+3]*c[i+3];
      a = a+F_0;
   }
   i = 200;
   return a;
}
float dotprod(float b[200], float c[200])
{
   int i;
   float a = 0;
   //PIPS generated variable
   float RED0[4], RED1[1];
   //PIPS generated variable
   float F_0;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   for(i = 0; i <= 199; i += 4) {
      F_0 = b[i]*c[i];
      RED0[0] = RED0[0]+F_0;
      F_0 = b[1+i]*c[1+i];
      RED0[1] = RED0[1]+F_0;
      F_0 = b[2+i]*c[2+i];
      RED0[2] = RED0[2]+F_0;
      F_0 = b[3+i]*c[3+i];
      RED0[3] = RED0[3]+F_0;
   }
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   i = 200;
   return a;
}
float dotprod(float b[200], float c[200])
{
   float a = 0;
   //PIPS generated variable
   float RED0[4];
   //PIPS generated variable
   float F_00, F_01, F_02, F_03;
   //PIPS generated variable
   int i0, i1;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   for(i0 = 0; i0 <= 199; i0 += 4) {
      F_00 = b[i0]*c[i0];
      RED0[0] = RED0[0]+F_00;
      F_01 = b[1+i0]*c[1+i0];
      RED0[1] = RED0[1]+F_01;
      F_02 = b[2+i0]*c[2+i0];
      RED0[2] = RED0[2]+F_02;
      F_03 = b[3+i0]*c[3+i0];
      RED0[3] = RED0[3]+F_03;
   }
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   i1 = 200;
   return a;
}
float dotprod(float b[200], float c[200])
{
   float a = 0;
   //PIPS generated variable
   float RED0[4];
   //PIPS generated variable
   float F_00, F_01, F_02, F_03;
   //SAC generated temporary array
   a4sf pdata0 = {0, 0, 0, 0};
   //PIPS generated variable
   int i0, i1;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   for(i0 = 0; i0 <= 199; i0 += 4) {
      //PIPS:SAC generated v4sf vector(s)
      v4sf vec00, vec10, vec20, vec30, vec40;
      SIMD_LOAD_V4SF(vec20, &c[i0]);
      SIMD_LOAD_V4SF(vec10, &b[i0]);
      SIMD_MULPS(vec00, vec10, vec20);
      SIMD_STORE_V4SF(vec00, &pdata0[0]);
      SIMD_LOAD_V4SF(vec30, &RED0[0]);
      SIMD_ADDPS(vec30, vec30, vec00);
      SIMD_STORE_V4SF(vec30, &RED0[0]);
   }
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   i1 = 200;
   return a;
}
float dotprod(float b[200], float c[200])
{
   float a = 0;
   //PIPS generated variable
   float RED0[4];
   //PIPS generated variable
   float F_00, F_01, F_02, F_03;
   //SAC generated temporary array
   a4sf pdata0 = {0, 0, 0, 0};
   //PIPS generated variable
   int i0, i1;
   //PIPS generated variable
   v4sf vec00_0, vec10_0, vec20_0, vec30_0, vec40_0;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   //PIPS:SAC generated v4sf vector(s)
   SIMD_LOAD_V4SF(vec30_0, &RED0[0]);
   for(i0 = 0; i0 <= 199; i0 += 4) {
      SIMD_LOAD_V4SF(vec10_0, &b[i0]);
      SIMD_LOAD_V4SF(vec20_0, &c[i0]);
      SIMD_MULPS(vec00_0, vec10_0, vec20_0);
      SIMD_ADDPS(vec30_0, vec30_0, vec00_0);
   }
   SIMD_STORE_V4SF(vec30_0, &RED0[0]);
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   i1 = 200;
   SIMD_STORE_V4SF(vec00_0, &pdata0[0]);
   return a;
}
float dotprod(float b[200], float c[200])
{
   float a = 0;
   //PIPS generated variable
   float RED0[4];
   //PIPS generated variable
   int i0;
   //PIPS generated variable
   v4sf vec00_0, vec10_0, vec20_0, vec30_0;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   //PIPS:SAC generated v4sf vector(s)
   SIMD_LOAD_V4SF(vec30_0, &RED0[0]);
   for(i0 = 0; i0 <= 199; i0 += 4) {
      SIMD_LOAD_V4SF(vec10_0, &b[i0]);
      SIMD_LOAD_V4SF(vec20_0, &c[i0]);
      SIMD_MULPS(vec00_0, vec10_0, vec20_0);
      SIMD_ADDPS(vec30_0, vec30_0, vec00_0);
   }
   SIMD_STORE_V4SF(vec30_0, &RED0[0]);
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   return a;
}

simdized code

float dotprod(float b[200], float c[200])
{
   float a = 0;
   //PIPS generated variable
   float RED0[4];
   //PIPS generated variable
   int i0;
   //PIPS generated variable
   v4sf vec00_0, vec10_0, vec20_0, vec30_0;
   RED0[0] = 0.;
   RED0[1] = 0.;
   RED0[2] = 0.;
   RED0[3] = 0.;
   //PIPS:SAC generated v4sf vector(s)
   SIMD_LOAD_V4SF(vec30_0, &RED0[0]);
   for(i0 = 0; i0 <= 199; i0 += 4) {
      SIMD_LOAD_V4SF(vec10_0, &b[i0]);
      SIMD_LOAD_V4SF(vec20_0, &c[i0]);
      SIMD_MULPS(vec00_0, vec10_0, vec20_0);
      SIMD_ADDPS(vec30_0, vec30_0, vec00_0);
   }
   SIMD_STORE_V4SF(vec30_0, &RED0[0]);
   a = RED0[3]+(RED0[2]+(RED0[1]+(RED0[0]+a)));
   return a;
}
