void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1)
      for(j = 0; j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1)
      for(j = 0; j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1)
      for(j = 0; j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1)
      for(j = 0; j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1) {
      for(j = 0; j <= 4*(dim2/4)-1; j += 4) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
         b[i][j+1].re = b[i][j+1].re+a[i][j+1].re;
         b[i][j+1].im = b[i][j+1].im+a[i][j+1].im;
         b[i][j+2].re = b[i][j+2].re+a[i][j+2].re;
         b[i][j+2].im = b[i][j+2].im+a[i][j+2].im;
         b[i][j+3].re = b[i][j+3].re+a[i][j+3].re;
         b[i][j+3].im = b[i][j+3].im+a[i][j+3].im;
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
   }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int i, j;
   for(i = 0; i <= dim1-1; i += 1) {
      for(j = 0; j <= 4*(dim2/4)-1; j += 4) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
         b[i][1+j].re = b[i][1+j].re+a[i][1+j].re;
         b[i][1+j].im = b[i][1+j].im+a[i][1+j].im;
         b[i][2+j].re = b[i][2+j].re+a[i][2+j].re;
         b[i][2+j].im = b[i][2+j].im+a[i][2+j].im;
         b[i][3+j].re = b[i][3+j].re+a[i][3+j].re;
         b[i][3+j].im = b[i][3+j].im+a[i][3+j].im;
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i][j].re = b[i][j].re+a[i][j].re;
         b[i][j].im = b[i][j].im+a[i][j].im;
      }
   }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int j;
   //PIPS generated variable
   int i0, j0;
   for(i0 = 0; i0 <= dim1-1; i0 += 1) {
      for(j0 = 0; j0 <= 4*(dim2/4)-1; j0 += 4) {
         b[i0][j0].re = b[i0][j0].re+a[i0][j0].re;
         b[i0][j0].im = b[i0][j0].im+a[i0][j0].im;
         b[i0][1+j0].re = b[i0][1+j0].re+a[i0][1+j0].re;
         b[i0][1+j0].im = b[i0][1+j0].im+a[i0][1+j0].im;
         b[i0][2+j0].re = b[i0][2+j0].re+a[i0][2+j0].re;
         b[i0][2+j0].im = b[i0][2+j0].im+a[i0][2+j0].im;
         b[i0][3+j0].re = b[i0][3+j0].re+a[i0][3+j0].re;
         b[i0][3+j0].im = b[i0][3+j0].im+a[i0][3+j0].im;
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i0][j].re = b[i0][j].re+a[i0][j].re;
         b[i0][j].im = b[i0][j].im+a[i0][j].im;
      }
   }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int j;
   //PIPS generated variable
   int i0, j0;
   for(i0 = 0; i0 <= dim1-1; i0 += 1) {
      for(j0 = 0; j0 <= 4*(dim2/4)-1; j0 += 4) {
         //PIPS:SAC generated v4sf vector(s)
         v4sf vec00, vec10, vec20, vec30;
         SIMD_LOAD_V4SF(vec10, &a[i0][j0].re);
         SIMD_LOAD_V4SF(vec00, &b[i0][j0].re);
         SIMD_ADDPS(vec00, vec00, vec10);
         SIMD_STORE_V4SF(vec00, &b[i0][j0].re);
         SIMD_LOAD_V4SF(vec30, &a[i0][2+j0].re);
         SIMD_LOAD_V4SF(vec20, &b[i0][2+j0].re);
         SIMD_ADDPS(vec20, vec20, vec30);
         SIMD_STORE_V4SF(vec20, &b[i0][2+j0].re);
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i0][j].re = b[i0][j].re+a[i0][j].re;
         b[i0][j].im = b[i0][j].im+a[i0][j].im;
      }
   }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int j;
   //PIPS generated variable
   int i0, j0;
   for(i0 = 0; i0 <= dim1-1; i0 += 1) {
      for(j0 = 0; j0 <= 4*(dim2/4)-1; j0 += 4) {
         //PIPS:SAC generated v4sf vector(s)
         v4sf vec00, vec10, vec20, vec30;
         SIMD_LOAD_V4SF(vec10, &a[i0][j0].re);
         SIMD_LOAD_V4SF(vec00, &b[i0][j0].re);
         SIMD_ADDPS(vec00, vec00, vec10);
         SIMD_STORE_V4SF(vec00, &b[i0][j0].re);
         SIMD_LOAD_V4SF(vec30, &a[i0][2+j0].re);
         SIMD_LOAD_V4SF(vec20, &b[i0][2+j0].re);
         SIMD_ADDPS(vec20, vec20, vec30);
         SIMD_STORE_V4SF(vec20, &b[i0][2+j0].re);
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i0][j].re = b[i0][j].re+a[i0][j].re;
         b[i0][j].im = b[i0][j].im+a[i0][j].im;
      }
   }
}
void cadd(int dim1, int dim2, Cplfloat a[dim1][dim2], Cplfloat b[dim2][dim1])
{
   int j;
   //PIPS generated variable
   int i0, j0;
   for(i0 = 0; i0 <= dim1-1; i0 += 1) {
      for(j0 = 0; j0 <= 4*(dim2/4)-1; j0 += 4) {
         //PIPS:SAC generated v4sf vector(s)
         v4sf vec00, vec10, vec20, vec30;
         SIMD_LOAD_V4SF(vec10, &a[i0][j0].re);
         SIMD_LOAD_V4SF(vec00, &b[i0][j0].re);
         SIMD_ADDPS(vec00, vec00, vec10);
         SIMD_STORE_V4SF(vec00, &b[i0][j0].re);
         SIMD_LOAD_V4SF(vec30, &a[i0][2+j0].re);
         SIMD_LOAD_V4SF(vec20, &b[i0][2+j0].re);
         SIMD_ADDPS(vec20, vec20, vec30);
         SIMD_STORE_V4SF(vec20, &b[i0][2+j0].re);
      }
      for(j = 4*(dim2/4); j <= dim2-1; j += 1) {
         b[i0][j].re = b[i0][j].re+a[i0][j].re;
         b[i0][j].im = b[i0][j].im+a[i0][j].im;
      }
   }
}

