setproperty ABORT_ON_USER_ERROR TRUE
setenv WS="mmult2"
delete $WS
setenv PIPS_CPP_FLAGS="-DN=16"

create $WS $WS.c include/SIMD.c

echo
echo Initial code
echo
module Matrix_Mult

display PRINTED_FILE


setproperty LOOP_LABEL "loop0"
apply LOOP_TILING
4 0
0 4
display PRINTED_FILE

setproperty LOOP_LABEL ""
setproperty LOOP_NORMALIZE_ONE_INCREMENT TRUE
apply LOOP_NORMALIZE
apply FLAG_LOOPS
display PRINTED_FILE




#setproperty SIMD_OVERRIDE_CONSTANT_TYPE_INFERANCE TRUE
#setproperty SIMD_EXTRAVAGANT_ATOMIZER TRUE
setproperty SAC_SIMD_REGISTER_WIDTH 128
setproperty SIMD_FORTRAN_MEM_ORGANISATION=FALSE

activate MUST_REGIONS
activate REGION_CHAINS
activate RICE_REGIONS_DEPENDENCE_GRAPH
activate PRECONDITIONS_INTER_FULL
activate TRANSFORMERS_INTER_FULL
setproperty LOOP_UNROLL_WITH_PROLOGUE FALSE
setproperty CONSTANT_PATH_EFFECTS FALSE
setproperty COMPUTE_ALL_DEPENDENCES TRUE

setproperty RICEDG_STATISTICS_ALL_ARRAYS TRUE

setproperty LOOP_LABEL "loop2"
apply REDUCTION_VARIABLE_EXPANSION
display PRINTED_FILE
#setproperty LOOP_LABEL "l99999"
#apply FULL_UNROLL
#display PRINTED_FILE
apply SIMDIZER_AUTO_UNROLL
apply FORWARD_SUBSTITUTE
apply PARTIAL_EVAL
apply SIMPLIFY_CONTROL
display PRINTED_FILE

#setproperty LOOP_LABEL "loop1"
#apply FULL_UNROLL

#setproperty ARRAY_TO_POINTER_CONVERT_PARAMETERS TRUE
#setproperty ARRAY_TO_POINTER_FLATTEN_ONLY TRUE
#apply ARRAY_TO_POINTER
#display PRINTED_FILE

apply PARTIAL_EVAL 
display PRINTED_FILE

apply SIMD_ATOMIZER
display PRINTED_FILE

apply SCALAR_RENAMING
display PRINTED_FILE

echo
echo simdized code
echo
make TRANSFORMERS
apply SIMDIZER
display PRINTED_FILE

apply DELAY_COMMUNICATIONS_INTRA
display PRINTED_FILE


apply UNSPLIT
#shell sed -i -e '1,/Matrix_Mult/ d'  $WS.database/Src/$WS.c
#shell sed -i -e '1 i #define REAL(x) ((float)(x))' $WS.database/Src/$WS.c

#shell cc $PIPS_CPP_FLAGS $WS.c include/SIMD.c -o $WS.database/Tmp/ref
#shell sed -i -e '1 i #include "SIMD.h"' $WS.database/Src/$WS.c
#shell cc $PIPS_CPP_FLAGS -Iinclude $WS.database/Src/$WS.c include/SIMD.c -o $WS.database/Tmp/seq
#shell sed -i -e '1 d' $WS.database/Src/$WS.c
#shell if test "`./$WS.database/Tmp/ref`" = "`$WS.database/Tmp/seq`" ; then echo seq-ok ; else echo seq-ko ; fi

#shell ./compileC.sh $WS $WS.c $WS.database/Tmp/sse.c
#shell cc $PIPS_CPP_FLAGS -O3 -I. -march=native $WS.database/Tmp/sse.c -o $WS.database/Tmp/sse
#shell if test "`./$WS.database/Tmp/ref`" = "`$WS.database/Tmp/sse`" ; then echo sse-ok ; else echo sse-ko ; fi

close
delete $WS
quit

