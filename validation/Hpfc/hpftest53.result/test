!
! File HPFTEST53_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST53_parameters.h"
      INTEGER*4 NP
      PARAMETER (NP = 800)
      INTEGER*4 NP
      PARAMETER (NP = 800)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, T LID, I
     &, J
      REAL*8 V(1:NP, 1:NP)
      CALL HPFC INIT HOST
      DO I = 1, NP
         DO J = 1, NP
            READ (3, *) V(I,J)
         ENDDO
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
! updating shared variable J
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = J
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
! updating distributed variable V
      DO PSI1 = 1, 4
         DO PSI2 = 1, 4
            BUF INDEX = 0
            SEND NOT INITIALIZED = .TRUE.
            DO ALPHA2 = 200*PSI2-199, MIN(800, 200*PSI2)
               DO ALPHA1 = 200*PSI1-199, MIN(800, 200*PSI1)
                  LALPHA1 = ALPHA1-200*PSI1+200
                  LALPHA2 = ALPHA2-200*PSI2+200
                  BUF INDEX = BUF INDEX+1
                  HPFC REAL8 BUFF(BUF INDEX) = V(ALPHA1,ALPHA2)
               ENDDO
            ENDDO
            T LID = 4*PSI1+PSI2-4
            CALL HPFC REAL8 BUFPCK
            CALL HPFC SND TO NODE(T LID)
         ENDDO
      ENDDO
! end of update
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST53_host.f
!
!
! File HPFTEST53_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST53
!
!
! initializing array V, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 800
      RANGEA(1, 1, 3) = 800
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 200
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 800
      RANGEA(1, 2, 3) = 800
!
      RANGEA(1, 2, 4) = 2
      RANGEA(1, 2, 5) = 200
      RANGEA(1, 2, 6) = 1
      RANGEA(1, 2, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 2
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for HPFTEST53_init.h
!
!
! File HPFTEST53_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST53_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, I, J
      REAL*8 V(1:200, 1:200)
      CALL HPFC INIT NODE
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! updating shared variable J
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      J = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! updating distributed variable V
      PSI1 = MY POS(1,1)
      PSI2 = MY POS(2,1)
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC RCV FROM HOST
      CALL HPFC REAL8 BUFUPK
      DO ALPHA2 = 200*PSI2-199, MIN(800, 200*PSI2)
         DO ALPHA1 = 200*PSI1-199, MIN(800, 200*PSI1)
            LALPHA1 = ALPHA1-200*PSI1+200
            LALPHA2 = ALPHA2-200*PSI2+200
            BUF INDEX = BUF INDEX+1
            V(LALPHA1,LALPHA2) = HPFC REAL8 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST53_node.f
!
!
! File HPFTEST53_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST53
!
      integer 
     $    HPFTEST53 V LO1,
     $    HPFTEST53 V UP1
      parameter(HPFTEST53 V LO1 = 1)
      parameter(HPFTEST53 V UP1 = 200)
      integer 
     $    HPFTEST53 V LO2,
     $    HPFTEST53 V UP2
      parameter(HPFTEST53 V LO2 = 1)
      parameter(HPFTEST53 V UP2 = 200)
!
! That is all for HPFTEST53_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template DOMAIN, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 800
      RANGET(1, 1, 3) = 800

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 800
      RANGET(1, 2, 3) = 800

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 200
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 200
!
! Processors Initializations
!
!
! initializing processors PE, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 4
      RANGEP(1, 1, 3) = 4

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 4
      RANGEP(1, 2, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 16)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
