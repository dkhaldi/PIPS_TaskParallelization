!
! File IO_1_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "IO_1_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, T LID, N
      REAL*4 A(1:100)
      CALL HPFC INIT HOST
      READ *, N
! updating shared variable N
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = N
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
! collecting distributed variable A
      IF (0.LE.N+4.AND.N.LE.100) THEN
         DO PSI1 = MAX(HPFC DIVIDE(N+24, 25), 1), MIN(4, HPFC DIVIDE(
     &   N+29, 25))
            BUF INDEX = 0
            RECEIVED NOT PERFORMED = .FALSE.
            SIZE OF RECEIVED BUFFER = 0
            T LID = PSI1
            CALL HPFC RCV FROM NODE(T LID)
            CALL HPFC REAL4 BUFUPK
            DO ALPHA1 = MAX(N, 25*PSI1-24), MIN(100, 25*PSI1, N+5)
               LALPHA1 = ALPHA1-25*PSI1+25
               BUF INDEX = BUF INDEX+1
               A(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
            ENDDO
         ENDDO
      ENDIF
! end of collect
      CALL PRINT_RESULT(A, N, N+5)
      CALL HPFC HOST END
      END
!
! That is all for IO_1_host.f
!
!
! File IO_1_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for IO_1
!
!
! initializing array A, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 100
      RANGEA(1, 1, 3) = 100
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 25
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for IO_1_init.h
!
!
! File IO_1_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "IO_1_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, I_0, I_1, I_2, I_3, I, N
      REAL*4 A(1:25)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, 100, 1, 1)
      I = I_3
      DO I_0 = I_1, I_2
         I = I+1
         A(I_0) = REAL(100-I)
      ENDDO
! updating shared variable N
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      N = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! collecting distributed variable A
      IF (0.LE.N+4.AND.N.LE.100) THEN
         PSI1 = MY POS(1,1)
         IF (25*PSI1.LE.N+29.AND.N.LE.25*PSI1) THEN
            BUF INDEX = 0
            SEND NOT INITIALIZED = .TRUE.
            DO ALPHA1 = MAX(N, 25*PSI1-24), MIN(100, 25*PSI1, N+5)
               LALPHA1 = ALPHA1-25*PSI1+25
               BUF INDEX = BUF INDEX+1
               HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1)
            ENDDO
            CALL HPFC REAL4 BUFPCK
            CALL HPFC SND TO HOST
         ENDIF
      ENDIF
! end of collect
      CALL HPFC NODE END
      END
!
! That is all for IO_1_node.f
!
!
! File IO_1_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for IO_1
!
      integer 
     $    IO_1 A LO1,
     $    IO_1 A UP1
      parameter(IO_1 A LO1 = 1)
      parameter(IO_1 A UP1 = 25)
!
! That is all for IO_1_parameters.h
!
      subroutine print_result(X, l, u)
cfcd$ io
      real X(100)
      integer l, u
      integer i
      print *, 'result is: ', (X(i), i=l, u)
      end
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template A, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 100
      RANGET(1, 1, 3) = 100

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 25
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 4
      RANGEP(1, 1, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
