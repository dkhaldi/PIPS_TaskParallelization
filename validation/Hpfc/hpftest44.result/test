!
! File HPFTEST44_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST44_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER ALPHA1, LALPHA1, PSI1, T LID, I
      REAL*4 A(1:N), H
      CALL HPFC INIT HOST
      PRINT *, 'enter h'
      READ *, H
! updating shared variable H
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC REAL4 BUFF(BUF INDEX) = H
      CALL HPFC REAL4 BUFPCK
      CALL HPFC HCAST
! end of update
! collecting distributed variable A
      DO PSI1 = 1, 4
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO ALPHA1 = 6*PSI1-5, MIN(20, 6*PSI1)
            LALPHA1 = ALPHA1-6*PSI1+6
            BUF INDEX = BUF INDEX+1
            A(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      DO I = 1, N
         PRINT *, 'a(', I, ') = ', A(I)
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST44_host.f
!
!
! File HPFTEST44_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST44
!
!
! initializing array A, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 20
      RANGEA(2, 1, 3) = 20
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 6
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
!
! initializing array B, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 20
      RANGEA(1, 1, 3) = 20
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 6
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = 1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 2
!
! That is all for HPFTEST44_init.h
!
!
! File HPFTEST44_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST44_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER ALPHA1, LALPHA1, PSI1, I_2, I_3, I_4, I_5, I_6, I_7, 
     &I_8, I_9, I
      REAL*4 A(1:6), B(1:7), H
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_7, I_8, I_9, 3, N-2, 2, 1)
      CALL HPFC LOOP BOUNDS(I_3, I_4, I_5, 1, N, 1, 1)
! updating shared variable H
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC REAL4 BUFUPK
      BUF INDEX = BUF INDEX+1
      H = HPFC REAL4 BUFF(BUF INDEX)
! end of update
      I = I_5
      DO I_2 = I_3, I_4
         I = I+1
         B(I_2) = I+H
      ENDDO
! P(2:4) send B(1) to (-1)
      IF (MY POS(1,1).GE.2) THEN
         CALL HPFC CMPNEIGHBOUR(-1)
         CALL HPFC REAL4 PACK 1(B, HPFTEST44 B LO1, HPFTEST44 B UP1, 
     &   1, 1, 1)
         CALL HPFC SNDTO N
      ENDIF
! P(1:3) receive B(7) from (+1)
      IF (MY POS(1,1).LE.3) THEN
         CALL HPFC CMPNEIGHBOUR(1)
         CALL HPFC RCVFR N
         CALL HPFC REAL4 UNPACK 1(B, HPFTEST44 B LO1, HPFTEST44 B UP1
     &   , 7, 7, 1)
      ENDIF
      IF (MY POS(1,1).LE.3) THEN
         DO I_6 = I_7, I_8
            A(I_6) = B(I_6)+B(I_6+1)
         ENDDO
      ENDIF
! collecting distributed variable A
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO ALPHA1 = 6*PSI1-5, MIN(20, 6*PSI1)
         LALPHA1 = ALPHA1-6*PSI1+6
         BUF INDEX = BUF INDEX+1
         HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1)
      ENDDO
      CALL HPFC REAL4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST44_node.f
!
!
! File HPFTEST44_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST44
!
      integer 
     $    HPFTEST44 A LO1,
     $    HPFTEST44 A UP1
      parameter(HPFTEST44 A LO1 = 1)
      parameter(HPFTEST44 A UP1 = 6)
      integer 
     $    HPFTEST44 B LO1,
     $    HPFTEST44 B UP1
      parameter(HPFTEST44 B LO1 = 1)
      parameter(HPFTEST44 B UP1 = 7)
!
! That is all for HPFTEST44_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 22
      RANGET(1, 1, 3) = 22

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 6
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 4
      RANGEP(1, 1, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
