!
! File AFFICHE_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE AFFICHE_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "AFFICHE_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, T LID, I
      REAL*4 A(1:10)
! collecting distributed variable A
      DO PSI1 = 1, 5
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO ALPHA1 = 2*PSI1-1, MIN(10, 2*PSI1)
            LALPHA1 = ALPHA1-2*PSI1+2
            BUF INDEX = BUF INDEX+1
            A(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      PRINT *, (A(I), I = 1, 10)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      END
!
! That is all for AFFICHE_host.f
!
!
! File AFFICHE_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for AFFICHE
!
!
! initializing array A, number 3
!
      NODIMA(3) = 1
      ATOT(3) = 3

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 10
      RANGEA(3, 1, 3) = 10
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 2
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
!
! That is all for AFFICHE_init.h
!
!
! File AFFICHE_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE AFFICHE_NODE(A, AFFICHE A LO1, AFFICHE A UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "AFFICHE_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, AFFICHE A UP1, AFFICHE A LO1, I
      REAL*4 A(AFFICHE A LO1:AFFICHE A UP1)
! collecting distributed variable A
      PSI1 = MY POS(1,3)
      IF (PSI1.LE.5) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA1 = 2*PSI1-1, MIN(10, 2*PSI1)
            LALPHA1 = ALPHA1-2*PSI1+2
            BUF INDEX = BUF INDEX+1
            HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1)
         ENDDO
         CALL HPFC REAL4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      END
!
! That is all for AFFICHE_node.f
!
!
! File AFFICHE_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for AFFICHE
!
!
! That is all for AFFICHE_parameters.h
!
!
! File INHERIT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INHERIT_parameters.h"
      CALL HPFC INIT HOST
      CALL INIT_HOST
      CALL AFFICHE_HOST
      CALL HPFC HOST END
      END
!
! That is all for INHERIT_host.f
!
!
! File INHERIT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for INHERIT
!
!
! initializing array A, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 2

      MSTATUS(2) = 2
      LIVEMAPPING(2) = .TRUE.

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 10
      RANGEA(2, 1, 3) = 10
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 2
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
!
! That is all for INHERIT_init.h
!
!
! File INHERIT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INHERIT_parameters.h"
      REAL*4 A(1:2)
      CALL HPFC INIT NODE
! all livenesss for A
      LIVE MAPPING(2) = .FALSE.
! begin remappings
      MSTATUS(2) = 2
! liveness management
! end of liveness management
! end remappings
      CALL INIT_NODE(A, INHERIT A LO1, INHERIT A UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
! begin remappings
      MSTATUS(2) = 2
! liveness management
! end of liveness management
! end remappings
      CALL AFFICHE_NODE(A, INHERIT A LO1, INHERIT A UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
      CALL HPFC NODE END
      END
!
! That is all for INHERIT_node.f
!
!
! File INHERIT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for INHERIT
!
      integer 
     $    INHERIT A LO1,
     $    INHERIT A UP1
      parameter(INHERIT A LO1 = 1)
      parameter(INHERIT A UP1 = 2)
!
! That is all for INHERIT_parameters.h
!
!
! File INIT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      END
!
! That is all for INIT_host.f
!
!
! File INIT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for INIT
!
!
! initializing array A, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 2
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for INIT_init.h
!
!
! File INIT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_NODE(A, INIT A LO1, INIT A UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      INTEGER I_0, I_1, I_2, I_3, INIT A UP1, INIT A LO1, I
      REAL*4 A(INIT A LO1:INIT A UP1)
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, 10, 1, 1)
      IF (MY POS(1,1).LE.5) THEN
         I = I_3
         DO I_0 = I_1, I_2
            I = I+1
            A(I_0) = I
         ENDDO
      ENDIF
      END
!
! That is all for INIT_node.f
!
!
! File INIT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for INIT
!
!
! That is all for INIT_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template A, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 2
!
! initializing template A, number 2
!
      NODIMT(2) = 1
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 10
      RANGET(2, 1, 3) = 10

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 2
!
! initializing template A, number 3
!
      NODIMT(3) = 1
      TTOP(3) = 3

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 10
      RANGET(3, 1, 3) = 10

      DIST(3, 1, 1) = 1
      DIST(3, 1, 2) = 2
!
! Processors Initializations
!
!
! initializing processors HPFCX, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 8
      RANGEP(1, 1, 3) = 8
!
! initializing processors HPFCX, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 8
      RANGEP(2, 1, 3) = 8
!
! initializing processors HPFCX, number 3
!
      NODIMP(3) = 1

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 8
      RANGEP(3, 1, 3) = 8
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 3)
      parameter(REALNBOFTEMPLATES = 3)
      parameter(REALNBOFPROCESSORS = 3)
      parameter(REALMAXSIZEOFPROCS = 8)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
