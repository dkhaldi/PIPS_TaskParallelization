!
! File CGC_SOL_1_4_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(4).EQ.1) THEN
         IF (.NOT.LIVE MAPPING(4)) THEN
! send part
! remapping SOL[4]: SOL_1[1] -> SOL[4]
            PSI1 = MY POS(1,1)
            IF (MY LID.LE.8) THEN
               PSIp1 = PSI1
               T LID = PSIp1
               IF (MY LID.NE.T LID.AND..NOT.HPFC TWIN P(1, T LID)
     &         ) THEN
! - lazy sending
                  BUF INDEX = 0
                  SEND NOT INITIALIZED = .TRUE.
                  DO LALPHA1 = 563*PSIp1-562, MIN(563*PSIp1, 559*
     &            PSIp1+28)
                     LALPHAp1 = LALPHA1-563*PSIp1+563
                     BUF INDEX = BUF INDEX+1
                     HPFC REAL4 BUFF(BUF INDEX) = SOL_1(LALPHA1)
                     IF (BUF INDEX.EQ.HPFC REAL4 BUFF SIZE) THEN
                        CALL HPFC REAL4 BUFPCK
                        CALL HPFC REMAPBRD 0(1, T LID)
                        BUF INDEX = 0
                        SEND NOT INITIALIZED = .TRUE.
                     ENDIF
                  ENDDO
                  IF (BUF INDEX.NE.0) THEN
                     CALL HPFC REAL4 BUFPCK
                     CALL HPFC REMAPBRD 0(1, T LID)
                  ENDIF
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,3)
            IF (MY LID.LE.8) THEN
               PSI1 = PSIp1
               T LID = PSI1
               IF (MY LID.NE.T LID.AND..NOT.HPFC TWIN P(1, T LID)
     &         ) THEN
! - lazy receiving
                  BUF INDEX = 0
                  RECEIVED NOT PERFORMED = .TRUE.
                  SIZE OF RECEIVED BUFFER = 0
                  DO LALPHA1 = 563*PSIp1-562, MIN(563*PSIp1, 559*
     &            PSIp1+28)
                     LALPHAp1 = LALPHA1-563*PSIp1+563
                     IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER) THEN
                        RECEIVED NOT PERFORMED = .TRUE.
                        CALL HPFC REAL4 BUFUPK(T LID)
                        BUF INDEX = 0
                     ENDIF
                     BUF INDEX = BUF INDEX+1
                     SOL(LALPHAp1) = HPFC REAL4 BUFF(BUF INDEX)
                  ENDDO
               ELSE
! - lazy copying
                  DO LALPHA1 = 563*PSIp1-562, MIN(563*PSIp1, 559*
     &            PSIp1+28)
                     LALPHAp1 = LALPHA1-563*PSIp1+563
                     SOL(LALPHAp1) = SOL_1(LALPHA1)
                  ENDDO
               ENDIF
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(4) = .TRUE.
         MSTATUS(4) = 4
      ENDIF
!
! That is all for CGC_SOL_1_4_node.h
!
!
! File CGC_SOL_4_1_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(4).EQ.4) THEN
         IF (.NOT.LIVE MAPPING(1)) THEN
! send part
! remapping SOL[4]: SOL[4] -> SOL_1[1]
            PSI1 = MY POS(1,3)
            IF (MY LID.LE.8) THEN
               T LID = 1
! - lazy broadcasting
               BUF INDEX = 0
               SEND NOT INITIALIZED = .TRUE.
               DO LALPHA1 = 1, MIN(563, -4*PSI1+591)
                  LALPHAp1 = LALPHA1+563*PSI1-563
                  BUF INDEX = BUF INDEX+1
                  HPFC REAL4 BUFF(BUF INDEX) = SOL(LALPHA1)
                  IF (BUF INDEX.EQ.HPFC REAL4 BUFF SIZE) THEN
                     CALL HPFC REAL4 BUFPCK
                     CALL HPFC BROADCAST 1(T LID, 8, 1)
                     BUF INDEX = 0
                     SEND NOT INITIALIZED = .TRUE.
                  ENDIF
               ENDDO
               IF (BUF INDEX.NE.0) THEN
                  CALL HPFC REAL4 BUFPCK
                  CALL HPFC BROADCAST 1(T LID, 8, 1)
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            IF (MY LID.LE.8) THEN
               DO PSI1 = 1, 8
                  T LID = PSI1
                  IF (MY LID.NE.T LID) THEN
! - lazy receiving
                     BUF INDEX = 0
                     RECEIVED NOT PERFORMED = .TRUE.
                     SIZE OF RECEIVED BUFFER = 0
                     DO LALPHA1 = 1, MIN(563, -4*PSI1+591)
                        LALPHAp1 = LALPHA1+563*PSI1-563
                        IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER
     &                  ) THEN
                           RECEIVED NOT PERFORMED = .TRUE.
                           CALL HPFC REAL4 BUFUPK(T LID)
                           BUF INDEX = 0
                        ENDIF
                        BUF INDEX = BUF INDEX+1
                        SOL_1(LALPHAp1) = HPFC REAL4 BUFF(BUF INDEX)
                     ENDDO
                  ELSE
! - lazy copying
                     DO LALPHA1 = 1, MIN(563, -4*PSI1+591)
                        LALPHAp1 = LALPHA1+563*PSI1-563
                        SOL_1(LALPHAp1) = SOL(LALPHA1)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(1) = .TRUE.
         MSTATUS(4) = 1
      ENDIF
!
! That is all for CGC_SOL_4_1_node.h
!
!
! File CGC_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE CGC_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CGC_parameters.h"


      CALL MATVECT_HOST

      END
!
! That is all for CGC_host.f
!
!
! File CGC_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for CGC
!
!
! initializing array SOL, number 4
!
      NODIMA(4) = 1
      ATOT(4) = 3

      MSTATUS(4) = 4
      LIVEMAPPING(4) = .TRUE.

      RANGEA(4, 1, 1) = 1
      RANGEA(4, 1, 2) = 4500
      RANGEA(4, 1, 3) = 4500
!
      RANGEA(4, 1, 4) = 2
      RANGEA(4, 1, 5) = 563
      RANGEA(4, 1, 6) = 1
      RANGEA(4, 1, 7) = -1

      ALIGN(4, 1, 1) = 1
      ALIGN(4, 1, 2) = 1
      ALIGN(4, 1, 3) = 0
!
! initializing array SOL_1, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 4500
      RANGEA(1, 1, 3) = 4500
!
      RANGEA(1, 1, 4) = 0

      ALIGN(1, 1, 1) = INTFLAG
!
! That is all for CGC_init.h
!
!
! File CGC_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE CGC_NODE(SOL, CGC SOL LO1, CGC SOL UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CGC_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 4500)
      INTEGER I_2, I_3, I_4, CGC SOL UP1, CGC SOL LO1, PSIp1, LALPHA1
     &, LALPHAp1, T LID, PSI1
      REAL*4 F_0, SOL(CGC SOL LO1:CGC SOL UP1), SOL_1(1:N)
! all livenesss for SOL
      LIVE MAPPING(4) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for SOL
      LIVE MAPPING(4) = .TRUE.
      MSTATUS(4) = 4


! begin remappings
      include 'CGC_SOL_4_1_node.h'
! liveness management
! end of liveness management
! end remappings
      CALL MATVECT_NODE(SOL_1)
! begin remappings
      include 'CGC_SOL_1_4_node.h'
! liveness management
! clean live set for SOL
      LIVE MAPPING(1) = .FALSE.
! end of liveness management
! end remappings
      CALL HPFC CMPCOMPUTER(4, 1, 0, 0, 0, 0, 0, 0)
      IF (HPFC COMPUTERP()) THEN
         CALL HPFC CMPOWNERS(4, 1, 0, 0, 0, 0, 0, 0)
         IF (HPFC OWNERP()) THEN
            I_2 = MOD(1-1, 563)+1
            F_0 = SOL(I_2)
         ELSE
            CALL HPFC RCVFR S(HPFC REAL4, F_0)
         ENDIF
         I_4 = MOD(1-1, 563)+1
         SOL(I_4) = F_0+1.0
      ELSE
         CALL HPFC CMPOWNERS(4, 1, 0, 0, 0, 0, 0, 0)
         IF (HPFC SENDERP()) THEN
            I_3 = MOD(1-1, 563)+1
            CALL HPFC SNDTO C(HPFC REAL4, SOL(I_3))
         ENDIF
      ENDIF

      END
!
! That is all for CGC_node.f
!
!
! File CGC_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for CGC
!
      integer 
     $    CGC SOL_1 LO1,
     $    CGC SOL_1 UP1
      parameter(CGC SOL_1 LO1 = 1)
      parameter(CGC SOL_1 UP1 = 4500)
!
! That is all for CGC_parameters.h
!
!
! File MAIN_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "MAIN_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 4500)
      INTEGER ALPHA1, LALPHA1, PSI1, T LID
      REAL*4 SOL(1:N)
      CALL HPFC INIT HOST



      CALL CGC_HOST
! collecting distributed variable SOL
      PSI1 = 1
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      T LID = PSI1
      CALL HPFC RCV FROM NODE(T LID)
      CALL HPFC REAL4 BUFUPK
      ALPHA1 = 1
      LALPHA1 = 1
      BUF INDEX = BUF INDEX+1
      SOL(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
! end of collect

      PRINT *, SOL(1)
      CALL HPFC HOST END
      END
!
! That is all for MAIN_host.f
!
!
! File MAIN_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for MAIN
!
!
! initializing array SOL, number 3
!
      NODIMA(3) = 1
      ATOT(3) = 2

      MSTATUS(3) = 3
      LIVEMAPPING(3) = .TRUE.

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 4500
      RANGEA(3, 1, 3) = 4500
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 563
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
!
! That is all for MAIN_init.h
!
!
! File MAIN_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "MAIN_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 4500)
      INTEGER ALPHA1, LALPHA1, PSI1, I_0, I_1, I_2, I_3
      REAL*4 SOL(1:563)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, N, 3, 1)
! all livenesss for SOL
      LIVE MAPPING(3) = .FALSE.
! direct remapping for SOL
      LIVE MAPPING(3) = .TRUE.
      MSTATUS(3) = 3


      DO I_0 = I_1, I_2
         SOL(I_0) = 0.0
      ENDDO

! begin remappings
      MSTATUS(3) = 3
! liveness management
! end of liveness management
! end remappings
      CALL CGC_NODE(SOL, MAIN SOL LO1, MAIN SOL UP1)
! begin remappings
      MSTATUS(3) = 3
! liveness management
! end of liveness management
! end remappings
! collecting distributed variable SOL
      PSI1 = MY POS(1,2)
      IF (PSI1.EQ.1) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         ALPHA1 = 1
         LALPHA1 = 1
         BUF INDEX = BUF INDEX+1
         HPFC REAL4 BUFF(BUF INDEX) = SOL(LALPHA1)
         CALL HPFC REAL4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
      CALL HPFC NODE END
      END
!
! That is all for MAIN_node.f
!
!
! File MAIN_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for MAIN
!
      integer 
     $    MAIN SOL LO1,
     $    MAIN SOL UP1
      parameter(MAIN SOL LO1 = 1)
      parameter(MAIN SOL UP1 = 563)
!
! That is all for MAIN_parameters.h
!
!
! File MATVECT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE MATVECT_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "MATVECT_parameters.h"



      END
!
! That is all for MATVECT_host.f
!
!
! File MATVECT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for MATVECT
!
!
! initializing array X, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 4500
      RANGEA(2, 1, 3) = 4500
!
      RANGEA(2, 1, 4) = 0

      ALIGN(2, 1, 1) = INTFLAG
!
! That is all for MATVECT_init.h
!
!
! File MATVECT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE MATVECT_NODE(X)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "MATVECT_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 4500)
      REAL*4 F_0, X(1:N)


      CALL HPFC CMPCOMPUTER(2, 1, 0, 0, 0, 0, 0, 0)
      IF (HPFC COMPUTERP()) THEN
         CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
         IF (HPFC OWNERP()) THEN
            F_0 = X(1)
         ELSE
            CALL HPFC RCVFR S(HPFC REAL4, F_0)
         ENDIF
         X(1) = F_0+2.0
         CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
         CALL HPFC SNDTO OOS(HPFC REAL4, X(1))
      ELSE
         CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
         IF (HPFC SENDERP().AND..NOT.HPFC COMPUTERINOWNERSP()) THEN
            CALL HPFC SNDTO C(HPFC REAL4, X(1))
         ENDIF
         CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
         IF (HPFC OWNERP()) THEN
            CALL HPFC RCVFR C(HPFC REAL4, X(1))
         ENDIF
      ENDIF

      END
!
! That is all for MATVECT_node.f
!
!
! File MATVECT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for MATVECT
!
      integer 
     $    MATVECT X LO1,
     $    MATVECT X UP1
      parameter(MATVECT X LO1 = 1)
      parameter(MATVECT X UP1 = 4500)
!
! That is all for MATVECT_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 4500
      RANGET(1, 1, 3) = 4500

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 563
!
! initializing template T, number 2
!
      NODIMT(2) = 1
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 4500
      RANGET(2, 1, 3) = 4500

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 563
!
! initializing template T, number 3
!
      NODIMT(3) = 1
      TTOP(3) = 3

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 4500
      RANGET(3, 1, 3) = 4500

      DIST(3, 1, 1) = 1
      DIST(3, 1, 2) = 563
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 8
      RANGEP(1, 1, 3) = 8
!
! initializing processors P, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 8
      RANGEP(2, 1, 3) = 8
!
! initializing processors P, number 3
!
      NODIMP(3) = 1

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 8
      RANGEP(3, 1, 3) = 8
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 4)
      parameter(REALNBOFTEMPLATES = 3)
      parameter(REALNBOFPROCESSORS = 3)
      parameter(REALMAXSIZEOFPROCS = 8)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
