!
! File TRANSPOSE_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE TRANSPOSE_HOST(NSX)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "TRANSPOSE_parameters.h"
      INTEGER NSX



      END
!
! That is all for TRANSPOSE_host.f
!
!
! File TRANSPOSE_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for TRANSPOSE
!
!
! initializing array MATX, number 4
!
      NODIMA(4) = 2
      ATOT(4) = 2

      RANGEA(4, 1, 1) = 1
      RANGEA(4, 1, 2) = 64
      RANGEA(4, 1, 3) = 64
!
      RANGEA(4, 1, 4) = 0

      RANGEA(4, 2, 1) = 1
      RANGEA(4, 2, 2) = 64
      RANGEA(4, 2, 3) = 64
!
      RANGEA(4, 2, 4) = 0

      ALIGN(4, 1, 1) = 2
      ALIGN(4, 1, 2) = 1
      ALIGN(4, 1, 3) = 0
      ALIGN(4, 2, 1) = INTFLAG
      ALIGN(4, 3, 1) = INTFLAG
!
! initializing array MATXT, number 3
!
      NODIMA(3) = 2
      ATOT(3) = 2

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 64
      RANGEA(3, 1, 3) = 64
!
      RANGEA(3, 1, 4) = 0

      RANGEA(3, 2, 1) = 1
      RANGEA(3, 2, 2) = 64
      RANGEA(3, 2, 3) = 64
!
      RANGEA(3, 2, 4) = 0

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
      ALIGN(3, 2, 1) = INTFLAG
      ALIGN(3, 3, 1) = INTFLAG
!
! That is all for TRANSPOSE_init.h
!
!
! File TRANSPOSE_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE TRANSPOSE_NODE(NSX, MATX, MATXT)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "TRANSPOSE_parameters.h"
      INTEGER*4 DE
      PARAMETER (DE = 2)
      INTEGER*4 NHFX
      PARAMETER (NHFX = SIZE_NH)
      INTEGER*4 NXS
      PARAMETER (NXS = DE*NHFX)
      INTEGER*4 SIZE_NH
      PARAMETER (SIZE_NH = 32)
      INTEGER*4 NXS
      PARAMETER (NXS = DE*NHFX)
      INTEGER NSX, I, J
      REAL*8 MATX(1:NXS, 1:NXS), MATXT(1:NXS, 1:NXS)


      DO I = 1, NXS
         DO J = 1, NXS
            MATXT(J,I) = MATX(I,J)
         ENDDO
      ENDDO

      END
!
! That is all for TRANSPOSE_node.f
!
!
! File TRANSPOSE_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for TRANSPOSE
!
      integer 
     $    TRANSPOSE MATX LO1,
     $    TRANSPOSE MATX UP1
      parameter(TRANSPOSE MATX LO1 = 1)
      parameter(TRANSPOSE MATX UP1 = 64)
      integer 
     $    TRANSPOSE MATX LO2,
     $    TRANSPOSE MATX UP2
      parameter(TRANSPOSE MATX LO2 = 1)
      parameter(TRANSPOSE MATX UP2 = 64)
      integer 
     $    TRANSPOSE MATXT LO1,
     $    TRANSPOSE MATXT UP1
      parameter(TRANSPOSE MATXT LO1 = 1)
      parameter(TRANSPOSE MATXT UP1 = 64)
      integer 
     $    TRANSPOSE MATXT LO2,
     $    TRANSPOSE MATXT UP2
      parameter(TRANSPOSE MATXT LO2 = 1)
      parameter(TRANSPOSE MATXT UP2 = 64)
!
! That is all for TRANSPOSE_parameters.h
!
!
! File X_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "X_parameters.h"
      INTEGER NSX
      CALL HPFC INIT HOST


      CALL TRANSPOSE_HOST(NSX)
      CALL HPFC HOST END
      END
!
! That is all for X_host.f
!
!
! File X_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for X
!
!
! initializing array MX, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 1

      MSTATUS(2) = 2
      LIVEMAPPING(2) = .TRUE.

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 64
      RANGEA(2, 1, 3) = 64
!
      RANGEA(2, 1, 4) = 0

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 64
      RANGEA(2, 2, 3) = 64
!
      RANGEA(2, 2, 4) = 0

      ALIGN(2, 1, 1) = 2
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = INTFLAG
      ALIGN(2, 3, 1) = INTFLAG
!
! initializing array MXT, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      MSTATUS(1) = 1
      LIVEMAPPING(1) = .TRUE.

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 64
      RANGEA(1, 1, 3) = 64
!
      RANGEA(1, 1, 4) = 0

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 64
      RANGEA(1, 2, 3) = 64
!
      RANGEA(1, 2, 4) = 0

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = INTFLAG
      ALIGN(1, 3, 1) = INTFLAG
!
! That is all for X_init.h
!
!
! File X_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "X_parameters.h"
      INTEGER*4 DE
      PARAMETER (DE = 2)
      INTEGER*4 NHFX
      PARAMETER (NHFX = SIZE_NH)
      INTEGER*4 NXS
      PARAMETER (NXS = DE*NHFX)
      INTEGER*4 SIZE_NH
      PARAMETER (SIZE_NH = 32)
      INTEGER I, J, NSX
      REAL*8 F_0, MX(1:NXS, 1:NXS), MXT(1:NXS, 1:NXS)
      CALL HPFC INIT NODE
! all livenesss for MXT
      LIVE MAPPING(1) = .FALSE.
! all livenesss for MX
      LIVE MAPPING(2) = .FALSE.
! direct remapping for MX
      LIVE MAPPING(2) = .TRUE.
      MSTATUS(2) = 2


      DO J = 1, NSX
         DO I = 1, NSX
            CALL HPFC CMPCOMPUTER(2, I, J, 0, 0, 0, 0, 0)
            IF (HPFC COMPUTERP()) THEN
               F_0 = FLOAT(I+J)
               MX(I,J) = F_0
               CALL HPFC CMPOWNERS(2, I, J, 0, 0, 0, 0, 0)
               CALL HPFC SNDTO OOS(HPFC REAL8, F_0)
            ELSE
               CALL HPFC CMPOWNERS(2, I, J, 0, 0, 0, 0, 0)
               IF (HPFC OWNERP()) THEN
                  CALL HPFC RCVFR C(HPFC REAL8, F_0(I,J))
               ENDIF
            ENDIF
         ENDDO
      ENDDO
! begin remappings
      MSTATUS(2) = 2
! liveness management
! end of liveness management
! end remappings
! begin remappings
      MSTATUS(1) = 1
! liveness management
! end of liveness management
! end remappings
      CALL TRANSPOSE_NODE(NSX, MX, MXT)
! begin remappings
! liveness management
! end of liveness management
! end remappings
! begin remappings
! liveness management
! end of liveness management
! end remappings
      CALL HPFC NODE END
      END
!
! That is all for X_node.f
!
!
! File X_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for X
!
      integer 
     $    X MX LO1,
     $    X MX UP1
      parameter(X MX LO1 = 1)
      parameter(X MX UP1 = 64)
      integer 
     $    X MX LO2,
     $    X MX UP2
      parameter(X MX LO2 = 1)
      parameter(X MX UP2 = 64)
      integer 
     $    X MXT LO1,
     $    X MXT UP1
      parameter(X MXT LO1 = 1)
      parameter(X MXT UP1 = 64)
      integer 
     $    X MXT LO2,
     $    X MXT UP2
      parameter(X MXT LO2 = 1)
      parameter(X MXT UP2 = 64)
!
! That is all for X_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 3
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 64
      RANGET(1, 1, 3) = 64

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 64
      RANGET(1, 2, 3) = 64

      RANGET(1, 3, 1) = 1
      RANGET(1, 3, 2) = 64
      RANGET(1, 3, 3) = 64

      DIST(1, 1, 1) = 2
      DIST(1, 1, 2) = 32
      DIST(1, 2, 1) = 3
      DIST(1, 2, 2) = 32
!
! initializing template T, number 2
!
      NODIMT(2) = 3
      TTOP(2) = 3

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 64
      RANGET(2, 1, 3) = 64

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 64
      RANGET(2, 2, 3) = 64

      RANGET(2, 3, 1) = 1
      RANGET(2, 3, 2) = 64
      RANGET(2, 3, 3) = 64

      DIST(2, 1, 1) = 2
      DIST(2, 1, 2) = 32
      DIST(2, 2, 1) = 3
      DIST(2, 2, 2) = 32
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! initializing processors PT3D, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 7
      RANGEP(2, 1, 3) = 7
!
! initializing processors P, number 3
!
      NODIMP(3) = 2

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 2
      RANGEP(3, 1, 3) = 2

      RANGEP(3, 2, 1) = 1
      RANGEP(3, 2, 2) = 2
      RANGEP(3, 2, 3) = 2
!
! initializing processors PT3D, number 4
!
      NODIMP(4) = 1

      RANGEP(4, 1, 1) = 1
      RANGEP(4, 1, 2) = 7
      RANGEP(4, 1, 3) = 7
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 4)
      parameter(REALNBOFTEMPLATES = 2)
      parameter(REALNBOFPROCESSORS = 4)
      parameter(REALMAXSIZEOFPROCS = 7)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
