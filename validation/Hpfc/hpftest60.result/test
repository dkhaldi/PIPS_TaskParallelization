!
! File HPFTEST60_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST60_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER ALPHA1, ALPHA2, ALPHA3, LALPHA1, LALPHA2, LALPHA3, PSI1
     &, PSI2, T LID, I
      INTEGER A(1:N, 1:N, 1:N)
      CALL HPFC INIT HOST
      PRINT *, 'hpftest60 running'
! collecting distributed variable A
      DO PSI1 = 1, 2
         PSI2 = PSI1
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = 2*PSI1+PSI2-2
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC INTEGER4 BUFUPK
         DO ALPHA3 = MAX(5*PSI2-4, 5*PSI1-4), MIN(10, 5*PSI2, 5*PSI1)
            ALPHA2 = ALPHA3
            ALPHA1 = ALPHA3
            LALPHA1 = ALPHA1
            LALPHA2 = ALPHA2-5*PSI1+5
            LALPHA3 = ALPHA3-5*PSI2+5
            BUF INDEX = BUF INDEX+1
            A(ALPHA1,ALPHA2,ALPHA3) = HPFC INTEGER4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      PRINT *, (A(I,I,I), I = 1, N)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST60_host.f
!
!
! File HPFTEST60_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST60
!
!
! initializing array A, number 1
!
      NODIMA(1) = 3
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 0

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 10
      RANGEA(1, 2, 3) = 10
!
      RANGEA(1, 2, 4) = 2
      RANGEA(1, 2, 5) = 5
      RANGEA(1, 2, 6) = 1
      RANGEA(1, 2, 7) = -1

      RANGEA(1, 3, 1) = 1
      RANGEA(1, 3, 2) = 10
      RANGEA(1, 3, 3) = 10
!
      RANGEA(1, 3, 4) = 2
      RANGEA(1, 3, 5) = 5
      RANGEA(1, 3, 6) = 1
      RANGEA(1, 3, 7) = -1

      ALIGN(1, 1, 1) = 2
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 3
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for HPFTEST60_init.h
!
!
! File HPFTEST60_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST60_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER ALPHA1, ALPHA2, ALPHA3, LALPHA1, LALPHA2, LALPHA3, PSI1
     &, PSI2, I_0, I_1, I_2, I_3, I_4, I_5, I_6, I_7, I, J, K
      INTEGER A(1:N, 1:5, 1:5)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_5, I_6, I_7, 1, N, 1, 1)
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, N, 1, 2)
      K = I_3
      DO I_0 = I_1, I_2
         K = K+1
         J = I_7
         DO I_4 = I_5, I_6
            J = J+1
            DO I = 1, N
               A(I,I_4,I_0) = (I-1)*100+(J-1)*10+K-1
            ENDDO
         ENDDO
      ENDDO
! collecting distributed variable A
      PSI1 = MY POS(1,1)
      PSI2 = MY POS(2,1)
      IF (PSI2.LE.PSI1.AND.PSI1.LE.PSI2) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA3 = MAX(5*PSI2-4, 5*PSI1-4), MIN(10, 5*PSI2, 5*PSI1)
            ALPHA2 = ALPHA3
            ALPHA1 = ALPHA3
            LALPHA1 = ALPHA1
            LALPHA2 = ALPHA2-5*PSI1+5
            LALPHA3 = ALPHA3-5*PSI2+5
            BUF INDEX = BUF INDEX+1
            HPFC INTEGER4 BUFF(BUF INDEX) = A(LALPHA1,LALPHA2,LALPHA3
     &      )
         ENDDO
         CALL HPFC INTEGER4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST60_node.f
!
!
! File HPFTEST60_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST60
!
      integer 
     $    HPFTEST60 A LO1,
     $    HPFTEST60 A UP1
      parameter(HPFTEST60 A LO1 = 1)
      parameter(HPFTEST60 A UP1 = 10)
      integer 
     $    HPFTEST60 A LO2,
     $    HPFTEST60 A UP2
      parameter(HPFTEST60 A LO2 = 1)
      parameter(HPFTEST60 A UP2 = 5)
      integer 
     $    HPFTEST60 A LO3,
     $    HPFTEST60 A UP3
      parameter(HPFTEST60 A LO3 = 1)
      parameter(HPFTEST60 A UP3 = 5)
!
! That is all for HPFTEST60_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 10
      RANGET(1, 2, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
