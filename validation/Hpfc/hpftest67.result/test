!
! File HPFTEST67_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST67_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 25)
      INTEGER*4 N
      PARAMETER (N = 25)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, T LID, I, J
      INTEGER A(1:N, 1:N)
      CALL HPFC INIT HOST
      PRINT *, 'HPFTEST67 IS RUNNING'
! collecting distributed variable A
      DO PSI1 = 1, 3
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC INTEGER4 BUFUPK
         DO ALPHA2 = 1, 25
            DO ALPHA1 = 9*PSI1-8, MIN(25, 9*PSI1)
               LALPHA1 = ALPHA1-9*PSI1+9
               LALPHA2 = ALPHA2
               BUF INDEX = BUF INDEX+1
               A(ALPHA1,ALPHA2) = HPFC INTEGER4 BUFF(BUF INDEX)
            ENDDO
         ENDDO
      ENDDO
! end of collect
      PRINT *, ((A(I,J), I = 1, N), J = 1, N)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
! updating shared variable J
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = J
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST67_host.f
!
!
! File HPFTEST67_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST67
!
!
! initializing array A, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 25
      RANGEA(1, 1, 3) = 25
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 9
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 25
      RANGEA(1, 2, 3) = 25
!
      RANGEA(1, 2, 4) = 0

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for HPFTEST67_init.h
!
!
! File HPFTEST67_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST67_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 25)
      INTEGER*4 N
      PARAMETER (N = 25)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, I_10, I_3, I_4
     &, I_5, I_6, I_7, I_8, I_9, I, J, I_1
      INTEGER A(1:9, 1:N)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_8, I_9, I_10, 4, N-2, 1, 1)
      CALL HPFC LOOP BOUNDS(I_4, I_5, I_6, 1, N, 1, 1)
      DO J = 1, N
         I = I_6
         DO I_3 = I_4, I_5
            I = I+1
            A(I_3,J) = N*(J-1)+I-1
         ENDDO
      ENDDO
      CALL HPFC INTEGER4 SHIFT 2(A, 1, 1, -20, HPFTEST67 A LO1, 
     &HPFTEST67 A UP1, HPFTEST67 A LO2, HPFTEST67 A UP2, 21, 23, 1, 
     &23)
      DO J = N-10, N-5
         DO I_7 = I_8, I_9
            I_1 = J-10
            A(I_7,J) = A(I_7,I_1)
         ENDDO
      ENDDO
      CALL HPFC INTEGER4 SHIFT 2(A, 1, 1, -8, HPFTEST67 A LO1, 
     &HPFTEST67 A UP1, HPFTEST67 A LO2, HPFTEST67 A UP2, 15, 19, 8, 
     &17)
! collecting distributed variable A
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO ALPHA2 = 1, 25
         DO ALPHA1 = 9*PSI1-8, MIN(25, 9*PSI1)
            LALPHA1 = ALPHA1-9*PSI1+9
            LALPHA2 = ALPHA2
            BUF INDEX = BUF INDEX+1
            HPFC INTEGER4 BUFF(BUF INDEX) = A(LALPHA1,LALPHA2)
         ENDDO
      ENDDO
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! updating shared variable J
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      J = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST67_node.f
!
!
! File HPFTEST67_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST67
!
      integer 
     $    HPFTEST67 A LO1,
     $    HPFTEST67 A UP1
      parameter(HPFTEST67 A LO1 = 1)
      parameter(HPFTEST67 A UP1 = 9)
      integer 
     $    HPFTEST67 A LO2,
     $    HPFTEST67 A UP2
      parameter(HPFTEST67 A LO2 = 1)
      parameter(HPFTEST67 A UP2 = 25)
!
! That is all for HPFTEST67_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 25
      RANGET(1, 1, 3) = 25

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 9
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 3
      RANGEP(1, 1, 3) = 3
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 3)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
