!
! File HPFTEST37_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST37_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, T LID, I
      REAL*4 TC(1:250, 1:250)
      CALL HPFC INIT HOST
      PRINT *, 'hpftest37 running'
      PRINT *, 'thermo'
c
c initialization
      PRINT *, 'initializing'
c
c iterations... should be a test, but reductions are not accepted
      PRINT *, 'running'
c
c print results
      PRINT *, 'results:'
10    FORMAT(F8.2,F8.2,F8.2,F8.2,F8.2,F8.2,F8.2,F8.2)
! collecting distributed variable TC
      DO PSI1 = 1, 4
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO ALPHA2 = 50, 225
            DO ALPHA1 = MAX(25, 63*PSI1-62), MIN(200, 63*PSI1)
               LALPHA1 = ALPHA1-63*PSI1+63
               LALPHA2 = ALPHA2
               BUF INDEX = BUF INDEX+1
               TC(ALPHA1,ALPHA2) = HPFC REAL4 BUFF(BUF INDEX)
            ENDDO
         ENDDO
      ENDDO
! end of collect
      DO I = 25, 200, 25
         WRITE (6, 10) TC(I,50), TC(I,75), TC(I,100), TC(I,125), TC(I
     &   ,150), TC(I,175), TC(I,200), TC(I,225)
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      PRINT *, 'hpftest37 ended'
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST37_host.f
!
!
! File HPFTEST37_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST37
!
!
! initializing array TC, number 3
!
      NODIMA(3) = 2
      ATOT(3) = 1

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 250
      RANGEA(3, 1, 3) = 250
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 63
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      RANGEA(3, 2, 1) = 1
      RANGEA(3, 2, 2) = 250
      RANGEA(3, 2, 3) = 250
!
      RANGEA(3, 2, 4) = 0

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
      ALIGN(3, 2, 1) = 2
      ALIGN(3, 2, 2) = 1
      ALIGN(3, 2, 3) = 0
!
! initializing array TS, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 250
      RANGEA(2, 1, 3) = 250
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 63
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 250
      RANGEA(2, 2, 3) = 250
!
      RANGEA(2, 2, 4) = 0

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array NORTH, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 250
      RANGEA(1, 1, 3) = 250
!
      RANGEA(1, 1, 4) = 0

      ALIGN(1, 1, 1) = 0
      ALIGN(1, 1, 2) = 0
      ALIGN(1, 1, 3) = 1
      ALIGN(1, 2, 1) = 1
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for HPFTEST37_init.h
!
!
! File HPFTEST37_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST37_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, I_10, I_11, 
     &I_12, I_13, I_14, I_15, I_4, I_5, I_6, I_7, I_8, I_9, I, J, K, 
     &I_2, I_3
      REAL*4 TC(0:64, 1:250), TS(1:63, 1:250), NORTH(1:250)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_13, I_14, I_15, 2, 249, 3, 1)
      CALL HPFC LOOP BOUNDS(I_9, I_10, I_11, 2, 249, 2, 1)
      CALL HPFC LOOP BOUNDS(I_5, I_6, I_7, 2, 250, 3, 1)
      IF (MY POS(1,1).EQ.1) THEN
         DO I = 1, 250
            NORTH(I) = 250.0
         ENDDO
      ENDIF
      IF (MY POS(1,1).EQ.1) THEN
         DO I = 1, 250
            TC(1,I) = NORTH(I)
            TS(1,I) = NORTH(I)
         ENDDO
      ENDIF
      DO I_4 = I_5, I_6
         DO J = 1, 250
            TC(I_4,J) = 10.0
            TS(I_4,J) = 10.0
         ENDDO
      ENDDO
      DO K = 1, 500
c
c computation and copy back (dataparallel semantic)
! P(2:4) send TC(1, 2:249) to (-1)
         IF (MY POS(1,1).GE.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC REAL4 PACK 2(TC, HPFTEST37 TC LO1, 
     &      HPFTEST37 TC UP1, HPFTEST37 TC LO2, HPFTEST37 TC UP2, 1, 
     &      1, 1, 2, 249, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1:3) send TC(63, 2:249) to (+1)
         IF (MY POS(1,1).LE.3) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC REAL4 PACK 2(TC, HPFTEST37 TC LO1, 
     &      HPFTEST37 TC UP1, HPFTEST37 TC LO2, HPFTEST37 TC UP2, 63
     &      , 63, 1, 2, 249, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1:3) receive TC(64, 2:249) from (+1)
         IF (MY POS(1,1).LE.3) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC RCVFR N
            CALL HPFC REAL4 UNPACK 2(TC, HPFTEST37 TC LO1, 
     &      HPFTEST37 TC UP1, HPFTEST37 TC LO2, HPFTEST37 TC UP2, 64
     &      , 64, 1, 2, 249, 1)
         ENDIF
! P(2:4) receive TC(0, 2:249) from (-1)
         IF (MY POS(1,1).GE.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC RCVFR N
            CALL HPFC REAL4 UNPACK 2(TC, HPFTEST37 TC LO1, 
     &      HPFTEST37 TC UP1, HPFTEST37 TC LO2, HPFTEST37 TC UP2, 0, 
     &      0, 1, 2, 249, 1)
         ENDIF
         DO I_8 = I_9, I_10
            DO J = 2, 249
               I_2 = J-1
               I_3 = J+1
               TS(I_8,J) = 0.25*(TC(I_8-1,J)+TC(I_8+1,J)+TC(I_8,I_2)+
     &         TC(I_8,I_3))
            ENDDO
         ENDDO
         DO I_12 = I_13, I_14
            DO J = 2, 249
               TC(I_12,J) = TS(I_12,J)
            ENDDO
         ENDDO
      ENDDO
! collecting distributed variable TC
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO ALPHA2 = 50, 225
         DO ALPHA1 = MAX(25, 63*PSI1-62), MIN(200, 63*PSI1)
            LALPHA1 = ALPHA1-63*PSI1+63
            LALPHA2 = ALPHA2
            BUF INDEX = BUF INDEX+1
            HPFC REAL4 BUFF(BUF INDEX) = TC(LALPHA1,LALPHA2)
         ENDDO
      ENDDO
      CALL HPFC REAL4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST37_node.f
!
!
! File HPFTEST37_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST37
!
      integer 
     $    HPFTEST37 TC LO1,
     $    HPFTEST37 TC UP1
      parameter(HPFTEST37 TC LO1 = 0)
      parameter(HPFTEST37 TC UP1 = 64)
      integer 
     $    HPFTEST37 TC LO2,
     $    HPFTEST37 TC UP2
      parameter(HPFTEST37 TC LO2 = 1)
      parameter(HPFTEST37 TC UP2 = 250)
      integer 
     $    HPFTEST37 TS LO1,
     $    HPFTEST37 TS UP1
      parameter(HPFTEST37 TS LO1 = 1)
      parameter(HPFTEST37 TS UP1 = 63)
      integer 
     $    HPFTEST37 TS LO2,
     $    HPFTEST37 TS UP2
      parameter(HPFTEST37 TS LO2 = 1)
      parameter(HPFTEST37 TS UP2 = 250)
      integer 
     $    HPFTEST37 NORTH LO1,
     $    HPFTEST37 NORTH UP1
      parameter(HPFTEST37 NORTH LO1 = 1)
      parameter(HPFTEST37 NORTH UP1 = 250)
!
! That is all for HPFTEST37_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 250
      RANGET(1, 1, 3) = 250

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 250
      RANGET(1, 2, 3) = 250

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 63
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 4
      RANGEP(1, 1, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 3)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
