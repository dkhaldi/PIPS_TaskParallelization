!
! File AUTOMATA_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "AUTOMATA_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 70)
      INTEGER*4 M
      PARAMETER (M = 40)
      INTEGER ALPHA1, LALPHA1, PSI1, T LID, J
      CHARACTER S(1:N)
      CALL HPFC INIT HOST

! initialize

      DO J = 1, M

! I must model the Circular SHIFTs...

! now compute new value 

! compose and print out the result
! collecting distributed variable S
         DO PSI1 = 1, 2
            BUF INDEX = 0
            RECEIVED NOT PERFORMED = .FALSE.
            SIZE OF RECEIVED BUFFER = 0
            T LID = PSI1
            CALL HPFC RCV FROM NODE(T LID)
            CALL HPFC STRING BUFUPK
            DO ALPHA1 = MAX(1, 36*PSI1-36), MIN(70, 36*PSI1-1)
               LALPHA1 = ALPHA1-36*PSI1+37
               BUF INDEX = BUF INDEX+1
               S(ALPHA1) = HPFC STRING BUFF(BUF INDEX)
            ENDDO
         ENDDO
! end of collect

         PRINT *, S

      ENDDO

      CALL HPFC HOST END
      END
!
! That is all for AUTOMATA_host.f
!
!
! File AUTOMATA_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for AUTOMATA
!
!
! initializing array FIELD, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 2

      RANGEA(2, 1, 1) = 0
      RANGEA(2, 1, 2) = 71
      RANGEA(2, 1, 3) = 72
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 36
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = 0

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 3
      RANGEA(2, 2, 3) = 3
!
      RANGEA(2, 2, 4) = 0

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array S, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 2

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 70
      RANGEA(1, 1, 3) = 70
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 36
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = 0

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = INTFLAG
!
! That is all for AUTOMATA_init.h
!
!
! File AUTOMATA_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "AUTOMATA_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 70)
      INTEGER*4 M
      PARAMETER (M = 40)
      INTEGER ALPHA1, LALPHA1, PSI1, I_10, I_11, I_12, I_13, I_14, 
     &I_15, I_16, I_17, I_2, I_3, I_4, I_5, I_6, I_7, I_8, I_9, J, 
     &I_LOCAL
      LOGICAL FIELD(0:37, 1:3), L_0
      CHARACTER S(1:36)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_15, I_16, I_17, 1, N, 1, 1)
      CALL HPFC LOOP BOUNDS(I_11, I_12, I_13, 1, N, 2, 1)
      CALL HPFC LOOP BOUNDS(I_7, I_8, I_9, 1, N, 2, 1)
      CALL HPFC LOOP BOUNDS(I_3, I_4, I_5, 1, N, 2, 1)

! initialize
      DO I_2 = I_3, I_4
         FIELD(I_2,1) = .FALSE.
      ENDDO
      IF (MY POS(1,1).EQ.1) THEN
         I_LOCAL = 0
         FIELD(36,1) = .TRUE.
      ENDIF

      DO J = 1, M

! I must model the Circular SHIFTs...
         CALL HPFC INTEGER4 SHIFT 2(FIELD, 2, 1, -70, 
     &   AUTOMATA FIELD LO1, AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &   AUTOMATA FIELD UP2, 70, 70, 1, 1)
         CALL HPFC INTEGER4 SHIFT 2(FIELD, 2, 1, 70, 
     &   AUTOMATA FIELD LO1, AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &   AUTOMATA FIELD UP2, 1, 1, 1, 1)
! P(2) send FIELD(1, 1) to (-1)
         IF (MY POS(1,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC INTEGER4 PACK 2(FIELD, AUTOMATA FIELD LO1, 
     &      AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &      AUTOMATA FIELD UP2, 1, 1, 1, 1, 1, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1) send FIELD(36, 1) to (+1)
         IF (MY POS(1,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC INTEGER4 PACK 2(FIELD, AUTOMATA FIELD LO1, 
     &      AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &      AUTOMATA FIELD UP2, 36, 36, 1, 1, 1, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1) receive FIELD(37, 1) from (+1)
         IF (MY POS(1,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC RCVFR N
            CALL HPFC INTEGER4 UNPACK 2(FIELD, AUTOMATA FIELD LO1, 
     &      AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &      AUTOMATA FIELD UP2, 37, 37, 1, 1, 1, 1)
         ENDIF
! P(2) receive FIELD(0, 1) from (-1)
         IF (MY POS(1,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC RCVFR N
            CALL HPFC INTEGER4 UNPACK 2(FIELD, AUTOMATA FIELD LO1, 
     &      AUTOMATA FIELD UP1, AUTOMATA FIELD LO2, 
     &      AUTOMATA FIELD UP2, 0, 0, 1, 1, 1, 1)
         ENDIF
         DO I_6 = I_7, I_8
            FIELD(I_6,2) = FIELD(I_6-1,1)
            FIELD(I_6,3) = FIELD(I_6+1,1)
         ENDDO

! now compute new value 
         DO I_10 = I_11, I_12
            FIELD(I_10,1) = FIELD(I_10,2).NEQV.FIELD(I_10,3)
         ENDDO

! compose and print out the result
         DO I_14 = I_15, I_16
            L_0 = FIELD(I_14,1)
            IF (L_0) THEN
               S(I_14) = ' '
            ELSE
               S(I_14) = '*'
            ENDIF
         ENDDO
! collecting distributed variable S
         PSI1 = MY POS(1,1)
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA1 = MAX(1, 36*PSI1-36), MIN(70, 36*PSI1-1)
            LALPHA1 = ALPHA1-36*PSI1+37
            BUF INDEX = BUF INDEX+1
            HPFC STRING BUFF(BUF INDEX) = S(LALPHA1)
         ENDDO
         CALL HPFC STRING BUFPCK
         CALL HPFC SND TO HOST
! end of collect

      ENDDO

      CALL HPFC NODE END
      END
!
! That is all for AUTOMATA_node.f
!
!
! File AUTOMATA_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for AUTOMATA
!
      integer 
     $    AUTOMATA FIELD LO1,
     $    AUTOMATA FIELD UP1
      parameter(AUTOMATA FIELD LO1 = 0)
      parameter(AUTOMATA FIELD UP1 = 37)
      integer 
     $    AUTOMATA FIELD LO2,
     $    AUTOMATA FIELD UP2
      parameter(AUTOMATA FIELD LO2 = 1)
      parameter(AUTOMATA FIELD UP2 = 3)
      integer 
     $    AUTOMATA S LO1,
     $    AUTOMATA S UP1
      parameter(AUTOMATA S LO1 = 1)
      parameter(AUTOMATA S UP1 = 36)
!
! That is all for AUTOMATA_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template FIELD, number 2
!
      NODIMT(2) = 2
      TTOP(2) = 1

      RANGET(2, 1, 1) = 0
      RANGET(2, 1, 2) = 71
      RANGET(2, 1, 3) = 72

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 3
      RANGET(2, 2, 3) = 3

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 36
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 2)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
