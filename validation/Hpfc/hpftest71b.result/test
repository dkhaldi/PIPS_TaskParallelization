!
! File FULLCOPY_A_4_1_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(4).EQ.4) THEN
         IF (.NOT.LIVE MAPPING(1)) THEN
! send part
! remapping A[4]: A[4] -> A_1[1]
            PSI1 = MY POS(1,1)
            PSI2 = MY POS(2,1)
            IF (MY LID.LE.4) THEN
               PSIp1 = PSI2
               PSIp2 = PSI1
               T LID = 2*PSIp1+PSIp2-2
               IF (MY LID.NE.T LID) THEN
! - lazy sending
                  CALL pvmfinitsend(PvmDataRaw, HPFC BUFID)
                  LAZY SEND = .FALSE.
                  DO LALPHA2 = 1, 50
                     DO LALPHA1 = 1, 50
                        LALPHAp2 = LALPHA2
                        LALPHAp1 = LALPHA1
                        BUF INDEX = BUF INDEX+1
                        HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1,
     &                  LALPHA2)
                        LAZY SEND = .TRUE.
                     ENDDO
                  ENDDO
                  IF (LAZY SEND) THEN
                     CALL pvmfsend(NODE TIDS(T LID), SEND CHANNELS(
     &               T LID), HPFC INFO)
                     SEND CHANNELS(T LID) = SEND CHANNELS(T LID)+2
                  ENDIF
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            PSIp2 = MY POS(2,1)
            IF (MY LID.LE.4) THEN
               PSI1 = PSIp2
               PSI2 = PSIp1
               T LID = 2*PSI1+PSI2-2
               IF (MY LID.NE.T LID) THEN
! - lazy receiving
                  LAZY RECV = .TRUE.
                  DO LALPHA2 = 1, 50
                     DO LALPHA1 = 1, 50
                        LALPHAp2 = LALPHA2
                        LALPHAp1 = LALPHA1
                        IF (LAZY RECV) THEN
                           CALL pvmfrecv(NODE TIDS(T LID), 
     &                     RECV CHANNELS(T LID), HPFC BUFID)
                           RECV CHANNELS(T LID) = RECV CHANNELS(T LID
     &                     )+2
                           LAZY RECV = .FALSE.
                        ENDIF
                        BUF INDEX = BUF INDEX+1
                        A_1(LALPHAp1,LALPHAp2) = HPFC REAL4 BUFF(
     &                  BUF INDEX)
                     ENDDO
                  ENDDO
               ELSE
! - lazy copying
                  DO LALPHA2 = 1, 50
                     DO LALPHA1 = 1, 50
                        LALPHAp2 = LALPHA2
                        LALPHAp1 = LALPHA1
                        A_1(LALPHAp1,LALPHAp2) = A(LALPHA1,LALPHA2)
                     ENDDO
                  ENDDO
               ENDIF
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(1) = .TRUE.
         MSTATUS(4) = 1
      ENDIF
!
! That is all for FULLCOPY_A_4_1_node.h
!
!
! File FULLCOPY_B_3_2_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(3).EQ.3) THEN
         IF (.NOT.LIVE MAPPING(2)) THEN
! send part
! remapping B[3]: B[3] -> B_1[2]
            PSI1 = MY POS(1,1)
            PSI2 = MY POS(2,1)
            IF (MY LID.LE.4) THEN
               DO PSIp1 = 1, 2
                  DO PSIp2 = 1, 2
                     T LID = 2*PSIp1+PSIp2-2
                     IF (MY LID.NE.T LID) THEN
! - lazy sending
                        CALL pvmfinitsend(PvmDataRaw, HPFC BUFID)
                        LAZY SEND = .FALSE.
                        DO LALPHAp2 = 25*PSI2-24, 25*PSI2
                           DO LALPHAp1 = 25*PSI1-24, 25*PSI1
                              LALPHA2 = 2*LALPHAp2-50*PSI2+PSIp2+48
                              LALPHA1 = 2*LALPHAp1-50*PSI1+PSIp1+48
                              BUF INDEX = BUF INDEX+1
                              HPFC REAL4 BUFF(BUF INDEX) = B(LALPHA1,
     &                        LALPHA2)
                              LAZY SEND = .TRUE.
                           ENDDO
                        ENDDO
                        IF (LAZY SEND) THEN
                           CALL pvmfsend(NODE TIDS(T LID), 
     &                     SEND CHANNELS(T LID), HPFC INFO)
                           SEND CHANNELS(T LID) = SEND CHANNELS(T LID
     &                     )+2
                        ENDIF
                     ENDIF
                  ENDDO
               ENDDO
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            PSIp2 = MY POS(2,1)
            IF (MY LID.LE.4) THEN
               DO PSI1 = 1, 2
                  DO PSI2 = 1, 2
                     T LID = 2*PSI1+PSI2-2
                     IF (MY LID.NE.T LID) THEN
! - lazy receiving
                        LAZY RECV = .TRUE.
                        DO LALPHAp2 = 25*PSI2-24, 25*PSI2
                           DO LALPHAp1 = 25*PSI1-24, 25*PSI1
                              LALPHA2 = 2*LALPHAp2-50*PSI2+PSIp2+48
                              LALPHA1 = 2*LALPHAp1-50*PSI1+PSIp1+48
                              IF (LAZY RECV) THEN
                                 CALL pvmfrecv(NODE TIDS(T LID), 
     &                           RECV CHANNELS(T LID), HPFC BUFID)
                                 RECV CHANNELS(T LID) = RECV CHANNELS
     &                           (T LID)+2
                                 LAZY RECV = .FALSE.
                              ENDIF
                              BUF INDEX = BUF INDEX+1
                              B_1(LALPHAp1,LALPHAp2) = 
     &                        HPFC REAL4 BUFF(BUF INDEX)
                           ENDDO
                        ENDDO
                     ELSE
! - lazy copying
                        DO LALPHAp2 = 25*PSI2-24, 25*PSI2
                           DO LALPHAp1 = 25*PSI1-24, 25*PSI1
                              LALPHA2 = 2*LALPHAp2-50*PSI2+PSIp2+48
                              LALPHA1 = 2*LALPHAp1-50*PSI1+PSIp1+48
                              B_1(LALPHAp1,LALPHAp2) = B(LALPHA1,
     &                        LALPHA2)
                           ENDDO
                        ENDDO
                     ENDIF
                  ENDDO
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(2) = .TRUE.
         MSTATUS(3) = 2
      ENDIF
!
! That is all for FULLCOPY_B_3_2_node.h
!
!
! File FULLCOPY_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "FULLCOPY_parameters.h"
      CALL HPFC INIT HOST
c
c initialize b
c
c
c first a simple copy
c
      CALL HPFC HOST END
      END
!
! That is all for FULLCOPY_host.f
!
!
! File FULLCOPY_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for FULLCOPY
!
!
! initializing array A, number 4
!
      NODIMA(4) = 2
      ATOT(4) = 2

      MSTATUS(4) = 4
      LIVEMAPPING(4) = .TRUE.

      RANGEA(4, 1, 1) = 1
      RANGEA(4, 1, 2) = 100
      RANGEA(4, 1, 3) = 100
!
      RANGEA(4, 1, 4) = 3
      RANGEA(4, 1, 5) = 1
      RANGEA(4, 1, 6) = 2
      RANGEA(4, 1, 7) = 0
      RANGEA(4, 1, 8) = -1

      RANGEA(4, 2, 1) = 1
      RANGEA(4, 2, 2) = 100
      RANGEA(4, 2, 3) = 100
!
      RANGEA(4, 2, 4) = 3
      RANGEA(4, 2, 5) = 1
      RANGEA(4, 2, 6) = 2
      RANGEA(4, 2, 7) = 0
      RANGEA(4, 2, 8) = -1

      ALIGN(4, 1, 1) = 1
      ALIGN(4, 1, 2) = 1
      ALIGN(4, 1, 3) = 0
      ALIGN(4, 2, 1) = 2
      ALIGN(4, 2, 2) = 1
      ALIGN(4, 2, 3) = 0
!
! initializing array B, number 3
!
      NODIMA(3) = 2
      ATOT(3) = 1

      MSTATUS(3) = 3
      LIVEMAPPING(3) = .TRUE.

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 100
      RANGEA(3, 1, 3) = 100
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 50
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      RANGEA(3, 2, 1) = 1
      RANGEA(3, 2, 2) = 100
      RANGEA(3, 2, 3) = 100
!
      RANGEA(3, 2, 4) = 2
      RANGEA(3, 2, 5) = 50
      RANGEA(3, 2, 6) = 1
      RANGEA(3, 2, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
      ALIGN(3, 2, 1) = 2
      ALIGN(3, 2, 2) = 1
      ALIGN(3, 2, 3) = 0
!
! initializing array B_1, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 2

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 100
      RANGEA(2, 1, 3) = 100
!
      RANGEA(2, 1, 4) = 3
      RANGEA(2, 1, 5) = 1
      RANGEA(2, 1, 6) = 2
      RANGEA(2, 1, 7) = 0
      RANGEA(2, 1, 8) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 100
      RANGEA(2, 2, 3) = 100
!
      RANGEA(2, 2, 4) = 3
      RANGEA(2, 2, 5) = 1
      RANGEA(2, 2, 6) = 2
      RANGEA(2, 2, 7) = 0
      RANGEA(2, 2, 8) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array A_1, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 2

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 100
      RANGEA(1, 1, 3) = 100
!
      RANGEA(1, 1, 4) = 3
      RANGEA(1, 1, 5) = 1
      RANGEA(1, 1, 6) = 2
      RANGEA(1, 1, 7) = 0
      RANGEA(1, 1, 8) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 100
      RANGEA(1, 2, 3) = 100
!
      RANGEA(1, 2, 4) = 3
      RANGEA(1, 2, 5) = 1
      RANGEA(1, 2, 6) = 2
      RANGEA(1, 2, 7) = 0
      RANGEA(1, 2, 8) = -1

      ALIGN(1, 1, 1) = 2
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 1
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for FULLCOPY_init.h
!
!
! File FULLCOPY_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "FULLCOPY_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 100)
      INTEGER I_10, I_11, I_4, I_5, I_6, I_7, I_8, I_9, I, J, 
     &HPFC INFO, LALPHAp1, LALPHA1, LALPHAp2, LALPHA2, HPFC BUFID, 
     &PSIp2, PSIp1, T LID, PSI2, PSI1
      REAL*4 A(1:50, 1:50), B(1:50, 1:50), B_1(1:50, 1:50), A_1(1:50
     &, 1:50)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_9, I_10, I_11, 1, N, 3, 1)
      CALL HPFC LOOP BOUNDS(I_5, I_6, I_7, 1, N, 3, 2)
! all livenesss for B
      LIVE MAPPING(3) = .FALSE.
      LIVE MAPPING(2) = .FALSE.
! all livenesss for A
      LIVE MAPPING(4) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for B
      LIVE MAPPING(3) = .TRUE.
      MSTATUS(3) = 3
! direct remapping for A
      LIVE MAPPING(4) = .TRUE.
      MSTATUS(4) = 4
c
c initialize b
c
      J = I_7
      DO I_4 = I_5, I_6
         J = J+1
         I = I_11
         DO I_8 = I_9, I_10
            I = I+1
            B(I_8,I_4) = REAL(I+J)
         ENDDO
      ENDDO
! begin remappings
      include 'FULLCOPY_B_3_2_node.h'
! liveness management
! clean live set for B
      LIVE MAPPING(3) = .FALSE.
! end of liveness management
! end remappings
c
c first a simple copy
c
      DO J = 1, 50
         DO I = 1, 50
            A(I,J) = B_1(I,J)
         ENDDO
      ENDDO
! begin remappings
      include 'FULLCOPY_A_4_1_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(4) = .FALSE.
! end of liveness management
! end remappings
      DO J = 1, 50
         DO I = 1, 50
            B_1(I,J) = A_1(J,I)
         ENDDO
      ENDDO
      CALL HPFC NODE END
      END
!
! That is all for FULLCOPY_node.f
!
!
! File FULLCOPY_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for FULLCOPY
!
      integer 
     $    FULLCOPY A LO1,
     $    FULLCOPY A UP1
      parameter(FULLCOPY A LO1 = 1)
      parameter(FULLCOPY A UP1 = 50)
      integer 
     $    FULLCOPY A LO2,
     $    FULLCOPY A UP2
      parameter(FULLCOPY A LO2 = 1)
      parameter(FULLCOPY A UP2 = 50)
      integer 
     $    FULLCOPY B LO1,
     $    FULLCOPY B UP1
      parameter(FULLCOPY B LO1 = 1)
      parameter(FULLCOPY B UP1 = 50)
      integer 
     $    FULLCOPY B LO2,
     $    FULLCOPY B UP2
      parameter(FULLCOPY B LO2 = 1)
      parameter(FULLCOPY B UP2 = 50)
      integer 
     $    FULLCOPY B_1 LO1,
     $    FULLCOPY B_1 UP1
      parameter(FULLCOPY B_1 LO1 = 1)
      parameter(FULLCOPY B_1 UP1 = 50)
      integer 
     $    FULLCOPY B_1 LO2,
     $    FULLCOPY B_1 UP2
      parameter(FULLCOPY B_1 LO2 = 1)
      parameter(FULLCOPY B_1 UP2 = 50)
      integer 
     $    FULLCOPY A_1 LO1,
     $    FULLCOPY A_1 UP1
      parameter(FULLCOPY A_1 LO1 = 1)
      parameter(FULLCOPY A_1 UP1 = 50)
      integer 
     $    FULLCOPY A_1 LO2,
     $    FULLCOPY A_1 UP2
      parameter(FULLCOPY A_1 LO2 = 1)
      parameter(FULLCOPY A_1 UP2 = 50)
!
! That is all for FULLCOPY_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template TB, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 100
      RANGET(1, 1, 3) = 100

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 100
      RANGET(1, 2, 3) = 100

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 50
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 50
!
! initializing template TC, number 2
!
      NODIMT(2) = 2
      TTOP(2) = 1

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 100
      RANGET(2, 1, 3) = 100

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 100
      RANGET(2, 2, 3) = 100

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = -1
      DIST(2, 2, 1) = 2
      DIST(2, 2, 2) = -1
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 4)
      parameter(REALNBOFTEMPLATES = 2)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
