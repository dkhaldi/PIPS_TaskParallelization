
TRANSFORMERS


//  T() {0==-1}

int main()
{

//  T(s) {s==0}

   int s = 0;
   // the number of seconds

//  T(b) {b==0, s==0}

   int b = 0;
   // the number of beacons 

//  T(d) {b==0, d==0, s==0}

   int d = 0;

//  T(b) {b#init<=b, b<=b#init+1}

   // the  number of beacons after
   // the train begins to brake
   
   //  while(1) {
   
   // The train is ON TIME
ontime:   if (alea()>0.)

//  T(b) {b==b#init+1}

      b++;

//  T(s) {s#init<=s, s<=s#init+1}

   if (alea()>0.)

//  T(s) {s==s#init+1}

      s++;

//  T() {}

   if (s-b>=10) goto late;

//  T() {s<=b+9}

   if (s-b<=-10) {
   }
   else {
      goto ontime;
   }

//  T(d) {d==0, s+10<=b}

   
   // the train is early
early:   d = 0;

//  T(b,d) {b+d#init==b#init+d, b#init<=b, b<=b#init+1}

   
   // the train puts brake while(s!=b) and d<=10
brake:   if (alea()>0.) {

//  T(b) {b==b#init+1}

      b++;

//  T(d) {d==d#init+1}

      d++;
   }

//  T(s) {s#init<=s, s<=s#init+1}

   if (alea()>0.)

//  T(s) {s==s#init+1}

      s++;

//  T() {}

   if (s==b) goto ontime;

//  T() {}

   if (d>=10) {
   }
   else {
      goto brake;
   }

//  T(s) {d==10, s#init<=s, s<=s#init+1}

   
   // It stops and waits after 10 beacons
stopped:   if (alea()>0.)

//  T(s) {d==10, s==s#init+1}

      s++;

//  T() {d==10}

   if (s==b) {
      goto ontime;
   }
   else {
      goto stopped;
   }

//  T(b) {b#init<=b, b<=b#init+1}

   
   // the train is LATE
late:   if (alea()>0.)

//  T(b) {b==b#init+1}

      b++;

//  T() {}

   if (s==b) {
      goto ontime;
   }
   else {
      goto late;
   }
}

PRECONDITIONS


//  P() {}

int main()
{

//  P() {}

   int s = 0;
   // the number of seconds

//  P(s) {s==0}

   int b = 0;
   // the number of beacons 

//  P(b,s) {b==0, s==0}

   int d = 0;

//  P(b,d,s) {0<=b, s<=b+9, b<=s+9, 0<=s}

   // the  number of beacons after
   // the train begins to brake
   
   //  while(1) {
   
   // The train is ON TIME
ontime:   if (alea()>0.)

//  P(b,d,s) {0<=b, s<=b+9, b<=s+9, 0<=s}

      b++;

//  P(b,d,s) {0<=b, s<=b+9, b<=s+10, 0<=s}

   if (alea()>0.)

//  P(b,d,s) {0<=b, s<=b+9, b<=s+10, 0<=s}

      s++;

//  P(b,d,s) {0<=b, s<=b+10, b<=s+10, 0<=s}

   if (s-b>=10) goto late;

//  P(b,d,s) {0<=b, s<=b+9, b<=s+10, 0<=s}

   if (s-b<=-10) {
   }
   else {
      goto ontime;
   }

//  P(b,d,s) {b==s+10, 10<=b}

   
   // the train is early
early:   d = 0;

//  P(b,d,s) {b==s+10, d==0, 10<=b}

   
   // the train puts brake while(s!=b) and d<=10
brake:   if (alea()>0.) {

//  P(b,d,s) {b==s+10, d==0, 10<=b}

      b++;

//  P(b,d,s) {b==s+11, d==0, 11<=b}

      d++;
   }

//  P(b,d,s) {d+s==b-10, s+10<=b, b<=s+11, 0<=s}

   if (alea()>0.)

//  P(b,d,s) {d+s==b-10, s+10<=b, b<=s+11, 0<=s}

      s++;

//  P(b,d,s) {d+10<=b, b<=d+s+10, 0<=d, d<=10}

   if (s==b) goto ontime;

//  P(b,d,s) {d+10<=b, b<=d+s+10, 0<=d, d<=10}

   if (d>=10) {
   }
   else {
      goto brake;
   }

//  P(b,d,s) {d==10, 20<=b, b<=s+20}

   
   // It stops and waits after 10 beacons
stopped:   if (alea()>0.)

//  P(b,d,s) {d==10, 20<=b, b<=s+20}

      s++;

//  P(b,d,s) {d==10, 20<=b, b<=s+20}

   if (s==b) {
      goto ontime;
   }
   else {
      goto stopped;
   }

//  P(b,d,s) {b==s-10, 0<=b}

   
   // the train is LATE
late:   if (alea()>0.)

//  P(b,d,s) {b==s-10, 0<=b}

      b++;

//  P(b,d,s) {s<=b+10, 10<=s}

   if (s==b) {
      goto ontime;
   }
   else {
      goto late;
   }
}
