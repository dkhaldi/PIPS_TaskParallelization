#
# initial code
#
// global/private with typedefs

typedef struct {
   double re;
   double im;
} complex;

extern void typedef01(complex a[10]);

extern int main(void);
int main(void)
{
   complex a[10];
   {
      int i;
      for(i = 0; i <= 9; i += 1)
         a[i].re = 1.0, a[i].im = 0.0;
   }
   typedef01(a);
   return 0;
}
void typedef01(complex a[10])
{
   complex l[10];
   {
      int i;
      for(i = 0; i <= 9; i += 1)
         l[i] = a[i];
   }
   complex *b = a+3;
   a++;
   complex *c;
   c = &a[0];
   complex *d;
   d = l+5;
}
#
# global/private declarations
#
// global/private with typedefs

typedef struct {
   double re;
   double im;
} complex;

extern void typedef01(complex a[10]);

extern int main(void);
int main(void)
{
   complex a[10];
   {
      int i;
      for(i = 0; i <= 9; i += 1)
         a[i].re = 1.0, a[i].im = 0.0;
   }
   typedef01(a);
   return 0;
}
void typedef01(global complex a[10])
{
   private complex l[10];
   {
      int i;
      for(i = 0; i <= 9; i += 1)
         l[i] = a[i];
   }
   global complex *b = a+3;
   a++;
   global complex *c;
   c = &a[0];
   private complex *d;
   d = l+5;
}

