array02

Declarations for module "array02" with type "() -> int"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "array02!:*STATIC*" with type "area" with size 0
	Declared entity "array02:*DYNAMIC*" with type "area" with size 52
	Declared entity "array02:*HEAP*" with type "area" with size 0
	Declared entity "array02:*STACK*" with type "area" with size 0
	Declared entity "array02:*STATIC*" with type "area" with size 0
	Declared entity "array02:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "array02:0`__func__" with type "variable" "char *"
	Declared entity "array02:0`a" with type "variable" "int[sizeof(int)]"
	Declared entity "array02:0`b" with type "variable" "int[4]"
	Declared entity "array02:0`i" with type "variable" "int"
	Declared entity "array02:array02" with type "variable" "int"

* empty extern declaration list *


Layout for return variable:

	Variable "array02:array02"	size = 4

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "array02!:*STATIC*" of size 0:
	* empty area *


Layout for memory area "array02:*DYNAMIC*" of size 52:
	Variable "array02:0`a"	offset = 16	size = 16
	Variable "array02:0`b"	offset = 32	size = 16
	Variable "array02:0`i"	offset = 48	size = 4
	Variable "array02:0`__func__"	offset = 0	size = 8
	Variable "array02:0`__FUNCTION__"	offset = 8	size = 8


Layout for memory area "array02:*HEAP*" of size 0:
	* empty area *


Layout for memory area "array02:*STACK*" of size 0:
	* empty area *


Layout for memory area "array02:*STATIC*" of size 0:
	* empty area *

End of declarations for module array02

/* check the impact of sizeof() for Serge */

extern int array02();
int array02()
{
   int a[sizeof(int)];
   int b[4];
   int i;

   for (i = 0;i<sizeof(int);i += sizeof(char))
      a[i] = 0.;
}
#
# compile generated array02
#
int array02()
{
   int a[sizeof(int)];
   int b[4];
   int i;

   forall(i = 0; i <= sizeof(int)-1; i += sizeof(char))
      a[i] = 0.;
}
