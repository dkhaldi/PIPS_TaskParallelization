# The local function hides the global function, no matter what "extern" means

delete block_scope11

# To avoid compilation warnings
# setproperty ABORT_ON_USER_ERROR TRUE

setproperty CHECK_C_SYNTAX_BEFORE_RUNNING_PIPS FALSE
create block_scope11 block_scope11.src/main.c block_scope11.src/global.c
# create block_scope11 block_scope11.src/main.c

#setenv C_SYNTAX_DEBUG_LEVEL 9

activate C_PARSER
activate C_SYMBOL_TABLE

setproperty PRETTYPRINT_LANGUAGE "C"
setproperty PRETTYPRINT_STATEMENT_NUMBER FALSE

# setproperty PARSER_DUMP_SYMBOL_TABLE TRUE

echo
echo Symbol table for "main"
echo

display SYMBOL_TABLE_FILE[main]

# Removed because I now include stdio.h to execute the resulting code
# display SYMBOL_TABLE_FILE[main!]

echo
display SYMBOL_TABLE_FILE[main!foo]
echo


#echo
#echo Parser output
#echo
#
#display PARSED_PRINTED_FILE[block_scope11!]
#echo
#display PARSED_PRINTED_FILE[block_scope11!block_scope11]
# quit

#echo
#echo Parser output
#echo

#display PARSED_PRINTED_FILE[block_scope11!]
#echo
#display PARSED_PRINTED_FILE[block_scope11!block_scope11]

#echo
#echo Controlizer output
#echo

#display PRINTED_FILE[block_scope11!block_scope11]

apply UNSPLIT[%ALL]

echo
echo Compilation of block_scope11.c
echo

# not sure how to use pips_validation_exe there
shell ${PIPS_CC:-cc} block_scope11.database/Src/main.c block_scope11.database/Src/global.c -o block_scope11.database/a.out

echo
echo Execution of block_scope11.c
echo

shell block_scope11.database/a.out

close

#delete block_scope11
quit
