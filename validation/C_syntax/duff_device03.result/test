"initial file:"
int duff_device03(char *from, char *to, int count)
{
   {
      int n = (count+7)/8;

      if (count%8==0) goto _switch_1_case_0;
      if (count%8==7) goto _switch_1_case_7;
      if (count%8==6) goto _switch_1_case_6;
      if (count%8==5) goto _switch_1_case_5;
      if (count%8==4) goto _switch_1_case_4;
      if (count%8==3) goto _switch_1_case_3;
      if (count%8==2) goto _switch_1_case_2;
      if (count%8==1) {
      }
      else {
         goto _break_1;
      }
_switch_1_case_1:      ;
      *to++ = *from++;
      if (--n>0) {
      }
      else {
         goto _break_1;
      }
again:      *to++ = *from++;

_switch_1_case_7:      ;
      *to++ = *from++;
_switch_1_case_6:      ;
      *to++ = *from++;
_switch_1_case_5:      ;
      *to++ = *from++;
_switch_1_case_4:      ;
      *to++ = *from++;
_switch_1_case_3:      ;
      *to++ = *from++;
_switch_1_case_2:      ;
      *to++ = *from++;
      goto _switch_1_case_1;
_switch_1_case_0:      ;
      goto again;
_break_1:      ;
   }

   return count;
}

"parsed file:"
int duff_device03(char *from, char *to, int count)
{
   {
      int n = (count+7)/8;


      if (count%8==0)
         goto _switch_1_case_0;
      if (count%8==7)
         goto _switch_1_case_7;
      if (count%8==6)
         goto _switch_1_case_6;
      if (count%8==5)
         goto _switch_1_case_5;
      if (count%8==4)
         goto _switch_1_case_4;
      if (count%8==3)
         goto _switch_1_case_3;
      if (count%8==2)
         goto _switch_1_case_2;
      if (count%8==1)
         goto _switch_1_case_1;
      goto _break_1;
_switch_1_case_0:      ;
again:      *to++ = *from++;

_switch_1_case_7:      ;
      *to++ = *from++;
_switch_1_case_6:      ;
      *to++ = *from++;
_switch_1_case_5:      ;
      *to++ = *from++;
_switch_1_case_4:      ;
      *to++ = *from++;
_switch_1_case_3:      ;
      *to++ = *from++;
_switch_1_case_2:      ;
      *to++ = *from++;
_switch_1_case_1:      ;
      *to++ = *from++;
      if (--n>0)
         goto again;
_break_1:      ;
   }

   return count;
}

"simplify control..."
int duff_device03(char *from, char *to, int count)
{
   {
      int n = (count+7)/8;

      if (count%8==0) goto l99999;
      if (count%8==7) goto l99998;
      if (count%8==6) goto l99997;
      if (count%8==5) goto l99996;
      if (count%8==4) goto l99995;
      if (count%8==3) goto l99994;
      if (count%8==2) goto l99993;
      if (count%8==1) {
      }
      else {
         goto l99992;
      }
l99991:      ;
      *to++ = *from++;
      if (--n>0) {
      }
      else {
         goto l99992;
      }
l99990:      ;
      *to++ = *from++;
l99998:      ;

      *to++ = *from++;
l99997:      ;
      *to++ = *from++;
l99996:      ;
      *to++ = *from++;
l99995:      ;
      *to++ = *from++;
l99994:      ;
      *to++ = *from++;
l99993:      ;
      *to++ = *from++;
      goto l99991;
l99999:      ;

      goto l99990;
l99992:      ;

   }

   return count;
}

Warnings

TRANSFORMERS_INTRA_FAST[duff_device03] (transformers_intra_fast) Property SEMANTICS_FLOW_SENSITIVE is ignored
TRANSFORMERS_INTRA_FAST[duff_device03] (transformer_safe_combine_with_warnings) Non standard compliant code: side effect in part
of an expression affects variable(s) used in a later part
TRANSFORMERS_INTRA_FAST[duff_device03] (transformer_safe_combine_with_warnings) Non standard compliant code: side effect in part
of an expression affects variable(s) used in a later part
PRECONDITIONS_INTRA[duff_device03] (transformer_safe_combine_with_warnings) Non standard compliant code: side effect in part
of an expression affects variable(s) used in a later part
PRECONDITIONS_INTRA[duff_device03] (transformer_safe_combine_with_warnings) Non standard compliant code: side effect in part
of an expression affects variable(s) used in a later part
