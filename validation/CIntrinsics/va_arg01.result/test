
Parsed printed file for "FindMax"

int FindMax(int amount, ...)
{
   int i, val, greater, len;
   va_list vl;
   __builtin_va_start(vl, amount);
   printf("\n num=%s \n", vl);
   greater = va_arg(vl, int);
   for (i = 1;i<amount;i++) {
      val = va_arg(vl, int);
      greater = greater>val?greater:val;
   }
   __builtin_va_end(vl);
   return greater;
}

Cumulated effetcs for "FindMax"

//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: amount stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
int FindMax(int amount, ...)
{
   int i, val, greater, len;
   va_list vl;
//             <    is read   >: vl
//             <    is written>: vl
   __builtin_va_start(vl, amount);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout vl __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("\n num=%s \n", vl);
//             <    is read   >: vl
//             <    is written>: greater vl
   greater = va_arg(vl, int);
//             <may be read   >: greater val vl
//             <may be written>: greater val vl
//             <    is read   >: amount
//             <    is written>: i
   for(i = 1; i <= amount-1; i += 1) {
//             <    is read   >: amount vl
//             <    is written>: val vl
      val = va_arg(vl, int);
//             <    is read   >: amount greater val
//             <    is written>: greater
      greater = greater>val?greater:val;
   }
//             <may be written>: vl
//             <    is read   >: vl
   __builtin_va_end(vl);
//             <    is read   >: greater
   return greater;
}

Parsed printed file for "main"

int main()
{
   int m;
   m = FindMax(7, 702, 422, 631, 834, 892, 104, 772);
   printf("The greatest one is: %d\n", m);
   return 0;
}

Cumulated effetcs for "main"

//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
int main()
{
   int m;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: m __IO_EFFECTS:LUNS[1]
   m = FindMax(7, 702, 422, 631, 834, 892, 104, 772);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: m stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("The greatest one is: %d\n", m);
//             <    is read   >: __IO_EFFECTS:LUNS[1]
   return 0;
}
