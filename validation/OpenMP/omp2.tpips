#
delete omp2

setproperty ABORT_ON_USER_ERROR TRUE
setproperty MEMORY_EFFECTS_ONLY FALSE
create omp2 omp2.c

#echo If possible, transform simple for-loops into do-loop Ã  la Fortran, simpler to analyze:
setproperty FOR_TO_DO_LOOP_IN_CONTROLIZER   TRUE
#echo Desugaring other for-loops into plain while-loops fot the time we improve semantics ameliorations in PIPS:
setproperty FOR_TO_WHILE_LOOP_IN_CONTROLIZER   TRUE

# Region chains are too much experimental
#activate REGION_CHAINS

echo Compute the intraprocedural preconditions at the same time as
echo   transformers and use them to improve the accuracy of expression
echo   and statement transformers:
setproperty SEMANTICS_COMPUTE_TRANSFORMERS_IN_CONTEXT TRUE
setproperty SEMANTICS_FIX_POINT_OPERATOR "derivative"

apply PRIVATIZE_MODULE(main)

display PRINTED_FILE[main]

#display DG_FILE[main]

echo // parallel printed file style

activate PRINT_PARALLELIZEDOMP_CODE
display PARALLELPRINTED_FILE(main)


echo // OMPIFY style

setproperty PRETTYPRINT_SEQUENTIAL_STYLE    "do"
apply FLAG_PARALLEL_REDUCED_LOOPS_WITH_OPENMP_DIRECTIVES
setproperty PARALLELIZE_AGAIN_PARALLEL_CODE FALSE
apply INTERNALIZE_PARALLEL_CODE
apply OMPIFY_CODE
display PRINTED_FILE(main)

apply UNSPLIT
shell gcc -fopenmp -c omp2.database/Src/omp2.c -o omp2.database/Src/omp2.o

close
delete omp2
quit
# EOF
