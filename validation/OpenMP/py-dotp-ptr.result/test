#
# Code after openmp for module dotp_ptr
#
t_real dotp_ptr(const long int size, const t_real *x)
{
   long int i;
   t_real result;
   result = 0.0;
   
   // compare loop
#pragma omp parallel for private(result)
   for(i = 0; i <= size-1; i += 1)
      result += x[i]*x[i];
   return result;
}
#
# Code after openmp for module main
#
int main()
{
   long int i;
   t_real v[100];
   
   // load vector
#pragma omp parallel for
   for(i = 0; i <= 99; i += 1)
      v[i] = 1.0;
   
   // exit without doing anything
   return 0;
}
t_real dotp_ptr(const long int size, const t_real *x)
{
   long int i;
   t_real result;
   result = 0.0;
   
   // compare loop
#pragma omp parallel for private(result)
   for(i = 0; i <= size-1; i += 1)
      result += x[i]*x[i];
   return result;
}
int main()
{
   long int i;
   t_real v[100];
   
   // load vector
#pragma omp parallel for
   for(i = 0; i <= 99; i += 1)
      v[i] = 1.0;
   
   // exit without doing anything
   return 0;
}
