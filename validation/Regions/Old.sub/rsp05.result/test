
PARSED PRINTED FILE FOR MODULE resp05!

/* #include <stdio.h> */


int convold1(int X[13][13], int coeff[6], int i, int j);
int convold2(int H[8][13], int coeff[6], int i, int j);
int filtre(int H[8][13], int K[8][8], int i, int j);
void init_coeff(int COEFF[6]);

extern int main();


extern void init_coeff(int COEFF[6]);

extern int convold1(int X[13][13], int coeff[6], int i, int j);

extern int convold2(int H[8][13], int coeff[6], int i, int j);

extern int filtre(int H[8][13], int K[8][8], int i, int j);

PRINTED FILE FOR main

int main()
{
   int X[13][13], Y[8][8], H[8][13], K[8][8];
   int OUT[8][8], COEFF[6], i, j;

   init_coeff(COEFF);

   for(i = 0; i <= 12; i += 1)
      for(j = 0; j <= 12; j += 1)
         X[i][j] = j*(j+i)/2;

   for(i = 0; i <= 7; i += 1)
      for(j = 0; j <= 12; j += 1)
         H[i][j] = convold1(X, COEFF, i, j);

   for(i = 0; i <= 7; i += 1)
      for(j = 0; j <= 7; j += 1)
         K[i][j] = convold2(H, COEFF, i, j);

   for(i = 0; i <= 7; i += 1)
      for(j = 0; j <= 7; j += 1)
         Y[i][j] = filtre(H, K, i, j);

   for(i = 0; i <= 7; i += 1)
      for(j = 0; j <= 7; j += 1)
         OUT[i][j] = Y[i][j];
}
int main()
{
   int X[13][13], Y[8][8], H[8][13], K[8][8];
   int OUT[8][8], COEFF[6], i, j;
//             <may be written>: COEFF[*]

   init_coeff(COEFF);
//             <    is written>: i

   for(i = 0; i <= 12; i += 1)
//             <    is written>: j
      for(j = 0; j <= 12; j += 1)
//             <    is read   >: i j
//             <    is written>: X[i][j]
         X[i][j] = j*(j+i)/2;
//             <    is written>: i

   for(i = 0; i <= 7; i += 1)
//             <    is written>: j
      for(j = 0; j <= 12; j += 1)
//             <may be read   >: COEFF[*] X[*][*]
//             <    is read   >: i j
//             <    is written>: H[i][j]
         H[i][j] = convold1(X, COEFF, i, j);
//             <    is written>: i

   for(i = 0; i <= 7; i += 1)
//             <    is written>: j
      for(j = 0; j <= 7; j += 1)
//             <may be read   >: COEFF[*] H[*][*]
//             <    is read   >: i j
//             <    is written>: K[i][j]
         K[i][j] = convold2(H, COEFF, i, j);
//             <    is written>: i

   for(i = 0; i <= 7; i += 1)
//             <    is written>: j
      for(j = 0; j <= 7; j += 1)
//             <may be read   >: H[*][*] K[*][*]
//             <    is read   >: i j
//             <    is written>: Y[i][j]
         Y[i][j] = filtre(H, K, i, j);
//             <    is written>: i

   for(i = 0; i <= 7; i += 1)
//             <    is written>: j
      for(j = 0; j <= 7; j += 1)
//             <    is read   >: Y[i][j] i j
//             <    is written>: OUT[i][j]
         OUT[i][j] = Y[i][j];
}

//  T() {}

int main()
{

//  T() {}

   int X[13][13], Y[8][8], H[8][13], K[8][8];

//  T() {}

   int OUT[8][8], COEFF[6], i, j;

//  T() {}


   init_coeff(COEFF);

//  T(i,j) {0<=i, i<=12}


   for(i = 0; i <= 12; i += 1)

//  T(j) {0<=i, i<=12, 0<=j, j<=12}

      for(j = 0; j <= 12; j += 1)

//  T() {0<=i, i<=12, 0<=j, j<=12}

         X[i][j] = j*(j+i)/2;

//  T(i,j) {i#init==13, j#init==13, 0<=i, i<=7}


   for(i = 0; i <= 7; i += 1)

//  T(j) {0<=i, i<=7, 0<=j, j<=12}

      for(j = 0; j <= 12; j += 1)

//  T() {0<=i, i<=7, 0<=j, j<=12}

         H[i][j] = convold1(X, COEFF, i, j);

//  T(i,j) {i#init==8, j#init==13, 0<=i, i<=7}


   for(i = 0; i <= 7; i += 1)

//  T(j) {0<=i, i<=7, 0<=j, j<=7}

      for(j = 0; j <= 7; j += 1)

//  T() {0<=i, i<=7, 0<=j, j<=7}

         K[i][j] = convold2(H, COEFF, i, j);

//  T(i,j) {i#init==8, j#init==8, 0<=i, i<=7}


   for(i = 0; i <= 7; i += 1)

//  T(j) {0<=i, i<=7, 0<=j, j<=7}

      for(j = 0; j <= 7; j += 1)

//  T() {0<=i, i<=7, 0<=j, j<=7}

         Y[i][j] = filtre(H, K, i, j);

//  T(i,j) {i#init==8, j#init==8, 0<=i, i<=7}


   for(i = 0; i <= 7; i += 1)

//  T(j) {0<=i, i<=7, 0<=j, j<=7}

      for(j = 0; j <= 7; j += 1)

//  T() {0<=i, i<=7, 0<=j, j<=7}

         OUT[i][j] = Y[i][j];
}

//  P() {}

int main()
{

//  P() {}

   int X[13][13], Y[8][8], H[8][13], K[8][8];

//  P() {}

   int OUT[8][8], COEFF[6], i, j;

//  P() {}


   init_coeff(COEFF);

//  P() {}


   for(i = 0; i <= 12; i += 1)

//  P(i,j) {0<=i, i<=12}

      for(j = 0; j <= 12; j += 1)

//  P(i,j) {0<=i, i<=12, 0<=j, j<=12}

         X[i][j] = j*(j+i)/2;

//  P(i,j) {i==13, j==13}


   for(i = 0; i <= 7; i += 1)

//  P(i,j) {0<=i, i<=7}

      for(j = 0; j <= 12; j += 1)

//  P(i,j) {0<=i, i<=7, 0<=j, j<=12}

         H[i][j] = convold1(X, COEFF, i, j);

//  P(i,j) {i==8, j==13}


   for(i = 0; i <= 7; i += 1)

//  P(i,j) {0<=i, i<=7}

      for(j = 0; j <= 7; j += 1)

//  P(i,j) {0<=i, i<=7, 0<=j, j<=7}

         K[i][j] = convold2(H, COEFF, i, j);

//  P(i,j) {i==8, j==8}


   for(i = 0; i <= 7; i += 1)

//  P(i,j) {0<=i, i<=7}

      for(j = 0; j <= 7; j += 1)

//  P(i,j) {0<=i, i<=7, 0<=j, j<=7}

         Y[i][j] = filtre(H, K, i, j);

//  P(i,j) {i==8, j==8}


   for(i = 0; i <= 7; i += 1)

//  P(i,j) {0<=i, i<=7}

      for(j = 0; j <= 7; j += 1)

//  P(i,j) {0<=i, i<=7, 0<=j, j<=7}

         OUT[i][j] = Y[i][j];
}
int main()
{
   int X[13][13], Y[8][8], H[8][13], K[8][8];
   int OUT[8][8], COEFF[6], i, j;

//  <COEFF[PHI1]-W-EXACT-{0<=PHI1, PHI1<=5}>


   init_coeff(COEFF);

//  <X[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=12, 0<=PHI2, PHI2<=12}>


   for(i = 0; i <= 12; i += 1)

//  <X[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=12, 0<=i, i<=12}>

      for(j = 0; j <= 12; j += 1)

//  <X[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=12, 0<=j,
//    j<=12}>

         X[i][j] = j*(j+i)/2;

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, j==13}>
//  <H[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=12,
//    j==13}>
//  <X[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=12, 0<=PHI2, PHI2<=12,
//    j==13}>


   for(i = 0; i <= 7; i += 1)

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, 0<=i, i<=7}>
//  <H[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=12, 0<=i, i<=7}>
//  <X[PHI1][PHI2]-R-EXACT-{i<=PHI1, PHI1<=i+5, 0<=PHI2, PHI2<=12,
//    0<=i, i<=7}>

      for(j = 0; j <= 12; j += 1)

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, 0<=i, i<=7, 0<=j, j<=12}>
//  <H[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j,
//    j<=12}>
//  <X[PHI1][PHI2]-R-EXACT-{PHI2==j, i<=PHI1, PHI1<=i+5, 0<=i, i<=7,
//    0<=j, j<=12}>

         H[i][j] = convold1(X, COEFF, i, j);

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, j==13}>
//  <H[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=12,
//    j==13}>
//  <K[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=7,
//    j==13}>


   for(i = 0; i <= 7; i += 1)

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, 0<=i, i<=7}>
//  <H[PHI1][PHI2]-R-EXACT-{PHI1==i, 0<=PHI2, PHI2<=12, 0<=i, i<=7}>
//  <K[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=7, 0<=i, i<=7}>

      for(j = 0; j <= 7; j += 1)

//  <COEFF[PHI1]-R-EXACT-{0<=PHI1, PHI1<=5, 0<=i, i<=7, 0<=j, j<=7}>
//  <H[PHI1][PHI2]-R-EXACT-{PHI1==i, j<=PHI2, PHI2<=j+5, 0<=i, i<=7,
//    0<=j, j<=7}>
//  <K[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j, j<=7}>

         K[i][j] = convold2(H, COEFF, i, j);

//  <H[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=7, 2<=PHI2, PHI2<=9, j==8}>
//  <K[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=7, j==8}>
//  <Y[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=7, j==8}>


   for(i = 0; i <= 7; i += 1)

//  <H[PHI1][PHI2]-R-EXACT-{PHI1==i, 2<=PHI2, PHI2<=9, 0<=i, i<=7}>
//  <K[PHI1][PHI2]-R-EXACT-{PHI1==i, 0<=PHI2, PHI2<=7, 0<=i, i<=7}>
//  <Y[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=7, 0<=i, i<=7}>

      for(j = 0; j <= 7; j += 1)

//  <H[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j+2, 0<=i, i<=7, 0<=j,
//    j<=7}>
//  <K[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j, j<=7}>
//  <Y[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j, j<=7}>

         Y[i][j] = filtre(H, K, i, j);

//  <OUT[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=7,
//    j==8}>
//  <Y[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=7, 0<=PHI2, PHI2<=7, j==8}>


   for(i = 0; i <= 7; i += 1)

//  <OUT[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=7, 0<=i, i<=7}>
//  <Y[PHI1][PHI2]-R-EXACT-{PHI1==i, 0<=PHI2, PHI2<=7, 0<=i, i<=7}>

      for(j = 0; j <= 7; j += 1)

//  <OUT[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j,
//    j<=7}>
//  <Y[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=7, 0<=j, j<=7}>

         OUT[i][j] = Y[i][j];
}
//                                                                18546 (SUMMARY)
int main()
{
//                                                                    0 (STMT)
   int X[13][13], Y[8][8], H[8][13], K[8][8];
//                                                                    0 (STMT)
   int OUT[8][8], COEFF[6], i, j;
//                                                                    8 (STMT)

   init_coeff(COEFF);
//                                                                 1886 (DO)

   for(i = 0; i <= 12; i += 1)
//                                                                  145 (DO)
      for(j = 0; j <= 12; j += 1)
//                                                                   11 (STMT)
         X[i][j] = j*(j+i)/2;
//                                                                 8857 (DO)

   for(i = 0; i <= 7; i += 1)
//                                                                 1107 (DO)
      for(j = 0; j <= 12; j += 1)
//                                                                   85 (STMT)
         H[i][j] = convold1(X, COEFF, i, j);
//                                                                 5457 (DO)

   for(i = 0; i <= 7; i += 1)
//                                                                  682 (DO)
      for(j = 0; j <= 7; j += 1)
//                                                                   85 (STMT)
         K[i][j] = convold2(H, COEFF, i, j);
//                                                                 1745 (DO)

   for(i = 0; i <= 7; i += 1)
//                                                                  218 (DO)
      for(j = 0; j <= 7; j += 1)
//                                                                   27 (STMT)
         Y[i][j] = filtre(H, K, i, j);
//                                                                  593 (DO)

   for(i = 0; i <= 7; i += 1)
//                                                                   74 (DO)
      for(j = 0; j <= 7; j += 1)
//                                                                    9 (STMT)
         OUT[i][j] = Y[i][j];
}
