
Transformers for "FCT02"


C  T() {}

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  T(I,J) {1<=J, NQ+1<=J}

C     BEGIN BLOCK

C  T(I) {1<=I, I<=MQ}


      DO I = 1, MQ                                                      0019

C  T() {}

         A(I) = 1.0D0                                                   0020
      ENDDO

C  T(J) {1<=J, J<=NQ}


      DO J = 1, NQ                                                      0023

C  T() {}

         B(J) = 1.0D0                                                   0024
      ENDDO

C  T(I,J) {1<=J, J<=NQ}


      DO J = 1, NQ                                                      0027

C  T(I) {1<=I, I<=MQ}

         DO I = 1, MQ                                                   0028

C  T() {}

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

Preconditions for "FCT02"


C  P() {}

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  P() {}

C     BEGIN BLOCK

C  P() {}


      DO I = 1, MQ                                                      0019

C  P(I) {1<=I, I<=MQ}

         A(I) = 1.0D0                                                   0020
      ENDDO

C  P(I) {1<=I, MQ+1<=I}


      DO J = 1, NQ                                                      0023

C  P(I,J) {1<=I, MQ+1<=I, 1<=J, J<=NQ}

         B(J) = 1.0D0                                                   0024
      ENDDO

C  P(I,J) {1<=I, MQ+1<=I, 1<=J, NQ+1<=J}


      DO J = 1, NQ                                                      0027

C  P(I,J) {1<=J, J<=NQ}

         DO I = 1, MQ                                                   0028

C  P(I,J) {1<=I, I<=MQ, 1<=J, J<=NQ}

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

RW regions for "FCT02"


C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <A(PHI1)-W-EXACT-{1<=PHI1, PHI1<=MQ}>
C  <B(PHI1)-R-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>
C  <B(PHI1)-W-EXACT-{1<=PHI1, PHI1<=NQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>

C     BEGIN BLOCK

C  <A(PHI1)-W-EXACT-{1<=PHI1, PHI1<=MQ}>


      DO I = 1, MQ                                                      0019

C  <A(PHI1)-W-EXACT-{PHI1==I, 1<=I, I<=MQ}>

         A(I) = 1.0D0                                                   0020
      ENDDO

C  <B(PHI1)-W-EXACT-{1<=PHI1, PHI1<=NQ, 1<=I, MQ+1<=I}>


      DO J = 1, NQ                                                      0023

C  <B(PHI1)-W-EXACT-{PHI1==J, 1<=I, MQ+1<=I, 1<=J, J<=NQ}>

         B(J) = 1.0D0                                                   0024
      ENDDO

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <B(PHI1)-R-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>


      DO J = 1, NQ                                                      0027

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-R-EXACT-{PHI1==J, 1<=J, J<=NQ, 1<=MQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{PHI2==J, 1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>

         DO I = 1, MQ                                                   0028

C  <A(PHI1)-R-EXACT-{PHI1==I, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-R-EXACT-{PHI1==J, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{PHI1==I, PHI2==J, 1<=I, I<=MQ, 1<=J,
C    J<=NQ}>

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

IN regions for "FCT02"

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  <B(PHI1)-IN-EXACT-{0==-1}>

C     BEGIN BLOCK

      DO I = 1, MQ                                                      0019
         A(I) = 1.0D0                                                   0020
      ENDDO

      DO J = 1, NQ                                                      0023
         B(J) = 1.0D0                                                   0024
      ENDDO

C  <A(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <B(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>


      DO J = 1, NQ                                                      0027

C  <A(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-IN-EXACT-{PHI1==J, 1<=J, J<=NQ, 1<=MQ}>

         DO I = 1, MQ                                                   0028

C  <A(PHI1)-IN-EXACT-{PHI1==I, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-IN-EXACT-{PHI1==J, 1<=I, I<=MQ, 1<=J, J<=NQ}>

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

Transformers for "FCT02"


C  T() {}

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  T(I,J) {1<=J, NQ+1<=J}

C     BEGIN BLOCK

C  T(I) {1<=I, I<=MQ}


      DO I = 1, MQ                                                      0019

C  T() {}

         A(I) = 1.0D0                                                   0020
      ENDDO

C  T(J) {1<=J, J<=NQ}


      DO J = 1, NQ                                                      0023

C  T() {}

         B(J) = 1.0D0                                                   0024
      ENDDO

C  T(I,J) {1<=J, J<=NQ}


      DO J = 1, NQ                                                      0027

C  T(I) {1<=I, I<=MQ}

         DO I = 1, MQ                                                   0028

C  T() {}

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

Preconditions for "FCT02"


C  P() {}

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  P() {}

C     BEGIN BLOCK

C  P() {}


      DO I = 1, MQ                                                      0019

C  P(I) {1<=I, I<=MQ}

         A(I) = 1.0D0                                                   0020
      ENDDO

C  P(I) {1<=I, MQ+1<=I}


      DO J = 1, NQ                                                      0023

C  P(I,J) {1<=I, MQ+1<=I, 1<=J, J<=NQ}

         B(J) = 1.0D0                                                   0024
      ENDDO

C  P(I,J) {1<=I, MQ+1<=I, 1<=J, NQ+1<=J}


      DO J = 1, NQ                                                      0027

C  P(I,J) {1<=J, J<=NQ}

         DO I = 1, MQ                                                   0028

C  P(I,J) {1<=I, I<=MQ, 1<=J, J<=NQ}

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

RW regions for "FCT02"


C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <A(PHI1)-W-EXACT-{1<=PHI1, PHI1<=MQ}>
C  <B(PHI1)-R-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>
C  <B(PHI1)-W-EXACT-{1<=PHI1, PHI1<=NQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>

C     BEGIN BLOCK

C  <A(PHI1)-W-EXACT-{1<=PHI1, PHI1<=MQ}>


      DO I = 1, MQ                                                      0019

C  <A(PHI1)-W-EXACT-{PHI1==I, 1<=I, I<=MQ}>

         A(I) = 1.0D0                                                   0020
      ENDDO

C  <B(PHI1)-W-EXACT-{1<=PHI1, PHI1<=NQ, 1<=I, MQ+1<=I}>


      DO J = 1, NQ                                                      0023

C  <B(PHI1)-W-EXACT-{PHI1==J, 1<=I, MQ+1<=I, 1<=J, J<=NQ}>

         B(J) = 1.0D0                                                   0024
      ENDDO

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <B(PHI1)-R-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{1<=PHI1, PHI1<=MQ, 1<=PHI2, PHI2<=NQ}>


      DO J = 1, NQ                                                      0027

C  <A(PHI1)-R-EXACT-{1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-R-EXACT-{PHI1==J, 1<=J, J<=NQ, 1<=MQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{PHI2==J, 1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>

         DO I = 1, MQ                                                   0028

C  <A(PHI1)-R-EXACT-{PHI1==I, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-R-EXACT-{PHI1==J, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <UTRA(PHI1,PHI2)-W-EXACT-{PHI1==I, PHI2==J, 1<=I, I<=MQ, 1<=J,
C    J<=NQ}>

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END

IN regions for "FCT02"

C     Check on block transformer, same as fct.f, but no wasted statement
C     such as return or continue.
C
C     The problem: no information about NQ and MQ or their relationship
C
C     The information gathered about the first loop is killed by the
C     third loop nest which can be entered or not. If it is not entered
C     I is preserved. If it is entered, I>=1 and I>=MQ+1. But there is
C     no way to know this is exactly the information gathered
C     before. Unless you use transformers computed in context.

      SUBROUTINE FCT02(UTRA)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER  (MP = 402, NP = 160)
      COMMON /ADVC/  MQ,NQ
      DIMENSION UTRA(MP,NP)
      DIMENSION B(NP),A(MP)

C  <B(PHI1)-IN-EXACT-{0==-1}>

C     BEGIN BLOCK

      DO I = 1, MQ                                                      0019
         A(I) = 1.0D0                                                   0020
      ENDDO

      DO J = 1, NQ                                                      0023
         B(J) = 1.0D0                                                   0024
      ENDDO

C  <A(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=MQ, 1<=NQ}>
C  <B(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=NQ, 1<=MQ}>


      DO J = 1, NQ                                                      0027

C  <A(PHI1)-IN-EXACT-{1<=PHI1, PHI1<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-IN-EXACT-{PHI1==J, 1<=J, J<=NQ, 1<=MQ}>

         DO I = 1, MQ                                                   0028

C  <A(PHI1)-IN-EXACT-{PHI1==I, 1<=I, I<=MQ, 1<=J, J<=NQ}>
C  <B(PHI1)-IN-EXACT-{PHI1==J, 1<=I, I<=MQ, 1<=J, J<=NQ}>

            UTRA(I,J) = B(J)+A(I)                                       0029
         ENDDO
      ENDDO

C     END BLOCK
      END
