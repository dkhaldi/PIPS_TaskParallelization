#
# AIPO
#
#
# compile generated freia_52
#

! initial function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophat, *imout_tophatLin, *imout_tophatLinRecon, *imWork1, *imWork2;    /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   int i_0, i_1;                                                        /*0023*/
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   int i_2, i_3;                                                        /*0027*/
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0, *w2_0;                                           /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   int i_4;                                                             /*0037*/
   //PIPS generated variable
   uint32_t i_5, i_6;                                                   /*0039*/
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   int i_7;                                                             /*0045*/
   //PIPS generated variable
   uint32_t i_8, i_9;                                                   /*0047*/
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   int i_10;                                                            /*0053*/
   //PIPS generated variable
   uint32_t i_11, i_12;                                                 /*0055*/
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   int i_13;                                                            /*0061*/
   //PIPS generated variable
   uint32_t i_14, i_15;                                                 /*0063*/
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   int i_16;                                                            /*0069*/
   //PIPS generated variable
   uint32_t i_17, i_18;                                                 /*0071*/
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   int i_19;                                                            /*0077*/
   //PIPS generated variable
   uint32_t i_20, i_21;                                                 /*0079*/
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   int i_22;                                                            /*0085*/
   //PIPS generated variable
   uint32_t i_23, i_24;                                                 /*0087*/
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   int i_25;                                                            /*0093*/
   //PIPS generated variable
   uint32_t i_26, i_27;                                                 /*0095*/
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   int i_28;                                                            /*0105*/
   //PIPS generated variable
   uint32_t i_29, i_30;                                                 /*0107*/
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   int i_31;                                                            /*0113*/
   //PIPS generated variable
   uint32_t i_32, i_33;                                                 /*0115*/
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   int i_34;                                                            /*0121*/
   //PIPS generated variable
   uint32_t i_35, i_36;                                                 /*0123*/
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   int i_37;                                                            /*0129*/
   //PIPS generated variable
   uint32_t i_38, i_39;                                                 /*0131*/
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   int i_40;                                                            /*0137*/
   //PIPS generated variable
   uint32_t i_41, i_42;                                                 /*0139*/
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   int i_43;                                                            /*0145*/
   //PIPS generated variable
   uint32_t i_44, i_45;                                                 /*0147*/
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   int i_46;                                                            /*0153*/
   //PIPS generated variable
   uint32_t i_47, i_48;                                                 /*0155*/
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   int i_49;                                                            /*0161*/
   //PIPS generated variable
   uint32_t i_50, i_51;                                                 /*0163*/
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophat = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);         /*0179*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imout_tophatLin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);      /*0181*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   imWork2 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0183*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   // 1st tophat
   
   
   freia_aipo_erode_8c(imWork1, imin, freia_morpho_kernel_8c);          /*0191*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0192*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0193*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0194*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0195*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0202*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0203*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0204*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0205*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0206*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   // freia_common_tx_image(imWork1, &fdout);
   
   
   freia_aipo_erode_8c(imout_tophat, imin, freia_morpho_kernel_8c);     /*0216*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0217*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0218*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0219*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0220*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0227*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0228*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0229*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0230*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0231*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/
   ret_1 |= freia_aipo_sub(imout_tophat, imin, imout_tophat);           /*0239*/
   
   
   _return2 = ret_1;                                                    /*0242*/
   freia_aipo_mul_const(imout_tophat, imout_tophat, 2);                 /*0243*/
   // for display
   
   // 2nd tophat
   err_0 |= freia_aipo_not(imWork1, imin);                              /*0247*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   w2_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0251*/

   freia_aipo_set_constant(w2_0, 255);                                  /*0253*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0270*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0277*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0278*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0279*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0280*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0281*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0289*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0302*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0306*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0313*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0314*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0315*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0316*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0317*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/
   err_1 |= _return20;                                                  /*0324*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0325*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0338*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0342*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0349*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0350*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0351*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0352*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0353*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/
   err_1 |= _return21;                                                  /*0360*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0361*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0374*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0378*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0385*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0386*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0387*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0388*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0389*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/
   err_1 |= _return17;                                                  /*0396*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0397*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0410*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0414*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0421*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0422*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0423*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0424*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0425*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/
   err_1 |= _return18;                                                  /*0432*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0433*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0446*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0450*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0457*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0458*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0459*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0460*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0461*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/
   err_1 |= _return14;                                                  /*0468*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0469*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0482*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0486*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0493*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0494*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0495*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0496*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0497*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/
   err_1 |= _return15;                                                  /*0504*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0505*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0518*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0522*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0529*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0530*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0531*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0532*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0533*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/
   err_1 |= _return16;                                                  /*0540*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0541*/

   err_1 |= freia_aipo_copy(imWork1, w2_0);                             /*0543*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w2_0);                                    /*0545*/
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   err_0 |= freia_aipo_not(imWork1, imWork1);                           /*0550*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   freia_aipo_sub(imout_tophatLin, imin, imWork1);                      /*0553*/
   freia_aipo_mul_const(imout_tophatLin, imout_tophatLin, 2);           /*0554*/
   // for display
   
   // 3nd tophat
   err_2 |= freia_aipo_not(imWork1, imin);                              /*0558*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/

   freia_aipo_set_constant(w2_1, 255);                                  /*0564*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0577*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0578*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0579*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0580*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0581*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0600*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0613*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0614*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0615*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0616*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0617*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/
   err_3 |= _return28;                                                  /*0635*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0636*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0649*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0650*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0651*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0652*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0653*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/
   err_3 |= _return29;                                                  /*0671*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0672*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0685*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0686*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0687*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0688*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0689*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/
   err_3 |= _return25;                                                  /*0707*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0708*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0721*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0722*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0723*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0724*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0725*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/
   err_3 |= _return26;                                                  /*0743*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0744*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0757*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0758*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0759*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0760*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0761*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/
   err_3 |= _return22;                                                  /*0779*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0780*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0793*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0794*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0795*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0796*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0797*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/
   err_3 |= _return23;                                                  /*0815*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0816*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0829*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0830*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0831*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0832*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0833*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   err_3 |= _return24;                                                  /*0851*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0852*/

   err_3 |= freia_aipo_copy(imWork1, w2_1);                             /*0854*/
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   err_2 |= freia_aipo_not(imWork1, imWork1);                           /*0861*/
   _return4 = err_2;                                                    /*0862*/

   ret_19 = freia_aipo_global_vol(imWork1, &volcurrent);                /*0864*/
   do {                                                                 /*0882*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      ret_20 |= freia_aipo_inf(imWork1, imWork1, imin);                 /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_aipo_global_vol(imWork1, &volcurrent);            /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   freia_aipo_sup(imWork2, imWork1, imin);                              /*0892*/
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophat);                            /*0906*/
   freia_common_destruct_data(imout_tophatLin);                         /*0907*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/
   freia_common_destruct_data(imWork2);                                 /*0910*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! graphs

// graph for dag "dag_0" of module "freia_52" in dot format
// DAG "dag_0": #i=1 #o=1 #c=207 #s=21 #I=2 #B=0 #A=0
digraph "dag_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "854 =" [shape=circle];
  "854 =" -> "861 !" [label="imWork1"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "854 =" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1"];
  "833 D8" [shape=box];
  "833 D8" -> "840 E8" [label="w1_1"];
  "832 D8" [shape=box];
  "832 D8" -> "833 D8" [label="w1_1"];
  "831 D8" [shape=box];
  "831 D8" -> "832 D8" [label="w1_1"];
  "830 D8" [shape=box];
  "830 D8" -> "831 D8" [label="w1_1"];
  "829 D8" [shape=box];
  "829 D8" -> "830 D8" [label="w1_1"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1"];
  "797 D8" [shape=box];
  "797 D8" -> "804 E8" [label="w1_1"];
  "796 D8" [shape=box];
  "796 D8" -> "797 D8" [label="w1_1"];
  "795 D8" [shape=box];
  "795 D8" -> "796 D8" [label="w1_1"];
  "794 D8" [shape=box];
  "794 D8" -> "795 D8" [label="w1_1"];
  "793 D8" [shape=box];
  "793 D8" -> "794 D8" [label="w1_1"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1"];
  "761 D8" [shape=box];
  "761 D8" -> "768 E8" [label="w1_1"];
  "760 D8" [shape=box];
  "760 D8" -> "761 D8" [label="w1_1"];
  "759 D8" [shape=box];
  "759 D8" -> "760 D8" [label="w1_1"];
  "758 D8" [shape=box];
  "758 D8" -> "759 D8" [label="w1_1"];
  "757 D8" [shape=box];
  "757 D8" -> "758 D8" [label="w1_1"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1"];
  "725 D8" [shape=box];
  "725 D8" -> "732 E8" [label="w1_1"];
  "724 D8" [shape=box];
  "724 D8" -> "725 D8" [label="w1_1"];
  "723 D8" [shape=box];
  "723 D8" -> "724 D8" [label="w1_1"];
  "722 D8" [shape=box];
  "722 D8" -> "723 D8" [label="w1_1"];
  "721 D8" [shape=box];
  "721 D8" -> "722 D8" [label="w1_1"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1"];
  "689 D8" [shape=box];
  "689 D8" -> "696 E8" [label="w1_1"];
  "688 D8" [shape=box];
  "688 D8" -> "689 D8" [label="w1_1"];
  "687 D8" [shape=box];
  "687 D8" -> "688 D8" [label="w1_1"];
  "686 D8" [shape=box];
  "686 D8" -> "687 D8" [label="w1_1"];
  "685 D8" [shape=box];
  "685 D8" -> "686 D8" [label="w1_1"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1"];
  "653 D8" [shape=box];
  "653 D8" -> "660 E8" [label="w1_1"];
  "652 D8" [shape=box];
  "652 D8" -> "653 D8" [label="w1_1"];
  "651 D8" [shape=box];
  "651 D8" -> "652 D8" [label="w1_1"];
  "650 D8" [shape=box];
  "650 D8" -> "651 D8" [label="w1_1"];
  "649 D8" [shape=box];
  "649 D8" -> "650 D8" [label="w1_1"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1"];
  "617 D8" [shape=box];
  "617 D8" -> "624 E8" [label="w1_1"];
  "616 D8" [shape=box];
  "616 D8" -> "617 D8" [label="w1_1"];
  "615 D8" [shape=box];
  "615 D8" -> "616 D8" [label="w1_1"];
  "614 D8" [shape=box];
  "614 D8" -> "615 D8" [label="w1_1"];
  "613 D8" [shape=box];
  "613 D8" -> "614 D8" [label="w1_1"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "636 <" [label="w2_1"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <" [label="w1_1"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1"];
  "581 D8" [shape=box];
  "581 D8" -> "588 E8" [label="w1_1"];
  "580 D8" [shape=box];
  "580 D8" -> "581 D8" [label="w1_1"];
  "579 D8" [shape=box];
  "579 D8" -> "580 D8" [label="w1_1"];
  "578 D8" [shape=box];
  "578 D8" -> "579 D8" [label="w1_1"];
  "577 D8" [shape=box];
  "577 D8" -> "578 D8" [label="w1_1"];
  "564 C" [shape=trapezium,orientation=270];
  "564 C" -> "600 <" [label="w2_1"];
  "558 !" [shape=trapezium,orientation=270];
  "558 !" -> "829 D8" [label="imWork1"];
  "558 !" -> "793 D8" [label="imWork1"];
  "558 !" -> "757 D8" [label="imWork1"];
  "558 !" -> "721 D8" [label="imWork1"];
  "558 !" -> "685 D8" [label="imWork1"];
  "558 !" -> "649 D8" [label="imWork1"];
  "558 !" -> "613 D8" [label="imWork1"];
  "558 !" -> "577 D8" [label="imWork1"];
  "554 *_" [shape=trapezium,orientation=270];
  "553 -" [shape=trapezium,orientation=270];
  "553 -" -> "554 *_" [label="imout_tophatLin"];
  "550 !" [shape=trapezium,orientation=270];
  "550 !" -> "553 -" [label="imWork1"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "543 =" [shape=circle];
  "543 =" -> "550 !" [label="imWork1"];
  "541 <" [shape=trapezium,orientation=270];
  "541 <" -> "543 =" [label="w2_0"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "533 E8" [shape=box];
  "533 E8" -> "541 <" [label="w1_0"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_0"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_0"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_0"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_0"];
  "522 D8" [shape=box];
  "522 D8" -> "529 E8" [label="w1_0"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0"];
  "518 D8" [shape=box];
  "518 D8" -> "519 D8" [label="w1_0"];
  "505 <" [shape=trapezium,orientation=270];
  "505 <" -> "541 <" [label="w2_0"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "497 E8" [shape=box];
  "497 E8" -> "505 <" [label="w1_0"];
  "496 E8" [shape=box];
  "496 E8" -> "497 E8" [label="w1_0"];
  "495 E8" [shape=box];
  "495 E8" -> "496 E8" [label="w1_0"];
  "494 E8" [shape=box];
  "494 E8" -> "495 E8" [label="w1_0"];
  "493 E8" [shape=box];
  "493 E8" -> "494 E8" [label="w1_0"];
  "486 D8" [shape=box];
  "486 D8" -> "493 E8" [label="w1_0"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0"];
  "482 D8" [shape=box];
  "482 D8" -> "483 D8" [label="w1_0"];
  "469 <" [shape=trapezium,orientation=270];
  "469 <" -> "505 <" [label="w2_0"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "461 E8" [shape=box];
  "461 E8" -> "469 <" [label="w1_0"];
  "460 E8" [shape=box];
  "460 E8" -> "461 E8" [label="w1_0"];
  "459 E8" [shape=box];
  "459 E8" -> "460 E8" [label="w1_0"];
  "458 E8" [shape=box];
  "458 E8" -> "459 E8" [label="w1_0"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_0"];
  "450 D8" [shape=box];
  "450 D8" -> "457 E8" [label="w1_0"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0"];
  "446 D8" [shape=box];
  "446 D8" -> "447 D8" [label="w1_0"];
  "433 <" [shape=trapezium,orientation=270];
  "433 <" -> "469 <" [label="w2_0"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "425 E8" [shape=box];
  "425 E8" -> "433 <" [label="w1_0"];
  "424 E8" [shape=box];
  "424 E8" -> "425 E8" [label="w1_0"];
  "423 E8" [shape=box];
  "423 E8" -> "424 E8" [label="w1_0"];
  "422 E8" [shape=box];
  "422 E8" -> "423 E8" [label="w1_0"];
  "421 E8" [shape=box];
  "421 E8" -> "422 E8" [label="w1_0"];
  "414 D8" [shape=box];
  "414 D8" -> "421 E8" [label="w1_0"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0"];
  "410 D8" [shape=box];
  "410 D8" -> "411 D8" [label="w1_0"];
  "397 <" [shape=trapezium,orientation=270];
  "397 <" -> "433 <" [label="w2_0"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "389 E8" [shape=box];
  "389 E8" -> "397 <" [label="w1_0"];
  "388 E8" [shape=box];
  "388 E8" -> "389 E8" [label="w1_0"];
  "387 E8" [shape=box];
  "387 E8" -> "388 E8" [label="w1_0"];
  "386 E8" [shape=box];
  "386 E8" -> "387 E8" [label="w1_0"];
  "385 E8" [shape=box];
  "385 E8" -> "386 E8" [label="w1_0"];
  "378 D8" [shape=box];
  "378 D8" -> "385 E8" [label="w1_0"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0"];
  "374 D8" [shape=box];
  "374 D8" -> "375 D8" [label="w1_0"];
  "361 <" [shape=trapezium,orientation=270];
  "361 <" -> "397 <" [label="w2_0"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "353 E8" [shape=box];
  "353 E8" -> "361 <" [label="w1_0"];
  "352 E8" [shape=box];
  "352 E8" -> "353 E8" [label="w1_0"];
  "351 E8" [shape=box];
  "351 E8" -> "352 E8" [label="w1_0"];
  "350 E8" [shape=box];
  "350 E8" -> "351 E8" [label="w1_0"];
  "349 E8" [shape=box];
  "349 E8" -> "350 E8" [label="w1_0"];
  "342 D8" [shape=box];
  "342 D8" -> "349 E8" [label="w1_0"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0"];
  "338 D8" [shape=box];
  "338 D8" -> "339 D8" [label="w1_0"];
  "325 <" [shape=trapezium,orientation=270];
  "325 <" -> "361 <" [label="w2_0"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "317 E8" [shape=box];
  "317 E8" -> "325 <" [label="w1_0"];
  "316 E8" [shape=box];
  "316 E8" -> "317 E8" [label="w1_0"];
  "315 E8" [shape=box];
  "315 E8" -> "316 E8" [label="w1_0"];
  "314 E8" [shape=box];
  "314 E8" -> "315 E8" [label="w1_0"];
  "313 E8" [shape=box];
  "313 E8" -> "314 E8" [label="w1_0"];
  "306 D8" [shape=box];
  "306 D8" -> "313 E8" [label="w1_0"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0"];
  "302 D8" [shape=box];
  "302 D8" -> "303 D8" [label="w1_0"];
  "289 <" [shape=trapezium,orientation=270];
  "289 <" -> "325 <" [label="w2_0"];
  "281 E8" [shape=box];
  "281 E8" -> "289 <" [label="w1_0"];
  "280 E8" [shape=box];
  "280 E8" -> "281 E8" [label="w1_0"];
  "279 E8" [shape=box];
  "279 E8" -> "280 E8" [label="w1_0"];
  "278 E8" [shape=box];
  "278 E8" -> "279 E8" [label="w1_0"];
  "277 E8" [shape=box];
  "277 E8" -> "278 E8" [label="w1_0"];
  "270 D8" [shape=box];
  "270 D8" -> "277 E8" [label="w1_0"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0"];
  "266 D8" [shape=box];
  "266 D8" -> "267 D8" [label="w1_0"];
  "253 C" [shape=trapezium,orientation=270];
  "253 C" -> "289 <" [label="w2_0"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "518 D8" [label="imWork1"];
  "247 !" -> "482 D8" [label="imWork1"];
  "247 !" -> "446 D8" [label="imWork1"];
  "247 !" -> "410 D8" [label="imWork1"];
  "247 !" -> "374 D8" [label="imWork1"];
  "247 !" -> "338 D8" [label="imWork1"];
  "247 !" -> "302 D8" [label="imWork1"];
  "247 !" -> "266 D8" [label="imWork1"];
  "243 *_" [shape=trapezium,orientation=270];
  "239 -" [shape=trapezium,orientation=270];
  "239 -" -> "243 *_" [label="imout_tophat"];
  "231 D8" [shape=box];
  "231 D8" -> "239 -" [label="imout_tophat"];
  "230 D8" [shape=box];
  "230 D8" -> "231 D8" [label="imout_tophat"];
  "229 D8" [shape=box];
  "229 D8" -> "230 D8" [label="imout_tophat"];
  "228 D8" [shape=box];
  "228 D8" -> "229 D8" [label="imout_tophat"];
  "227 D8" [shape=box];
  "227 D8" -> "228 D8" [label="imout_tophat"];
  "220 E8" [shape=box];
  "220 E8" -> "227 D8" [label="imout_tophat"];
  "219 E8" [shape=box];
  "219 E8" -> "220 E8" [label="imout_tophat"];
  "218 E8" [shape=box];
  "218 E8" -> "219 E8" [label="imout_tophat"];
  "217 E8" [shape=box];
  "217 E8" -> "218 E8" [label="imout_tophat"];
  "216 E8" [shape=box];
  "216 E8" -> "217 E8" [label="imout_tophat"];
  "206 D8" [shape=box];
  "205 D8" [shape=box];
  "205 D8" -> "206 D8" [label="imWork1"];
  "204 D8" [shape=box];
  "204 D8" -> "205 D8" [label="imWork1"];
  "203 D8" [shape=box];
  "203 D8" -> "204 D8" [label="imWork1"];
  "202 D8" [shape=box];
  "202 D8" -> "203 D8" [label="imWork1"];
  "195 E8" [shape=box];
  "195 E8" -> "202 D8" [label="imWork1"];
  "194 E8" [shape=box];
  "194 E8" -> "195 E8" [label="imWork1"];
  "193 E8" [shape=box];
  "193 E8" -> "194 E8" [label="imWork1"];
  "192 E8" [shape=box];
  "192 E8" -> "193 E8" [label="imWork1"];
  "191 E8" [shape=box];
  "191 E8" -> "192 E8" [label="imWork1"];
  "imin" -> "558 !";
  "imin" -> "553 -";
  "imin" -> "247 !";
  "imin" -> "239 -";
  "imin" -> "216 E8";
  "imin" -> "191 E8";
}
// graph for dag "dag_1" of module "freia_52" in dot format
// DAG "dag_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_2" of module "freia_52" in dot format
// DAG "dag_2": #i=2 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "dag_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "892 >" [shape=trapezium,orientation=270];
  "890 thr" [shape=parallelogram];
  "890 thr" -> "892 >" [label="imWork1"];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon"];
  "imWork1" -> "886 -";
  "imin" -> "892 >";
  "imin" -> "886 -";
}
// graph for dag "dag_cleaned_0" of module "freia_52" in dot format
// DAG "dag_cleaned_0": #i=1 #o=1 #c=84 #s=21 #I=0 #B=0 #A=0
digraph "dag_cleaned_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1_3"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1_13"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1_23"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1_33"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1_43"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1_53"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1_63"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1_73"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0_7"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0_17"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0_27"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0_37"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0_47"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0_57"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0_67"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0_77"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "dag_cleaned_1" of module "freia_52" in dot format
// DAG "dag_cleaned_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_cleaned_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_cleaned_2" of module "freia_52" in dot format
// DAG "dag_cleaned_2": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "dag_cleaned_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}

! updated function for AIPO

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophatLinRecon, *imWork1;                 /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20 = 0;                                             /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/
   // hardware accelerator generated variable
   freia_data2d *w1_0_5 = 0, *w1_0_15 = 0, *w1_0_25 = 0, *w1_0_35 = 0, *w1_0_45 = 0, *w1_0_55 = 0, *w1_0_65 = 0, *w1_0_75 = 0, *w1_0_79 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   w1_0_79 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_75 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_65 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_55 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_45 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_35 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_25 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_15 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_5 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   freia_aipo_not(imWork1, imin);                                       /*0247*/
   
   
   
   freia_aipo_dilate_8c(w1_0_79, imWork1, freia_morpho_kernel_8c);      /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k8_0);              /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0_75, w1_0, freia_morpho_k8_0);              /*0270*/
   
   
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k8_1);              /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0_65, w1_0, freia_morpho_k8_1);              /*0306*/
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k8_2);              /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0_55, w1_0, freia_morpho_k8_2);              /*0342*/
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k4_0);              /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0_45, w1_0, freia_morpho_k4_0);              /*0378*/
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k4_1);              /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0_35, w1_0, freia_morpho_k4_1);              /*0414*/
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k6_0);              /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0_25, w1_0, freia_morpho_k6_0);              /*0450*/
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k6_1);              /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0_15, w1_0, freia_morpho_k6_1);              /*0486*/
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   freia_aipo_dilate_8c(w1_0, w1_0_79, freia_morpho_k6_2);              /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0_5, w1_0, freia_morpho_k6_2);               /*0522*/
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_75, neighborTransposed_8);            /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   freia_aipo_inf_const(w2_1, w1_1, 255);                               /*0600*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_65, neighborTransposed_9);            /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   err_3 |= _return28;                                                  /*0635*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0636*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_55, neighborTransposed_10);           /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   err_3 |= _return29;                                                  /*0671*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0672*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_45, neighborTransposed_11);           /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   err_3 |= _return25;                                                  /*0707*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0708*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_35, neighborTransposed_12);           /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   err_3 |= _return26;                                                  /*0743*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0744*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_25, neighborTransposed_13);           /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   err_3 |= _return22;                                                  /*0779*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0780*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_15, neighborTransposed_14);           /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   err_3 |= _return23;                                                  /*0815*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0816*/
   
   
   
   
   freia_aipo_erode_8c(w1_1, w1_0_5, neighborTransposed_15);            /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   err_3 |= _return24;                                                  /*0851*/
   freia_aipo_inf(w2_1, w2_1, w1_1);                                    /*0852*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   freia_aipo_not(imWork1, w2_1);                                       /*0861*/
   _return4 = err_2;                                                    /*0862*/

   freia_aipo_global_vol(imWork1, &volcurrent);                         /*0864*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w1_0_5);
   freia_common_destruct_data(w1_0_15);
   freia_common_destruct_data(w1_0_25);
   freia_common_destruct_data(w1_0_35);
   freia_common_destruct_data(w1_0_45);
   freia_common_destruct_data(w1_0_55);
   freia_common_destruct_data(w1_0_65);
   freia_common_destruct_data(w1_0_75);
   freia_common_destruct_data(w1_0_79);
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      freia_aipo_inf(imWork1, imWork1, imin);                           /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      freia_aipo_global_vol(imWork1, &volcurrent);                      /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}
#
# SPOC
#

! initial function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophat, *imout_tophatLin, *imout_tophatLinRecon, *imWork1, *imWork2;    /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   int i_0, i_1;                                                        /*0023*/
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   int i_2, i_3;                                                        /*0027*/
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0, *w2_0;                                           /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   int i_4;                                                             /*0037*/
   //PIPS generated variable
   uint32_t i_5, i_6;                                                   /*0039*/
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   int i_7;                                                             /*0045*/
   //PIPS generated variable
   uint32_t i_8, i_9;                                                   /*0047*/
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   int i_10;                                                            /*0053*/
   //PIPS generated variable
   uint32_t i_11, i_12;                                                 /*0055*/
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   int i_13;                                                            /*0061*/
   //PIPS generated variable
   uint32_t i_14, i_15;                                                 /*0063*/
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   int i_16;                                                            /*0069*/
   //PIPS generated variable
   uint32_t i_17, i_18;                                                 /*0071*/
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   int i_19;                                                            /*0077*/
   //PIPS generated variable
   uint32_t i_20, i_21;                                                 /*0079*/
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   int i_22;                                                            /*0085*/
   //PIPS generated variable
   uint32_t i_23, i_24;                                                 /*0087*/
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   int i_25;                                                            /*0093*/
   //PIPS generated variable
   uint32_t i_26, i_27;                                                 /*0095*/
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   int i_28;                                                            /*0105*/
   //PIPS generated variable
   uint32_t i_29, i_30;                                                 /*0107*/
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   int i_31;                                                            /*0113*/
   //PIPS generated variable
   uint32_t i_32, i_33;                                                 /*0115*/
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   int i_34;                                                            /*0121*/
   //PIPS generated variable
   uint32_t i_35, i_36;                                                 /*0123*/
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   int i_37;                                                            /*0129*/
   //PIPS generated variable
   uint32_t i_38, i_39;                                                 /*0131*/
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   int i_40;                                                            /*0137*/
   //PIPS generated variable
   uint32_t i_41, i_42;                                                 /*0139*/
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   int i_43;                                                            /*0145*/
   //PIPS generated variable
   uint32_t i_44, i_45;                                                 /*0147*/
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   int i_46;                                                            /*0153*/
   //PIPS generated variable
   uint32_t i_47, i_48;                                                 /*0155*/
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   int i_49;                                                            /*0161*/
   //PIPS generated variable
   uint32_t i_50, i_51;                                                 /*0163*/
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophat = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);         /*0179*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imout_tophatLin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);      /*0181*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   imWork2 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0183*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   // 1st tophat
   
   
   freia_aipo_erode_8c(imWork1, imin, freia_morpho_kernel_8c);          /*0191*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0192*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0193*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0194*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0195*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0202*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0203*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0204*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0205*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0206*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   // freia_common_tx_image(imWork1, &fdout);
   
   
   freia_aipo_erode_8c(imout_tophat, imin, freia_morpho_kernel_8c);     /*0216*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0217*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0218*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0219*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0220*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0227*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0228*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0229*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0230*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0231*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/
   ret_1 |= freia_aipo_sub(imout_tophat, imin, imout_tophat);           /*0239*/
   
   
   _return2 = ret_1;                                                    /*0242*/
   freia_aipo_mul_const(imout_tophat, imout_tophat, 2);                 /*0243*/
   // for display
   
   // 2nd tophat
   err_0 |= freia_aipo_not(imWork1, imin);                              /*0247*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   w2_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0251*/

   freia_aipo_set_constant(w2_0, 255);                                  /*0253*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0270*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0277*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0278*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0279*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0280*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0281*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0289*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0302*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0306*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0313*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0314*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0315*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0316*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0317*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/
   err_1 |= _return20;                                                  /*0324*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0325*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0338*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0342*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0349*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0350*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0351*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0352*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0353*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/
   err_1 |= _return21;                                                  /*0360*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0361*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0374*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0378*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0385*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0386*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0387*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0388*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0389*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/
   err_1 |= _return17;                                                  /*0396*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0397*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0410*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0414*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0421*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0422*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0423*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0424*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0425*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/
   err_1 |= _return18;                                                  /*0432*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0433*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0446*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0450*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0457*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0458*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0459*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0460*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0461*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/
   err_1 |= _return14;                                                  /*0468*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0469*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0482*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0486*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0493*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0494*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0495*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0496*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0497*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/
   err_1 |= _return15;                                                  /*0504*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0505*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0518*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0522*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0529*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0530*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0531*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0532*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0533*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/
   err_1 |= _return16;                                                  /*0540*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0541*/

   err_1 |= freia_aipo_copy(imWork1, w2_0);                             /*0543*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w2_0);                                    /*0545*/
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   err_0 |= freia_aipo_not(imWork1, imWork1);                           /*0550*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   freia_aipo_sub(imout_tophatLin, imin, imWork1);                      /*0553*/
   freia_aipo_mul_const(imout_tophatLin, imout_tophatLin, 2);           /*0554*/
   // for display
   
   // 3nd tophat
   err_2 |= freia_aipo_not(imWork1, imin);                              /*0558*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/

   freia_aipo_set_constant(w2_1, 255);                                  /*0564*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0577*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0578*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0579*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0580*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0581*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0600*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0613*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0614*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0615*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0616*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0617*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/
   err_3 |= _return28;                                                  /*0635*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0636*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0649*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0650*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0651*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0652*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0653*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/
   err_3 |= _return29;                                                  /*0671*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0672*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0685*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0686*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0687*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0688*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0689*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/
   err_3 |= _return25;                                                  /*0707*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0708*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0721*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0722*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0723*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0724*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0725*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/
   err_3 |= _return26;                                                  /*0743*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0744*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0757*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0758*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0759*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0760*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0761*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/
   err_3 |= _return22;                                                  /*0779*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0780*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0793*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0794*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0795*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0796*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0797*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/
   err_3 |= _return23;                                                  /*0815*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0816*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0829*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0830*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0831*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0832*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0833*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   err_3 |= _return24;                                                  /*0851*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0852*/

   err_3 |= freia_aipo_copy(imWork1, w2_1);                             /*0854*/
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   err_2 |= freia_aipo_not(imWork1, imWork1);                           /*0861*/
   _return4 = err_2;                                                    /*0862*/

   ret_19 = freia_aipo_global_vol(imWork1, &volcurrent);                /*0864*/
   do {                                                                 /*0882*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      ret_20 |= freia_aipo_inf(imWork1, imWork1, imin);                 /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_aipo_global_vol(imWork1, &volcurrent);            /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   freia_aipo_sup(imWork2, imWork1, imin);                              /*0892*/
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophat);                            /*0906*/
   freia_common_destruct_data(imout_tophatLin);                         /*0907*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/
   freia_common_destruct_data(imWork2);                                 /*0910*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! graphs

// graph for dag "dag_0" of module "freia_52" in dot format
// DAG "dag_0": #i=1 #o=1 #c=207 #s=21 #I=2 #B=0 #A=0
digraph "dag_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "545 vol" [shape=diamond];
  "543 !" [shape=trapezium,orientation=270];
  "543 !" -> "545 vol" [label="imWork1"];
  "543 !" -> "imWork1";
  "542 ?" [shape=none];
  "542 ?" -> "544 ?" [arrowhead=empty,label="err_2"];
  "541 ?" [shape=none];
  "541 ?" -> "542 ?" [arrowhead=empty,label="_return10"];
  "538 =" [shape=circle];
  "538 =" -> "543 !" [label="imWork1"];
  "537 <" [shape=trapezium,orientation=270];
  "537 <" -> "538 =" [label="w2_1"];
  "536 ?" [shape=none];
  "536 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "511 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "533 E8" [shape=box];
  "533 E8" -> "537 <" [label="w1_1"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_1"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_1"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_1"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_1"];
  "526 D8" [shape=box];
  "526 D8" -> "529 E8" [label="w1_1"];
  "525 D8" [shape=box];
  "525 D8" -> "526 D8" [label="w1_1"];
  "524 D8" [shape=box];
  "524 D8" -> "525 D8" [label="w1_1"];
  "523 D8" [shape=box];
  "523 D8" -> "524 D8" [label="w1_1"];
  "522 D8" [shape=box];
  "522 D8" -> "523 D8" [label="w1_1"];
  "512 <" [shape=trapezium,orientation=270];
  "512 <" -> "537 <" [label="w2_1"];
  "511 ?" [shape=none];
  "511 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "511 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "508 E8" [shape=box];
  "508 E8" -> "512 <" [label="w1_1"];
  "507 E8" [shape=box];
  "507 E8" -> "508 E8" [label="w1_1"];
  "506 E8" [shape=box];
  "506 E8" -> "507 E8" [label="w1_1"];
  "505 E8" [shape=box];
  "505 E8" -> "506 E8" [label="w1_1"];
  "504 E8" [shape=box];
  "504 E8" -> "505 E8" [label="w1_1"];
  "501 D8" [shape=box];
  "501 D8" -> "504 E8" [label="w1_1"];
  "500 D8" [shape=box];
  "500 D8" -> "501 D8" [label="w1_1"];
  "499 D8" [shape=box];
  "499 D8" -> "500 D8" [label="w1_1"];
  "498 D8" [shape=box];
  "498 D8" -> "499 D8" [label="w1_1"];
  "497 D8" [shape=box];
  "497 D8" -> "498 D8" [label="w1_1"];
  "487 <" [shape=trapezium,orientation=270];
  "487 <" -> "512 <" [label="w2_1"];
  "486 ?" [shape=none];
  "486 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "483 E8" [shape=box];
  "483 E8" -> "487 <" [label="w1_1"];
  "482 E8" [shape=box];
  "482 E8" -> "483 E8" [label="w1_1"];
  "481 E8" [shape=box];
  "481 E8" -> "482 E8" [label="w1_1"];
  "480 E8" [shape=box];
  "480 E8" -> "481 E8" [label="w1_1"];
  "479 E8" [shape=box];
  "479 E8" -> "480 E8" [label="w1_1"];
  "476 D8" [shape=box];
  "476 D8" -> "479 E8" [label="w1_1"];
  "475 D8" [shape=box];
  "475 D8" -> "476 D8" [label="w1_1"];
  "474 D8" [shape=box];
  "474 D8" -> "475 D8" [label="w1_1"];
  "473 D8" [shape=box];
  "473 D8" -> "474 D8" [label="w1_1"];
  "472 D8" [shape=box];
  "472 D8" -> "473 D8" [label="w1_1"];
  "462 <" [shape=trapezium,orientation=270];
  "462 <" -> "487 <" [label="w2_1"];
  "461 ?" [shape=none];
  "461 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "458 E8" [shape=box];
  "458 E8" -> "462 <" [label="w1_1"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_1"];
  "456 E8" [shape=box];
  "456 E8" -> "457 E8" [label="w1_1"];
  "455 E8" [shape=box];
  "455 E8" -> "456 E8" [label="w1_1"];
  "454 E8" [shape=box];
  "454 E8" -> "455 E8" [label="w1_1"];
  "451 D8" [shape=box];
  "451 D8" -> "454 E8" [label="w1_1"];
  "450 D8" [shape=box];
  "450 D8" -> "451 D8" [label="w1_1"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_1"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_1"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_1"];
  "437 <" [shape=trapezium,orientation=270];
  "437 <" -> "462 <" [label="w2_1"];
  "436 ?" [shape=none];
  "436 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "433 E8" [shape=box];
  "433 E8" -> "437 <" [label="w1_1"];
  "432 E8" [shape=box];
  "432 E8" -> "433 E8" [label="w1_1"];
  "431 E8" [shape=box];
  "431 E8" -> "432 E8" [label="w1_1"];
  "430 E8" [shape=box];
  "430 E8" -> "431 E8" [label="w1_1"];
  "429 E8" [shape=box];
  "429 E8" -> "430 E8" [label="w1_1"];
  "426 D8" [shape=box];
  "426 D8" -> "429 E8" [label="w1_1"];
  "425 D8" [shape=box];
  "425 D8" -> "426 D8" [label="w1_1"];
  "424 D8" [shape=box];
  "424 D8" -> "425 D8" [label="w1_1"];
  "423 D8" [shape=box];
  "423 D8" -> "424 D8" [label="w1_1"];
  "422 D8" [shape=box];
  "422 D8" -> "423 D8" [label="w1_1"];
  "412 <" [shape=trapezium,orientation=270];
  "412 <" -> "437 <" [label="w2_1"];
  "411 ?" [shape=none];
  "411 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "411 ?" [arrowhead=empty,label="err_3"];
  "408 E8" [shape=box];
  "408 E8" -> "412 <" [label="w1_1"];
  "407 E8" [shape=box];
  "407 E8" -> "408 E8" [label="w1_1"];
  "406 E8" [shape=box];
  "406 E8" -> "407 E8" [label="w1_1"];
  "405 E8" [shape=box];
  "405 E8" -> "406 E8" [label="w1_1"];
  "404 E8" [shape=box];
  "404 E8" -> "405 E8" [label="w1_1"];
  "401 D8" [shape=box];
  "401 D8" -> "404 E8" [label="w1_1"];
  "400 D8" [shape=box];
  "400 D8" -> "401 D8" [label="w1_1"];
  "399 D8" [shape=box];
  "399 D8" -> "400 D8" [label="w1_1"];
  "398 D8" [shape=box];
  "398 D8" -> "399 D8" [label="w1_1"];
  "397 D8" [shape=box];
  "397 D8" -> "398 D8" [label="w1_1"];
  "387 <" [shape=trapezium,orientation=270];
  "387 <" -> "412 <" [label="w2_1"];
  "386 ?" [shape=none];
  "386 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "411 ?" [arrowhead=empty,label="err_3"];
  "383 E8" [shape=box];
  "383 E8" -> "387 <" [label="w1_1"];
  "382 E8" [shape=box];
  "382 E8" -> "383 E8" [label="w1_1"];
  "381 E8" [shape=box];
  "381 E8" -> "382 E8" [label="w1_1"];
  "380 E8" [shape=box];
  "380 E8" -> "381 E8" [label="w1_1"];
  "379 E8" [shape=box];
  "379 E8" -> "380 E8" [label="w1_1"];
  "376 D8" [shape=box];
  "376 D8" -> "379 E8" [label="w1_1"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_1"];
  "374 D8" [shape=box];
  "374 D8" -> "375 D8" [label="w1_1"];
  "373 D8" [shape=box];
  "373 D8" -> "374 D8" [label="w1_1"];
  "372 D8" [shape=box];
  "372 D8" -> "373 D8" [label="w1_1"];
  "362 <" [shape=trapezium,orientation=270];
  "362 <" -> "387 <" [label="w2_1"];
  "358 E8" [shape=box];
  "358 E8" -> "362 <" [label="w1_1"];
  "357 E8" [shape=box];
  "357 E8" -> "358 E8" [label="w1_1"];
  "356 E8" [shape=box];
  "356 E8" -> "357 E8" [label="w1_1"];
  "355 E8" [shape=box];
  "355 E8" -> "356 E8" [label="w1_1"];
  "354 E8" [shape=box];
  "354 E8" -> "355 E8" [label="w1_1"];
  "351 D8" [shape=box];
  "351 D8" -> "354 E8" [label="w1_1"];
  "350 D8" [shape=box];
  "350 D8" -> "351 D8" [label="w1_1"];
  "349 D8" [shape=box];
  "349 D8" -> "350 D8" [label="w1_1"];
  "348 D8" [shape=box];
  "348 D8" -> "349 D8" [label="w1_1"];
  "347 D8" [shape=box];
  "347 D8" -> "348 D8" [label="w1_1"];
  "337 C" [shape=trapezium,orientation=270];
  "337 C" -> "362 <" [label="w2_1"];
  "334 !" [shape=trapezium,orientation=270];
  "334 !" -> "522 D8" [label="imWork1"];
  "334 !" -> "497 D8" [label="imWork1"];
  "334 !" -> "472 D8" [label="imWork1"];
  "334 !" -> "447 D8" [label="imWork1"];
  "334 !" -> "422 D8" [label="imWork1"];
  "334 !" -> "397 D8" [label="imWork1"];
  "334 !" -> "372 D8" [label="imWork1"];
  "334 !" -> "347 D8" [label="imWork1"];
  "333 *_" [shape=trapezium,orientation=270];
  "332 -" [shape=trapezium,orientation=270];
  "332 -" -> "333 *_" [label="imout_tophatLin"];
  "330 !" [shape=trapezium,orientation=270];
  "330 !" -> "332 -" [label="imWork1"];
  "329 ?" [shape=none];
  "329 ?" -> "331 ?" [arrowhead=empty,label="err_0"];
  "328 ?" [shape=none];
  "328 ?" -> "329 ?" [arrowhead=empty,label="_return9"];
  "325 =" [shape=circle];
  "325 =" -> "330 !" [label="imWork1"];
  "324 <" [shape=trapezium,orientation=270];
  "324 <" -> "325 =" [label="w2_0"];
  "323 ?" [shape=none];
  "323 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "298 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "320 E8" [shape=box];
  "320 E8" -> "324 <" [label="w1_0"];
  "319 E8" [shape=box];
  "319 E8" -> "320 E8" [label="w1_0"];
  "318 E8" [shape=box];
  "318 E8" -> "319 E8" [label="w1_0"];
  "317 E8" [shape=box];
  "317 E8" -> "318 E8" [label="w1_0"];
  "316 E8" [shape=box];
  "316 E8" -> "317 E8" [label="w1_0"];
  "313 D8" [shape=box];
  "313 D8" -> "316 E8" [label="w1_0"];
  "312 D8" [shape=box];
  "312 D8" -> "313 D8" [label="w1_0"];
  "311 D8" [shape=box];
  "311 D8" -> "312 D8" [label="w1_0"];
  "310 D8" [shape=box];
  "310 D8" -> "311 D8" [label="w1_0"];
  "309 D8" [shape=box];
  "309 D8" -> "310 D8" [label="w1_0"];
  "299 <" [shape=trapezium,orientation=270];
  "299 <" -> "324 <" [label="w2_0"];
  "298 ?" [shape=none];
  "298 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "298 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "295 E8" [shape=box];
  "295 E8" -> "299 <" [label="w1_0"];
  "294 E8" [shape=box];
  "294 E8" -> "295 E8" [label="w1_0"];
  "293 E8" [shape=box];
  "293 E8" -> "294 E8" [label="w1_0"];
  "292 E8" [shape=box];
  "292 E8" -> "293 E8" [label="w1_0"];
  "291 E8" [shape=box];
  "291 E8" -> "292 E8" [label="w1_0"];
  "288 D8" [shape=box];
  "288 D8" -> "291 E8" [label="w1_0"];
  "287 D8" [shape=box];
  "287 D8" -> "288 D8" [label="w1_0"];
  "286 D8" [shape=box];
  "286 D8" -> "287 D8" [label="w1_0"];
  "285 D8" [shape=box];
  "285 D8" -> "286 D8" [label="w1_0"];
  "284 D8" [shape=box];
  "284 D8" -> "285 D8" [label="w1_0"];
  "274 <" [shape=trapezium,orientation=270];
  "274 <" -> "299 <" [label="w2_0"];
  "273 ?" [shape=none];
  "273 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "270 E8" [shape=box];
  "270 E8" -> "274 <" [label="w1_0"];
  "269 E8" [shape=box];
  "269 E8" -> "270 E8" [label="w1_0"];
  "268 E8" [shape=box];
  "268 E8" -> "269 E8" [label="w1_0"];
  "267 E8" [shape=box];
  "267 E8" -> "268 E8" [label="w1_0"];
  "266 E8" [shape=box];
  "266 E8" -> "267 E8" [label="w1_0"];
  "263 D8" [shape=box];
  "263 D8" -> "266 E8" [label="w1_0"];
  "262 D8" [shape=box];
  "262 D8" -> "263 D8" [label="w1_0"];
  "261 D8" [shape=box];
  "261 D8" -> "262 D8" [label="w1_0"];
  "260 D8" [shape=box];
  "260 D8" -> "261 D8" [label="w1_0"];
  "259 D8" [shape=box];
  "259 D8" -> "260 D8" [label="w1_0"];
  "249 <" [shape=trapezium,orientation=270];
  "249 <" -> "274 <" [label="w2_0"];
  "248 ?" [shape=none];
  "248 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "245 E8" [shape=box];
  "245 E8" -> "249 <" [label="w1_0"];
  "244 E8" [shape=box];
  "244 E8" -> "245 E8" [label="w1_0"];
  "243 E8" [shape=box];
  "243 E8" -> "244 E8" [label="w1_0"];
  "242 E8" [shape=box];
  "242 E8" -> "243 E8" [label="w1_0"];
  "241 E8" [shape=box];
  "241 E8" -> "242 E8" [label="w1_0"];
  "238 D8" [shape=box];
  "238 D8" -> "241 E8" [label="w1_0"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="w1_0"];
  "236 D8" [shape=box];
  "236 D8" -> "237 D8" [label="w1_0"];
  "235 D8" [shape=box];
  "235 D8" -> "236 D8" [label="w1_0"];
  "234 D8" [shape=box];
  "234 D8" -> "235 D8" [label="w1_0"];
  "224 <" [shape=trapezium,orientation=270];
  "224 <" -> "249 <" [label="w2_0"];
  "223 ?" [shape=none];
  "223 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "220 E8" [shape=box];
  "220 E8" -> "224 <" [label="w1_0"];
  "219 E8" [shape=box];
  "219 E8" -> "220 E8" [label="w1_0"];
  "218 E8" [shape=box];
  "218 E8" -> "219 E8" [label="w1_0"];
  "217 E8" [shape=box];
  "217 E8" -> "218 E8" [label="w1_0"];
  "216 E8" [shape=box];
  "216 E8" -> "217 E8" [label="w1_0"];
  "213 D8" [shape=box];
  "213 D8" -> "216 E8" [label="w1_0"];
  "212 D8" [shape=box];
  "212 D8" -> "213 D8" [label="w1_0"];
  "211 D8" [shape=box];
  "211 D8" -> "212 D8" [label="w1_0"];
  "210 D8" [shape=box];
  "210 D8" -> "211 D8" [label="w1_0"];
  "209 D8" [shape=box];
  "209 D8" -> "210 D8" [label="w1_0"];
  "199 <" [shape=trapezium,orientation=270];
  "199 <" -> "224 <" [label="w2_0"];
  "198 ?" [shape=none];
  "198 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "198 ?" [arrowhead=empty,label="err_1"];
  "195 E8" [shape=box];
  "195 E8" -> "199 <" [label="w1_0"];
  "194 E8" [shape=box];
  "194 E8" -> "195 E8" [label="w1_0"];
  "193 E8" [shape=box];
  "193 E8" -> "194 E8" [label="w1_0"];
  "192 E8" [shape=box];
  "192 E8" -> "193 E8" [label="w1_0"];
  "191 E8" [shape=box];
  "191 E8" -> "192 E8" [label="w1_0"];
  "188 D8" [shape=box];
  "188 D8" -> "191 E8" [label="w1_0"];
  "187 D8" [shape=box];
  "187 D8" -> "188 D8" [label="w1_0"];
  "186 D8" [shape=box];
  "186 D8" -> "187 D8" [label="w1_0"];
  "185 D8" [shape=box];
  "185 D8" -> "186 D8" [label="w1_0"];
  "184 D8" [shape=box];
  "184 D8" -> "185 D8" [label="w1_0"];
  "174 <" [shape=trapezium,orientation=270];
  "174 <" -> "199 <" [label="w2_0"];
  "173 ?" [shape=none];
  "173 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "198 ?" [arrowhead=empty,label="err_1"];
  "170 E8" [shape=box];
  "170 E8" -> "174 <" [label="w1_0"];
  "169 E8" [shape=box];
  "169 E8" -> "170 E8" [label="w1_0"];
  "168 E8" [shape=box];
  "168 E8" -> "169 E8" [label="w1_0"];
  "167 E8" [shape=box];
  "167 E8" -> "168 E8" [label="w1_0"];
  "166 E8" [shape=box];
  "166 E8" -> "167 E8" [label="w1_0"];
  "163 D8" [shape=box];
  "163 D8" -> "166 E8" [label="w1_0"];
  "162 D8" [shape=box];
  "162 D8" -> "163 D8" [label="w1_0"];
  "161 D8" [shape=box];
  "161 D8" -> "162 D8" [label="w1_0"];
  "160 D8" [shape=box];
  "160 D8" -> "161 D8" [label="w1_0"];
  "159 D8" [shape=box];
  "159 D8" -> "160 D8" [label="w1_0"];
  "149 <" [shape=trapezium,orientation=270];
  "149 <" -> "174 <" [label="w2_0"];
  "145 E8" [shape=box];
  "145 E8" -> "149 <" [label="w1_0"];
  "144 E8" [shape=box];
  "144 E8" -> "145 E8" [label="w1_0"];
  "143 E8" [shape=box];
  "143 E8" -> "144 E8" [label="w1_0"];
  "142 E8" [shape=box];
  "142 E8" -> "143 E8" [label="w1_0"];
  "141 E8" [shape=box];
  "141 E8" -> "142 E8" [label="w1_0"];
  "138 D8" [shape=box];
  "138 D8" -> "141 E8" [label="w1_0"];
  "137 D8" [shape=box];
  "137 D8" -> "138 D8" [label="w1_0"];
  "136 D8" [shape=box];
  "136 D8" -> "137 D8" [label="w1_0"];
  "135 D8" [shape=box];
  "135 D8" -> "136 D8" [label="w1_0"];
  "134 D8" [shape=box];
  "134 D8" -> "135 D8" [label="w1_0"];
  "124 C" [shape=trapezium,orientation=270];
  "124 C" -> "149 <" [label="w2_0"];
  "121 !" [shape=trapezium,orientation=270];
  "121 !" -> "309 D8" [label="imWork1"];
  "121 !" -> "284 D8" [label="imWork1"];
  "121 !" -> "259 D8" [label="imWork1"];
  "121 !" -> "234 D8" [label="imWork1"];
  "121 !" -> "209 D8" [label="imWork1"];
  "121 !" -> "184 D8" [label="imWork1"];
  "121 !" -> "159 D8" [label="imWork1"];
  "121 !" -> "134 D8" [label="imWork1"];
  "120 *_" [shape=trapezium,orientation=270];
  "118 -" [shape=trapezium,orientation=270];
  "118 -" -> "120 *_" [label="imout_tophat"];
  "114 D8" [shape=box];
  "114 D8" -> "118 -" [label="imout_tophat"];
  "113 D8" [shape=box];
  "113 D8" -> "114 D8" [label="imout_tophat"];
  "112 D8" [shape=box];
  "112 D8" -> "113 D8" [label="imout_tophat"];
  "111 D8" [shape=box];
  "111 D8" -> "112 D8" [label="imout_tophat"];
  "110 D8" [shape=box];
  "110 D8" -> "111 D8" [label="imout_tophat"];
  "107 E8" [shape=box];
  "107 E8" -> "110 D8" [label="imout_tophat"];
  "106 E8" [shape=box];
  "106 E8" -> "107 E8" [label="imout_tophat"];
  "105 E8" [shape=box];
  "105 E8" -> "106 E8" [label="imout_tophat"];
  "104 E8" [shape=box];
  "104 E8" -> "105 E8" [label="imout_tophat"];
  "103 E8" [shape=box];
  "103 E8" -> "104 E8" [label="imout_tophat"];
  "100 D8" [shape=box];
  "99 D8" [shape=box];
  "99 D8" -> "100 D8" [label="imWork1"];
  "98 D8" [shape=box];
  "98 D8" -> "99 D8" [label="imWork1"];
  "97 D8" [shape=box];
  "97 D8" -> "98 D8" [label="imWork1"];
  "96 D8" [shape=box];
  "96 D8" -> "97 D8" [label="imWork1"];
  "93 E8" [shape=box];
  "93 E8" -> "96 D8" [label="imWork1"];
  "92 E8" [shape=box];
  "92 E8" -> "93 E8" [label="imWork1"];
  "91 E8" [shape=box];
  "91 E8" -> "92 E8" [label="imWork1"];
  "90 E8" [shape=box];
  "90 E8" -> "91 E8" [label="imWork1"];
  "89 E8" [shape=box];
  "89 E8" -> "90 E8" [label="imWork1"];
  "imin" -> "334 !";
  "imin" -> "332 -";
  "imin" -> "121 !";
  "imin" -> "118 -";
  "imin" -> "103 E8";
  "imin" -> "89 E8";
}
// graph for dag "dag_1" of module "freia_52" in dot format
// DAG "dag_1": #i=2 #o=1 #c=10 #s=24 #I=0 #B=0 #A=0
digraph "dag_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "604 vol" [shape=diamond];
  "603 ?" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "596 vol" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "602 ?" [shape=none];
  "594 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "601 ?" [shape=none];
  "601 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "594 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "587 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "604 vol" [label="imWork1"];
  "600 <" -> "imWork1'";
  "599 ?" [shape=none];
  "599 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "593 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "586 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "596 vol" [shape=diamond];
  "596 vol" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "596 vol" -> "603 ?" [arrowhead=empty,label="volcurrent"];
  "594 ?" [shape=none];
  "594 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "593 ?" [shape=none];
  "593 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "587 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "592 <" [shape=trapezium,orientation=270];
  "592 <" -> "600 <" [label="imWork1"];
  "592 <" -> "596 vol" [label="imWork1"];
  "591 ?" [shape=none];
  "591 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "586 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "587 ?" [shape=none];
  "587 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "586 ?" [shape=none];
  "586 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "585 <" [shape=trapezium,orientation=270];
  "585 <" -> "592 <" [label="imWork1"];
  "584 ?" [shape=none];
  "584 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "580 ?" [shape=none];
  "580 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "579 ?" [shape=none];
  "579 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "578 <" [shape=trapezium,orientation=270];
  "578 <" -> "585 <" [label="imWork1"];
  "577 ?" [shape=none];
  "577 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "573 ?" [shape=none];
  "573 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "572 ?" [shape=none];
  "572 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "571 <" [shape=trapezium,orientation=270];
  "571 <" -> "578 <" [label="imWork1"];
  "570 ?" [shape=none];
  "570 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "566 ?" [shape=none];
  "566 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "565 ?" [shape=none];
  "565 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "564 <" [shape=trapezium,orientation=270];
  "564 <" -> "571 <" [label="imWork1"];
  "563 ?" [shape=none];
  "563 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "565 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "559 ?" [shape=none];
  "559 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "559 ?" [arrowhead=empty,label="ret_19"];
  "558 ?" [shape=none];
  "558 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "559 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "557 <" [shape=trapezium,orientation=270];
  "557 <" -> "564 <" [label="imWork1"];
  "556 ?" [shape=none];
  "556 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "565 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "558 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "556 ?" [arrowhead=empty,label="ret_20"];
  "552 ?" [shape=none];
  "552 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "559 ?" [arrowhead=empty,label="ret_19"];
  "551 ?" [shape=none];
  "551 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "559 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "552 ?" [arrowhead=empty,label="_return7"];
  "550 <" [shape=trapezium,orientation=270];
  "550 <" -> "557 <" [label="imWork1"];
  "imin" -> "600 <";
  "imin" -> "592 <";
  "imin" -> "585 <";
  "imin" -> "578 <";
  "imin" -> "571 <";
  "imin" -> "564 <";
  "imin" -> "557 <";
  "imin" -> "550 <";
  "imWork1" -> "550 <";
}
// graph for dag "dag_2" of module "freia_52" in dot format
// DAG "dag_2": #i=2 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "dag_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "609 >" [shape=trapezium,orientation=270];
  "608 thr" [shape=parallelogram];
  "608 thr" -> "609 >" [label="imWork1"];
  "608 thr" -> "imWork1'";
  "607 *_" [shape=trapezium,orientation=270];
  "607 *_" -> "608 thr" [label="imout_tophatLinRecon"];
  "606 -" [shape=trapezium,orientation=270];
  "606 -" -> "607 *_" [label="imout_tophatLinRecon"];
  "imWork1" -> "606 -";
  "imin" -> "609 >";
  "imin" -> "606 -";
}
// graph for dag "dag_cleaned_0" of module "freia_52" in dot format
// DAG "dag_cleaned_0": #i=1 #o=1 #c=84 #s=21 #I=0 #B=0 #A=0
digraph "dag_cleaned_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "545 vol" [shape=diamond];
  "543 !" [shape=trapezium,orientation=270];
  "543 !" -> "545 vol" [label="imWork1"];
  "543 !" -> "imWork1";
  "542 ?" [shape=none];
  "542 ?" -> "544 ?" [arrowhead=empty,label="err_2"];
  "541 ?" [shape=none];
  "541 ?" -> "542 ?" [arrowhead=empty,label="_return10"];
  "537 <" [shape=trapezium,orientation=270];
  "537 <" -> "543 !" [label="w2_1"];
  "536 ?" [shape=none];
  "536 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "511 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "533 E8" [shape=box];
  "533 E8" -> "537 <" [label="w1_1"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_1_1"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_1_2"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_1_3"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_1_4"];
  "512 <" [shape=trapezium,orientation=270];
  "512 <" -> "537 <" [label="w2_1_1"];
  "511 ?" [shape=none];
  "511 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "511 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "508 E8" [shape=box];
  "508 E8" -> "512 <" [label="w1_1_10"];
  "507 E8" [shape=box];
  "507 E8" -> "508 E8" [label="w1_1_11"];
  "506 E8" [shape=box];
  "506 E8" -> "507 E8" [label="w1_1_12"];
  "505 E8" [shape=box];
  "505 E8" -> "506 E8" [label="w1_1_13"];
  "504 E8" [shape=box];
  "504 E8" -> "505 E8" [label="w1_1_14"];
  "487 <" [shape=trapezium,orientation=270];
  "487 <" -> "512 <" [label="w2_1_2"];
  "486 ?" [shape=none];
  "486 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "486 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "483 E8" [shape=box];
  "483 E8" -> "487 <" [label="w1_1_20"];
  "482 E8" [shape=box];
  "482 E8" -> "483 E8" [label="w1_1_21"];
  "481 E8" [shape=box];
  "481 E8" -> "482 E8" [label="w1_1_22"];
  "480 E8" [shape=box];
  "480 E8" -> "481 E8" [label="w1_1_23"];
  "479 E8" [shape=box];
  "479 E8" -> "480 E8" [label="w1_1_24"];
  "462 <" [shape=trapezium,orientation=270];
  "462 <" -> "487 <" [label="w2_1_3"];
  "461 ?" [shape=none];
  "461 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "461 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "458 E8" [shape=box];
  "458 E8" -> "462 <" [label="w1_1_30"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_1_31"];
  "456 E8" [shape=box];
  "456 E8" -> "457 E8" [label="w1_1_32"];
  "455 E8" [shape=box];
  "455 E8" -> "456 E8" [label="w1_1_33"];
  "454 E8" [shape=box];
  "454 E8" -> "455 E8" [label="w1_1_34"];
  "437 <" [shape=trapezium,orientation=270];
  "437 <" -> "462 <" [label="w2_1_4"];
  "436 ?" [shape=none];
  "436 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "436 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "433 E8" [shape=box];
  "433 E8" -> "437 <" [label="w1_1_40"];
  "432 E8" [shape=box];
  "432 E8" -> "433 E8" [label="w1_1_41"];
  "431 E8" [shape=box];
  "431 E8" -> "432 E8" [label="w1_1_42"];
  "430 E8" [shape=box];
  "430 E8" -> "431 E8" [label="w1_1_43"];
  "429 E8" [shape=box];
  "429 E8" -> "430 E8" [label="w1_1_44"];
  "412 <" [shape=trapezium,orientation=270];
  "412 <" -> "437 <" [label="w2_1_5"];
  "411 ?" [shape=none];
  "411 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "411 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "411 ?" [arrowhead=empty,label="err_3"];
  "408 E8" [shape=box];
  "408 E8" -> "412 <" [label="w1_1_50"];
  "407 E8" [shape=box];
  "407 E8" -> "408 E8" [label="w1_1_51"];
  "406 E8" [shape=box];
  "406 E8" -> "407 E8" [label="w1_1_52"];
  "405 E8" [shape=box];
  "405 E8" -> "406 E8" [label="w1_1_53"];
  "404 E8" [shape=box];
  "404 E8" -> "405 E8" [label="w1_1_54"];
  "387 <" [shape=trapezium,orientation=270];
  "387 <" -> "412 <" [label="w2_1_6"];
  "386 ?" [shape=none];
  "386 ?" -> "541 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "536 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "511 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "486 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "461 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "436 ?" [arrowhead=empty,label="err_3"];
  "386 ?" -> "411 ?" [arrowhead=empty,label="err_3"];
  "383 E8" [shape=box];
  "383 E8" -> "387 <" [label="w1_1_60"];
  "382 E8" [shape=box];
  "382 E8" -> "383 E8" [label="w1_1_61"];
  "381 E8" [shape=box];
  "381 E8" -> "382 E8" [label="w1_1_62"];
  "380 E8" [shape=box];
  "380 E8" -> "381 E8" [label="w1_1_63"];
  "379 E8" [shape=box];
  "379 E8" -> "380 E8" [label="w1_1_64"];
  "362 <_" [shape=trapezium,orientation=270];
  "362 <_" -> "387 <" [label="w2_1_7"];
  "358 E8" [shape=box];
  "358 E8" -> "362 <_" [label="w1_1_70"];
  "357 E8" [shape=box];
  "357 E8" -> "358 E8" [label="w1_1_71"];
  "356 E8" [shape=box];
  "356 E8" -> "357 E8" [label="w1_1_72"];
  "355 E8" [shape=box];
  "355 E8" -> "356 E8" [label="w1_1_73"];
  "354 E8" [shape=box];
  "354 E8" -> "355 E8" [label="w1_1_74"];
  "329 ?" [shape=none];
  "329 ?" -> "331 ?" [arrowhead=empty,label="err_0"];
  "328 ?" [shape=none];
  "328 ?" -> "329 ?" [arrowhead=empty,label="_return9"];
  "323 ?" [shape=none];
  "323 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "298 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "313 D8" [shape=box];
  "313 D8" -> "529 E8" [label="w1_0_5"];
  "312 D8" [shape=box];
  "312 D8" -> "313 D8" [label="w1_0_6"];
  "311 D8" [shape=box];
  "311 D8" -> "312 D8" [label="w1_0_7"];
  "310 D8" [shape=box];
  "310 D8" -> "311 D8" [label="w1_0_8"];
  "298 ?" [shape=none];
  "298 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "298 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "288 D8" [shape=box];
  "288 D8" -> "504 E8" [label="w1_0_15"];
  "287 D8" [shape=box];
  "287 D8" -> "288 D8" [label="w1_0_16"];
  "286 D8" [shape=box];
  "286 D8" -> "287 D8" [label="w1_0_17"];
  "285 D8" [shape=box];
  "285 D8" -> "286 D8" [label="w1_0_18"];
  "273 ?" [shape=none];
  "273 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "273 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "263 D8" [shape=box];
  "263 D8" -> "479 E8" [label="w1_0_25"];
  "262 D8" [shape=box];
  "262 D8" -> "263 D8" [label="w1_0_26"];
  "261 D8" [shape=box];
  "261 D8" -> "262 D8" [label="w1_0_27"];
  "260 D8" [shape=box];
  "260 D8" -> "261 D8" [label="w1_0_28"];
  "248 ?" [shape=none];
  "248 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "248 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "238 D8" [shape=box];
  "238 D8" -> "454 E8" [label="w1_0_35"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="w1_0_36"];
  "236 D8" [shape=box];
  "236 D8" -> "237 D8" [label="w1_0_37"];
  "235 D8" [shape=box];
  "235 D8" -> "236 D8" [label="w1_0_38"];
  "223 ?" [shape=none];
  "223 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "223 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "213 D8" [shape=box];
  "213 D8" -> "429 E8" [label="w1_0_45"];
  "212 D8" [shape=box];
  "212 D8" -> "213 D8" [label="w1_0_46"];
  "211 D8" [shape=box];
  "211 D8" -> "212 D8" [label="w1_0_47"];
  "210 D8" [shape=box];
  "210 D8" -> "211 D8" [label="w1_0_48"];
  "198 ?" [shape=none];
  "198 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "198 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "198 ?" [arrowhead=empty,label="err_1"];
  "188 D8" [shape=box];
  "188 D8" -> "404 E8" [label="w1_0_55"];
  "187 D8" [shape=box];
  "187 D8" -> "188 D8" [label="w1_0_56"];
  "186 D8" [shape=box];
  "186 D8" -> "187 D8" [label="w1_0_57"];
  "185 D8" [shape=box];
  "185 D8" -> "186 D8" [label="w1_0_58"];
  "173 ?" [shape=none];
  "173 ?" -> "328 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "323 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "298 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "273 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "248 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "223 ?" [arrowhead=empty,label="err_1"];
  "173 ?" -> "198 ?" [arrowhead=empty,label="err_1"];
  "163 D8" [shape=box];
  "163 D8" -> "379 E8" [label="w1_0_65"];
  "162 D8" [shape=box];
  "162 D8" -> "163 D8" [label="w1_0_66"];
  "161 D8" [shape=box];
  "161 D8" -> "162 D8" [label="w1_0_67"];
  "160 D8" [shape=box];
  "160 D8" -> "161 D8" [label="w1_0_68"];
  "138 D8" [shape=box];
  "138 D8" -> "354 E8" [label="w1_0_75"];
  "137 D8" [shape=box];
  "137 D8" -> "138 D8" [label="w1_0_76"];
  "136 D8" [shape=box];
  "136 D8" -> "137 D8" [label="w1_0_77"];
  "135 D8" [shape=box];
  "135 D8" -> "136 D8" [label="w1_0_78"];
  "134 D8" [shape=box];
  "134 D8" -> "310 D8" [label="w1_0_79"];
  "134 D8" -> "285 D8" [label="w1_0_79"];
  "134 D8" -> "260 D8" [label="w1_0_79"];
  "134 D8" -> "235 D8" [label="w1_0_79"];
  "134 D8" -> "210 D8" [label="w1_0_79"];
  "134 D8" -> "185 D8" [label="w1_0_79"];
  "134 D8" -> "160 D8" [label="w1_0_79"];
  "134 D8" -> "135 D8" [label="w1_0_79"];
  "121 !" [shape=trapezium,orientation=270];
  "121 !" -> "134 D8" [label="imWork1_5"];
  "imin" -> "121 !";
}
// graph for dag "dag_cleaned_1" of module "freia_52" in dot format
// DAG "dag_cleaned_1": #i=2 #o=1 #c=10 #s=24 #I=0 #B=0 #A=0
digraph "dag_cleaned_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "604 vol" [shape=diamond];
  "603 ?" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "596 vol" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "602 ?" [shape=none];
  "594 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "601 ?" [shape=none];
  "601 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "594 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "587 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "604 vol" [label="imWork1"];
  "600 <" -> "imWork1'";
  "599 ?" [shape=none];
  "599 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "593 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "586 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "596 vol" [shape=diamond];
  "596 vol" -> "604 vol" [arrowhead=empty,label="volcurrent"];
  "596 vol" -> "603 ?" [arrowhead=empty,label="volcurrent"];
  "594 ?" [shape=none];
  "594 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "593 ?" [shape=none];
  "593 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "593 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "587 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "592 <" [shape=trapezium,orientation=270];
  "592 <" -> "600 <" [label="imWork1_16"];
  "592 <" -> "596 vol" [label="imWork1_16"];
  "591 ?" [shape=none];
  "591 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "591 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "586 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "587 ?" [shape=none];
  "587 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "587 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "586 ?" [shape=none];
  "586 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "586 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "580 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "585 <" [shape=trapezium,orientation=270];
  "585 <" -> "592 <" [label="imWork1_17"];
  "584 ?" [shape=none];
  "584 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "584 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "579 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "580 ?" [shape=none];
  "580 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "580 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "579 ?" [shape=none];
  "579 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "579 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "573 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "578 <" [shape=trapezium,orientation=270];
  "578 <" -> "585 <" [label="imWork1_18"];
  "577 ?" [shape=none];
  "577 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "577 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "572 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "573 ?" [shape=none];
  "573 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "573 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "572 ?" [shape=none];
  "572 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "572 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "566 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "571 <" [shape=trapezium,orientation=270];
  "571 <" -> "578 <" [label="imWork1_19"];
  "570 ?" [shape=none];
  "570 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "570 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "565 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "566 ?" [shape=none];
  "566 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "566 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "565 ?" [shape=none];
  "565 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "565 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "559 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "564 <" [shape=trapezium,orientation=270];
  "564 <" -> "571 <" [label="imWork1_20"];
  "563 ?" [shape=none];
  "563 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "563 ?" -> "565 ?" [arrowhead=empty,label="ret_20"];
  "558 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "559 ?" [shape=none];
  "559 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "559 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "559 ?" [arrowhead=empty,label="ret_19"];
  "558 ?" [shape=none];
  "558 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "558 ?" -> "559 ?" [arrowhead=empty,label="_return7"];
  "552 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "557 <" [shape=trapezium,orientation=270];
  "557 <" -> "564 <" [label="imWork1_21"];
  "556 ?" [shape=none];
  "556 ?" -> "601 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "599 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "593 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "591 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "586 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "584 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "579 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "577 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "572 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "570 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "565 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "563 ?" [arrowhead=empty,label="ret_20"];
  "556 ?" -> "558 ?" [arrowhead=empty,label="ret_20"];
  "551 ?" -> "556 ?" [arrowhead=empty,label="ret_20"];
  "552 ?" [shape=none];
  "552 ?" -> "602 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "594 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "587 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "580 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "573 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "566 ?" [arrowhead=empty,label="ret_19"];
  "552 ?" -> "559 ?" [arrowhead=empty,label="ret_19"];
  "551 ?" [shape=none];
  "551 ?" -> "602 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "601 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "594 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "593 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "587 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "586 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "580 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "579 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "573 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "572 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "566 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "565 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "559 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "558 ?" [arrowhead=empty,label="_return7"];
  "551 ?" -> "552 ?" [arrowhead=empty,label="_return7"];
  "550 <" [shape=trapezium,orientation=270];
  "550 <" -> "557 <" [label="imWork1_22"];
  "imin" -> "600 <";
  "imin" -> "592 <";
  "imin" -> "585 <";
  "imin" -> "578 <";
  "imin" -> "571 <";
  "imin" -> "564 <";
  "imin" -> "557 <";
  "imin" -> "550 <";
  "imWork1" -> "550 <";
}
// graph for dag "dag_cleaned_2" of module "freia_52" in dot format
// DAG "dag_cleaned_2": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "dag_cleaned_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "608 thr" [shape=parallelogram];
  "608 thr" -> "imWork1'";
  "607 *_" [shape=trapezium,orientation=270];
  "607 *_" -> "608 thr" [label="imout_tophatLinRecon"];
  "606 -" [shape=trapezium,orientation=270];
  "606 -" -> "607 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "606 -";
  "imin" -> "606 -";
}
// graph for dag "freia_52_spoc_helper_0_0" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_0": #i=1 #o=2 #c=12 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "w1_0_79" [shape=circle];
  "w2_1_7" [shape=circle];

  // computation vertices
  "362 <_" [shape=trapezium,orientation=270];
  "362 <_" -> "w2_1_7";
  "358 E8" [shape=box];
  "358 E8" -> "362 <_" [label="w1_1_70"];
  "357 E8" [shape=box];
  "357 E8" -> "358 E8" [label="w1_1_71"];
  "356 E8" [shape=box];
  "356 E8" -> "357 E8" [label="w1_1_72"];
  "355 E8" [shape=box];
  "355 E8" -> "356 E8" [label="w1_1_73"];
  "354 E8" [shape=box];
  "354 E8" -> "355 E8" [label="w1_1_74"];
  "138 D8" [shape=box];
  "138 D8" -> "354 E8" [label="w1_0_75"];
  "137 D8" [shape=box];
  "137 D8" -> "138 D8" [label="w1_0_76"];
  "136 D8" [shape=box];
  "136 D8" -> "137 D8" [label="w1_0_77"];
  "135 D8" [shape=box];
  "135 D8" -> "136 D8" [label="w1_0_78"];
  "134 D8" [shape=box];
  "134 D8" -> "135 D8" [label="w1_0_79"];
  "134 D8" -> "w1_0_79";
  "121 !" [shape=trapezium,orientation=270];
  "121 !" -> "134 D8" [label="imWork1_5"];
  "imin" -> "121 !";
}
// graph for dag "freia_52_spoc_helper_0_1" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_1": #i=1 #o=2 #c=18 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_1" {
  // inputs
  "w1_0_79" [shape=circle];

  // outputs
  "w1_1_60" [shape=circle];
  "w1_1_50" [shape=circle];

  // computation vertices
  "408 E8" [shape=box];
  "408 E8" -> "w1_1_50";
  "407 E8" [shape=box];
  "407 E8" -> "408 E8" [label="w1_1_51"];
  "406 E8" [shape=box];
  "406 E8" -> "407 E8" [label="w1_1_52"];
  "405 E8" [shape=box];
  "405 E8" -> "406 E8" [label="w1_1_53"];
  "404 E8" [shape=box];
  "404 E8" -> "405 E8" [label="w1_1_54"];
  "383 E8" [shape=box];
  "383 E8" -> "w1_1_60";
  "382 E8" [shape=box];
  "382 E8" -> "383 E8" [label="w1_1_61"];
  "381 E8" [shape=box];
  "381 E8" -> "382 E8" [label="w1_1_62"];
  "380 E8" [shape=box];
  "380 E8" -> "381 E8" [label="w1_1_63"];
  "379 E8" [shape=box];
  "379 E8" -> "380 E8" [label="w1_1_64"];
  "188 D8" [shape=box];
  "188 D8" -> "404 E8" [label="w1_0_55"];
  "187 D8" [shape=box];
  "187 D8" -> "188 D8" [label="w1_0_56"];
  "186 D8" [shape=box];
  "186 D8" -> "187 D8" [label="w1_0_57"];
  "185 D8" [shape=box];
  "185 D8" -> "186 D8" [label="w1_0_58"];
  "163 D8" [shape=box];
  "163 D8" -> "379 E8" [label="w1_0_65"];
  "162 D8" [shape=box];
  "162 D8" -> "163 D8" [label="w1_0_66"];
  "161 D8" [shape=box];
  "161 D8" -> "162 D8" [label="w1_0_67"];
  "160 D8" [shape=box];
  "160 D8" -> "161 D8" [label="w1_0_68"];
  "w1_0_79" -> "185 D8";
  "w1_0_79" -> "160 D8";
}
// graph for dag "freia_52_spoc_helper_0_10" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_10": #i=2 #o=1 #c=12 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_10" {
  // inputs
  "w1_0_79" [shape=circle];
  "w2_1_1" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "545 vol" [shape=diamond];
  "543 !" [shape=trapezium,orientation=270];
  "543 !" -> "545 vol" [label="imWork1"];
  "543 !" -> "imWork1";
  "537 <" [shape=trapezium,orientation=270];
  "537 <" -> "543 !" [label="w2_1"];
  "w2_1_1" -> "537 <";
  "533 E8" [shape=box];
  "533 E8" -> "537 <" [label="w1_1"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_1_1"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_1_2"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_1_3"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_1_4"];
  "313 D8" [shape=box];
  "313 D8" -> "529 E8" [label="w1_0_5"];
  "312 D8" [shape=box];
  "312 D8" -> "313 D8" [label="w1_0_6"];
  "311 D8" [shape=box];
  "311 D8" -> "312 D8" [label="w1_0_7"];
  "310 D8" [shape=box];
  "310 D8" -> "311 D8" [label="w1_0_8"];
  "w1_0_79" -> "310 D8";
}
// graph for dag "freia_52_spoc_helper_0_2" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_2": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_2" {
  // inputs
  "w1_1_60" [shape=circle];
  "w2_1_7" [shape=circle];

  // outputs
  "w2_1_6" [shape=circle];

  // computation vertices
  "387 <" [shape=trapezium,orientation=270];
  "387 <" -> "w2_1_6";
  "w1_1_60" -> "387 <";
  "w2_1_7" -> "387 <";
}
// graph for dag "freia_52_spoc_helper_0_3" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_3": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_3" {
  // inputs
  "w1_1_50" [shape=circle];
  "w2_1_6" [shape=circle];

  // outputs
  "w2_1_5" [shape=circle];

  // computation vertices
  "412 <" [shape=trapezium,orientation=270];
  "412 <" -> "w2_1_5";
  "w1_1_50" -> "412 <";
  "w2_1_6" -> "412 <";
}
// graph for dag "freia_52_spoc_helper_0_4" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_4": #i=1 #o=2 #c=18 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_4" {
  // inputs
  "w1_0_79" [shape=circle];

  // outputs
  "w1_1_40" [shape=circle];
  "w1_1_30" [shape=circle];

  // computation vertices
  "458 E8" [shape=box];
  "458 E8" -> "w1_1_30";
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_1_31"];
  "456 E8" [shape=box];
  "456 E8" -> "457 E8" [label="w1_1_32"];
  "455 E8" [shape=box];
  "455 E8" -> "456 E8" [label="w1_1_33"];
  "454 E8" [shape=box];
  "454 E8" -> "455 E8" [label="w1_1_34"];
  "433 E8" [shape=box];
  "433 E8" -> "w1_1_40";
  "432 E8" [shape=box];
  "432 E8" -> "433 E8" [label="w1_1_41"];
  "431 E8" [shape=box];
  "431 E8" -> "432 E8" [label="w1_1_42"];
  "430 E8" [shape=box];
  "430 E8" -> "431 E8" [label="w1_1_43"];
  "429 E8" [shape=box];
  "429 E8" -> "430 E8" [label="w1_1_44"];
  "238 D8" [shape=box];
  "238 D8" -> "454 E8" [label="w1_0_35"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="w1_0_36"];
  "236 D8" [shape=box];
  "236 D8" -> "237 D8" [label="w1_0_37"];
  "235 D8" [shape=box];
  "235 D8" -> "236 D8" [label="w1_0_38"];
  "213 D8" [shape=box];
  "213 D8" -> "429 E8" [label="w1_0_45"];
  "212 D8" [shape=box];
  "212 D8" -> "213 D8" [label="w1_0_46"];
  "211 D8" [shape=box];
  "211 D8" -> "212 D8" [label="w1_0_47"];
  "210 D8" [shape=box];
  "210 D8" -> "211 D8" [label="w1_0_48"];
  "w1_0_79" -> "235 D8";
  "w1_0_79" -> "210 D8";
}
// graph for dag "freia_52_spoc_helper_0_5" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_5": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_5" {
  // inputs
  "w1_1_40" [shape=circle];
  "w2_1_5" [shape=circle];

  // outputs
  "w2_1_4" [shape=circle];

  // computation vertices
  "437 <" [shape=trapezium,orientation=270];
  "437 <" -> "w2_1_4";
  "w1_1_40" -> "437 <";
  "w2_1_5" -> "437 <";
}
// graph for dag "freia_52_spoc_helper_0_6" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_6": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_6" {
  // inputs
  "w1_1_30" [shape=circle];
  "w2_1_4" [shape=circle];

  // outputs
  "w2_1_3" [shape=circle];

  // computation vertices
  "462 <" [shape=trapezium,orientation=270];
  "462 <" -> "w2_1_3";
  "w1_1_30" -> "462 <";
  "w2_1_4" -> "462 <";
}
// graph for dag "freia_52_spoc_helper_0_7" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_7": #i=1 #o=2 #c=18 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_7" {
  // inputs
  "w1_0_79" [shape=circle];

  // outputs
  "w1_1_20" [shape=circle];
  "w1_1_10" [shape=circle];

  // computation vertices
  "508 E8" [shape=box];
  "508 E8" -> "w1_1_10";
  "507 E8" [shape=box];
  "507 E8" -> "508 E8" [label="w1_1_11"];
  "506 E8" [shape=box];
  "506 E8" -> "507 E8" [label="w1_1_12"];
  "505 E8" [shape=box];
  "505 E8" -> "506 E8" [label="w1_1_13"];
  "504 E8" [shape=box];
  "504 E8" -> "505 E8" [label="w1_1_14"];
  "483 E8" [shape=box];
  "483 E8" -> "w1_1_20";
  "482 E8" [shape=box];
  "482 E8" -> "483 E8" [label="w1_1_21"];
  "481 E8" [shape=box];
  "481 E8" -> "482 E8" [label="w1_1_22"];
  "480 E8" [shape=box];
  "480 E8" -> "481 E8" [label="w1_1_23"];
  "479 E8" [shape=box];
  "479 E8" -> "480 E8" [label="w1_1_24"];
  "288 D8" [shape=box];
  "288 D8" -> "504 E8" [label="w1_0_15"];
  "287 D8" [shape=box];
  "287 D8" -> "288 D8" [label="w1_0_16"];
  "286 D8" [shape=box];
  "286 D8" -> "287 D8" [label="w1_0_17"];
  "285 D8" [shape=box];
  "285 D8" -> "286 D8" [label="w1_0_18"];
  "263 D8" [shape=box];
  "263 D8" -> "479 E8" [label="w1_0_25"];
  "262 D8" [shape=box];
  "262 D8" -> "263 D8" [label="w1_0_26"];
  "261 D8" [shape=box];
  "261 D8" -> "262 D8" [label="w1_0_27"];
  "260 D8" [shape=box];
  "260 D8" -> "261 D8" [label="w1_0_28"];
  "w1_0_79" -> "285 D8";
  "w1_0_79" -> "260 D8";
}
// graph for dag "freia_52_spoc_helper_0_8" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_8": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_8" {
  // inputs
  "w1_1_20" [shape=circle];
  "w2_1_3" [shape=circle];

  // outputs
  "w2_1_2" [shape=circle];

  // computation vertices
  "487 <" [shape=trapezium,orientation=270];
  "487 <" -> "w2_1_2";
  "w1_1_20" -> "487 <";
  "w2_1_3" -> "487 <";
}
// graph for dag "freia_52_spoc_helper_0_9" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_0_9": #i=2 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_0_9" {
  // inputs
  "w1_1_10" [shape=circle];
  "w2_1_2" [shape=circle];

  // outputs
  "w2_1_1" [shape=circle];

  // computation vertices
  "512 <" [shape=trapezium,orientation=270];
  "512 <" -> "w2_1_1";
  "w1_1_10" -> "512 <";
  "w2_1_2" -> "512 <";
}
// graph for dag "freia_52_spoc_helper_1_0" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_1_0": #i=2 #o=1 #c=9 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_1_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "imWork1'";
  "596 vol" [shape=diamond];
  "592 <" [shape=trapezium,orientation=270];
  "592 <" -> "600 <" [label="imWork1_16"];
  "592 <" -> "596 vol" [label="imWork1_16"];
  "585 <" [shape=trapezium,orientation=270];
  "585 <" -> "592 <" [label="imWork1_17"];
  "578 <" [shape=trapezium,orientation=270];
  "578 <" -> "585 <" [label="imWork1_18"];
  "571 <" [shape=trapezium,orientation=270];
  "571 <" -> "578 <" [label="imWork1_19"];
  "564 <" [shape=trapezium,orientation=270];
  "564 <" -> "571 <" [label="imWork1_20"];
  "557 <" [shape=trapezium,orientation=270];
  "557 <" -> "564 <" [label="imWork1_21"];
  "550 <" [shape=trapezium,orientation=270];
  "550 <" -> "557 <" [label="imWork1_22"];
  "imin" -> "600 <";
  "imin" -> "592 <";
  "imin" -> "585 <";
  "imin" -> "578 <";
  "imin" -> "571 <";
  "imin" -> "564 <";
  "imin" -> "557 <";
  "imin" -> "550 <";
  "imWork1" -> "550 <";
}
// graph for dag "freia_52_spoc_helper_1_1" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_1_1": #i=1 #o=0 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_1_1" {
  // inputs
  "imWork1" [shape=circle];

  // outputs

  // computation vertices
  "604 vol" [shape=diamond];
  "imWork1" -> "604 vol";
}
// graph for dag "freia_52_spoc_helper_2_0" of module "freia_52" in dot format
// DAG "freia_52_spoc_helper_2_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_spoc_helper_2_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "608 thr" [shape=parallelogram];
  "608 thr" -> "imWork1'";
  "607 *_" [shape=trapezium,orientation=270];
  "607 *_" -> "608 thr" [label="imout_tophatLinRecon"];
  "606 -" [shape=trapezium,orientation=270];
  "606 -" -> "607 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "606 -";
  "imin" -> "606 -";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

// dag 0: 207 ops and 2 copies, optimized to 84 ops and 0+0+0 copies
// split 0: 2 cuts
// split 1: 2 cuts
// split 2: 1 cut
// split 3: 1 cut
// split 4: 2 cuts
// split 5: 1 cut
// split 6: 1 cut
// split 7: 2 cuts
// split 8: 1 cut
// split 9: 1 cut
// split 10: 2 cuts
// # SPOC calls: 16

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_0_0(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const int32_t * pi0,
  const int32_t * pi1,
  const int32_t * pi2)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`imin [0 input 0] -> [0 alu] 121 not
  // nope
  // alu 121 not stage 0
  si.alu[0][0].op = SPOC_ALU_NOT_IN0;


  // STAGE 1
  // 0`imWork1_5 [0 alu] -> [1 poc 0] 134 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;
  // 0`imWork1_5 [1 input 0] -> [1 poc 0] 134 dilate_8c
  // nope
  // poc 134 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_0_79 [1 poc 0] -> [3 poc 0] 135 dilate_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_0_79 [2 input 0] -> [3 poc 0] 135 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_0_79 [3 input 0] -> [3 poc 0] 135 dilate_8c
  // nope
  // poc 135 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi1[i];


  // STAGE 4
  // 0`w1_0_78 [3 poc 0] -> [4 poc 0] 136 dilate_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_0_78 [4 input 0] -> [4 poc 0] 136 dilate_8c
  // nope
  // poc 136 dilate_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_DILATE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi1[i];


  // STAGE 5
  // 0`w1_0_77 [4 poc 0] -> [5 poc 0] 137 dilate_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_0_77 [5 input 0] -> [5 poc 0] 137 dilate_8c
  // nope
  // poc 137 dilate_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_DILATE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi1[i];


  // STAGE 6
  // 0`w1_0_76 [5 poc 0] -> [6 poc 0] 138 dilate_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_0_76 [6 input 0] -> [6 poc 0] 138 dilate_8c
  // nope
  // poc 138 dilate_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_DILATE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi1[i];


  // STAGE 7
  // 0`w1_0_75 [6 poc 0] -> [7 poc 0] 354 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_0_75 [7 input 0] -> [7 poc 0] 354 erode_8c
  // nope
  // poc 354 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi2[i];


  // output image 0`w1_0_79 on 1 and image 0`w1_1_74 on 0
  // 0`w1_0_79 [2 poc 0] -> [7 output 1] 0 null
  si.mux[2][1].op = SPOC_MUX_IN0;
  si.mux[2][3].op = SPOC_MUX_IN0;
  // 0`w1_0_79 [3 input 1] -> [7 output 1] 0 null
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_0_79 [4 input 1] -> [7 output 1] 0 null
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_0_79 [5 input 1] -> [7 output 1] 0 null
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_0_79 [6 input 1] -> [7 output 1] 0 null
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_0_79 [7 input 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_0_79 [7 output 1] -> [7 output 1] 0 null
  // nope

  // 0`w1_1_74 [7 poc 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_74 [7 output 0] -> [7 output 0] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o1, o0, i0, NULL);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_0_1(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi0,
  int32_t pi1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_74 [0 input 0] -> [0 poc 0] 355 erode_8c
  // nope
  // poc 355 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`w1_1_73 [0 poc 0] -> [1 poc 0] 356 erode_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`w1_1_73 [1 input 0] -> [1 poc 0] 356 erode_8c
  // nope
  // poc 356 erode_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_ERODE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`w1_1_72 [1 poc 0] -> [2 poc 0] 357 erode_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_1_72 [2 input 0] -> [2 poc 0] 357 erode_8c
  // nope
  // poc 357 erode_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_ERODE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_1_71 [2 poc 0] -> [3 poc 0] 358 erode_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_1_71 [3 input 0] -> [3 poc 0] 358 erode_8c
  // nope
  // poc 358 erode_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_ERODE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];

  // 0`w1_1_70 [3 poc 0] -> [3 alu] 362 inf_const
  // nope
  // alu 362 inf_const stage 3
  si.alu[3][0].op = SPOC_ALU_INF_IN0_CONST;
  sp.alu[3][0].constant = pi1;


  // output image 0`w2_1_7 on 0
  // 0`w2_1_7 [3 alu] -> [3 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN1;
  si.mux[3][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_7 [3 output 0] -> [7 output 0] 0 null
  // 0`w2_1_7 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_7 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_7 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_7 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, NULL);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_1_0(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const int32_t * pi0,
  const int32_t * pi1,
  const int32_t * pi2,
  const int32_t * pi3)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_0_79 [0 input 0] -> [0 poc 0] 160 dilate_8c
  // nope
  // poc 160 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`w1_0_68 [0 poc 0] -> [1 poc 0] 161 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`w1_0_68 [1 input 0] -> [1 poc 0] 161 dilate_8c
  // nope
  // poc 161 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`w1_0_67 [1 poc 0] -> [2 poc 0] 162 dilate_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_0_67 [2 input 0] -> [2 poc 0] 162 dilate_8c
  // nope
  // poc 162 dilate_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_DILATE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_0_66 [2 poc 0] -> [3 poc 0] 163 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_0_66 [3 input 0] -> [3 poc 0] 163 dilate_8c
  // nope
  // poc 163 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 0
  // 0`w1_0_79 [0 input 1] -> [0 poc 1] 185 dilate_8c
  // nope
  // poc 185 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi1[i];


  // STAGE 1
  // 0`w1_0_58 [0 poc 1] -> [1 poc 1] 186 dilate_8c
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`w1_0_58 [1 input 1] -> [1 poc 1] 186 dilate_8c
  // nope
  // poc 186 dilate_8c stage 1 side 1
  si.poc[1][1].op = SPOC_POC_DILATE;
  si.poc[1][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][1].kernel[i] = pi1[i];


  // STAGE 2
  // 0`w1_0_57 [1 poc 1] -> [2 poc 1] 187 dilate_8c
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_0_57 [2 input 1] -> [2 poc 1] 187 dilate_8c
  // nope
  // poc 187 dilate_8c stage 2 side 1
  si.poc[2][1].op = SPOC_POC_DILATE;
  si.poc[2][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][1].kernel[i] = pi1[i];


  // STAGE 3
  // 0`w1_0_56 [2 poc 1] -> [3 poc 1] 188 dilate_8c
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_0_56 [3 input 1] -> [3 poc 1] 188 dilate_8c
  // nope
  // poc 188 dilate_8c stage 3 side 1
  si.poc[3][1].op = SPOC_POC_DILATE;
  si.poc[3][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][1].kernel[i] = pi1[i];


  // STAGE 4
  // 0`w1_0_65 [3 poc 0] -> [4 poc 0] 379 erode_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_0_65 [4 input 0] -> [4 poc 0] 379 erode_8c
  // nope
  // poc 379 erode_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_ERODE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi2[i];


  // STAGE 5
  // 0`w1_1_64 [4 poc 0] -> [5 poc 0] 380 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_64 [5 input 0] -> [5 poc 0] 380 erode_8c
  // nope
  // poc 380 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi2[i];


  // STAGE 6
  // 0`w1_1_63 [5 poc 0] -> [6 poc 0] 381 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_63 [6 input 0] -> [6 poc 0] 381 erode_8c
  // nope
  // poc 381 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi2[i];


  // STAGE 7
  // 0`w1_1_62 [6 poc 0] -> [7 poc 0] 382 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_62 [7 input 0] -> [7 poc 0] 382 erode_8c
  // nope
  // poc 382 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi2[i];


  // STAGE 4
  // 0`w1_0_55 [3 poc 1] -> [4 poc 1] 404 erode_8c
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_0_55 [4 input 1] -> [4 poc 1] 404 erode_8c
  // nope
  // poc 404 erode_8c stage 4 side 1
  si.poc[4][1].op = SPOC_POC_ERODE;
  si.poc[4][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][1].kernel[i] = pi3[i];


  // STAGE 5
  // 0`w1_1_54 [4 poc 1] -> [5 poc 1] 405 erode_8c
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_54 [5 input 1] -> [5 poc 1] 405 erode_8c
  // nope
  // poc 405 erode_8c stage 5 side 1
  si.poc[5][1].op = SPOC_POC_ERODE;
  si.poc[5][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][1].kernel[i] = pi3[i];


  // STAGE 6
  // 0`w1_1_53 [5 poc 1] -> [6 poc 1] 406 erode_8c
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_53 [6 input 1] -> [6 poc 1] 406 erode_8c
  // nope
  // poc 406 erode_8c stage 6 side 1
  si.poc[6][1].op = SPOC_POC_ERODE;
  si.poc[6][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][1].kernel[i] = pi3[i];


  // STAGE 7
  // 0`w1_1_52 [6 poc 1] -> [7 poc 1] 407 erode_8c
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_52 [7 input 1] -> [7 poc 1] 407 erode_8c
  // nope
  // poc 407 erode_8c stage 7 side 1
  si.poc[7][1].op = SPOC_POC_ERODE;
  si.poc[7][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][1].kernel[i] = pi3[i];


  // output image 0`w1_1_61 on 0 and image 0`w1_1_51 on 1
  // 0`w1_1_61 [7 poc 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_61 [7 output 0] -> [7 output 0] 0 null
  // nope

  // 0`w1_1_51 [7 poc 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_51 [7 output 1] -> [7 output 1] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, o1, i0, i0);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_1_1(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi0,
  const int32_t * pi1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_61 [0 input 1] -> [0 poc 1] 383 erode_8c
  // nope
  // poc 383 erode_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_ERODE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];

  // 0`w1_1_51 [0 input 0] -> [0 poc 0] 408 erode_8c
  // nope
  // poc 408 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi1[i];


  // output image 0`w1_1_60 on 1 and image 0`w1_1_50 on 0
  // 0`w1_1_60 [0 poc 1] -> [0 output 1] 0 null
  si.mux[0][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_60 [0 output 1] -> [7 output 1] 0 null
  // 0`w1_1_60 [1 input 1] -> [7 output 1] 0 null
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [2 input 1] -> [7 output 1] 0 null
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [3 input 1] -> [7 output 1] 0 null
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [4 input 1] -> [7 output 1] 0 null
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [5 input 1] -> [7 output 1] 0 null
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [6 input 1] -> [7 output 1] 0 null
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_60 [7 input 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // 0`w1_1_50 [0 poc 0] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_50 [0 output 0] -> [7 output 0] 0 null
  // 0`w1_1_50 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_50 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o1, o0, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_2_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_60 [0 input 0] -> [0 alu] 387 inf
  // nope
  // 0`w2_1_7 [0 input 1] -> [0 alu] 387 inf
  // nope
  // alu 387 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_6 on 0
  // 0`w2_1_6 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_6 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_6 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_6 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_3_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_50 [0 input 0] -> [0 alu] 412 inf
  // nope
  // 0`w2_1_6 [0 input 1] -> [0 alu] 412 inf
  // nope
  // alu 412 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_5 on 0
  // 0`w2_1_5 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_5 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_5 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_5 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_4_0(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const int32_t * pi0,
  const int32_t * pi1,
  const int32_t * pi2,
  const int32_t * pi3)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_0_79 [0 input 0] -> [0 poc 0] 210 dilate_8c
  // nope
  // poc 210 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`w1_0_48 [0 poc 0] -> [1 poc 0] 211 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`w1_0_48 [1 input 0] -> [1 poc 0] 211 dilate_8c
  // nope
  // poc 211 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`w1_0_47 [1 poc 0] -> [2 poc 0] 212 dilate_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_0_47 [2 input 0] -> [2 poc 0] 212 dilate_8c
  // nope
  // poc 212 dilate_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_DILATE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_0_46 [2 poc 0] -> [3 poc 0] 213 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_0_46 [3 input 0] -> [3 poc 0] 213 dilate_8c
  // nope
  // poc 213 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 0
  // 0`w1_0_79 [0 input 1] -> [0 poc 1] 235 dilate_8c
  // nope
  // poc 235 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi1[i];


  // STAGE 1
  // 0`w1_0_38 [0 poc 1] -> [1 poc 1] 236 dilate_8c
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`w1_0_38 [1 input 1] -> [1 poc 1] 236 dilate_8c
  // nope
  // poc 236 dilate_8c stage 1 side 1
  si.poc[1][1].op = SPOC_POC_DILATE;
  si.poc[1][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][1].kernel[i] = pi1[i];


  // STAGE 2
  // 0`w1_0_37 [1 poc 1] -> [2 poc 1] 237 dilate_8c
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_0_37 [2 input 1] -> [2 poc 1] 237 dilate_8c
  // nope
  // poc 237 dilate_8c stage 2 side 1
  si.poc[2][1].op = SPOC_POC_DILATE;
  si.poc[2][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][1].kernel[i] = pi1[i];


  // STAGE 3
  // 0`w1_0_36 [2 poc 1] -> [3 poc 1] 238 dilate_8c
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_0_36 [3 input 1] -> [3 poc 1] 238 dilate_8c
  // nope
  // poc 238 dilate_8c stage 3 side 1
  si.poc[3][1].op = SPOC_POC_DILATE;
  si.poc[3][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][1].kernel[i] = pi1[i];


  // STAGE 4
  // 0`w1_0_45 [3 poc 0] -> [4 poc 0] 429 erode_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_0_45 [4 input 0] -> [4 poc 0] 429 erode_8c
  // nope
  // poc 429 erode_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_ERODE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi2[i];


  // STAGE 5
  // 0`w1_1_44 [4 poc 0] -> [5 poc 0] 430 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_44 [5 input 0] -> [5 poc 0] 430 erode_8c
  // nope
  // poc 430 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi2[i];


  // STAGE 6
  // 0`w1_1_43 [5 poc 0] -> [6 poc 0] 431 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_43 [6 input 0] -> [6 poc 0] 431 erode_8c
  // nope
  // poc 431 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi2[i];


  // STAGE 7
  // 0`w1_1_42 [6 poc 0] -> [7 poc 0] 432 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_42 [7 input 0] -> [7 poc 0] 432 erode_8c
  // nope
  // poc 432 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi2[i];


  // STAGE 4
  // 0`w1_0_35 [3 poc 1] -> [4 poc 1] 454 erode_8c
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_0_35 [4 input 1] -> [4 poc 1] 454 erode_8c
  // nope
  // poc 454 erode_8c stage 4 side 1
  si.poc[4][1].op = SPOC_POC_ERODE;
  si.poc[4][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][1].kernel[i] = pi3[i];


  // STAGE 5
  // 0`w1_1_34 [4 poc 1] -> [5 poc 1] 455 erode_8c
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_34 [5 input 1] -> [5 poc 1] 455 erode_8c
  // nope
  // poc 455 erode_8c stage 5 side 1
  si.poc[5][1].op = SPOC_POC_ERODE;
  si.poc[5][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][1].kernel[i] = pi3[i];


  // STAGE 6
  // 0`w1_1_33 [5 poc 1] -> [6 poc 1] 456 erode_8c
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_33 [6 input 1] -> [6 poc 1] 456 erode_8c
  // nope
  // poc 456 erode_8c stage 6 side 1
  si.poc[6][1].op = SPOC_POC_ERODE;
  si.poc[6][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][1].kernel[i] = pi3[i];


  // STAGE 7
  // 0`w1_1_32 [6 poc 1] -> [7 poc 1] 457 erode_8c
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_32 [7 input 1] -> [7 poc 1] 457 erode_8c
  // nope
  // poc 457 erode_8c stage 7 side 1
  si.poc[7][1].op = SPOC_POC_ERODE;
  si.poc[7][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][1].kernel[i] = pi3[i];


  // output image 0`w1_1_41 on 0 and image 0`w1_1_31 on 1
  // 0`w1_1_41 [7 poc 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_41 [7 output 0] -> [7 output 0] 0 null
  // nope

  // 0`w1_1_31 [7 poc 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_31 [7 output 1] -> [7 output 1] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, o1, i0, i0);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_4_1(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi0,
  const int32_t * pi1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_41 [0 input 1] -> [0 poc 1] 433 erode_8c
  // nope
  // poc 433 erode_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_ERODE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];

  // 0`w1_1_31 [0 input 0] -> [0 poc 0] 458 erode_8c
  // nope
  // poc 458 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi1[i];


  // output image 0`w1_1_40 on 1 and image 0`w1_1_30 on 0
  // 0`w1_1_40 [0 poc 1] -> [0 output 1] 0 null
  si.mux[0][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_40 [0 output 1] -> [7 output 1] 0 null
  // 0`w1_1_40 [1 input 1] -> [7 output 1] 0 null
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [2 input 1] -> [7 output 1] 0 null
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [3 input 1] -> [7 output 1] 0 null
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [4 input 1] -> [7 output 1] 0 null
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [5 input 1] -> [7 output 1] 0 null
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [6 input 1] -> [7 output 1] 0 null
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_40 [7 input 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // 0`w1_1_30 [0 poc 0] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_30 [0 output 0] -> [7 output 0] 0 null
  // 0`w1_1_30 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_30 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o1, o0, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_5_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_40 [0 input 0] -> [0 alu] 437 inf
  // nope
  // 0`w2_1_5 [0 input 1] -> [0 alu] 437 inf
  // nope
  // alu 437 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_4 on 0
  // 0`w2_1_4 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_4 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_4 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_4 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_6_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_30 [0 input 0] -> [0 alu] 462 inf
  // nope
  // 0`w2_1_4 [0 input 1] -> [0 alu] 462 inf
  // nope
  // alu 462 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_3 on 0
  // 0`w2_1_3 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_3 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_3 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_3 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_7_0(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const int32_t * pi0,
  const int32_t * pi1,
  const int32_t * pi2,
  const int32_t * pi3)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_0_79 [0 input 0] -> [0 poc 0] 260 dilate_8c
  // nope
  // poc 260 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`w1_0_28 [0 poc 0] -> [1 poc 0] 261 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`w1_0_28 [1 input 0] -> [1 poc 0] 261 dilate_8c
  // nope
  // poc 261 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`w1_0_27 [1 poc 0] -> [2 poc 0] 262 dilate_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_0_27 [2 input 0] -> [2 poc 0] 262 dilate_8c
  // nope
  // poc 262 dilate_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_DILATE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_0_26 [2 poc 0] -> [3 poc 0] 263 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_0_26 [3 input 0] -> [3 poc 0] 263 dilate_8c
  // nope
  // poc 263 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 0
  // 0`w1_0_79 [0 input 1] -> [0 poc 1] 285 dilate_8c
  // nope
  // poc 285 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi1[i];


  // STAGE 1
  // 0`w1_0_18 [0 poc 1] -> [1 poc 1] 286 dilate_8c
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`w1_0_18 [1 input 1] -> [1 poc 1] 286 dilate_8c
  // nope
  // poc 286 dilate_8c stage 1 side 1
  si.poc[1][1].op = SPOC_POC_DILATE;
  si.poc[1][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][1].kernel[i] = pi1[i];


  // STAGE 2
  // 0`w1_0_17 [1 poc 1] -> [2 poc 1] 287 dilate_8c
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_0_17 [2 input 1] -> [2 poc 1] 287 dilate_8c
  // nope
  // poc 287 dilate_8c stage 2 side 1
  si.poc[2][1].op = SPOC_POC_DILATE;
  si.poc[2][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][1].kernel[i] = pi1[i];


  // STAGE 3
  // 0`w1_0_16 [2 poc 1] -> [3 poc 1] 288 dilate_8c
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_0_16 [3 input 1] -> [3 poc 1] 288 dilate_8c
  // nope
  // poc 288 dilate_8c stage 3 side 1
  si.poc[3][1].op = SPOC_POC_DILATE;
  si.poc[3][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][1].kernel[i] = pi1[i];


  // STAGE 4
  // 0`w1_0_25 [3 poc 0] -> [4 poc 0] 479 erode_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_0_25 [4 input 0] -> [4 poc 0] 479 erode_8c
  // nope
  // poc 479 erode_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_ERODE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi2[i];


  // STAGE 5
  // 0`w1_1_24 [4 poc 0] -> [5 poc 0] 480 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_24 [5 input 0] -> [5 poc 0] 480 erode_8c
  // nope
  // poc 480 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi2[i];


  // STAGE 6
  // 0`w1_1_23 [5 poc 0] -> [6 poc 0] 481 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_23 [6 input 0] -> [6 poc 0] 481 erode_8c
  // nope
  // poc 481 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi2[i];


  // STAGE 7
  // 0`w1_1_22 [6 poc 0] -> [7 poc 0] 482 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_22 [7 input 0] -> [7 poc 0] 482 erode_8c
  // nope
  // poc 482 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi2[i];


  // STAGE 4
  // 0`w1_0_15 [3 poc 1] -> [4 poc 1] 504 erode_8c
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_0_15 [4 input 1] -> [4 poc 1] 504 erode_8c
  // nope
  // poc 504 erode_8c stage 4 side 1
  si.poc[4][1].op = SPOC_POC_ERODE;
  si.poc[4][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][1].kernel[i] = pi3[i];


  // STAGE 5
  // 0`w1_1_14 [4 poc 1] -> [5 poc 1] 505 erode_8c
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_14 [5 input 1] -> [5 poc 1] 505 erode_8c
  // nope
  // poc 505 erode_8c stage 5 side 1
  si.poc[5][1].op = SPOC_POC_ERODE;
  si.poc[5][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][1].kernel[i] = pi3[i];


  // STAGE 6
  // 0`w1_1_13 [5 poc 1] -> [6 poc 1] 506 erode_8c
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_13 [6 input 1] -> [6 poc 1] 506 erode_8c
  // nope
  // poc 506 erode_8c stage 6 side 1
  si.poc[6][1].op = SPOC_POC_ERODE;
  si.poc[6][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][1].kernel[i] = pi3[i];


  // STAGE 7
  // 0`w1_1_12 [6 poc 1] -> [7 poc 1] 507 erode_8c
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_12 [7 input 1] -> [7 poc 1] 507 erode_8c
  // nope
  // poc 507 erode_8c stage 7 side 1
  si.poc[7][1].op = SPOC_POC_ERODE;
  si.poc[7][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][1].kernel[i] = pi3[i];


  // output image 0`w1_1_21 on 0 and image 0`w1_1_11 on 1
  // 0`w1_1_21 [7 poc 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_21 [7 output 0] -> [7 output 0] 0 null
  // nope

  // 0`w1_1_11 [7 poc 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_11 [7 output 1] -> [7 output 1] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, o1, i0, i0);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_7_1(
  freia_data2d * o0,
  freia_data2d * o1,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi0,
  const int32_t * pi1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_21 [0 input 1] -> [0 poc 1] 483 erode_8c
  // nope
  // poc 483 erode_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_ERODE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];

  // 0`w1_1_11 [0 input 0] -> [0 poc 0] 508 erode_8c
  // nope
  // poc 508 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi1[i];


  // output image 0`w1_1_20 on 1 and image 0`w1_1_10 on 0
  // 0`w1_1_20 [0 poc 1] -> [0 output 1] 0 null
  si.mux[0][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`w1_1_20 [0 output 1] -> [7 output 1] 0 null
  // 0`w1_1_20 [1 input 1] -> [7 output 1] 0 null
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [2 input 1] -> [7 output 1] 0 null
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [3 input 1] -> [7 output 1] 0 null
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [4 input 1] -> [7 output 1] 0 null
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [5 input 1] -> [7 output 1] 0 null
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [6 input 1] -> [7 output 1] 0 null
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`w1_1_20 [7 input 1] -> [7 output 1] 0 null
  si.mux[7][3].op = SPOC_MUX_IN1;

  // 0`w1_1_10 [0 poc 0] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_10 [0 output 0] -> [7 output 0] 0 null
  // 0`w1_1_10 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_10 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o1, o0, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_8_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_20 [0 input 0] -> [0 alu] 487 inf
  // nope
  // 0`w2_1_3 [0 input 1] -> [0 alu] 487 inf
  // nope
  // alu 487 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_2 on 0
  // 0`w2_1_2 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_2 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_2 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_2 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_9_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_10 [0 input 0] -> [0 alu] 512 inf
  // nope
  // 0`w2_1_2 [0 input 1] -> [0 alu] 512 inf
  // nope
  // alu 512 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`w2_1_1 on 0
  // 0`w2_1_1 [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w2_1_1 [0 output 0] -> [7 output 0] 0 null
  // 0`w2_1_1 [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w2_1_1 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_10_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi0,
  const int32_t * pi1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_0_79 [0 input 0] -> [0 poc 0] 310 dilate_8c
  // nope
  // poc 310 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`w1_0_8 [0 poc 0] -> [1 poc 0] 311 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`w1_0_8 [1 input 0] -> [1 poc 0] 311 dilate_8c
  // nope
  // poc 311 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`w1_0_7 [1 poc 0] -> [2 poc 0] 312 dilate_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`w1_0_7 [2 input 0] -> [2 poc 0] 312 dilate_8c
  // nope
  // poc 312 dilate_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_DILATE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`w1_0_6 [2 poc 0] -> [3 poc 0] 313 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`w1_0_6 [3 input 0] -> [3 poc 0] 313 dilate_8c
  // nope
  // poc 313 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 4
  // 0`w1_0_5 [3 poc 0] -> [4 poc 0] 529 erode_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`w1_0_5 [4 input 0] -> [4 poc 0] 529 erode_8c
  // nope
  // poc 529 erode_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_ERODE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi1[i];


  // STAGE 5
  // 0`w1_1_4 [4 poc 0] -> [5 poc 0] 530 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`w1_1_4 [5 input 0] -> [5 poc 0] 530 erode_8c
  // nope
  // poc 530 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi1[i];


  // STAGE 6
  // 0`w1_1_3 [5 poc 0] -> [6 poc 0] 531 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`w1_1_3 [6 input 0] -> [6 poc 0] 531 erode_8c
  // nope
  // poc 531 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi1[i];


  // STAGE 7
  // 0`w1_1_2 [6 poc 0] -> [7 poc 0] 532 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`w1_1_2 [7 input 0] -> [7 poc 0] 532 erode_8c
  // nope
  // poc 532 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi1[i];


  // output image 0`w1_1_1 on 0
  // 0`w1_1_1 [7 poc 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`w1_1_1 [7 output 0] -> [7 output 0] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_0_10_1(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi0,
  int32_t * po1)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  spoc_reduction reduc;
  freia_reduction_results redres;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`w1_1_1 [0 input 0] -> [0 poc 0] 533 erode_8c
  // nope
  // poc 533 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];

  // 0`w1_1 [0 poc 0] -> [0 alu] 537 inf
  // nope
  // 0`w2_1_1 [0 input 1] -> [0 alu] 537 inf
  // nope
  // alu 537 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 1
  // 0`w2_1 [0 alu] -> [1 alu] 543 not
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;
  // 0`w2_1 [1 input 0] -> [1 alu] 543 not
  // nope
  // alu 543 not stage 1
  si.alu[1][0].op = SPOC_ALU_NOT_IN0;

  // 0`imWork1 [1 alu] -> [1 measure 0] 543 not
  si.mux[1][0].op = SPOC_MUX_IN1;
  si.mux[1][2].op = SPOC_MUX_IN0;


  // output image 0`imWork1 on 0
  // 0`imWork1 [1 measure 0] -> [1 output 0] 0 null
  // nope

  // fill in to the end...
  // 0`imWork1 [1 output 0] -> [7 output 0] 0 null
  // 0`imWork1 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  // get reductions
  freia_cg_read_reduction_results(&redres);

  // measure 545 global_vol stage 1 side 0
  *po1 = (int32_t) reduc.measure[1][0].volume;

  return ret;
}

// dag 1: 10 ops and 0 copies, optimized to 10 ops and 0+0+0 copies
// split 0: 1 cut
// split 1: 1 cut
// # SPOC calls: 2

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_1_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  int32_t * po0)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  spoc_reduction reduc;
  freia_reduction_results redres;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`imWork1 [0 input 0] -> [0 alu] 550 inf
  // nope
  // 0`imin [0 input 1] -> [0 alu] 550 inf
  // nope
  // alu 550 inf stage 0
  si.alu[0][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 1
  // 0`imWork1_22 [0 alu] -> [1 alu] 557 inf
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;
  // 0`imWork1_22 [1 input 0] -> [1 alu] 557 inf
  // nope
  // 0`imin [0 input 1] -> [1 alu] 557 inf
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`imin [1 input 1] -> [1 alu] 557 inf
  // nope
  // alu 557 inf stage 1
  si.alu[1][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 2
  // 0`imWork1_21 [1 alu] -> [2 alu] 564 inf
  si.mux[1][0].op = SPOC_MUX_IN1;
  si.mux[1][2].op = SPOC_MUX_IN0;
  // 0`imWork1_21 [2 input 0] -> [2 alu] 564 inf
  // nope
  // 0`imin [1 poc 1] -> [2 alu] 564 inf
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`imin [2 input 1] -> [2 alu] 564 inf
  // nope
  // alu 564 inf stage 2
  si.alu[2][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 3
  // 0`imWork1_20 [2 alu] -> [3 alu] 571 inf
  si.mux[2][0].op = SPOC_MUX_IN1;
  si.mux[2][2].op = SPOC_MUX_IN0;
  // 0`imWork1_20 [3 input 0] -> [3 alu] 571 inf
  // nope
  // 0`imin [2 poc 1] -> [3 alu] 571 inf
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`imin [3 input 1] -> [3 alu] 571 inf
  // nope
  // alu 571 inf stage 3
  si.alu[3][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 4
  // 0`imWork1_19 [3 alu] -> [4 alu] 578 inf
  si.mux[3][0].op = SPOC_MUX_IN1;
  si.mux[3][2].op = SPOC_MUX_IN0;
  // 0`imWork1_19 [4 input 0] -> [4 alu] 578 inf
  // nope
  // 0`imin [3 poc 1] -> [4 alu] 578 inf
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`imin [4 input 1] -> [4 alu] 578 inf
  // nope
  // alu 578 inf stage 4
  si.alu[4][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 5
  // 0`imWork1_18 [4 alu] -> [5 alu] 585 inf
  si.mux[4][0].op = SPOC_MUX_IN1;
  si.mux[4][2].op = SPOC_MUX_IN0;
  // 0`imWork1_18 [5 input 0] -> [5 alu] 585 inf
  // nope
  // 0`imin [4 poc 1] -> [5 alu] 585 inf
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`imin [5 input 1] -> [5 alu] 585 inf
  // nope
  // alu 585 inf stage 5
  si.alu[5][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 6
  // 0`imWork1_17 [5 alu] -> [6 alu] 592 inf
  si.mux[5][0].op = SPOC_MUX_IN1;
  si.mux[5][2].op = SPOC_MUX_IN0;
  // 0`imWork1_17 [6 input 0] -> [6 alu] 592 inf
  // nope
  // 0`imin [5 poc 1] -> [6 alu] 592 inf
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`imin [6 input 1] -> [6 alu] 592 inf
  // nope
  // alu 592 inf stage 6
  si.alu[6][0].op = SPOC_ALU_INF_IN0_IN1;

  // 0`imWork1_16 [6 alu] -> [6 measure 0] 592 inf
  si.mux[6][0].op = SPOC_MUX_IN1;
  si.mux[6][2].op = SPOC_MUX_IN0;


  // STAGE 7
  // 0`imWork1_16 [6 measure 0] -> [7 alu] 600 inf
  // 0`imWork1_16 [7 input 0] -> [7 alu] 600 inf
  // nope
  // 0`imin [6 poc 1] -> [7 alu] 600 inf
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`imin [7 input 1] -> [7 alu] 600 inf
  // nope
  // alu 600 inf stage 7
  si.alu[7][0].op = SPOC_ALU_INF_IN0_IN1;


  // output image 0`imWork1 on 0
  // 0`imWork1 [7 alu] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN1;
  si.mux[7][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`imWork1 [7 output 0] -> [7 output 0] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  // get reductions
  freia_cg_read_reduction_results(&redres);

  // measure 596 global_vol stage 6 side 0
  *po0 = (int32_t) reduc.measure[6][0].volume;

  return ret;
}

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_1_1_0(
  const freia_data2d * i0,
  int32_t * po0)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;
  spoc_reduction reduc;
  freia_reduction_results redres;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`imWork1 [0 input 0] -> [0 measure 0] 0 undefined
  si.mux[0][0].op = SPOC_MUX_IN0;


  // no output image

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, NULL, NULL, i0, NULL);

  // get reductions
  freia_cg_read_reduction_results(&redres);

  // measure 604 global_vol stage 0 side 0
  *po0 = (int32_t) reduc.measure[0][0].volume;

  return ret;
}

// dag 2: 4 ops and 0 copies, optimized to 3 ops and 0+0+0 copies
// split 0: 1 cut
// # SPOC calls: 1

// FREIA-SPoC helper function for module freia_52
freia_status freia_52_spoc_helper_2_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  int32_t pi0,
  int32_t pi1,
  int32_t pi2,
  int32_t pi3)
{
  spoc_instr si;
  spoc_param sp;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_op_param param;
  freia_status ret;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`imWork1 [0 input 0] -> [0 alu] 606 sub
  // nope
  // 0`imin [0 input 1] -> [0 alu] 606 sub
  // nope
  // alu 606 sub stage 0 flipped
  si.alu[0][0].op = SPOC_ALU_SUB_IN1_IN0;


  // STAGE 1
  // 0`imout_tophatLinRecon_1 [0 alu] -> [1 alu] 607 mul_const
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;
  // 0`imout_tophatLinRecon_1 [1 input 0] -> [1 alu] 607 mul_const
  // nope
  // alu 607 mul_const stage 1
  si.alu[1][0].op = SPOC_ALU_MUL_IN0_CONST;
  sp.alu[1][0].constant = pi0;

  // 0`imout_tophatLinRecon [1 alu] -> [1 threshold 0] 608 threshold
  si.mux[1][0].op = SPOC_MUX_IN1;
  si.mux[1][2].op = SPOC_MUX_IN0;
  // threshold 608 threshold stage 1 side 0
  si.th[1][0].op = pi3? SPOC_TH_BINARIZE : SPOC_TH_NO_BINARIZE;
  sp.th[1][0].boundmin = pi1;
  sp.th[1][0].boundmax = pi2;


  // output image 0`imWork1 on 0
  // 0`imWork1 [1 threshold 0] -> [1 output 0] 0 null
  // nope

  // fill in to the end...
  // 0`imWork1 [1 output 0] -> [7 output 0] 0 null
  // 0`imWork1 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`imWork1 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

! updated function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0001*/
   freia_data2d *imin, *imWork1;                                        /*0002*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0003*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0004*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0006*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0008*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0009*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0010*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0011*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0014*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0015*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0018*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0019*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0022*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0023*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0026*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0027*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0030*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0031*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0034*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0038*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0039*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0042*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0043*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0044*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0045*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0048*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0049*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0052*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0053*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0056*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0057*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0060*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0061*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0064*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0065*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0068*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0069*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0072*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0073*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0076*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0077*/
   //PIPS generated variable
   freia_status ret_20 = 0;                                             /*0078*/
   //PIPS generated variable
   int i_52;                                                            /*0079*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_10 = 0, *w1_1_11 = 0, *w1_1_30 = 0, *w1_1_31 = 0, *w1_1_50 = 0, *w1_1_51 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0080*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0081*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0082*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0086*/
   w1_1_51 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_50 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_31 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_30 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_11 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_10 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0088*/
   
   
   _return6 = 0;                                                        /*0094*/
   ret_0 = 0;                                                           /*0095*/
   
   
   _return5 = 0;                                                        /*0101*/
   
   
   _return1 = ret_0;                                                    /*0102*/
   
   
   _return13 = 0;                                                       /*0108*/
   ret_2 = 0;                                                           /*0109*/
   
   
   _return11 = 0;                                                       /*0115*/
   
   
   _return8 = ret_2;                                                    /*0116*/
   ret_1 = _return8;                                                    /*0117*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0125*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0126*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0127*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0128*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0129*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0130*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0131*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0132*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0133*/
   
   
   _return35 = 0;                                                       /*0139*/
   ret_3 = 0;                                                           /*0140*/
   
   
   _return51 = 0;                                                       /*0146*/
   
   
   _return19 = ret_3;                                                   /*0147*/
   err_1 |= _return19;                                                  /*0148*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0150*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0151*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0152*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0153*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0154*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0155*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0156*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0157*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0158*/
   
   
   _return36 = 0;                                                       /*0164*/
   ret_4 = 0;                                                           /*0165*/
   
   
   _return52 = 0;                                                       /*0171*/
   
   
   _return20 = ret_4;                                                   /*0172*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0175*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0176*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0177*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0178*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0179*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0180*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0181*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0182*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0183*/
   
   
   _return37 = 0;                                                       /*0189*/
   ret_5 = 0;                                                           /*0190*/
   
   
   _return53 = 0;                                                       /*0196*/
   
   
   _return21 = ret_5;                                                   /*0197*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0200*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0201*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0202*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0203*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0204*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0205*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0206*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0207*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0208*/
   
   
   _return33 = 0;                                                       /*0214*/
   ret_6 = 0;                                                           /*0215*/
   
   
   _return49 = 0;                                                       /*0221*/
   
   
   _return17 = ret_6;                                                   /*0222*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0225*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0226*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0227*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0228*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0229*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0230*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0231*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0232*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0233*/
   
   
   _return34 = 0;                                                       /*0239*/
   ret_7 = 0;                                                           /*0240*/
   
   
   _return50 = 0;                                                       /*0246*/
   
   
   _return18 = ret_7;                                                   /*0247*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0250*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0251*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0252*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0253*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0254*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0255*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0256*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0257*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0258*/
   
   
   _return30 = 0;                                                       /*0264*/
   ret_8 = 0;                                                           /*0265*/
   
   
   _return46 = 0;                                                       /*0271*/
   
   
   _return14 = ret_8;                                                   /*0272*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0275*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0276*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0277*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0278*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0279*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0280*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0281*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0282*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0283*/
   
   
   _return31 = 0;                                                       /*0289*/
   ret_9 = 0;                                                           /*0290*/
   
   
   _return47 = 0;                                                       /*0296*/
   
   
   _return15 = ret_9;                                                   /*0297*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0300*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0301*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0302*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0303*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0304*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0305*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0306*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0307*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0308*/
   
   
   _return32 = 0;                                                       /*0314*/
   ret_10 = 0;                                                          /*0315*/
   
   
   _return48 = 0;                                                       /*0321*/
   
   
   _return16 = ret_10;                                                  /*0322*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0338*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0339*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0340*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0341*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0342*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0343*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0344*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0345*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0346*/
   
   
   _return43 = 0;                                                       /*0352*/
   ret_11 = 0;                                                          /*0353*/
   
   
   _return59 = 0;                                                       /*0359*/
   
   
   _return27 = ret_11;                                                  /*0360*/
   err_3 |= _return27;                                                  /*0361*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0363*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0364*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0365*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0366*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0367*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0368*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0369*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0370*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0371*/
   
   
   _return44 = 0;                                                       /*0377*/
   ret_12 = 0;                                                          /*0378*/
   
   
   _return60 = 0;                                                       /*0384*/
   
   
   _return28 = ret_12;                                                  /*0385*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0388*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0389*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0390*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0391*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0392*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0393*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0394*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0395*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0396*/
   
   
   _return45 = 0;                                                       /*0402*/
   ret_13 = 0;                                                          /*0403*/
   
   
   _return61 = 0;                                                       /*0409*/
   
   
   _return29 = ret_13;                                                  /*0410*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0413*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0414*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0415*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0416*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0417*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0418*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0419*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0420*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0421*/
   
   
   _return41 = 0;                                                       /*0427*/
   ret_14 = 0;                                                          /*0428*/
   
   
   _return57 = 0;                                                       /*0434*/
   
   
   _return25 = ret_14;                                                  /*0435*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0438*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0439*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0440*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0441*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0442*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0443*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0444*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0445*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0446*/
   
   
   _return42 = 0;                                                       /*0452*/
   ret_15 = 0;                                                          /*0453*/
   
   
   _return58 = 0;                                                       /*0459*/
   
   
   _return26 = ret_15;                                                  /*0460*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0463*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0464*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0465*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0466*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0467*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0468*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0469*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0470*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0471*/
   
   
   _return38 = 0;                                                       /*0477*/
   ret_16 = 0;                                                          /*0478*/
   
   
   _return54 = 0;                                                       /*0484*/
   
   
   _return22 = ret_16;                                                  /*0485*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0488*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0489*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0490*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0491*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0492*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0493*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0494*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0495*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0496*/
   
   
   _return39 = 0;                                                       /*0502*/
   ret_17 = 0;                                                          /*0503*/
   
   
   _return55 = 0;                                                       /*0509*/
   
   
   _return23 = ret_17;                                                  /*0510*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0513*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0514*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0515*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0516*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0517*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0518*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0519*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0520*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0521*/
   
   
   _return40 = 0;                                                       /*0527*/
   ret_18 = 0;                                                          /*0528*/
   
   
   _return56 = 0;                                                       /*0534*/
   
   
   _return24 = ret_18;                                                  /*0535*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0122*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0335*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0336*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0119*/
   // for display
   
   // 2nd tophat
   freia_52_spoc_helper_0_0_0(w1_0, w1_1, imin, freia_morpho_kernel_8c, freia_morpho_k8_0, neighborTransposed_8);    /*0121*/
   
   
   
   
   freia_52_spoc_helper_0_0_1(w2_1, w1_1, neighborTransposed_8, 255);   /*0355*/
   
   
   
   
   
   
   
   freia_52_spoc_helper_0_1_0(w1_1, w1_1_51, w1_0, freia_morpho_k8_1, freia_morpho_k8_2, neighborTransposed_9, neighborTransposed_10);             /*0379*/
   freia_52_spoc_helper_0_1_1(w1_1, w1_1_50, w1_1_51, w1_1, neighborTransposed_9, neighborTransposed_10);            /*0383*/
   
   
   
   
   err_1 |= _return20;                                                  /*0173*/
   
   
   
   
   err_1 |= _return21;                                                  /*0198*/
   
   
   freia_52_spoc_helper_0_2_0(w2_1, w1_1, w2_1);                        /*0387*/
   freia_52_spoc_helper_0_3_0(w2_1, w1_1_50, w2_1);                     /*0412*/
   
   
   freia_52_spoc_helper_0_4_0(w1_1, w1_1_31, w1_0, freia_morpho_k4_0, freia_morpho_k4_1, neighborTransposed_11, neighborTransposed_12);            /*0429*/
   freia_52_spoc_helper_0_4_1(w1_1, w1_1_30, w1_1_31, w1_1, neighborTransposed_11, neighborTransposed_12);           /*0433*/
   
   
   
   
   err_1 |= _return17;                                                  /*0223*/
   
   
   
   
   err_1 |= _return18;                                                  /*0248*/
   
   
   freia_52_spoc_helper_0_5_0(w2_1, w1_1, w2_1);                        /*0437*/
   freia_52_spoc_helper_0_6_0(w2_1, w1_1_30, w2_1);                     /*0462*/
   
   
   freia_52_spoc_helper_0_7_0(w1_1, w1_1_11, w1_0, freia_morpho_k6_0, freia_morpho_k6_1, neighborTransposed_13, neighborTransposed_14);            /*0479*/
   freia_52_spoc_helper_0_7_1(w1_1, w1_1_10, w1_1_11, w1_1, neighborTransposed_13, neighborTransposed_14);           /*0483*/
   
   
   
   
   err_1 |= _return14;                                                  /*0273*/
   
   
   
   
   err_1 |= _return15;                                                  /*0298*/
   
   
   freia_52_spoc_helper_0_8_0(w2_1, w1_1, w2_1);                        /*0487*/
   freia_52_spoc_helper_0_9_0(w2_1, w1_1_10, w2_1);                     /*0512*/
   
   
   freia_52_spoc_helper_0_10_0(w1_1, w1_0, w2_1, freia_morpho_k6_2, neighborTransposed_15);           /*0529*/
   freia_52_spoc_helper_0_10_1(imWork1, w1_1, w2_1, neighborTransposed_15, &volcurrent);              /*0533*/

   ret_19 = 0;                                                          /*0545*/
   
   
   err_1 |= _return16;                                                  /*0323*/
   
   
   
   _return9 = err_1;                                                    /*0328*/
   err_0 |= _return9;                                                   /*0329*/
   _return3 = err_0;                                                    /*0331*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   err_3 |= _return28;                                                  /*0386*/
   
   
   err_3 |= _return29;                                                  /*0411*/
   
   
   err_3 |= _return25;                                                  /*0436*/
   
   
   err_3 |= _return26;                                                  /*0461*/
   
   
   err_3 |= _return22;                                                  /*0486*/
   
   
   err_3 |= _return23;                                                  /*0511*/
   
   
   err_3 |= _return24;                                                  /*0536*/
   
   
   
   _return10 = err_3;                                                   /*0541*/
   err_2 |= _return10;                                                  /*0542*/
   _return4 = err_2;                                                    /*0544*/
   freia_common_destruct_data(w1_0);                                    /*0326*/
   freia_common_destruct_data(w1_1);                                    /*0539*/
   freia_common_destruct_data(w1_1_10);
   freia_common_destruct_data(w1_1_11);
   freia_common_destruct_data(w1_1_30);
   freia_common_destruct_data(w1_1_31);
   freia_common_destruct_data(w1_1_50);
   freia_common_destruct_data(w1_1_51);
   freia_common_destruct_data(w2_1);                                    /*0540*/
   do {                                                                 /*0546*/
      i_52 = 1;                                                         /*0547*/
      
      
      _return12 = 0;                                                    /*0548*/
      ret_20 = 0;                                                       /*0549*/
      volprevious = volcurrent;                                         /*0553*/
      i_52 = 1;                                                         /*0554*/
      
      
      _return12 = 0;                                                    /*0555*/
      volprevious = volcurrent;                                         /*0560*/
      i_52 = 1;                                                         /*0561*/
      
      
      _return12 = 0;                                                    /*0562*/
      volprevious = volcurrent;                                         /*0567*/
      i_52 = 1;                                                         /*0568*/
      
      
      _return12 = 0;                                                    /*0569*/
      volprevious = volcurrent;                                         /*0574*/
      i_52 = 1;                                                         /*0575*/
      
      
      _return12 = 0;                                                    /*0576*/
      volprevious = volcurrent;                                         /*0581*/
      i_52 = 1;                                                         /*0582*/
      
      
      _return12 = 0;                                                    /*0583*/
      volprevious = volcurrent;                                         /*0588*/
      i_52 = 1;                                                         /*0589*/
      
      
      _return12 = 0;                                                    /*0590*/
      volprevious = volcurrent;                                         /*0595*/
      i_52 = 1;                                                         /*0597*/
      
      
      _return12 = 0;                                                    /*0598*/
      freia_52_spoc_helper_1_0_0(imWork1, imWork1, imin, &volcurrent);  /*0550*/
      
      
      _return7 = ret_20;                                                /*0551*/
      ret_19 |= _return7;                                               /*0552*/
      ret_20 = 0;                                                       /*0556*/
      
      
      _return7 = ret_20;                                                /*0558*/
      ret_19 |= _return7;                                               /*0559*/
      ret_20 = 0;                                                       /*0563*/
      
      
      _return7 = ret_20;                                                /*0565*/
      ret_19 |= _return7;                                               /*0566*/
      ret_20 = 0;                                                       /*0570*/
      
      
      _return7 = ret_20;                                                /*0572*/
      ret_19 |= _return7;                                               /*0573*/
      ret_20 = 0;                                                       /*0577*/
      
      
      _return7 = ret_20;                                                /*0579*/
      ret_19 |= _return7;                                               /*0580*/
      ret_20 = 0;                                                       /*0584*/
      
      
      _return7 = ret_20;                                                /*0586*/
      ret_19 |= _return7;                                               /*0587*/
      ret_20 = 0;                                                       /*0591*/
      
      
      _return7 = ret_20;                                                /*0593*/
      ret_19 |= _return7;                                               /*0594*/
      ret_20 = 0;                                                       /*0599*/
      
      
      _return7 = ret_20;                                                /*0601*/
      ret_19 |= _return7;                                               /*0602*/
      volprevious = volcurrent;                                         /*0603*/
      freia_52_spoc_helper_1_1_0(imWork1, &volcurrent);                 /*0604*/
   }
   while (volcurrent!=volprevious);                                     /*0546*/
   
   
   _return0 = ret_19;                                                   /*0605*/
   freia_52_spoc_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);   /*0606*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0610*/
   freia_common_tx_image(imWork1, &fdout);                              /*0611*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0612*/
   freia_common_destruct_data(imWork1);                                 /*0616*/

   freia_common_close_input(&fdin);                                     /*0618*/
   freia_common_close_output(&fdout);                                   /*0619*/

   return 0;                                                            /*0620*/
}

! cleaned up function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0001*/
   freia_data2d *imin, *imWork1;                                        /*0002*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0003*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0004*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0006*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0008*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0009*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0010*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0011*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0014*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0015*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0018*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0019*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0022*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0023*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0026*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0027*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0030*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0031*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0034*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0038*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0039*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0042*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0043*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0044*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0045*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0048*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0049*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0052*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0053*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0056*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0057*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0060*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0061*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0064*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0065*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0068*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0069*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0072*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0073*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0076*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0077*/
   //PIPS generated variable
   freia_status ret_20 = 0;                                             /*0078*/
   //PIPS generated variable
   int i_52;                                                            /*0079*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_10 = 0, *w1_1_11 = 0, *w1_1_30 = 0, *w1_1_31 = 0, *w1_1_50 = 0, *w1_1_51 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0080*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0081*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0082*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0086*/
   w1_1_51 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_50 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_31 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_30 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_11 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_10 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0088*/
   
   
   _return6 = 0;                                                        /*0094*/
   ret_0 = 0;                                                           /*0095*/
   
   
   _return5 = 0;                                                        /*0101*/
   
   
   _return1 = ret_0;                                                    /*0102*/
   
   
   _return13 = 0;                                                       /*0108*/
   ret_2 = 0;                                                           /*0109*/
   
   
   _return11 = 0;                                                       /*0115*/
   
   
   _return8 = ret_2;                                                    /*0116*/
   ret_1 = _return8;                                                    /*0117*/

   neighborTransposed_0[8] = freia_morpho_k8_0[0];                      /*0125*/
   neighborTransposed_0[7] = freia_morpho_k8_0[1];                      /*0126*/
   neighborTransposed_0[6] = freia_morpho_k8_0[2];                      /*0127*/
   neighborTransposed_0[5] = freia_morpho_k8_0[3];                      /*0128*/
   neighborTransposed_0[4] = freia_morpho_k8_0[4];                      /*0129*/
   neighborTransposed_0[3] = freia_morpho_k8_0[5];                      /*0130*/
   neighborTransposed_0[2] = freia_morpho_k8_0[6];                      /*0131*/
   neighborTransposed_0[1] = freia_morpho_k8_0[7];                      /*0132*/
   neighborTransposed_0[0] = freia_morpho_k8_0[8];                      /*0133*/
   
   
   _return35 = 0;                                                       /*0139*/
   ret_3 = 0;                                                           /*0140*/
   
   
   _return51 = 0;                                                       /*0146*/
   
   
   _return19 = ret_3;                                                   /*0147*/
   err_1 |= _return19;                                                  /*0148*/

   neighborTransposed_1[8] = freia_morpho_k8_1[0];                      /*0150*/
   neighborTransposed_1[7] = freia_morpho_k8_1[1];                      /*0151*/
   neighborTransposed_1[6] = freia_morpho_k8_1[2];                      /*0152*/
   neighborTransposed_1[5] = freia_morpho_k8_1[3];                      /*0153*/
   neighborTransposed_1[4] = freia_morpho_k8_1[4];                      /*0154*/
   neighborTransposed_1[3] = freia_morpho_k8_1[5];                      /*0155*/
   neighborTransposed_1[2] = freia_morpho_k8_1[6];                      /*0156*/
   neighborTransposed_1[1] = freia_morpho_k8_1[7];                      /*0157*/
   neighborTransposed_1[0] = freia_morpho_k8_1[8];                      /*0158*/
   
   
   _return36 = 0;                                                       /*0164*/
   ret_4 = 0;                                                           /*0165*/
   
   
   _return52 = 0;                                                       /*0171*/
   
   
   _return20 = ret_4;                                                   /*0172*/

   neighborTransposed_2[8] = freia_morpho_k8_2[0];                      /*0175*/
   neighborTransposed_2[7] = freia_morpho_k8_2[1];                      /*0176*/
   neighborTransposed_2[6] = freia_morpho_k8_2[2];                      /*0177*/
   neighborTransposed_2[5] = freia_morpho_k8_2[3];                      /*0178*/
   neighborTransposed_2[4] = freia_morpho_k8_2[4];                      /*0179*/
   neighborTransposed_2[3] = freia_morpho_k8_2[5];                      /*0180*/
   neighborTransposed_2[2] = freia_morpho_k8_2[6];                      /*0181*/
   neighborTransposed_2[1] = freia_morpho_k8_2[7];                      /*0182*/
   neighborTransposed_2[0] = freia_morpho_k8_2[8];                      /*0183*/
   
   
   _return37 = 0;                                                       /*0189*/
   ret_5 = 0;                                                           /*0190*/
   
   
   _return53 = 0;                                                       /*0196*/
   
   
   _return21 = ret_5;                                                   /*0197*/

   neighborTransposed_3[8] = freia_morpho_k4_0[0];                      /*0200*/
   neighborTransposed_3[7] = freia_morpho_k4_0[1];                      /*0201*/
   neighborTransposed_3[6] = freia_morpho_k4_0[2];                      /*0202*/
   neighborTransposed_3[5] = freia_morpho_k4_0[3];                      /*0203*/
   neighborTransposed_3[4] = freia_morpho_k4_0[4];                      /*0204*/
   neighborTransposed_3[3] = freia_morpho_k4_0[5];                      /*0205*/
   neighborTransposed_3[2] = freia_morpho_k4_0[6];                      /*0206*/
   neighborTransposed_3[1] = freia_morpho_k4_0[7];                      /*0207*/
   neighborTransposed_3[0] = freia_morpho_k4_0[8];                      /*0208*/
   
   
   _return33 = 0;                                                       /*0214*/
   ret_6 = 0;                                                           /*0215*/
   
   
   _return49 = 0;                                                       /*0221*/
   
   
   _return17 = ret_6;                                                   /*0222*/

   neighborTransposed_4[8] = freia_morpho_k4_1[0];                      /*0225*/
   neighborTransposed_4[7] = freia_morpho_k4_1[1];                      /*0226*/
   neighborTransposed_4[6] = freia_morpho_k4_1[2];                      /*0227*/
   neighborTransposed_4[5] = freia_morpho_k4_1[3];                      /*0228*/
   neighborTransposed_4[4] = freia_morpho_k4_1[4];                      /*0229*/
   neighborTransposed_4[3] = freia_morpho_k4_1[5];                      /*0230*/
   neighborTransposed_4[2] = freia_morpho_k4_1[6];                      /*0231*/
   neighborTransposed_4[1] = freia_morpho_k4_1[7];                      /*0232*/
   neighborTransposed_4[0] = freia_morpho_k4_1[8];                      /*0233*/
   
   
   _return34 = 0;                                                       /*0239*/
   ret_7 = 0;                                                           /*0240*/
   
   
   _return50 = 0;                                                       /*0246*/
   
   
   _return18 = ret_7;                                                   /*0247*/

   neighborTransposed_5[8] = freia_morpho_k6_0[0];                      /*0250*/
   neighborTransposed_5[7] = freia_morpho_k6_0[1];                      /*0251*/
   neighborTransposed_5[6] = freia_morpho_k6_0[2];                      /*0252*/
   neighborTransposed_5[5] = freia_morpho_k6_0[3];                      /*0253*/
   neighborTransposed_5[4] = freia_morpho_k6_0[4];                      /*0254*/
   neighborTransposed_5[3] = freia_morpho_k6_0[5];                      /*0255*/
   neighborTransposed_5[2] = freia_morpho_k6_0[6];                      /*0256*/
   neighborTransposed_5[1] = freia_morpho_k6_0[7];                      /*0257*/
   neighborTransposed_5[0] = freia_morpho_k6_0[8];                      /*0258*/
   
   
   _return30 = 0;                                                       /*0264*/
   ret_8 = 0;                                                           /*0265*/
   
   
   _return46 = 0;                                                       /*0271*/
   
   
   _return14 = ret_8;                                                   /*0272*/

   neighborTransposed_6[8] = freia_morpho_k6_1[0];                      /*0275*/
   neighborTransposed_6[7] = freia_morpho_k6_1[1];                      /*0276*/
   neighborTransposed_6[6] = freia_morpho_k6_1[2];                      /*0277*/
   neighborTransposed_6[5] = freia_morpho_k6_1[3];                      /*0278*/
   neighborTransposed_6[4] = freia_morpho_k6_1[4];                      /*0279*/
   neighborTransposed_6[3] = freia_morpho_k6_1[5];                      /*0280*/
   neighborTransposed_6[2] = freia_morpho_k6_1[6];                      /*0281*/
   neighborTransposed_6[1] = freia_morpho_k6_1[7];                      /*0282*/
   neighborTransposed_6[0] = freia_morpho_k6_1[8];                      /*0283*/
   
   
   _return31 = 0;                                                       /*0289*/
   ret_9 = 0;                                                           /*0290*/
   
   
   _return47 = 0;                                                       /*0296*/
   
   
   _return15 = ret_9;                                                   /*0297*/

   neighborTransposed_7[8] = freia_morpho_k6_2[0];                      /*0300*/
   neighborTransposed_7[7] = freia_morpho_k6_2[1];                      /*0301*/
   neighborTransposed_7[6] = freia_morpho_k6_2[2];                      /*0302*/
   neighborTransposed_7[5] = freia_morpho_k6_2[3];                      /*0303*/
   neighborTransposed_7[4] = freia_morpho_k6_2[4];                      /*0304*/
   neighborTransposed_7[3] = freia_morpho_k6_2[5];                      /*0305*/
   neighborTransposed_7[2] = freia_morpho_k6_2[6];                      /*0306*/
   neighborTransposed_7[1] = freia_morpho_k6_2[7];                      /*0307*/
   neighborTransposed_7[0] = freia_morpho_k6_2[8];                      /*0308*/
   
   
   _return32 = 0;                                                       /*0314*/
   ret_10 = 0;                                                          /*0315*/
   
   
   _return48 = 0;                                                       /*0321*/
   
   
   _return16 = ret_10;                                                  /*0322*/

   neighborTransposed_8[8] = freia_morpho_k8_0[0];                      /*0338*/
   neighborTransposed_8[7] = freia_morpho_k8_0[1];                      /*0339*/
   neighborTransposed_8[6] = freia_morpho_k8_0[2];                      /*0340*/
   neighborTransposed_8[5] = freia_morpho_k8_0[3];                      /*0341*/
   neighborTransposed_8[4] = freia_morpho_k8_0[4];                      /*0342*/
   neighborTransposed_8[3] = freia_morpho_k8_0[5];                      /*0343*/
   neighborTransposed_8[2] = freia_morpho_k8_0[6];                      /*0344*/
   neighborTransposed_8[1] = freia_morpho_k8_0[7];                      /*0345*/
   neighborTransposed_8[0] = freia_morpho_k8_0[8];                      /*0346*/
   
   
   _return43 = 0;                                                       /*0352*/
   ret_11 = 0;                                                          /*0353*/
   
   
   _return59 = 0;                                                       /*0359*/
   
   
   _return27 = ret_11;                                                  /*0360*/
   err_3 |= _return27;                                                  /*0361*/

   neighborTransposed_9[8] = freia_morpho_k8_1[0];                      /*0363*/
   neighborTransposed_9[7] = freia_morpho_k8_1[1];                      /*0364*/
   neighborTransposed_9[6] = freia_morpho_k8_1[2];                      /*0365*/
   neighborTransposed_9[5] = freia_morpho_k8_1[3];                      /*0366*/
   neighborTransposed_9[4] = freia_morpho_k8_1[4];                      /*0367*/
   neighborTransposed_9[3] = freia_morpho_k8_1[5];                      /*0368*/
   neighborTransposed_9[2] = freia_morpho_k8_1[6];                      /*0369*/
   neighborTransposed_9[1] = freia_morpho_k8_1[7];                      /*0370*/
   neighborTransposed_9[0] = freia_morpho_k8_1[8];                      /*0371*/
   
   
   _return44 = 0;                                                       /*0377*/
   ret_12 = 0;                                                          /*0378*/
   
   
   _return60 = 0;                                                       /*0384*/
   
   
   _return28 = ret_12;                                                  /*0385*/

   neighborTransposed_10[8] = freia_morpho_k8_2[0];                     /*0388*/
   neighborTransposed_10[7] = freia_morpho_k8_2[1];                     /*0389*/
   neighborTransposed_10[6] = freia_morpho_k8_2[2];                     /*0390*/
   neighborTransposed_10[5] = freia_morpho_k8_2[3];                     /*0391*/
   neighborTransposed_10[4] = freia_morpho_k8_2[4];                     /*0392*/
   neighborTransposed_10[3] = freia_morpho_k8_2[5];                     /*0393*/
   neighborTransposed_10[2] = freia_morpho_k8_2[6];                     /*0394*/
   neighborTransposed_10[1] = freia_morpho_k8_2[7];                     /*0395*/
   neighborTransposed_10[0] = freia_morpho_k8_2[8];                     /*0396*/
   
   
   _return45 = 0;                                                       /*0402*/
   ret_13 = 0;                                                          /*0403*/
   
   
   _return61 = 0;                                                       /*0409*/
   
   
   _return29 = ret_13;                                                  /*0410*/

   neighborTransposed_11[8] = freia_morpho_k4_0[0];                     /*0413*/
   neighborTransposed_11[7] = freia_morpho_k4_0[1];                     /*0414*/
   neighborTransposed_11[6] = freia_morpho_k4_0[2];                     /*0415*/
   neighborTransposed_11[5] = freia_morpho_k4_0[3];                     /*0416*/
   neighborTransposed_11[4] = freia_morpho_k4_0[4];                     /*0417*/
   neighborTransposed_11[3] = freia_morpho_k4_0[5];                     /*0418*/
   neighborTransposed_11[2] = freia_morpho_k4_0[6];                     /*0419*/
   neighborTransposed_11[1] = freia_morpho_k4_0[7];                     /*0420*/
   neighborTransposed_11[0] = freia_morpho_k4_0[8];                     /*0421*/
   
   
   _return41 = 0;                                                       /*0427*/
   ret_14 = 0;                                                          /*0428*/
   
   
   _return57 = 0;                                                       /*0434*/
   
   
   _return25 = ret_14;                                                  /*0435*/

   neighborTransposed_12[8] = freia_morpho_k4_1[0];                     /*0438*/
   neighborTransposed_12[7] = freia_morpho_k4_1[1];                     /*0439*/
   neighborTransposed_12[6] = freia_morpho_k4_1[2];                     /*0440*/
   neighborTransposed_12[5] = freia_morpho_k4_1[3];                     /*0441*/
   neighborTransposed_12[4] = freia_morpho_k4_1[4];                     /*0442*/
   neighborTransposed_12[3] = freia_morpho_k4_1[5];                     /*0443*/
   neighborTransposed_12[2] = freia_morpho_k4_1[6];                     /*0444*/
   neighborTransposed_12[1] = freia_morpho_k4_1[7];                     /*0445*/
   neighborTransposed_12[0] = freia_morpho_k4_1[8];                     /*0446*/
   
   
   _return42 = 0;                                                       /*0452*/
   ret_15 = 0;                                                          /*0453*/
   
   
   _return58 = 0;                                                       /*0459*/
   
   
   _return26 = ret_15;                                                  /*0460*/

   neighborTransposed_13[8] = freia_morpho_k6_0[0];                     /*0463*/
   neighborTransposed_13[7] = freia_morpho_k6_0[1];                     /*0464*/
   neighborTransposed_13[6] = freia_morpho_k6_0[2];                     /*0465*/
   neighborTransposed_13[5] = freia_morpho_k6_0[3];                     /*0466*/
   neighborTransposed_13[4] = freia_morpho_k6_0[4];                     /*0467*/
   neighborTransposed_13[3] = freia_morpho_k6_0[5];                     /*0468*/
   neighborTransposed_13[2] = freia_morpho_k6_0[6];                     /*0469*/
   neighborTransposed_13[1] = freia_morpho_k6_0[7];                     /*0470*/
   neighborTransposed_13[0] = freia_morpho_k6_0[8];                     /*0471*/
   
   
   _return38 = 0;                                                       /*0477*/
   ret_16 = 0;                                                          /*0478*/
   
   
   _return54 = 0;                                                       /*0484*/
   
   
   _return22 = ret_16;                                                  /*0485*/

   neighborTransposed_14[8] = freia_morpho_k6_1[0];                     /*0488*/
   neighborTransposed_14[7] = freia_morpho_k6_1[1];                     /*0489*/
   neighborTransposed_14[6] = freia_morpho_k6_1[2];                     /*0490*/
   neighborTransposed_14[5] = freia_morpho_k6_1[3];                     /*0491*/
   neighborTransposed_14[4] = freia_morpho_k6_1[4];                     /*0492*/
   neighborTransposed_14[3] = freia_morpho_k6_1[5];                     /*0493*/
   neighborTransposed_14[2] = freia_morpho_k6_1[6];                     /*0494*/
   neighborTransposed_14[1] = freia_morpho_k6_1[7];                     /*0495*/
   neighborTransposed_14[0] = freia_morpho_k6_1[8];                     /*0496*/
   
   
   _return39 = 0;                                                       /*0502*/
   ret_17 = 0;                                                          /*0503*/
   
   
   _return55 = 0;                                                       /*0509*/
   
   
   _return23 = ret_17;                                                  /*0510*/

   neighborTransposed_15[8] = freia_morpho_k6_2[0];                     /*0513*/
   neighborTransposed_15[7] = freia_morpho_k6_2[1];                     /*0514*/
   neighborTransposed_15[6] = freia_morpho_k6_2[2];                     /*0515*/
   neighborTransposed_15[5] = freia_morpho_k6_2[3];                     /*0516*/
   neighborTransposed_15[4] = freia_morpho_k6_2[4];                     /*0517*/
   neighborTransposed_15[3] = freia_morpho_k6_2[5];                     /*0518*/
   neighborTransposed_15[2] = freia_morpho_k6_2[6];                     /*0519*/
   neighborTransposed_15[1] = freia_morpho_k6_2[7];                     /*0520*/
   neighborTransposed_15[0] = freia_morpho_k6_2[8];                     /*0521*/
   
   
   _return40 = 0;                                                       /*0527*/
   ret_18 = 0;                                                          /*0528*/
   
   
   _return56 = 0;                                                       /*0534*/
   
   
   _return24 = ret_18;                                                  /*0535*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0122*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0335*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0336*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0119*/
   // for display
   
   // 2nd tophat
   freia_52_spoc_helper_0_0_0(w1_0, w1_1, imin, freia_morpho_kernel_8c, freia_morpho_k8_0, neighborTransposed_8);    /*0121*/
   
   
   
   
   freia_52_spoc_helper_0_0_1(w2_1, w1_1, neighborTransposed_8, 255);   /*0355*/
   
   
   
   
   
   
   
   freia_52_spoc_helper_0_1_0(w1_1, w1_1_51, w1_0, freia_morpho_k8_1, freia_morpho_k8_2, neighborTransposed_9, neighborTransposed_10);             /*0379*/
   freia_52_spoc_helper_0_1_1(w1_1, w1_1_50, w1_1_51, w1_1, neighborTransposed_9, neighborTransposed_10);            /*0383*/
   
   
   
   
   err_1 |= _return20;                                                  /*0173*/
   
   
   
   
   err_1 |= _return21;                                                  /*0198*/
   
   
   freia_52_spoc_helper_0_2_0(w2_1, w1_1, w2_1);                        /*0387*/
   freia_52_spoc_helper_0_3_0(w2_1, w1_1_50, w2_1);                     /*0412*/
   
   
   freia_52_spoc_helper_0_4_0(w1_1, w1_1_31, w1_0, freia_morpho_k4_0, freia_morpho_k4_1, neighborTransposed_11, neighborTransposed_12);            /*0429*/
   freia_52_spoc_helper_0_4_1(w1_1, w1_1_30, w1_1_31, w1_1, neighborTransposed_11, neighborTransposed_12);           /*0433*/
   
   
   
   
   err_1 |= _return17;                                                  /*0223*/
   
   
   
   
   err_1 |= _return18;                                                  /*0248*/
   
   
   freia_52_spoc_helper_0_5_0(w2_1, w1_1, w2_1);                        /*0437*/
   freia_52_spoc_helper_0_6_0(w2_1, w1_1_30, w2_1);                     /*0462*/
   
   
   freia_52_spoc_helper_0_7_0(w1_1, w1_1_11, w1_0, freia_morpho_k6_0, freia_morpho_k6_1, neighborTransposed_13, neighborTransposed_14);            /*0479*/
   freia_52_spoc_helper_0_7_1(w1_1, w1_1_10, w1_1_11, w1_1, neighborTransposed_13, neighborTransposed_14);           /*0483*/
   
   
   
   
   err_1 |= _return14;                                                  /*0273*/
   
   
   
   
   err_1 |= _return15;                                                  /*0298*/
   
   
   freia_52_spoc_helper_0_8_0(w2_1, w1_1, w2_1);                        /*0487*/
   freia_52_spoc_helper_0_9_0(w2_1, w1_1_10, w2_1);                     /*0512*/
   
   
   freia_52_spoc_helper_0_10_0(w1_1, w1_0, w2_1, freia_morpho_k6_2, neighborTransposed_15);           /*0529*/
   freia_52_spoc_helper_0_10_1(imWork1, w1_1, w2_1, neighborTransposed_15, &volcurrent);              /*0533*/

   ret_19 = 0;                                                          /*0545*/
   
   
   err_1 |= _return16;                                                  /*0323*/
   
   
   
   _return9 = err_1;                                                    /*0328*/
   err_0 |= _return9;                                                   /*0329*/
   _return3 = err_0;                                                    /*0331*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   err_3 |= _return28;                                                  /*0386*/
   
   
   err_3 |= _return29;                                                  /*0411*/
   
   
   err_3 |= _return25;                                                  /*0436*/
   
   
   err_3 |= _return26;                                                  /*0461*/
   
   
   err_3 |= _return22;                                                  /*0486*/
   
   
   err_3 |= _return23;                                                  /*0511*/
   
   
   err_3 |= _return24;                                                  /*0536*/
   
   
   
   _return10 = err_3;                                                   /*0541*/
   err_2 |= _return10;                                                  /*0542*/
   _return4 = err_2;                                                    /*0544*/
   freia_common_destruct_data(w1_0);                                    /*0326*/
   freia_common_destruct_data(w1_1);                                    /*0539*/
   freia_common_destruct_data(w1_1_10);
   freia_common_destruct_data(w1_1_11);
   freia_common_destruct_data(w1_1_30);
   freia_common_destruct_data(w1_1_31);
   freia_common_destruct_data(w1_1_50);
   freia_common_destruct_data(w1_1_51);
   freia_common_destruct_data(w2_1);                                    /*0540*/
   do {                                                                 /*0546*/
      i_52 = 1;                                                         /*0547*/
      
      
      _return12 = 0;                                                    /*0548*/
      ret_20 = 0;                                                       /*0549*/
      volprevious = volcurrent;                                         /*0553*/
      i_52 = 1;                                                         /*0554*/
      
      
      _return12 = 0;                                                    /*0555*/
      volprevious = volcurrent;                                         /*0560*/
      i_52 = 1;                                                         /*0561*/
      
      
      _return12 = 0;                                                    /*0562*/
      volprevious = volcurrent;                                         /*0567*/
      i_52 = 1;                                                         /*0568*/
      
      
      _return12 = 0;                                                    /*0569*/
      volprevious = volcurrent;                                         /*0574*/
      i_52 = 1;                                                         /*0575*/
      
      
      _return12 = 0;                                                    /*0576*/
      volprevious = volcurrent;                                         /*0581*/
      i_52 = 1;                                                         /*0582*/
      
      
      _return12 = 0;                                                    /*0583*/
      volprevious = volcurrent;                                         /*0588*/
      i_52 = 1;                                                         /*0589*/
      
      
      _return12 = 0;                                                    /*0590*/
      volprevious = volcurrent;                                         /*0595*/
      i_52 = 1;                                                         /*0597*/
      
      
      _return12 = 0;                                                    /*0598*/
      freia_52_spoc_helper_1_0_0(imWork1, imWork1, imin, &volcurrent);  /*0550*/
      
      
      _return7 = ret_20;                                                /*0551*/
      ret_19 |= _return7;                                               /*0552*/
      ret_20 = 0;                                                       /*0556*/
      
      
      _return7 = ret_20;                                                /*0558*/
      ret_19 |= _return7;                                               /*0559*/
      ret_20 = 0;                                                       /*0563*/
      
      
      _return7 = ret_20;                                                /*0565*/
      ret_19 |= _return7;                                               /*0566*/
      ret_20 = 0;                                                       /*0570*/
      
      
      _return7 = ret_20;                                                /*0572*/
      ret_19 |= _return7;                                               /*0573*/
      ret_20 = 0;                                                       /*0577*/
      
      
      _return7 = ret_20;                                                /*0579*/
      ret_19 |= _return7;                                               /*0580*/
      ret_20 = 0;                                                       /*0584*/
      
      
      _return7 = ret_20;                                                /*0586*/
      ret_19 |= _return7;                                               /*0587*/
      ret_20 = 0;                                                       /*0591*/
      
      
      _return7 = ret_20;                                                /*0593*/
      ret_19 |= _return7;                                               /*0594*/
      ret_20 = 0;                                                       /*0599*/
      
      
      _return7 = ret_20;                                                /*0601*/
      ret_19 |= _return7;                                               /*0602*/
      volprevious = volcurrent;                                         /*0603*/
      freia_52_spoc_helper_1_1_0(imWork1, &volcurrent);                 /*0604*/
   }
   while (volcurrent!=volprevious);                                     /*0546*/
   
   
   _return0 = ret_19;                                                   /*0605*/
   freia_52_spoc_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);   /*0606*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0610*/
   freia_common_tx_image(imWork1, &fdout);                              /*0611*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0612*/
   freia_common_destruct_data(imWork1);                                 /*0616*/

   freia_common_close_input(&fdin);                                     /*0618*/
   freia_common_close_output(&fdout);                                   /*0619*/

   return 0;                                                            /*0620*/
}
#
# TERAPIX
#

! initial function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophat, *imout_tophatLin, *imout_tophatLinRecon, *imWork1, *imWork2;    /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   int i_0, i_1;                                                        /*0023*/
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   int i_2, i_3;                                                        /*0027*/
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0, *w2_0;                                           /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   int i_4;                                                             /*0037*/
   //PIPS generated variable
   uint32_t i_5, i_6;                                                   /*0039*/
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   int i_7;                                                             /*0045*/
   //PIPS generated variable
   uint32_t i_8, i_9;                                                   /*0047*/
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   int i_10;                                                            /*0053*/
   //PIPS generated variable
   uint32_t i_11, i_12;                                                 /*0055*/
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   int i_13;                                                            /*0061*/
   //PIPS generated variable
   uint32_t i_14, i_15;                                                 /*0063*/
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   int i_16;                                                            /*0069*/
   //PIPS generated variable
   uint32_t i_17, i_18;                                                 /*0071*/
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   int i_19;                                                            /*0077*/
   //PIPS generated variable
   uint32_t i_20, i_21;                                                 /*0079*/
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   int i_22;                                                            /*0085*/
   //PIPS generated variable
   uint32_t i_23, i_24;                                                 /*0087*/
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   int i_25;                                                            /*0093*/
   //PIPS generated variable
   uint32_t i_26, i_27;                                                 /*0095*/
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   int i_28;                                                            /*0105*/
   //PIPS generated variable
   uint32_t i_29, i_30;                                                 /*0107*/
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   int i_31;                                                            /*0113*/
   //PIPS generated variable
   uint32_t i_32, i_33;                                                 /*0115*/
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   int i_34;                                                            /*0121*/
   //PIPS generated variable
   uint32_t i_35, i_36;                                                 /*0123*/
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   int i_37;                                                            /*0129*/
   //PIPS generated variable
   uint32_t i_38, i_39;                                                 /*0131*/
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   int i_40;                                                            /*0137*/
   //PIPS generated variable
   uint32_t i_41, i_42;                                                 /*0139*/
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   int i_43;                                                            /*0145*/
   //PIPS generated variable
   uint32_t i_44, i_45;                                                 /*0147*/
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   int i_46;                                                            /*0153*/
   //PIPS generated variable
   uint32_t i_47, i_48;                                                 /*0155*/
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   int i_49;                                                            /*0161*/
   //PIPS generated variable
   uint32_t i_50, i_51;                                                 /*0163*/
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophat = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);         /*0179*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imout_tophatLin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);      /*0181*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   imWork2 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0183*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   // 1st tophat
   
   
   freia_aipo_erode_8c(imWork1, imin, freia_morpho_kernel_8c);          /*0191*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0192*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0193*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0194*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0195*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0202*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0203*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0204*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0205*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0206*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   // freia_common_tx_image(imWork1, &fdout);
   
   
   freia_aipo_erode_8c(imout_tophat, imin, freia_morpho_kernel_8c);     /*0216*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0217*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0218*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0219*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0220*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0227*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0228*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0229*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0230*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0231*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/
   ret_1 |= freia_aipo_sub(imout_tophat, imin, imout_tophat);           /*0239*/
   
   
   _return2 = ret_1;                                                    /*0242*/
   freia_aipo_mul_const(imout_tophat, imout_tophat, 2);                 /*0243*/
   // for display
   
   // 2nd tophat
   err_0 |= freia_aipo_not(imWork1, imin);                              /*0247*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   w2_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0251*/

   freia_aipo_set_constant(w2_0, 255);                                  /*0253*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0270*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0277*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0278*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0279*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0280*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0281*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0289*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0302*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0306*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0313*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0314*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0315*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0316*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0317*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/
   err_1 |= _return20;                                                  /*0324*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0325*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0338*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0342*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0349*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0350*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0351*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0352*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0353*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/
   err_1 |= _return21;                                                  /*0360*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0361*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0374*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0378*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0385*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0386*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0387*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0388*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0389*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/
   err_1 |= _return17;                                                  /*0396*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0397*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0410*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0414*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0421*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0422*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0423*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0424*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0425*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/
   err_1 |= _return18;                                                  /*0432*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0433*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0446*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0450*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0457*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0458*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0459*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0460*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0461*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/
   err_1 |= _return14;                                                  /*0468*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0469*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0482*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0486*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0493*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0494*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0495*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0496*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0497*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/
   err_1 |= _return15;                                                  /*0504*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0505*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0518*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0522*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0529*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0530*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0531*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0532*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0533*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/
   err_1 |= _return16;                                                  /*0540*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0541*/

   err_1 |= freia_aipo_copy(imWork1, w2_0);                             /*0543*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w2_0);                                    /*0545*/
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   err_0 |= freia_aipo_not(imWork1, imWork1);                           /*0550*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   freia_aipo_sub(imout_tophatLin, imin, imWork1);                      /*0553*/
   freia_aipo_mul_const(imout_tophatLin, imout_tophatLin, 2);           /*0554*/
   // for display
   
   // 3nd tophat
   err_2 |= freia_aipo_not(imWork1, imin);                              /*0558*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/

   freia_aipo_set_constant(w2_1, 255);                                  /*0564*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0577*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0578*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0579*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0580*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0581*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0600*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0613*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0614*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0615*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0616*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0617*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/
   err_3 |= _return28;                                                  /*0635*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0636*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0649*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0650*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0651*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0652*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0653*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/
   err_3 |= _return29;                                                  /*0671*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0672*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0685*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0686*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0687*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0688*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0689*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/
   err_3 |= _return25;                                                  /*0707*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0708*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0721*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0722*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0723*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0724*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0725*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/
   err_3 |= _return26;                                                  /*0743*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0744*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0757*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0758*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0759*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0760*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0761*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/
   err_3 |= _return22;                                                  /*0779*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0780*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0793*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0794*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0795*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0796*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0797*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/
   err_3 |= _return23;                                                  /*0815*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0816*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0829*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0830*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0831*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0832*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0833*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   err_3 |= _return24;                                                  /*0851*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0852*/

   err_3 |= freia_aipo_copy(imWork1, w2_1);                             /*0854*/
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   err_2 |= freia_aipo_not(imWork1, imWork1);                           /*0861*/
   _return4 = err_2;                                                    /*0862*/

   ret_19 = freia_aipo_global_vol(imWork1, &volcurrent);                /*0864*/
   do {                                                                 /*0882*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      ret_20 |= freia_aipo_inf(imWork1, imWork1, imin);                 /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_aipo_global_vol(imWork1, &volcurrent);            /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   freia_aipo_sup(imWork2, imWork1, imin);                              /*0892*/
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophat);                            /*0906*/
   freia_common_destruct_data(imout_tophatLin);                         /*0907*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/
   freia_common_destruct_data(imWork2);                                 /*0910*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! graphs

// graph for dag "dag_0" of module "freia_52" in dot format
// DAG "dag_0": #i=1 #o=1 #c=207 #s=21 #I=2 #B=0 #A=0
digraph "dag_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "854 =" [shape=circle];
  "854 =" -> "861 !" [label="imWork1"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "854 =" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1"];
  "833 D8" [shape=box];
  "833 D8" -> "840 E8" [label="w1_1"];
  "832 D8" [shape=box];
  "832 D8" -> "833 D8" [label="w1_1"];
  "831 D8" [shape=box];
  "831 D8" -> "832 D8" [label="w1_1"];
  "830 D8" [shape=box];
  "830 D8" -> "831 D8" [label="w1_1"];
  "829 D8" [shape=box];
  "829 D8" -> "830 D8" [label="w1_1"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1"];
  "797 D8" [shape=box];
  "797 D8" -> "804 E8" [label="w1_1"];
  "796 D8" [shape=box];
  "796 D8" -> "797 D8" [label="w1_1"];
  "795 D8" [shape=box];
  "795 D8" -> "796 D8" [label="w1_1"];
  "794 D8" [shape=box];
  "794 D8" -> "795 D8" [label="w1_1"];
  "793 D8" [shape=box];
  "793 D8" -> "794 D8" [label="w1_1"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1"];
  "761 D8" [shape=box];
  "761 D8" -> "768 E8" [label="w1_1"];
  "760 D8" [shape=box];
  "760 D8" -> "761 D8" [label="w1_1"];
  "759 D8" [shape=box];
  "759 D8" -> "760 D8" [label="w1_1"];
  "758 D8" [shape=box];
  "758 D8" -> "759 D8" [label="w1_1"];
  "757 D8" [shape=box];
  "757 D8" -> "758 D8" [label="w1_1"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1"];
  "725 D8" [shape=box];
  "725 D8" -> "732 E8" [label="w1_1"];
  "724 D8" [shape=box];
  "724 D8" -> "725 D8" [label="w1_1"];
  "723 D8" [shape=box];
  "723 D8" -> "724 D8" [label="w1_1"];
  "722 D8" [shape=box];
  "722 D8" -> "723 D8" [label="w1_1"];
  "721 D8" [shape=box];
  "721 D8" -> "722 D8" [label="w1_1"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1"];
  "689 D8" [shape=box];
  "689 D8" -> "696 E8" [label="w1_1"];
  "688 D8" [shape=box];
  "688 D8" -> "689 D8" [label="w1_1"];
  "687 D8" [shape=box];
  "687 D8" -> "688 D8" [label="w1_1"];
  "686 D8" [shape=box];
  "686 D8" -> "687 D8" [label="w1_1"];
  "685 D8" [shape=box];
  "685 D8" -> "686 D8" [label="w1_1"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1"];
  "653 D8" [shape=box];
  "653 D8" -> "660 E8" [label="w1_1"];
  "652 D8" [shape=box];
  "652 D8" -> "653 D8" [label="w1_1"];
  "651 D8" [shape=box];
  "651 D8" -> "652 D8" [label="w1_1"];
  "650 D8" [shape=box];
  "650 D8" -> "651 D8" [label="w1_1"];
  "649 D8" [shape=box];
  "649 D8" -> "650 D8" [label="w1_1"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1"];
  "617 D8" [shape=box];
  "617 D8" -> "624 E8" [label="w1_1"];
  "616 D8" [shape=box];
  "616 D8" -> "617 D8" [label="w1_1"];
  "615 D8" [shape=box];
  "615 D8" -> "616 D8" [label="w1_1"];
  "614 D8" [shape=box];
  "614 D8" -> "615 D8" [label="w1_1"];
  "613 D8" [shape=box];
  "613 D8" -> "614 D8" [label="w1_1"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "636 <" [label="w2_1"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <" [label="w1_1"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1"];
  "581 D8" [shape=box];
  "581 D8" -> "588 E8" [label="w1_1"];
  "580 D8" [shape=box];
  "580 D8" -> "581 D8" [label="w1_1"];
  "579 D8" [shape=box];
  "579 D8" -> "580 D8" [label="w1_1"];
  "578 D8" [shape=box];
  "578 D8" -> "579 D8" [label="w1_1"];
  "577 D8" [shape=box];
  "577 D8" -> "578 D8" [label="w1_1"];
  "564 C" [shape=trapezium,orientation=270];
  "564 C" -> "600 <" [label="w2_1"];
  "558 !" [shape=trapezium,orientation=270];
  "558 !" -> "829 D8" [label="imWork1"];
  "558 !" -> "793 D8" [label="imWork1"];
  "558 !" -> "757 D8" [label="imWork1"];
  "558 !" -> "721 D8" [label="imWork1"];
  "558 !" -> "685 D8" [label="imWork1"];
  "558 !" -> "649 D8" [label="imWork1"];
  "558 !" -> "613 D8" [label="imWork1"];
  "558 !" -> "577 D8" [label="imWork1"];
  "554 *_" [shape=trapezium,orientation=270];
  "553 -" [shape=trapezium,orientation=270];
  "553 -" -> "554 *_" [label="imout_tophatLin"];
  "550 !" [shape=trapezium,orientation=270];
  "550 !" -> "553 -" [label="imWork1"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "543 =" [shape=circle];
  "543 =" -> "550 !" [label="imWork1"];
  "541 <" [shape=trapezium,orientation=270];
  "541 <" -> "543 =" [label="w2_0"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "533 E8" [shape=box];
  "533 E8" -> "541 <" [label="w1_0"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_0"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_0"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_0"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_0"];
  "522 D8" [shape=box];
  "522 D8" -> "529 E8" [label="w1_0"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0"];
  "518 D8" [shape=box];
  "518 D8" -> "519 D8" [label="w1_0"];
  "505 <" [shape=trapezium,orientation=270];
  "505 <" -> "541 <" [label="w2_0"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "497 E8" [shape=box];
  "497 E8" -> "505 <" [label="w1_0"];
  "496 E8" [shape=box];
  "496 E8" -> "497 E8" [label="w1_0"];
  "495 E8" [shape=box];
  "495 E8" -> "496 E8" [label="w1_0"];
  "494 E8" [shape=box];
  "494 E8" -> "495 E8" [label="w1_0"];
  "493 E8" [shape=box];
  "493 E8" -> "494 E8" [label="w1_0"];
  "486 D8" [shape=box];
  "486 D8" -> "493 E8" [label="w1_0"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0"];
  "482 D8" [shape=box];
  "482 D8" -> "483 D8" [label="w1_0"];
  "469 <" [shape=trapezium,orientation=270];
  "469 <" -> "505 <" [label="w2_0"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "461 E8" [shape=box];
  "461 E8" -> "469 <" [label="w1_0"];
  "460 E8" [shape=box];
  "460 E8" -> "461 E8" [label="w1_0"];
  "459 E8" [shape=box];
  "459 E8" -> "460 E8" [label="w1_0"];
  "458 E8" [shape=box];
  "458 E8" -> "459 E8" [label="w1_0"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_0"];
  "450 D8" [shape=box];
  "450 D8" -> "457 E8" [label="w1_0"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0"];
  "446 D8" [shape=box];
  "446 D8" -> "447 D8" [label="w1_0"];
  "433 <" [shape=trapezium,orientation=270];
  "433 <" -> "469 <" [label="w2_0"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "425 E8" [shape=box];
  "425 E8" -> "433 <" [label="w1_0"];
  "424 E8" [shape=box];
  "424 E8" -> "425 E8" [label="w1_0"];
  "423 E8" [shape=box];
  "423 E8" -> "424 E8" [label="w1_0"];
  "422 E8" [shape=box];
  "422 E8" -> "423 E8" [label="w1_0"];
  "421 E8" [shape=box];
  "421 E8" -> "422 E8" [label="w1_0"];
  "414 D8" [shape=box];
  "414 D8" -> "421 E8" [label="w1_0"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0"];
  "410 D8" [shape=box];
  "410 D8" -> "411 D8" [label="w1_0"];
  "397 <" [shape=trapezium,orientation=270];
  "397 <" -> "433 <" [label="w2_0"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "389 E8" [shape=box];
  "389 E8" -> "397 <" [label="w1_0"];
  "388 E8" [shape=box];
  "388 E8" -> "389 E8" [label="w1_0"];
  "387 E8" [shape=box];
  "387 E8" -> "388 E8" [label="w1_0"];
  "386 E8" [shape=box];
  "386 E8" -> "387 E8" [label="w1_0"];
  "385 E8" [shape=box];
  "385 E8" -> "386 E8" [label="w1_0"];
  "378 D8" [shape=box];
  "378 D8" -> "385 E8" [label="w1_0"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0"];
  "374 D8" [shape=box];
  "374 D8" -> "375 D8" [label="w1_0"];
  "361 <" [shape=trapezium,orientation=270];
  "361 <" -> "397 <" [label="w2_0"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "353 E8" [shape=box];
  "353 E8" -> "361 <" [label="w1_0"];
  "352 E8" [shape=box];
  "352 E8" -> "353 E8" [label="w1_0"];
  "351 E8" [shape=box];
  "351 E8" -> "352 E8" [label="w1_0"];
  "350 E8" [shape=box];
  "350 E8" -> "351 E8" [label="w1_0"];
  "349 E8" [shape=box];
  "349 E8" -> "350 E8" [label="w1_0"];
  "342 D8" [shape=box];
  "342 D8" -> "349 E8" [label="w1_0"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0"];
  "338 D8" [shape=box];
  "338 D8" -> "339 D8" [label="w1_0"];
  "325 <" [shape=trapezium,orientation=270];
  "325 <" -> "361 <" [label="w2_0"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "317 E8" [shape=box];
  "317 E8" -> "325 <" [label="w1_0"];
  "316 E8" [shape=box];
  "316 E8" -> "317 E8" [label="w1_0"];
  "315 E8" [shape=box];
  "315 E8" -> "316 E8" [label="w1_0"];
  "314 E8" [shape=box];
  "314 E8" -> "315 E8" [label="w1_0"];
  "313 E8" [shape=box];
  "313 E8" -> "314 E8" [label="w1_0"];
  "306 D8" [shape=box];
  "306 D8" -> "313 E8" [label="w1_0"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0"];
  "302 D8" [shape=box];
  "302 D8" -> "303 D8" [label="w1_0"];
  "289 <" [shape=trapezium,orientation=270];
  "289 <" -> "325 <" [label="w2_0"];
  "281 E8" [shape=box];
  "281 E8" -> "289 <" [label="w1_0"];
  "280 E8" [shape=box];
  "280 E8" -> "281 E8" [label="w1_0"];
  "279 E8" [shape=box];
  "279 E8" -> "280 E8" [label="w1_0"];
  "278 E8" [shape=box];
  "278 E8" -> "279 E8" [label="w1_0"];
  "277 E8" [shape=box];
  "277 E8" -> "278 E8" [label="w1_0"];
  "270 D8" [shape=box];
  "270 D8" -> "277 E8" [label="w1_0"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0"];
  "266 D8" [shape=box];
  "266 D8" -> "267 D8" [label="w1_0"];
  "253 C" [shape=trapezium,orientation=270];
  "253 C" -> "289 <" [label="w2_0"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "518 D8" [label="imWork1"];
  "247 !" -> "482 D8" [label="imWork1"];
  "247 !" -> "446 D8" [label="imWork1"];
  "247 !" -> "410 D8" [label="imWork1"];
  "247 !" -> "374 D8" [label="imWork1"];
  "247 !" -> "338 D8" [label="imWork1"];
  "247 !" -> "302 D8" [label="imWork1"];
  "247 !" -> "266 D8" [label="imWork1"];
  "243 *_" [shape=trapezium,orientation=270];
  "239 -" [shape=trapezium,orientation=270];
  "239 -" -> "243 *_" [label="imout_tophat"];
  "231 D8" [shape=box];
  "231 D8" -> "239 -" [label="imout_tophat"];
  "230 D8" [shape=box];
  "230 D8" -> "231 D8" [label="imout_tophat"];
  "229 D8" [shape=box];
  "229 D8" -> "230 D8" [label="imout_tophat"];
  "228 D8" [shape=box];
  "228 D8" -> "229 D8" [label="imout_tophat"];
  "227 D8" [shape=box];
  "227 D8" -> "228 D8" [label="imout_tophat"];
  "220 E8" [shape=box];
  "220 E8" -> "227 D8" [label="imout_tophat"];
  "219 E8" [shape=box];
  "219 E8" -> "220 E8" [label="imout_tophat"];
  "218 E8" [shape=box];
  "218 E8" -> "219 E8" [label="imout_tophat"];
  "217 E8" [shape=box];
  "217 E8" -> "218 E8" [label="imout_tophat"];
  "216 E8" [shape=box];
  "216 E8" -> "217 E8" [label="imout_tophat"];
  "206 D8" [shape=box];
  "205 D8" [shape=box];
  "205 D8" -> "206 D8" [label="imWork1"];
  "204 D8" [shape=box];
  "204 D8" -> "205 D8" [label="imWork1"];
  "203 D8" [shape=box];
  "203 D8" -> "204 D8" [label="imWork1"];
  "202 D8" [shape=box];
  "202 D8" -> "203 D8" [label="imWork1"];
  "195 E8" [shape=box];
  "195 E8" -> "202 D8" [label="imWork1"];
  "194 E8" [shape=box];
  "194 E8" -> "195 E8" [label="imWork1"];
  "193 E8" [shape=box];
  "193 E8" -> "194 E8" [label="imWork1"];
  "192 E8" [shape=box];
  "192 E8" -> "193 E8" [label="imWork1"];
  "191 E8" [shape=box];
  "191 E8" -> "192 E8" [label="imWork1"];
  "imin" -> "558 !";
  "imin" -> "553 -";
  "imin" -> "247 !";
  "imin" -> "239 -";
  "imin" -> "216 E8";
  "imin" -> "191 E8";
}
// graph for dag "dag_1" of module "freia_52" in dot format
// DAG "dag_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_2" of module "freia_52" in dot format
// DAG "dag_2": #i=2 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "dag_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "892 >" [shape=trapezium,orientation=270];
  "890 thr" [shape=parallelogram];
  "890 thr" -> "892 >" [label="imWork1"];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon"];
  "imWork1" -> "886 -";
  "imin" -> "892 >";
  "imin" -> "886 -";
}
// graph for dag "dag_cleaned_0" of module "freia_52" in dot format
// DAG "dag_cleaned_0": #i=1 #o=1 #c=84 #s=21 #I=0 #B=0 #A=0
digraph "dag_cleaned_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1_3"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1_13"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1_23"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1_33"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1_43"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1_53"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1_63"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1_73"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0_7"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0_17"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0_27"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0_37"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0_47"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0_57"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0_67"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0_77"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "dag_cleaned_1" of module "freia_52" in dot format
// DAG "dag_cleaned_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_cleaned_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_cleaned_2" of module "freia_52" in dot format
// DAG "dag_cleaned_2": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "dag_cleaned_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}
// graph for dag "freia_52_terapix_helper_0_0_0" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_0": #i=1 #o=8 #c=18 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "w1_0_77" [shape=circle];
  "w1_0_67" [shape=circle];
  "w1_0_57" [shape=circle];
  "w1_0_47" [shape=circle];
  "w1_0_37" [shape=circle];
  "w1_0_27" [shape=circle];
  "w1_0_17" [shape=circle];
  "w1_0_7" [shape=circle];

  // computation vertices
  "340 D8" [shape=box];
  "340 D8" -> "w1_0_57";
  "520 D8" [shape=box];
  "520 D8" -> "w1_0_7";
  "484 D8" [shape=box];
  "484 D8" -> "w1_0_17";
  "448 D8" [shape=box];
  "448 D8" -> "w1_0_27";
  "412 D8" [shape=box];
  "412 D8" -> "w1_0_37";
  "376 D8" [shape=box];
  "376 D8" -> "w1_0_47";
  "304 D8" [shape=box];
  "304 D8" -> "w1_0_67";
  "268 D8" [shape=box];
  "268 D8" -> "w1_0_77";
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "freia_52_terapix_helper_0_0_1" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_1": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_1" {
  // inputs
  "w1_0_57" [shape=circle];

  // outputs
  "w1_1_53" [shape=circle];

  // computation vertices
  "661 E8" [shape=box];
  "661 E8" -> "w1_1_53";
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "w1_0_57" -> "341 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_2" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_2": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_2" {
  // inputs
  "w1_0_7" [shape=circle];

  // outputs
  "w1_1_3" [shape=circle];

  // computation vertices
  "841 E8" [shape=box];
  "841 E8" -> "w1_1_3";
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "w1_0_7" -> "521 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_3" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_3": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_3" {
  // inputs
  "w1_0_17" [shape=circle];

  // outputs
  "w1_1_13" [shape=circle];

  // computation vertices
  "805 E8" [shape=box];
  "805 E8" -> "w1_1_13";
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "w1_0_17" -> "485 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_4" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_4": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_4" {
  // inputs
  "w1_0_27" [shape=circle];

  // outputs
  "w1_1_23" [shape=circle];

  // computation vertices
  "769 E8" [shape=box];
  "769 E8" -> "w1_1_23";
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "w1_0_27" -> "449 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_5" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_5": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_5" {
  // inputs
  "w1_0_37" [shape=circle];

  // outputs
  "w1_1_33" [shape=circle];

  // computation vertices
  "733 E8" [shape=box];
  "733 E8" -> "w1_1_33";
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "w1_0_37" -> "413 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_6" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_6": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_6" {
  // inputs
  "w1_0_47" [shape=circle];

  // outputs
  "w1_1_43" [shape=circle];

  // computation vertices
  "697 E8" [shape=box];
  "697 E8" -> "w1_1_43";
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "w1_0_47" -> "377 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_7" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_7": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_7" {
  // inputs
  "w1_0_67" [shape=circle];

  // outputs
  "w1_1_63" [shape=circle];

  // computation vertices
  "625 E8" [shape=box];
  "625 E8" -> "w1_1_63";
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "w1_0_67" -> "305 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_8" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_8": #i=1 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_8" {
  // inputs
  "w1_0_77" [shape=circle];

  // outputs
  "w1_1_73" [shape=circle];

  // computation vertices
  "589 E8" [shape=box];
  "589 E8" -> "w1_1_73";
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "w1_0_77" -> "269 D8";
}
// graph for dag "freia_52_terapix_helper_0_0_9" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_0_0_9": #i=8 #o=1 #c=34 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_0_0_9" {
  // inputs
  "w1_1_13" [shape=circle];
  "w1_1_23" [shape=circle];
  "w1_1_3" [shape=circle];
  "w1_1_33" [shape=circle];
  "w1_1_43" [shape=circle];
  "w1_1_53" [shape=circle];
  "w1_1_63" [shape=circle];
  "w1_1_73" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "w1_1_53" -> "662 E8";
  "w1_1_3" -> "842 E8";
  "w1_1_13" -> "806 E8";
  "w1_1_23" -> "770 E8";
  "w1_1_33" -> "734 E8";
  "w1_1_43" -> "698 E8";
  "w1_1_63" -> "626 E8";
  "w1_1_73" -> "590 E8";
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
}
// graph for dag "freia_52_terapix_helper_1_0_0" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_1_0_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_1_0_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "freia_52_terapix_helper_2_0_0" of module "freia_52" in dot format
// DAG "freia_52_terapix_helper_2_0_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_terapix_helper_2_0_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}

! acceleration function

// freia terapix includes
#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <terapix.h>
#include <terapix_ucode.h>

// dag 0: 207 ops and 2 copies, optimized to 84 ops and 0+0+0 copies

/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 8 output images
 * 18 image operations in dag
 * dag length is 5, dag width is 8
 * costs in cycles per imagelet row:
 * - computation: 259
 * - communication: 216
 */
freia_status freia_52_terapix_helper_0_0_0(
  freia_data2d * o0,
  freia_data2d * o1,
  freia_data2d * o2,
  freia_data2d * o3,
  freia_data2d * o4,
  freia_data2d * o5,
  freia_data2d * o6,
  freia_data2d * o7,
  const freia_data2d * i0,
  const int32_t * pi9,
  const int32_t * pi10,
  const int32_t * pi11,
  const int32_t * pi12,
  const int32_t * pi13,
  const int32_t * pi14,
  const int32_t * pi15,
  const int32_t * pi16,
  const int32_t * pi17)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 1 parameters
  int16_t p_1[9];
  const int32_t x_1 = 0;
  const int32_t y_1 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // operation 3 parameters
  int16_t p_3[9];
  const int32_t x_3 = 6;
  const int32_t y_3 = 0;
  // operation 4 parameters
  int16_t p_4[9];
  const int32_t x_4 = 9;
  const int32_t y_4 = 0;
  // operation 5 parameters
  int16_t p_5[9];
  const int32_t x_5 = 12;
  const int32_t y_5 = 0;
  // operation 6 parameters
  int16_t p_6[9];
  const int32_t x_6 = 15;
  const int32_t y_6 = 0;
  // operation 7 parameters
  int16_t p_7[9];
  const int32_t x_7 = 18;
  const int32_t y_7 = 0;
  // operation 8 parameters
  int16_t p_8[9];
  const int32_t x_8 = 21;
  const int32_t y_8 = 0;
  // operation 9 parameters
  int16_t p_9[9];
  const int32_t x_9 = 24;
  const int32_t y_9 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][18];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][8];
  // imagelets definitions:
  // - 9 computation imagelets
  // - 8 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 3;
  int image_height = i0->heightWa;
  int max_computed_size = 54;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 60;
  int imagelet_3 = 120;
  int imagelet_4 = 180;
  int imagelet_5 = 240;
  int imagelet_6 = 300;
  int imagelet_7 = 360;
  int imagelet_8 = 420;
  int imagelet_9 = 480;
  int imagelet_10 = 540;
  int imagelet_11 = 600;
  int imagelet_12 = 660;
  int imagelet_13 = 720;
  int imagelet_14 = 780;
  int imagelet_15 = 840;
  int imagelet_16 = 900;
  int imagelet_17 = 960;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_10;
  int imagelet_io_2_0 = imagelet_2;
  int imagelet_io_2_1 = imagelet_11;
  int imagelet_io_3_0 = imagelet_3;
  int imagelet_io_3_1 = imagelet_12;
  int imagelet_io_4_0 = imagelet_4;
  int imagelet_io_4_1 = imagelet_13;
  int imagelet_io_5_0 = imagelet_5;
  int imagelet_io_5_1 = imagelet_14;
  int imagelet_io_6_0 = imagelet_6;
  int imagelet_io_6_1 = imagelet_15;
  int imagelet_io_7_0 = imagelet_7;
  int imagelet_io_7_1 = imagelet_16;
  int imagelet_io_8_0 = imagelet_8;
  int imagelet_io_8_1 = imagelet_17;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: !(1) -> 8
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_io_8_0;
  mcu_macro[1][0].xmin2 = imagelet_io_8_1;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_NOT;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_NOT;
  // 1: D8(8) -> 7
  mcu_macro[0][1].xmin1 = imagelet_io_8_0;
  mcu_macro[1][1].xmin1 = imagelet_io_8_1;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_7_0;
  mcu_macro[1][1].xmin2 = imagelet_io_7_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  // copy of operation 1 parameters
  for(i=0; i<9; i++)
    p_1[i] = pi9[i];
  gram.xoffset = x_1;
  gram.yoffset = y_1;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_1;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][1].xmin3 = x_1;
  mcu_macro[1][1].xmin3 = x_1;
  mcu_macro[0][1].ymin3 = y_1;
  mcu_macro[1][1].ymin3 = y_1;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: D8(7) -> 8
  mcu_macro[0][2].xmin1 = imagelet_io_7_0;
  mcu_macro[1][2].xmin1 = imagelet_io_7_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_io_8_0;
  mcu_macro[1][2].xmin2 = imagelet_io_8_1;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi10[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 3: D8(7) -> 6
  mcu_macro[0][3].xmin1 = imagelet_io_7_0;
  mcu_macro[1][3].xmin1 = imagelet_io_7_1;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_6_0;
  mcu_macro[1][3].xmin2 = imagelet_io_6_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  // copy of operation 3 parameters
  for(i=0; i<9; i++)
    p_3[i] = pi11[i];
  gram.xoffset = x_3;
  gram.yoffset = y_3;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_3;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][3].xmin3 = x_3;
  mcu_macro[1][3].xmin3 = x_3;
  mcu_macro[0][3].ymin3 = y_3;
  mcu_macro[1][3].ymin3 = y_3;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 4: D8(7) -> 5
  mcu_macro[0][4].xmin1 = imagelet_io_7_0;
  mcu_macro[1][4].xmin1 = imagelet_io_7_1;
  mcu_macro[0][4].ymin1 = 0;
  mcu_macro[1][4].ymin1 = 0;
  mcu_macro[0][4].xmin2 = imagelet_io_5_0;
  mcu_macro[1][4].xmin2 = imagelet_io_5_1;
  mcu_macro[0][4].ymin2 = 0;
  mcu_macro[1][4].ymin2 = 0;
  // copy of operation 4 parameters
  for(i=0; i<9; i++)
    p_4[i] = pi12[i];
  gram.xoffset = x_4;
  gram.yoffset = y_4;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_4;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][4].xmin3 = x_4;
  mcu_macro[1][4].xmin3 = x_4;
  mcu_macro[0][4].ymin3 = y_4;
  mcu_macro[1][4].ymin3 = y_4;
  mcu_macro[0][4].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][4].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][4].iter2 = imagelet_size;
  mcu_macro[1][4].iter2 = imagelet_size;
  mcu_macro[0][4].iter3 = 0;
  mcu_macro[1][4].iter3 = 0;
  mcu_macro[0][4].iter4 = 0;
  mcu_macro[1][4].iter4 = 0;
  mcu_macro[0][4].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][4].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 5: D8(7) -> 4
  mcu_macro[0][5].xmin1 = imagelet_io_7_0;
  mcu_macro[1][5].xmin1 = imagelet_io_7_1;
  mcu_macro[0][5].ymin1 = 0;
  mcu_macro[1][5].ymin1 = 0;
  mcu_macro[0][5].xmin2 = imagelet_io_4_0;
  mcu_macro[1][5].xmin2 = imagelet_io_4_1;
  mcu_macro[0][5].ymin2 = 0;
  mcu_macro[1][5].ymin2 = 0;
  // copy of operation 5 parameters
  for(i=0; i<9; i++)
    p_5[i] = pi13[i];
  gram.xoffset = x_5;
  gram.yoffset = y_5;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_5;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][5].xmin3 = x_5;
  mcu_macro[1][5].xmin3 = x_5;
  mcu_macro[0][5].ymin3 = y_5;
  mcu_macro[1][5].ymin3 = y_5;
  mcu_macro[0][5].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][5].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][5].iter2 = imagelet_size;
  mcu_macro[1][5].iter2 = imagelet_size;
  mcu_macro[0][5].iter3 = 0;
  mcu_macro[1][5].iter3 = 0;
  mcu_macro[0][5].iter4 = 0;
  mcu_macro[1][5].iter4 = 0;
  mcu_macro[0][5].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][5].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 6: D8(7) -> 3
  mcu_macro[0][6].xmin1 = imagelet_io_7_0;
  mcu_macro[1][6].xmin1 = imagelet_io_7_1;
  mcu_macro[0][6].ymin1 = 0;
  mcu_macro[1][6].ymin1 = 0;
  mcu_macro[0][6].xmin2 = imagelet_io_3_0;
  mcu_macro[1][6].xmin2 = imagelet_io_3_1;
  mcu_macro[0][6].ymin2 = 0;
  mcu_macro[1][6].ymin2 = 0;
  // copy of operation 6 parameters
  for(i=0; i<9; i++)
    p_6[i] = pi14[i];
  gram.xoffset = x_6;
  gram.yoffset = y_6;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_6;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][6].xmin3 = x_6;
  mcu_macro[1][6].xmin3 = x_6;
  mcu_macro[0][6].ymin3 = y_6;
  mcu_macro[1][6].ymin3 = y_6;
  mcu_macro[0][6].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][6].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][6].iter2 = imagelet_size;
  mcu_macro[1][6].iter2 = imagelet_size;
  mcu_macro[0][6].iter3 = 0;
  mcu_macro[1][6].iter3 = 0;
  mcu_macro[0][6].iter4 = 0;
  mcu_macro[1][6].iter4 = 0;
  mcu_macro[0][6].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][6].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 7: D8(7) -> 2
  mcu_macro[0][7].xmin1 = imagelet_io_7_0;
  mcu_macro[1][7].xmin1 = imagelet_io_7_1;
  mcu_macro[0][7].ymin1 = 0;
  mcu_macro[1][7].ymin1 = 0;
  mcu_macro[0][7].xmin2 = imagelet_io_2_0;
  mcu_macro[1][7].xmin2 = imagelet_io_2_1;
  mcu_macro[0][7].ymin2 = 0;
  mcu_macro[1][7].ymin2 = 0;
  // copy of operation 7 parameters
  for(i=0; i<9; i++)
    p_7[i] = pi15[i];
  gram.xoffset = x_7;
  gram.yoffset = y_7;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_7;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][7].xmin3 = x_7;
  mcu_macro[1][7].xmin3 = x_7;
  mcu_macro[0][7].ymin3 = y_7;
  mcu_macro[1][7].ymin3 = y_7;
  mcu_macro[0][7].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][7].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][7].iter2 = imagelet_size;
  mcu_macro[1][7].iter2 = imagelet_size;
  mcu_macro[0][7].iter3 = 0;
  mcu_macro[1][7].iter3 = 0;
  mcu_macro[0][7].iter4 = 0;
  mcu_macro[1][7].iter4 = 0;
  mcu_macro[0][7].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][7].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 8: D8(7) -> 1
  mcu_macro[0][8].xmin1 = imagelet_io_7_0;
  mcu_macro[1][8].xmin1 = imagelet_io_7_1;
  mcu_macro[0][8].ymin1 = 0;
  mcu_macro[1][8].ymin1 = 0;
  mcu_macro[0][8].xmin2 = imagelet_io_1_0;
  mcu_macro[1][8].xmin2 = imagelet_io_1_1;
  mcu_macro[0][8].ymin2 = 0;
  mcu_macro[1][8].ymin2 = 0;
  // copy of operation 8 parameters
  for(i=0; i<9; i++)
    p_8[i] = pi16[i];
  gram.xoffset = x_8;
  gram.yoffset = y_8;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_8;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][8].xmin3 = x_8;
  mcu_macro[1][8].xmin3 = x_8;
  mcu_macro[0][8].ymin3 = y_8;
  mcu_macro[1][8].ymin3 = y_8;
  mcu_macro[0][8].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][8].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][8].iter2 = imagelet_size;
  mcu_macro[1][8].iter2 = imagelet_size;
  mcu_macro[0][8].iter3 = 0;
  mcu_macro[1][8].iter3 = 0;
  mcu_macro[0][8].iter4 = 0;
  mcu_macro[1][8].iter4 = 0;
  mcu_macro[0][8].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][8].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 9: D8(7) -> 9
  mcu_macro[0][9].xmin1 = imagelet_io_7_0;
  mcu_macro[1][9].xmin1 = imagelet_io_7_1;
  mcu_macro[0][9].ymin1 = 0;
  mcu_macro[1][9].ymin1 = 0;
  mcu_macro[0][9].xmin2 = imagelet_9;
  mcu_macro[1][9].xmin2 = imagelet_9;
  mcu_macro[0][9].ymin2 = 0;
  mcu_macro[1][9].ymin2 = 0;
  // copy of operation 9 parameters
  for(i=0; i<9; i++)
    p_9[i] = pi17[i];
  gram.xoffset = x_9;
  gram.yoffset = y_9;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_9;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][9].xmin3 = x_9;
  mcu_macro[1][9].xmin3 = x_9;
  mcu_macro[0][9].ymin3 = y_9;
  mcu_macro[1][9].ymin3 = y_9;
  mcu_macro[0][9].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][9].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][9].iter2 = imagelet_size;
  mcu_macro[1][9].iter2 = imagelet_size;
  mcu_macro[0][9].iter3 = 0;
  mcu_macro[1][9].iter3 = 0;
  mcu_macro[0][9].iter4 = 0;
  mcu_macro[1][9].iter4 = 0;
  mcu_macro[0][9].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][9].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 10: D8(8) -> 7
  mcu_macro[0][10].xmin1 = imagelet_io_8_0;
  mcu_macro[1][10].xmin1 = imagelet_io_8_1;
  mcu_macro[0][10].ymin1 = 0;
  mcu_macro[1][10].ymin1 = 0;
  mcu_macro[0][10].xmin2 = imagelet_io_7_0;
  mcu_macro[1][10].xmin2 = imagelet_io_7_1;
  mcu_macro[0][10].ymin2 = 0;
  mcu_macro[1][10].ymin2 = 0;
  mcu_macro[0][10].xmin3 = x_2;
  mcu_macro[1][10].xmin3 = x_2;
  mcu_macro[0][10].ymin3 = y_2;
  mcu_macro[1][10].ymin3 = y_2;
  mcu_macro[0][10].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][10].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][10].iter2 = imagelet_size;
  mcu_macro[1][10].iter2 = imagelet_size;
  mcu_macro[0][10].iter3 = 0;
  mcu_macro[1][10].iter3 = 0;
  mcu_macro[0][10].iter4 = 0;
  mcu_macro[1][10].iter4 = 0;
  mcu_macro[0][10].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][10].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 11: D8(6) -> 8
  mcu_macro[0][11].xmin1 = imagelet_io_6_0;
  mcu_macro[1][11].xmin1 = imagelet_io_6_1;
  mcu_macro[0][11].ymin1 = 0;
  mcu_macro[1][11].ymin1 = 0;
  mcu_macro[0][11].xmin2 = imagelet_io_8_0;
  mcu_macro[1][11].xmin2 = imagelet_io_8_1;
  mcu_macro[0][11].ymin2 = 0;
  mcu_macro[1][11].ymin2 = 0;
  mcu_macro[0][11].xmin3 = x_3;
  mcu_macro[1][11].xmin3 = x_3;
  mcu_macro[0][11].ymin3 = y_3;
  mcu_macro[1][11].ymin3 = y_3;
  mcu_macro[0][11].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][11].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][11].iter2 = imagelet_size;
  mcu_macro[1][11].iter2 = imagelet_size;
  mcu_macro[0][11].iter3 = 0;
  mcu_macro[1][11].iter3 = 0;
  mcu_macro[0][11].iter4 = 0;
  mcu_macro[1][11].iter4 = 0;
  mcu_macro[0][11].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][11].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 12: D8(5) -> 6
  mcu_macro[0][12].xmin1 = imagelet_io_5_0;
  mcu_macro[1][12].xmin1 = imagelet_io_5_1;
  mcu_macro[0][12].ymin1 = 0;
  mcu_macro[1][12].ymin1 = 0;
  mcu_macro[0][12].xmin2 = imagelet_io_6_0;
  mcu_macro[1][12].xmin2 = imagelet_io_6_1;
  mcu_macro[0][12].ymin2 = 0;
  mcu_macro[1][12].ymin2 = 0;
  mcu_macro[0][12].xmin3 = x_4;
  mcu_macro[1][12].xmin3 = x_4;
  mcu_macro[0][12].ymin3 = y_4;
  mcu_macro[1][12].ymin3 = y_4;
  mcu_macro[0][12].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][12].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][12].iter2 = imagelet_size;
  mcu_macro[1][12].iter2 = imagelet_size;
  mcu_macro[0][12].iter3 = 0;
  mcu_macro[1][12].iter3 = 0;
  mcu_macro[0][12].iter4 = 0;
  mcu_macro[1][12].iter4 = 0;
  mcu_macro[0][12].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][12].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 13: D8(4) -> 5
  mcu_macro[0][13].xmin1 = imagelet_io_4_0;
  mcu_macro[1][13].xmin1 = imagelet_io_4_1;
  mcu_macro[0][13].ymin1 = 0;
  mcu_macro[1][13].ymin1 = 0;
  mcu_macro[0][13].xmin2 = imagelet_io_5_0;
  mcu_macro[1][13].xmin2 = imagelet_io_5_1;
  mcu_macro[0][13].ymin2 = 0;
  mcu_macro[1][13].ymin2 = 0;
  mcu_macro[0][13].xmin3 = x_5;
  mcu_macro[1][13].xmin3 = x_5;
  mcu_macro[0][13].ymin3 = y_5;
  mcu_macro[1][13].ymin3 = y_5;
  mcu_macro[0][13].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][13].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][13].iter2 = imagelet_size;
  mcu_macro[1][13].iter2 = imagelet_size;
  mcu_macro[0][13].iter3 = 0;
  mcu_macro[1][13].iter3 = 0;
  mcu_macro[0][13].iter4 = 0;
  mcu_macro[1][13].iter4 = 0;
  mcu_macro[0][13].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][13].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 14: D8(3) -> 4
  mcu_macro[0][14].xmin1 = imagelet_io_3_0;
  mcu_macro[1][14].xmin1 = imagelet_io_3_1;
  mcu_macro[0][14].ymin1 = 0;
  mcu_macro[1][14].ymin1 = 0;
  mcu_macro[0][14].xmin2 = imagelet_io_4_0;
  mcu_macro[1][14].xmin2 = imagelet_io_4_1;
  mcu_macro[0][14].ymin2 = 0;
  mcu_macro[1][14].ymin2 = 0;
  mcu_macro[0][14].xmin3 = x_6;
  mcu_macro[1][14].xmin3 = x_6;
  mcu_macro[0][14].ymin3 = y_6;
  mcu_macro[1][14].ymin3 = y_6;
  mcu_macro[0][14].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][14].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][14].iter2 = imagelet_size;
  mcu_macro[1][14].iter2 = imagelet_size;
  mcu_macro[0][14].iter3 = 0;
  mcu_macro[1][14].iter3 = 0;
  mcu_macro[0][14].iter4 = 0;
  mcu_macro[1][14].iter4 = 0;
  mcu_macro[0][14].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][14].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 15: D8(2) -> 3
  mcu_macro[0][15].xmin1 = imagelet_io_2_0;
  mcu_macro[1][15].xmin1 = imagelet_io_2_1;
  mcu_macro[0][15].ymin1 = 0;
  mcu_macro[1][15].ymin1 = 0;
  mcu_macro[0][15].xmin2 = imagelet_io_3_0;
  mcu_macro[1][15].xmin2 = imagelet_io_3_1;
  mcu_macro[0][15].ymin2 = 0;
  mcu_macro[1][15].ymin2 = 0;
  mcu_macro[0][15].xmin3 = x_7;
  mcu_macro[1][15].xmin3 = x_7;
  mcu_macro[0][15].ymin3 = y_7;
  mcu_macro[1][15].ymin3 = y_7;
  mcu_macro[0][15].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][15].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][15].iter2 = imagelet_size;
  mcu_macro[1][15].iter2 = imagelet_size;
  mcu_macro[0][15].iter3 = 0;
  mcu_macro[1][15].iter3 = 0;
  mcu_macro[0][15].iter4 = 0;
  mcu_macro[1][15].iter4 = 0;
  mcu_macro[0][15].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][15].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 16: D8(1) -> 2
  mcu_macro[0][16].xmin1 = imagelet_io_1_0;
  mcu_macro[1][16].xmin1 = imagelet_io_1_1;
  mcu_macro[0][16].ymin1 = 0;
  mcu_macro[1][16].ymin1 = 0;
  mcu_macro[0][16].xmin2 = imagelet_io_2_0;
  mcu_macro[1][16].xmin2 = imagelet_io_2_1;
  mcu_macro[0][16].ymin2 = 0;
  mcu_macro[1][16].ymin2 = 0;
  mcu_macro[0][16].xmin3 = x_8;
  mcu_macro[1][16].xmin3 = x_8;
  mcu_macro[0][16].ymin3 = y_8;
  mcu_macro[1][16].ymin3 = y_8;
  mcu_macro[0][16].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][16].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][16].iter2 = imagelet_size;
  mcu_macro[1][16].iter2 = imagelet_size;
  mcu_macro[0][16].iter3 = 0;
  mcu_macro[1][16].iter3 = 0;
  mcu_macro[0][16].iter4 = 0;
  mcu_macro[1][16].iter4 = 0;
  mcu_macro[0][16].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][16].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 17: D8(9) -> 1
  mcu_macro[0][17].xmin1 = imagelet_9;
  mcu_macro[1][17].xmin1 = imagelet_9;
  mcu_macro[0][17].ymin1 = 0;
  mcu_macro[1][17].ymin1 = 0;
  mcu_macro[0][17].xmin2 = imagelet_io_1_0;
  mcu_macro[1][17].xmin2 = imagelet_io_1_1;
  mcu_macro[0][17].ymin2 = 0;
  mcu_macro[1][17].ymin2 = 0;
  mcu_macro[0][17].xmin3 = x_9;
  mcu_macro[1][17].xmin3 = x_9;
  mcu_macro[0][17].ymin3 = y_9;
  mcu_macro[1][17].ymin3 = y_9;
  mcu_macro[0][17].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][17].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][17].iter2 = imagelet_size;
  mcu_macro[1][17].iter2 = imagelet_size;
  mcu_macro[0][17].iter3 = 0;
  mcu_macro[1][17].iter3 = 0;
  mcu_macro[0][17].iter4 = 0;
  mcu_macro[1][17].iter4 = 0;
  mcu_macro[0][17].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][17].addrStart = TERAPIX_UCODE_DILATE_3_3;


  // inputs:
  // - imagelet 1 is i0 for imin
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 7 is o0 for w1_0_77
  tile_out[0][0].x = imagelet_io_7_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_7_1;
  tile_out[1][0].y = 0;
  // - imagelet 8 is o1 for w1_0_67
  tile_out[0][1].x = imagelet_io_8_0;
  tile_out[0][1].y = 0;
  tile_out[1][1].x = imagelet_io_8_1;
  tile_out[1][1].y = 0;
  // - imagelet 1 is o2 for w1_0_57
  tile_out[0][2].x = imagelet_io_1_0;
  tile_out[0][2].y = 0;
  tile_out[1][2].x = imagelet_io_1_1;
  tile_out[1][2].y = 0;
  // - imagelet 6 is o3 for w1_0_47
  tile_out[0][3].x = imagelet_io_6_0;
  tile_out[0][3].y = 0;
  tile_out[1][3].x = imagelet_io_6_1;
  tile_out[1][3].y = 0;
  // - imagelet 5 is o4 for w1_0_37
  tile_out[0][4].x = imagelet_io_5_0;
  tile_out[0][4].y = 0;
  tile_out[1][4].x = imagelet_io_5_1;
  tile_out[1][4].y = 0;
  // - imagelet 4 is o5 for w1_0_27
  tile_out[0][5].x = imagelet_io_4_0;
  tile_out[0][5].y = 0;
  tile_out[1][5].x = imagelet_io_4_1;
  tile_out[1][5].y = 0;
  // - imagelet 3 is o6 for w1_0_17
  tile_out[0][6].x = imagelet_io_3_0;
  tile_out[0][6].y = 0;
  tile_out[1][6].x = imagelet_io_3_1;
  tile_out[1][6].y = 0;
  // - imagelet 2 is o7 for w1_0_7
  tile_out[0][7].x = imagelet_io_2_0;
  tile_out[0][7].y = 0;
  tile_out[1][7].x = imagelet_io_2_1;
  tile_out[1][7].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 3;
  mcu_instr.borderBottom = 3;
  mcu_instr.borderLeft   = 3;
  mcu_instr.borderRight  = 3;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 8;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 18;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, o1, o2, o3, o4, o5, o6, o7, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_1(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_57
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_53
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 4;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 4;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_2(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_7
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_3
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 4;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 2;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_3(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_17
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_13
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 2;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 4;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_4(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_27
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_23
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 2;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 4;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_5(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_37
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_33
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 4;
  mcu_instr.borderLeft   = 2;
  mcu_instr.borderRight  = 2;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_6(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 2;
  int image_height = i0->heightWa;
  int max_computed_size = 337;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_47
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_43
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 2;
  mcu_instr.borderBottom = 2;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 4;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_7(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 4;
  int image_height = i0->heightWa;
  int max_computed_size = 333;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_67
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_63
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 4;
  mcu_instr.borderBottom = 4;
  mcu_instr.borderLeft   = 2;
  mcu_instr.borderRight  = 2;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 1 input image, 1 output image
 * 4 image operations in dag
 * dag length is 5, dag width is 1
 * costs in cycles per imagelet row:
 * - computation: 60
 * - communication: 48
 */
freia_status freia_52_terapix_helper_0_0_8(
  freia_data2d * o0,
  const freia_data2d * i0,
  const int32_t * pi2,
  const int32_t * pi3)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 3;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][4];
  terapix_tile_info tile_in[2][1];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 1 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 2;
  int image_height = i0->heightWa;
  int max_computed_size = 337;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 341;
  int imagelet_3 = 682;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_2;
  mcu_macro[1][0].xmin2 = imagelet_2;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: D8(2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_2;
  mcu_macro[1][1].xmin1 = imagelet_2;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_1_0;
  mcu_macro[1][1].xmin2 = imagelet_io_1_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = x_0;
  mcu_macro[1][1].xmin3 = x_0;
  mcu_macro[0][1].ymin3 = y_0;
  mcu_macro[1][1].ymin3 = y_0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(1) -> 2
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_2;
  mcu_macro[1][2].xmin2 = imagelet_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi3[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(2) -> 1
  mcu_macro[0][3].xmin1 = imagelet_2;
  mcu_macro[1][3].xmin1 = imagelet_2;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_1_0;
  mcu_macro[1][3].xmin2 = imagelet_io_1_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  mcu_macro[0][3].xmin3 = x_2;
  mcu_macro[1][3].xmin3 = x_2;
  mcu_macro[0][3].ymin3 = y_2;
  mcu_macro[1][3].ymin3 = y_2;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;


  // inputs:
  // - imagelet 1 is i0 for w1_0_77
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;

  // outputs:
  // - imagelet 1 is o0 for w1_1_73
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 2;
  mcu_instr.borderBottom = 2;
  mcu_instr.borderLeft   = 4;
  mcu_instr.borderRight  = 4;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 1;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 4;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0);

  // extract measures

  return ret;
}


/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 8 input images, 1 output image
 * 34 image operations in dag
 * dag length is 14, dag width is 8
 * costs in cycles per imagelet row:
 * - computation: 398
 * - communication: 216
 */
freia_status freia_52_terapix_helper_0_0_9(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const freia_data2d * i2,
  const freia_data2d * i3,
  const freia_data2d * i4,
  const freia_data2d * i5,
  const freia_data2d * i6,
  const freia_data2d * i7,
  const int32_t * pi9,
  const int32_t * pi10,
  const int32_t * pi11,
  const int32_t * pi12,
  const int32_t * pi13,
  const int32_t * pi14,
  const int32_t * pi15,
  const int32_t * pi16,
  int32_t pi17,
  int32_t * po18)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 1 parameters
  int16_t p_1[9];
  const int32_t x_1 = 3;
  const int32_t y_1 = 0;
  // operation 2 parameters
  int16_t p_2[9];
  const int32_t x_2 = 6;
  const int32_t y_2 = 0;
  // operation 3 parameters
  int16_t p_3[9];
  const int32_t x_3 = 9;
  const int32_t y_3 = 0;
  // operation 8 parameters
  int16_t p_8[9];
  const int32_t x_8 = 12;
  const int32_t y_8 = 0;
  // operation 9 parameters
  int16_t p_9[9];
  const int32_t x_9 = 15;
  const int32_t y_9 = 0;
  // operation 10 parameters
  int16_t p_10[9];
  const int32_t x_10 = 18;
  const int32_t y_10 = 0;
  // operation 13 parameters
  int16_t p_13[9];
  const int32_t x_13 = 21;
  const int32_t y_13 = 0;
  // operation 24 parameters
  int16_t p_24[1];
  const int32_t x_24 = 24;
  const int32_t y_24 = 0;
  // operation 33_val initialization
  int16_t p_33_val[1];
  const int32_t x_33_val = 25;
  const int32_t y_33_val = 0;
  // array for reduction 33 extraction
  int32_t red_33[1];
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][34];
  terapix_tile_info tile_in[2][8];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 9 computation imagelets
  // - 8 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 3;
  int image_height = i0->heightWa;
  int max_computed_size = 54;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 60;
  int imagelet_3 = 120;
  int imagelet_4 = 180;
  int imagelet_5 = 240;
  int imagelet_6 = 300;
  int imagelet_7 = 360;
  int imagelet_8 = 420;
  int imagelet_9 = 480;
  int imagelet_10 = 540;
  int imagelet_11 = 600;
  int imagelet_12 = 660;
  int imagelet_13 = 720;
  int imagelet_14 = 780;
  int imagelet_15 = 840;
  int imagelet_16 = 900;
  int imagelet_17 = 960;

  // memory for reductions
  int reduction_33 = 1022;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_10;
  int imagelet_io_2_0 = imagelet_2;
  int imagelet_io_2_1 = imagelet_11;
  int imagelet_io_3_0 = imagelet_3;
  int imagelet_io_3_1 = imagelet_12;
  int imagelet_io_4_0 = imagelet_4;
  int imagelet_io_4_1 = imagelet_13;
  int imagelet_io_5_0 = imagelet_5;
  int imagelet_io_5_1 = imagelet_14;
  int imagelet_io_6_0 = imagelet_6;
  int imagelet_io_6_1 = imagelet_15;
  int imagelet_io_7_0 = imagelet_7;
  int imagelet_io_7_1 = imagelet_16;
  int imagelet_io_8_0 = imagelet_8;
  int imagelet_io_8_1 = imagelet_17;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: E8(8) -> 9
  mcu_macro[0][0].xmin1 = imagelet_io_8_0;
  mcu_macro[1][0].xmin1 = imagelet_io_8_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_9;
  mcu_macro[1][0].xmin2 = imagelet_9;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi9[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 1: E8(7) -> 8
  mcu_macro[0][1].xmin1 = imagelet_io_7_0;
  mcu_macro[1][1].xmin1 = imagelet_io_7_1;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_8_0;
  mcu_macro[1][1].xmin2 = imagelet_io_8_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  // copy of operation 1 parameters
  for(i=0; i<9; i++)
    p_1[i] = pi10[i];
  gram.xoffset = x_1;
  gram.yoffset = y_1;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_1;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][1].xmin3 = x_1;
  mcu_macro[1][1].xmin3 = x_1;
  mcu_macro[0][1].ymin3 = y_1;
  mcu_macro[1][1].ymin3 = y_1;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 2: E8(5) -> 7
  mcu_macro[0][2].xmin1 = imagelet_io_5_0;
  mcu_macro[1][2].xmin1 = imagelet_io_5_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_io_7_0;
  mcu_macro[1][2].xmin2 = imagelet_io_7_1;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  for(i=0; i<9; i++)
    p_2[i] = pi11[i];
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: E8(4) -> 5
  mcu_macro[0][3].xmin1 = imagelet_io_4_0;
  mcu_macro[1][3].xmin1 = imagelet_io_4_1;
  mcu_macro[0][3].ymin1 = 0;
  mcu_macro[1][3].ymin1 = 0;
  mcu_macro[0][3].xmin2 = imagelet_io_5_0;
  mcu_macro[1][3].xmin2 = imagelet_io_5_1;
  mcu_macro[0][3].ymin2 = 0;
  mcu_macro[1][3].ymin2 = 0;
  // copy of operation 3 parameters
  for(i=0; i<9; i++)
    p_3[i] = pi12[i];
  gram.xoffset = x_3;
  gram.yoffset = y_3;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_3;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][3].xmin3 = x_3;
  mcu_macro[1][3].xmin3 = x_3;
  mcu_macro[0][3].ymin3 = y_3;
  mcu_macro[1][3].ymin3 = y_3;
  mcu_macro[0][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][3].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][3].iter2 = imagelet_size;
  mcu_macro[1][3].iter2 = imagelet_size;
  mcu_macro[0][3].iter3 = 0;
  mcu_macro[1][3].iter3 = 0;
  mcu_macro[0][3].iter4 = 0;
  mcu_macro[1][3].iter4 = 0;
  mcu_macro[0][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][3].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 4: E8(9) -> 4
  mcu_macro[0][4].xmin1 = imagelet_9;
  mcu_macro[1][4].xmin1 = imagelet_9;
  mcu_macro[0][4].ymin1 = 0;
  mcu_macro[1][4].ymin1 = 0;
  mcu_macro[0][4].xmin2 = imagelet_io_4_0;
  mcu_macro[1][4].xmin2 = imagelet_io_4_1;
  mcu_macro[0][4].ymin2 = 0;
  mcu_macro[1][4].ymin2 = 0;
  mcu_macro[0][4].xmin3 = x_0;
  mcu_macro[1][4].xmin3 = x_0;
  mcu_macro[0][4].ymin3 = y_0;
  mcu_macro[1][4].ymin3 = y_0;
  mcu_macro[0][4].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][4].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][4].iter2 = imagelet_size;
  mcu_macro[1][4].iter2 = imagelet_size;
  mcu_macro[0][4].iter3 = 0;
  mcu_macro[1][4].iter3 = 0;
  mcu_macro[0][4].iter4 = 0;
  mcu_macro[1][4].iter4 = 0;
  mcu_macro[0][4].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][4].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 5: E8(8) -> 9
  mcu_macro[0][5].xmin1 = imagelet_io_8_0;
  mcu_macro[1][5].xmin1 = imagelet_io_8_1;
  mcu_macro[0][5].ymin1 = 0;
  mcu_macro[1][5].ymin1 = 0;
  mcu_macro[0][5].xmin2 = imagelet_9;
  mcu_macro[1][5].xmin2 = imagelet_9;
  mcu_macro[0][5].ymin2 = 0;
  mcu_macro[1][5].ymin2 = 0;
  mcu_macro[0][5].xmin3 = x_1;
  mcu_macro[1][5].xmin3 = x_1;
  mcu_macro[0][5].ymin3 = y_1;
  mcu_macro[1][5].ymin3 = y_1;
  mcu_macro[0][5].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][5].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][5].iter2 = imagelet_size;
  mcu_macro[1][5].iter2 = imagelet_size;
  mcu_macro[0][5].iter3 = 0;
  mcu_macro[1][5].iter3 = 0;
  mcu_macro[0][5].iter4 = 0;
  mcu_macro[1][5].iter4 = 0;
  mcu_macro[0][5].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][5].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 6: E8(7) -> 8
  mcu_macro[0][6].xmin1 = imagelet_io_7_0;
  mcu_macro[1][6].xmin1 = imagelet_io_7_1;
  mcu_macro[0][6].ymin1 = 0;
  mcu_macro[1][6].ymin1 = 0;
  mcu_macro[0][6].xmin2 = imagelet_io_8_0;
  mcu_macro[1][6].xmin2 = imagelet_io_8_1;
  mcu_macro[0][6].ymin2 = 0;
  mcu_macro[1][6].ymin2 = 0;
  mcu_macro[0][6].xmin3 = x_2;
  mcu_macro[1][6].xmin3 = x_2;
  mcu_macro[0][6].ymin3 = y_2;
  mcu_macro[1][6].ymin3 = y_2;
  mcu_macro[0][6].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][6].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][6].iter2 = imagelet_size;
  mcu_macro[1][6].iter2 = imagelet_size;
  mcu_macro[0][6].iter3 = 0;
  mcu_macro[1][6].iter3 = 0;
  mcu_macro[0][6].iter4 = 0;
  mcu_macro[1][6].iter4 = 0;
  mcu_macro[0][6].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][6].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 7: E8(5) -> 7
  mcu_macro[0][7].xmin1 = imagelet_io_5_0;
  mcu_macro[1][7].xmin1 = imagelet_io_5_1;
  mcu_macro[0][7].ymin1 = 0;
  mcu_macro[1][7].ymin1 = 0;
  mcu_macro[0][7].xmin2 = imagelet_io_7_0;
  mcu_macro[1][7].xmin2 = imagelet_io_7_1;
  mcu_macro[0][7].ymin2 = 0;
  mcu_macro[1][7].ymin2 = 0;
  mcu_macro[0][7].xmin3 = x_3;
  mcu_macro[1][7].xmin3 = x_3;
  mcu_macro[0][7].ymin3 = y_3;
  mcu_macro[1][7].ymin3 = y_3;
  mcu_macro[0][7].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][7].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][7].iter2 = imagelet_size;
  mcu_macro[1][7].iter2 = imagelet_size;
  mcu_macro[0][7].iter3 = 0;
  mcu_macro[1][7].iter3 = 0;
  mcu_macro[0][7].iter4 = 0;
  mcu_macro[1][7].iter4 = 0;
  mcu_macro[0][7].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][7].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 8: E8(2) -> 5
  mcu_macro[0][8].xmin1 = imagelet_io_2_0;
  mcu_macro[1][8].xmin1 = imagelet_io_2_1;
  mcu_macro[0][8].ymin1 = 0;
  mcu_macro[1][8].ymin1 = 0;
  mcu_macro[0][8].xmin2 = imagelet_io_5_0;
  mcu_macro[1][8].xmin2 = imagelet_io_5_1;
  mcu_macro[0][8].ymin2 = 0;
  mcu_macro[1][8].ymin2 = 0;
  // copy of operation 8 parameters
  for(i=0; i<9; i++)
    p_8[i] = pi13[i];
  gram.xoffset = x_8;
  gram.yoffset = y_8;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_8;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][8].xmin3 = x_8;
  mcu_macro[1][8].xmin3 = x_8;
  mcu_macro[0][8].ymin3 = y_8;
  mcu_macro[1][8].ymin3 = y_8;
  mcu_macro[0][8].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][8].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][8].iter2 = imagelet_size;
  mcu_macro[1][8].iter2 = imagelet_size;
  mcu_macro[0][8].iter3 = 0;
  mcu_macro[1][8].iter3 = 0;
  mcu_macro[0][8].iter4 = 0;
  mcu_macro[1][8].iter4 = 0;
  mcu_macro[0][8].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][8].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 9: E8(1) -> 2
  mcu_macro[0][9].xmin1 = imagelet_io_1_0;
  mcu_macro[1][9].xmin1 = imagelet_io_1_1;
  mcu_macro[0][9].ymin1 = 0;
  mcu_macro[1][9].ymin1 = 0;
  mcu_macro[0][9].xmin2 = imagelet_io_2_0;
  mcu_macro[1][9].xmin2 = imagelet_io_2_1;
  mcu_macro[0][9].ymin2 = 0;
  mcu_macro[1][9].ymin2 = 0;
  // copy of operation 9 parameters
  for(i=0; i<9; i++)
    p_9[i] = pi14[i];
  gram.xoffset = x_9;
  gram.yoffset = y_9;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_9;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][9].xmin3 = x_9;
  mcu_macro[1][9].xmin3 = x_9;
  mcu_macro[0][9].ymin3 = y_9;
  mcu_macro[1][9].ymin3 = y_9;
  mcu_macro[0][9].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][9].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][9].iter2 = imagelet_size;
  mcu_macro[1][9].iter2 = imagelet_size;
  mcu_macro[0][9].iter3 = 0;
  mcu_macro[1][9].iter3 = 0;
  mcu_macro[0][9].iter4 = 0;
  mcu_macro[1][9].iter4 = 0;
  mcu_macro[0][9].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][9].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 10: E8(3) -> 1
  mcu_macro[0][10].xmin1 = imagelet_io_3_0;
  mcu_macro[1][10].xmin1 = imagelet_io_3_1;
  mcu_macro[0][10].ymin1 = 0;
  mcu_macro[1][10].ymin1 = 0;
  mcu_macro[0][10].xmin2 = imagelet_io_1_0;
  mcu_macro[1][10].xmin2 = imagelet_io_1_1;
  mcu_macro[0][10].ymin2 = 0;
  mcu_macro[1][10].ymin2 = 0;
  // copy of operation 10 parameters
  for(i=0; i<9; i++)
    p_10[i] = pi15[i];
  gram.xoffset = x_10;
  gram.yoffset = y_10;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_10;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][10].xmin3 = x_10;
  mcu_macro[1][10].xmin3 = x_10;
  mcu_macro[0][10].ymin3 = y_10;
  mcu_macro[1][10].ymin3 = y_10;
  mcu_macro[0][10].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][10].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][10].iter2 = imagelet_size;
  mcu_macro[1][10].iter2 = imagelet_size;
  mcu_macro[0][10].iter3 = 0;
  mcu_macro[1][10].iter3 = 0;
  mcu_macro[0][10].iter4 = 0;
  mcu_macro[1][10].iter4 = 0;
  mcu_macro[0][10].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][10].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 11: E8(4) -> 3
  mcu_macro[0][11].xmin1 = imagelet_io_4_0;
  mcu_macro[1][11].xmin1 = imagelet_io_4_1;
  mcu_macro[0][11].ymin1 = 0;
  mcu_macro[1][11].ymin1 = 0;
  mcu_macro[0][11].xmin2 = imagelet_io_3_0;
  mcu_macro[1][11].xmin2 = imagelet_io_3_1;
  mcu_macro[0][11].ymin2 = 0;
  mcu_macro[1][11].ymin2 = 0;
  mcu_macro[0][11].xmin3 = x_0;
  mcu_macro[1][11].xmin3 = x_0;
  mcu_macro[0][11].ymin3 = y_0;
  mcu_macro[1][11].ymin3 = y_0;
  mcu_macro[0][11].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][11].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][11].iter2 = imagelet_size;
  mcu_macro[1][11].iter2 = imagelet_size;
  mcu_macro[0][11].iter3 = 0;
  mcu_macro[1][11].iter3 = 0;
  mcu_macro[0][11].iter4 = 0;
  mcu_macro[1][11].iter4 = 0;
  mcu_macro[0][11].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][11].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 12: E8(9) -> 4
  mcu_macro[0][12].xmin1 = imagelet_9;
  mcu_macro[1][12].xmin1 = imagelet_9;
  mcu_macro[0][12].ymin1 = 0;
  mcu_macro[1][12].ymin1 = 0;
  mcu_macro[0][12].xmin2 = imagelet_io_4_0;
  mcu_macro[1][12].xmin2 = imagelet_io_4_1;
  mcu_macro[0][12].ymin2 = 0;
  mcu_macro[1][12].ymin2 = 0;
  mcu_macro[0][12].xmin3 = x_1;
  mcu_macro[1][12].xmin3 = x_1;
  mcu_macro[0][12].ymin3 = y_1;
  mcu_macro[1][12].ymin3 = y_1;
  mcu_macro[0][12].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][12].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][12].iter2 = imagelet_size;
  mcu_macro[1][12].iter2 = imagelet_size;
  mcu_macro[0][12].iter3 = 0;
  mcu_macro[1][12].iter3 = 0;
  mcu_macro[0][12].iter4 = 0;
  mcu_macro[1][12].iter4 = 0;
  mcu_macro[0][12].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][12].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 13: E8(6) -> 9
  mcu_macro[0][13].xmin1 = imagelet_io_6_0;
  mcu_macro[1][13].xmin1 = imagelet_io_6_1;
  mcu_macro[0][13].ymin1 = 0;
  mcu_macro[1][13].ymin1 = 0;
  mcu_macro[0][13].xmin2 = imagelet_9;
  mcu_macro[1][13].xmin2 = imagelet_9;
  mcu_macro[0][13].ymin2 = 0;
  mcu_macro[1][13].ymin2 = 0;
  // copy of operation 13 parameters
  for(i=0; i<9; i++)
    p_13[i] = pi16[i];
  gram.xoffset = x_13;
  gram.yoffset = y_13;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_13;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][13].xmin3 = x_13;
  mcu_macro[1][13].xmin3 = x_13;
  mcu_macro[0][13].ymin3 = y_13;
  mcu_macro[1][13].ymin3 = y_13;
  mcu_macro[0][13].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][13].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][13].iter2 = imagelet_size;
  mcu_macro[1][13].iter2 = imagelet_size;
  mcu_macro[0][13].iter3 = 0;
  mcu_macro[1][13].iter3 = 0;
  mcu_macro[0][13].iter4 = 0;
  mcu_macro[1][13].iter4 = 0;
  mcu_macro[0][13].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][13].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 14: E8(8) -> 6
  mcu_macro[0][14].xmin1 = imagelet_io_8_0;
  mcu_macro[1][14].xmin1 = imagelet_io_8_1;
  mcu_macro[0][14].ymin1 = 0;
  mcu_macro[1][14].ymin1 = 0;
  mcu_macro[0][14].xmin2 = imagelet_io_6_0;
  mcu_macro[1][14].xmin2 = imagelet_io_6_1;
  mcu_macro[0][14].ymin2 = 0;
  mcu_macro[1][14].ymin2 = 0;
  mcu_macro[0][14].xmin3 = x_2;
  mcu_macro[1][14].xmin3 = x_2;
  mcu_macro[0][14].ymin3 = y_2;
  mcu_macro[1][14].ymin3 = y_2;
  mcu_macro[0][14].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][14].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][14].iter2 = imagelet_size;
  mcu_macro[1][14].iter2 = imagelet_size;
  mcu_macro[0][14].iter3 = 0;
  mcu_macro[1][14].iter3 = 0;
  mcu_macro[0][14].iter4 = 0;
  mcu_macro[1][14].iter4 = 0;
  mcu_macro[0][14].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][14].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 15: E8(7) -> 8
  mcu_macro[0][15].xmin1 = imagelet_io_7_0;
  mcu_macro[1][15].xmin1 = imagelet_io_7_1;
  mcu_macro[0][15].ymin1 = 0;
  mcu_macro[1][15].ymin1 = 0;
  mcu_macro[0][15].xmin2 = imagelet_io_8_0;
  mcu_macro[1][15].xmin2 = imagelet_io_8_1;
  mcu_macro[0][15].ymin2 = 0;
  mcu_macro[1][15].ymin2 = 0;
  mcu_macro[0][15].xmin3 = x_3;
  mcu_macro[1][15].xmin3 = x_3;
  mcu_macro[0][15].ymin3 = y_3;
  mcu_macro[1][15].ymin3 = y_3;
  mcu_macro[0][15].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][15].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][15].iter2 = imagelet_size;
  mcu_macro[1][15].iter2 = imagelet_size;
  mcu_macro[0][15].iter3 = 0;
  mcu_macro[1][15].iter3 = 0;
  mcu_macro[0][15].iter4 = 0;
  mcu_macro[1][15].iter4 = 0;
  mcu_macro[0][15].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][15].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 16: E8(5) -> 7
  mcu_macro[0][16].xmin1 = imagelet_io_5_0;
  mcu_macro[1][16].xmin1 = imagelet_io_5_1;
  mcu_macro[0][16].ymin1 = 0;
  mcu_macro[1][16].ymin1 = 0;
  mcu_macro[0][16].xmin2 = imagelet_io_7_0;
  mcu_macro[1][16].xmin2 = imagelet_io_7_1;
  mcu_macro[0][16].ymin2 = 0;
  mcu_macro[1][16].ymin2 = 0;
  mcu_macro[0][16].xmin3 = x_8;
  mcu_macro[1][16].xmin3 = x_8;
  mcu_macro[0][16].ymin3 = y_8;
  mcu_macro[1][16].ymin3 = y_8;
  mcu_macro[0][16].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][16].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][16].iter2 = imagelet_size;
  mcu_macro[1][16].iter2 = imagelet_size;
  mcu_macro[0][16].iter3 = 0;
  mcu_macro[1][16].iter3 = 0;
  mcu_macro[0][16].iter4 = 0;
  mcu_macro[1][16].iter4 = 0;
  mcu_macro[0][16].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][16].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 17: E8(2) -> 5
  mcu_macro[0][17].xmin1 = imagelet_io_2_0;
  mcu_macro[1][17].xmin1 = imagelet_io_2_1;
  mcu_macro[0][17].ymin1 = 0;
  mcu_macro[1][17].ymin1 = 0;
  mcu_macro[0][17].xmin2 = imagelet_io_5_0;
  mcu_macro[1][17].xmin2 = imagelet_io_5_1;
  mcu_macro[0][17].ymin2 = 0;
  mcu_macro[1][17].ymin2 = 0;
  mcu_macro[0][17].xmin3 = x_9;
  mcu_macro[1][17].xmin3 = x_9;
  mcu_macro[0][17].ymin3 = y_9;
  mcu_macro[1][17].ymin3 = y_9;
  mcu_macro[0][17].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][17].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][17].iter2 = imagelet_size;
  mcu_macro[1][17].iter2 = imagelet_size;
  mcu_macro[0][17].iter3 = 0;
  mcu_macro[1][17].iter3 = 0;
  mcu_macro[0][17].iter4 = 0;
  mcu_macro[1][17].iter4 = 0;
  mcu_macro[0][17].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][17].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 18: E8(1) -> 2
  mcu_macro[0][18].xmin1 = imagelet_io_1_0;
  mcu_macro[1][18].xmin1 = imagelet_io_1_1;
  mcu_macro[0][18].ymin1 = 0;
  mcu_macro[1][18].ymin1 = 0;
  mcu_macro[0][18].xmin2 = imagelet_io_2_0;
  mcu_macro[1][18].xmin2 = imagelet_io_2_1;
  mcu_macro[0][18].ymin2 = 0;
  mcu_macro[1][18].ymin2 = 0;
  mcu_macro[0][18].xmin3 = x_10;
  mcu_macro[1][18].xmin3 = x_10;
  mcu_macro[0][18].ymin3 = y_10;
  mcu_macro[1][18].ymin3 = y_10;
  mcu_macro[0][18].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][18].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][18].iter2 = imagelet_size;
  mcu_macro[1][18].iter2 = imagelet_size;
  mcu_macro[0][18].iter3 = 0;
  mcu_macro[1][18].iter3 = 0;
  mcu_macro[0][18].iter4 = 0;
  mcu_macro[1][18].iter4 = 0;
  mcu_macro[0][18].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][18].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 19: E8(9) -> 1
  mcu_macro[0][19].xmin1 = imagelet_9;
  mcu_macro[1][19].xmin1 = imagelet_9;
  mcu_macro[0][19].ymin1 = 0;
  mcu_macro[1][19].ymin1 = 0;
  mcu_macro[0][19].xmin2 = imagelet_io_1_0;
  mcu_macro[1][19].xmin2 = imagelet_io_1_1;
  mcu_macro[0][19].ymin2 = 0;
  mcu_macro[1][19].ymin2 = 0;
  mcu_macro[0][19].xmin3 = x_13;
  mcu_macro[1][19].xmin3 = x_13;
  mcu_macro[0][19].ymin3 = y_13;
  mcu_macro[1][19].ymin3 = y_13;
  mcu_macro[0][19].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][19].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][19].iter2 = imagelet_size;
  mcu_macro[1][19].iter2 = imagelet_size;
  mcu_macro[0][19].iter3 = 0;
  mcu_macro[1][19].iter3 = 0;
  mcu_macro[0][19].iter4 = 0;
  mcu_macro[1][19].iter4 = 0;
  mcu_macro[0][19].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][19].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 20: E8(7) -> 9
  mcu_macro[0][20].xmin1 = imagelet_io_7_0;
  mcu_macro[1][20].xmin1 = imagelet_io_7_1;
  mcu_macro[0][20].ymin1 = 0;
  mcu_macro[1][20].ymin1 = 0;
  mcu_macro[0][20].xmin2 = imagelet_9;
  mcu_macro[1][20].xmin2 = imagelet_9;
  mcu_macro[0][20].ymin2 = 0;
  mcu_macro[1][20].ymin2 = 0;
  mcu_macro[0][20].xmin3 = x_8;
  mcu_macro[1][20].xmin3 = x_8;
  mcu_macro[0][20].ymin3 = y_8;
  mcu_macro[1][20].ymin3 = y_8;
  mcu_macro[0][20].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][20].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][20].iter2 = imagelet_size;
  mcu_macro[1][20].iter2 = imagelet_size;
  mcu_macro[0][20].iter3 = 0;
  mcu_macro[1][20].iter3 = 0;
  mcu_macro[0][20].iter4 = 0;
  mcu_macro[1][20].iter4 = 0;
  mcu_macro[0][20].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][20].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 21: E8(5) -> 7
  mcu_macro[0][21].xmin1 = imagelet_io_5_0;
  mcu_macro[1][21].xmin1 = imagelet_io_5_1;
  mcu_macro[0][21].ymin1 = 0;
  mcu_macro[1][21].ymin1 = 0;
  mcu_macro[0][21].xmin2 = imagelet_io_7_0;
  mcu_macro[1][21].xmin2 = imagelet_io_7_1;
  mcu_macro[0][21].ymin2 = 0;
  mcu_macro[1][21].ymin2 = 0;
  mcu_macro[0][21].xmin3 = x_9;
  mcu_macro[1][21].xmin3 = x_9;
  mcu_macro[0][21].ymin3 = y_9;
  mcu_macro[1][21].ymin3 = y_9;
  mcu_macro[0][21].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][21].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][21].iter2 = imagelet_size;
  mcu_macro[1][21].iter2 = imagelet_size;
  mcu_macro[0][21].iter3 = 0;
  mcu_macro[1][21].iter3 = 0;
  mcu_macro[0][21].iter4 = 0;
  mcu_macro[1][21].iter4 = 0;
  mcu_macro[0][21].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][21].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 22: E8(2) -> 5
  mcu_macro[0][22].xmin1 = imagelet_io_2_0;
  mcu_macro[1][22].xmin1 = imagelet_io_2_1;
  mcu_macro[0][22].ymin1 = 0;
  mcu_macro[1][22].ymin1 = 0;
  mcu_macro[0][22].xmin2 = imagelet_io_5_0;
  mcu_macro[1][22].xmin2 = imagelet_io_5_1;
  mcu_macro[0][22].ymin2 = 0;
  mcu_macro[1][22].ymin2 = 0;
  mcu_macro[0][22].xmin3 = x_10;
  mcu_macro[1][22].xmin3 = x_10;
  mcu_macro[0][22].ymin3 = y_10;
  mcu_macro[1][22].ymin3 = y_10;
  mcu_macro[0][22].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][22].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][22].iter2 = imagelet_size;
  mcu_macro[1][22].iter2 = imagelet_size;
  mcu_macro[0][22].iter3 = 0;
  mcu_macro[1][22].iter3 = 0;
  mcu_macro[0][22].iter4 = 0;
  mcu_macro[1][22].iter4 = 0;
  mcu_macro[0][22].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][22].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 23: E8(1) -> 2
  mcu_macro[0][23].xmin1 = imagelet_io_1_0;
  mcu_macro[1][23].xmin1 = imagelet_io_1_1;
  mcu_macro[0][23].ymin1 = 0;
  mcu_macro[1][23].ymin1 = 0;
  mcu_macro[0][23].xmin2 = imagelet_io_2_0;
  mcu_macro[1][23].xmin2 = imagelet_io_2_1;
  mcu_macro[0][23].ymin2 = 0;
  mcu_macro[1][23].ymin2 = 0;
  mcu_macro[0][23].xmin3 = x_13;
  mcu_macro[1][23].xmin3 = x_13;
  mcu_macro[0][23].ymin3 = y_13;
  mcu_macro[1][23].ymin3 = y_13;
  mcu_macro[0][23].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][23].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][23].iter2 = imagelet_size;
  mcu_macro[1][23].iter2 = imagelet_size;
  mcu_macro[0][23].iter3 = 0;
  mcu_macro[1][23].iter3 = 0;
  mcu_macro[0][23].iter4 = 0;
  mcu_macro[1][23].iter4 = 0;
  mcu_macro[0][23].addrStart = TERAPIX_UCODE_ERODE_3_3;
  mcu_macro[1][23].addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 24: <_(3) -> 3
  mcu_macro[0][24].xmin1 = imagelet_io_3_0;
  mcu_macro[1][24].xmin1 = imagelet_io_3_1;
  mcu_macro[0][24].ymin1 = 0;
  mcu_macro[1][24].ymin1 = 0;
  mcu_macro[0][24].xmin2 = imagelet_io_3_0;
  mcu_macro[1][24].xmin2 = imagelet_io_3_1;
  mcu_macro[0][24].ymin2 = 0;
  mcu_macro[1][24].ymin2 = 0;
  // copy of operation 24 parameters
  p_24[0] = pi17;
  gram.xoffset = x_24;
  gram.yoffset = y_24;
  gram.width = 1;
  gram.height = 1;
  gram.params = p_24;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][24].xmin3 = x_24;
  mcu_macro[1][24].xmin3 = x_24;
  mcu_macro[0][24].ymin3 = y_24;
  mcu_macro[1][24].ymin3 = y_24;
  mcu_macro[0][24].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][24].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][24].iter2 = imagelet_size;
  mcu_macro[1][24].iter2 = imagelet_size;
  mcu_macro[0][24].iter3 = 0;
  mcu_macro[1][24].iter3 = 0;
  mcu_macro[0][24].iter4 = 0;
  mcu_macro[1][24].iter4 = 0;
  mcu_macro[0][24].addrStart = TERAPIX_UCODE_INF_CONST;
  mcu_macro[1][24].addrStart = TERAPIX_UCODE_INF_CONST;
  // 25: <(3,4) -> 4
  mcu_macro[0][25].xmin1 = imagelet_io_3_0;
  mcu_macro[1][25].xmin1 = imagelet_io_3_1;
  mcu_macro[0][25].ymin1 = 0;
  mcu_macro[1][25].ymin1 = 0;
  mcu_macro[0][25].xmin2 = imagelet_io_4_0;
  mcu_macro[1][25].xmin2 = imagelet_io_4_1;
  mcu_macro[0][25].ymin2 = 0;
  mcu_macro[1][25].ymin2 = 0;
  mcu_macro[0][25].xmin3 = imagelet_io_4_0;
  mcu_macro[1][25].xmin3 = imagelet_io_4_1;
  mcu_macro[0][25].ymin3 = 0;
  mcu_macro[1][25].ymin3 = 0;
  mcu_macro[0][25].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][25].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][25].iter2 = imagelet_size;
  mcu_macro[1][25].iter2 = imagelet_size;
  mcu_macro[0][25].iter3 = 0;
  mcu_macro[1][25].iter3 = 0;
  mcu_macro[0][25].iter4 = 0;
  mcu_macro[1][25].iter4 = 0;
  mcu_macro[0][25].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][25].addrStart = TERAPIX_UCODE_INF3;
  // 26: <(4,2) -> 4
  mcu_macro[0][26].xmin1 = imagelet_io_4_0;
  mcu_macro[1][26].xmin1 = imagelet_io_4_1;
  mcu_macro[0][26].ymin1 = 0;
  mcu_macro[1][26].ymin1 = 0;
  mcu_macro[0][26].xmin2 = imagelet_io_2_0;
  mcu_macro[1][26].xmin2 = imagelet_io_2_1;
  mcu_macro[0][26].ymin2 = 0;
  mcu_macro[1][26].ymin2 = 0;
  mcu_macro[0][26].xmin3 = imagelet_io_4_0;
  mcu_macro[1][26].xmin3 = imagelet_io_4_1;
  mcu_macro[0][26].ymin3 = 0;
  mcu_macro[1][26].ymin3 = 0;
  mcu_macro[0][26].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][26].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][26].iter2 = imagelet_size;
  mcu_macro[1][26].iter2 = imagelet_size;
  mcu_macro[0][26].iter3 = 0;
  mcu_macro[1][26].iter3 = 0;
  mcu_macro[0][26].iter4 = 0;
  mcu_macro[1][26].iter4 = 0;
  mcu_macro[0][26].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][26].addrStart = TERAPIX_UCODE_INF3;
  // 27: <(4,6) -> 6
  mcu_macro[0][27].xmin1 = imagelet_io_4_0;
  mcu_macro[1][27].xmin1 = imagelet_io_4_1;
  mcu_macro[0][27].ymin1 = 0;
  mcu_macro[1][27].ymin1 = 0;
  mcu_macro[0][27].xmin2 = imagelet_io_6_0;
  mcu_macro[1][27].xmin2 = imagelet_io_6_1;
  mcu_macro[0][27].ymin2 = 0;
  mcu_macro[1][27].ymin2 = 0;
  mcu_macro[0][27].xmin3 = imagelet_io_6_0;
  mcu_macro[1][27].xmin3 = imagelet_io_6_1;
  mcu_macro[0][27].ymin3 = 0;
  mcu_macro[1][27].ymin3 = 0;
  mcu_macro[0][27].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][27].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][27].iter2 = imagelet_size;
  mcu_macro[1][27].iter2 = imagelet_size;
  mcu_macro[0][27].iter3 = 0;
  mcu_macro[1][27].iter3 = 0;
  mcu_macro[0][27].iter4 = 0;
  mcu_macro[1][27].iter4 = 0;
  mcu_macro[0][27].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][27].addrStart = TERAPIX_UCODE_INF3;
  // 28: <(6,8) -> 8
  mcu_macro[0][28].xmin1 = imagelet_io_6_0;
  mcu_macro[1][28].xmin1 = imagelet_io_6_1;
  mcu_macro[0][28].ymin1 = 0;
  mcu_macro[1][28].ymin1 = 0;
  mcu_macro[0][28].xmin2 = imagelet_io_8_0;
  mcu_macro[1][28].xmin2 = imagelet_io_8_1;
  mcu_macro[0][28].ymin2 = 0;
  mcu_macro[1][28].ymin2 = 0;
  mcu_macro[0][28].xmin3 = imagelet_io_8_0;
  mcu_macro[1][28].xmin3 = imagelet_io_8_1;
  mcu_macro[0][28].ymin3 = 0;
  mcu_macro[1][28].ymin3 = 0;
  mcu_macro[0][28].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][28].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][28].iter2 = imagelet_size;
  mcu_macro[1][28].iter2 = imagelet_size;
  mcu_macro[0][28].iter3 = 0;
  mcu_macro[1][28].iter3 = 0;
  mcu_macro[0][28].iter4 = 0;
  mcu_macro[1][28].iter4 = 0;
  mcu_macro[0][28].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][28].addrStart = TERAPIX_UCODE_INF3;
  // 29: <(8,9) -> 9
  mcu_macro[0][29].xmin1 = imagelet_io_8_0;
  mcu_macro[1][29].xmin1 = imagelet_io_8_1;
  mcu_macro[0][29].ymin1 = 0;
  mcu_macro[1][29].ymin1 = 0;
  mcu_macro[0][29].xmin2 = imagelet_9;
  mcu_macro[1][29].xmin2 = imagelet_9;
  mcu_macro[0][29].ymin2 = 0;
  mcu_macro[1][29].ymin2 = 0;
  mcu_macro[0][29].xmin3 = imagelet_9;
  mcu_macro[1][29].xmin3 = imagelet_9;
  mcu_macro[0][29].ymin3 = 0;
  mcu_macro[1][29].ymin3 = 0;
  mcu_macro[0][29].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][29].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][29].iter2 = imagelet_size;
  mcu_macro[1][29].iter2 = imagelet_size;
  mcu_macro[0][29].iter3 = 0;
  mcu_macro[1][29].iter3 = 0;
  mcu_macro[0][29].iter4 = 0;
  mcu_macro[1][29].iter4 = 0;
  mcu_macro[0][29].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][29].addrStart = TERAPIX_UCODE_INF3;
  // 30: <(9,7) -> 9
  mcu_macro[0][30].xmin1 = imagelet_9;
  mcu_macro[1][30].xmin1 = imagelet_9;
  mcu_macro[0][30].ymin1 = 0;
  mcu_macro[1][30].ymin1 = 0;
  mcu_macro[0][30].xmin2 = imagelet_io_7_0;
  mcu_macro[1][30].xmin2 = imagelet_io_7_1;
  mcu_macro[0][30].ymin2 = 0;
  mcu_macro[1][30].ymin2 = 0;
  mcu_macro[0][30].xmin3 = imagelet_9;
  mcu_macro[1][30].xmin3 = imagelet_9;
  mcu_macro[0][30].ymin3 = 0;
  mcu_macro[1][30].ymin3 = 0;
  mcu_macro[0][30].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][30].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][30].iter2 = imagelet_size;
  mcu_macro[1][30].iter2 = imagelet_size;
  mcu_macro[0][30].iter3 = 0;
  mcu_macro[1][30].iter3 = 0;
  mcu_macro[0][30].iter4 = 0;
  mcu_macro[1][30].iter4 = 0;
  mcu_macro[0][30].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][30].addrStart = TERAPIX_UCODE_INF3;
  // 31: <(9,5) -> 9
  mcu_macro[0][31].xmin1 = imagelet_9;
  mcu_macro[1][31].xmin1 = imagelet_9;
  mcu_macro[0][31].ymin1 = 0;
  mcu_macro[1][31].ymin1 = 0;
  mcu_macro[0][31].xmin2 = imagelet_io_5_0;
  mcu_macro[1][31].xmin2 = imagelet_io_5_1;
  mcu_macro[0][31].ymin2 = 0;
  mcu_macro[1][31].ymin2 = 0;
  mcu_macro[0][31].xmin3 = imagelet_9;
  mcu_macro[1][31].xmin3 = imagelet_9;
  mcu_macro[0][31].ymin3 = 0;
  mcu_macro[1][31].ymin3 = 0;
  mcu_macro[0][31].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][31].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][31].iter2 = imagelet_size;
  mcu_macro[1][31].iter2 = imagelet_size;
  mcu_macro[0][31].iter3 = 0;
  mcu_macro[1][31].iter3 = 0;
  mcu_macro[0][31].iter4 = 0;
  mcu_macro[1][31].iter4 = 0;
  mcu_macro[0][31].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][31].addrStart = TERAPIX_UCODE_INF3;
  // 32: !(9) -> 1
  mcu_macro[0][32].xmin1 = imagelet_9;
  mcu_macro[1][32].xmin1 = imagelet_9;
  mcu_macro[0][32].ymin1 = 0;
  mcu_macro[1][32].ymin1 = 0;
  mcu_macro[0][32].xmin2 = imagelet_io_1_0;
  mcu_macro[1][32].xmin2 = imagelet_io_1_1;
  mcu_macro[0][32].ymin2 = 0;
  mcu_macro[1][32].ymin2 = 0;
  mcu_macro[0][32].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][32].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][32].iter2 = imagelet_size;
  mcu_macro[1][32].iter2 = imagelet_size;
  mcu_macro[0][32].iter3 = 0;
  mcu_macro[1][32].iter3 = 0;
  mcu_macro[0][32].iter4 = 0;
  mcu_macro[1][32].iter4 = 0;
  mcu_macro[0][32].addrStart = TERAPIX_UCODE_NOT;
  mcu_macro[1][32].addrStart = TERAPIX_UCODE_NOT;
  // 33: vol(1)
  // initializing  33_val
  p_33_val[0] = 0;
  gram.xoffset = x_33_val;
  gram.yoffset = y_33_val;
  gram.width = 1;
  gram.height = 1;
  gram.params = p_33_val;
  freia_mg_write_dynamic_param(&dyn_param);
  // initialize memory for operation 33_val
  mem_init.xmin1 = reduction_33;
  mem_init.ymin1 = 0;
  mem_init.xmin2 = 0;
  mem_init.ymin2 = 0;
  mem_init.xmin3 = 0;
  mem_init.ymin3 = 0;
  mem_init.iter1 = TERAPIX_PE_NUMBER;
  mem_init.iter2 = 2;
  mem_init.iter3 = 0;
  mem_init.iter4 = 0;
  mem_init.addrStart = TERAPIX_UCODE_SET_CONST;
  param.size = sizeof(terapix_mcu_macrocode); // not used?
  param.raw = (void*) (&mem_init);
  ret |= freia_mg_work(&param);
  ret |= freia_mg_end_work();
  // set measure vol at reduction_33
  mcu_macro[0][33].xmin2 = reduction_33;
  mcu_macro[1][33].xmin2 = reduction_33;
  mcu_macro[0][33].ymin2 = 0;
  mcu_macro[1][33].ymin2 = 0;
  mcu_macro[0][33].xmin3 = 0;
  mcu_macro[1][33].xmin3 = 0;
  mcu_macro[0][33].ymin3 = 0;
  mcu_macro[1][33].ymin3 = 0;
  mcu_macro[0][33].xmin1 = imagelet_io_1_0;
  mcu_macro[1][33].xmin1 = imagelet_io_1_1;
  mcu_macro[0][33].ymin1 = 0;
  mcu_macro[1][33].ymin1 = 0;
  mcu_macro[0][33].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][33].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][33].iter2 = imagelet_size;
  mcu_macro[1][33].iter2 = imagelet_size;
  mcu_macro[0][33].iter3 = 0;
  mcu_macro[1][33].iter3 = 0;
  mcu_macro[0][33].iter4 = 0;
  mcu_macro[1][33].iter4 = 0;
  mcu_macro[0][33].addrStart = TERAPIX_UCODE_GLOBAL_VOL;
  mcu_macro[1][33].addrStart = TERAPIX_UCODE_GLOBAL_VOL;


  // inputs:
  // - imagelet 1 is i0 for w1_1_13
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;
  // - imagelet 2 is i1 for w1_1_23
  tile_in[0][1].x = imagelet_io_2_0;
  tile_in[0][1].y = 0;
  tile_in[1][1].x = imagelet_io_2_1;
  tile_in[1][1].y = 0;
  // - imagelet 3 is i2 for w1_1_3
  tile_in[0][2].x = imagelet_io_3_0;
  tile_in[0][2].y = 0;
  tile_in[1][2].x = imagelet_io_3_1;
  tile_in[1][2].y = 0;
  // - imagelet 4 is i3 for w1_1_33
  tile_in[0][3].x = imagelet_io_4_0;
  tile_in[0][3].y = 0;
  tile_in[1][3].x = imagelet_io_4_1;
  tile_in[1][3].y = 0;
  // - imagelet 5 is i4 for w1_1_43
  tile_in[0][4].x = imagelet_io_5_0;
  tile_in[0][4].y = 0;
  tile_in[1][4].x = imagelet_io_5_1;
  tile_in[1][4].y = 0;
  // - imagelet 6 is i5 for w1_1_53
  tile_in[0][5].x = imagelet_io_6_0;
  tile_in[0][5].y = 0;
  tile_in[1][5].x = imagelet_io_6_1;
  tile_in[1][5].y = 0;
  // - imagelet 7 is i6 for w1_1_63
  tile_in[0][6].x = imagelet_io_7_0;
  tile_in[0][6].y = 0;
  tile_in[1][6].x = imagelet_io_7_1;
  tile_in[1][6].y = 0;
  // - imagelet 8 is i7 for w1_1_73
  tile_in[0][7].x = imagelet_io_8_0;
  tile_in[0][7].y = 0;
  tile_in[1][7].x = imagelet_io_8_1;
  tile_in[1][7].y = 0;

  // outputs:
  // - imagelet 1 is o0 for imWork1
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 3;
  mcu_instr.borderBottom = 3;
  mcu_instr.borderLeft   = 3;
  mcu_instr.borderRight  = 3;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 8;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 34;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0, i1, i2, i3, i4, i5, i6, i7);

  // extract measures
  // get measure vol result from reduction_33
  redter.xres = reduction_33;
  redter.yres = 0;
  redter.width = 1;
  redter.height = TERAPIX_PE_NUMBER;
  redter.result = (void*) red_33;
  redter.macroid = TERAPIX_UCODE_GLOBAL_VOL;
  redter.imgwidth = i0->width;
  redter.imgheight = i0->height;
  redter.subimgwidth = TERAPIX_PE_NUMBER;
  redter.subimgheight = imagelet_size;

  ret |= freia_cg_read_reduction_results(&redres);

  // assign reduction parameter
  *po18 = (int32_t) red_33[0];

  return ret;
}


// dag 1: 3 ops and 0 copies, optimized to 3 ops and 0+0+0 copies

/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 2 input images, 1 output image
 * 3 image operations in dag
 * dag length is 4, dag width is 2
 * costs in cycles per imagelet row:
 * - computation: 22
 * - communication: 72
 */
freia_status freia_52_terapix_helper_1_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const int32_t * pi3,
  int32_t * po4)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 2_val initialization
  int16_t p_2_val[1];
  const int32_t x_2_val = 3;
  const int32_t y_2_val = 0;
  // array for reduction 2 extraction
  int32_t red_2[1];
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][3];
  terapix_tile_info tile_in[2][2];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 3 computation imagelets
  // - 2 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 1;
  int image_height = i0->heightWa;
  int max_computed_size = 202;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 204;
  int imagelet_3 = 408;
  int imagelet_4 = 612;
  int imagelet_5 = 816;

  // memory for reductions
  int reduction_2 = 1022;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_4;
  int imagelet_io_2_0 = imagelet_2;
  int imagelet_io_2_1 = imagelet_5;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: D8(1) -> 3
  mcu_macro[0][0].xmin1 = imagelet_io_1_0;
  mcu_macro[1][0].xmin1 = imagelet_io_1_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_3;
  mcu_macro[1][0].xmin2 = imagelet_3;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi3[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][0].xmin3 = x_0;
  mcu_macro[1][0].xmin3 = x_0;
  mcu_macro[0][0].ymin3 = y_0;
  mcu_macro[1][0].ymin3 = y_0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: <(3,2) -> 1
  mcu_macro[0][1].xmin1 = imagelet_3;
  mcu_macro[1][1].xmin1 = imagelet_3;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_2_0;
  mcu_macro[1][1].xmin2 = imagelet_io_2_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  mcu_macro[0][1].xmin3 = imagelet_io_1_0;
  mcu_macro[1][1].xmin3 = imagelet_io_1_1;
  mcu_macro[0][1].ymin3 = 0;
  mcu_macro[1][1].ymin3 = 0;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_INF3;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_INF3;
  // 2: vol(1)
  // initializing  2_val
  p_2_val[0] = 0;
  gram.xoffset = x_2_val;
  gram.yoffset = y_2_val;
  gram.width = 1;
  gram.height = 1;
  gram.params = p_2_val;
  freia_mg_write_dynamic_param(&dyn_param);
  // initialize memory for operation 2_val
  mem_init.xmin1 = reduction_2;
  mem_init.ymin1 = 0;
  mem_init.xmin2 = 0;
  mem_init.ymin2 = 0;
  mem_init.xmin3 = 0;
  mem_init.ymin3 = 0;
  mem_init.iter1 = TERAPIX_PE_NUMBER;
  mem_init.iter2 = 2;
  mem_init.iter3 = 0;
  mem_init.iter4 = 0;
  mem_init.addrStart = TERAPIX_UCODE_SET_CONST;
  param.size = sizeof(terapix_mcu_macrocode); // not used?
  param.raw = (void*) (&mem_init);
  ret |= freia_mg_work(&param);
  ret |= freia_mg_end_work();
  // set measure vol at reduction_2
  mcu_macro[0][2].xmin2 = reduction_2;
  mcu_macro[1][2].xmin2 = reduction_2;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  mcu_macro[0][2].xmin3 = 0;
  mcu_macro[1][2].xmin3 = 0;
  mcu_macro[0][2].ymin3 = 0;
  mcu_macro[1][2].ymin3 = 0;
  mcu_macro[0][2].xmin1 = imagelet_io_1_0;
  mcu_macro[1][2].xmin1 = imagelet_io_1_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_GLOBAL_VOL;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_GLOBAL_VOL;


  // inputs:
  // - imagelet 1 is i0 for imWork1
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;
  // - imagelet 2 is i1 for imin
  tile_in[0][1].x = imagelet_io_2_0;
  tile_in[0][1].y = 0;
  tile_in[1][1].x = imagelet_io_2_1;
  tile_in[1][1].y = 0;

  // outputs:
  // - imagelet 1 is o0 for imWork1
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 1;
  mcu_instr.borderBottom = 1;
  mcu_instr.borderLeft   = 1;
  mcu_instr.borderRight  = 1;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 2;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 3;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0, i1);

  // extract measures
  // get measure vol result from reduction_2
  redter.xres = reduction_2;
  redter.yres = 0;
  redter.width = 1;
  redter.height = TERAPIX_PE_NUMBER;
  redter.result = (void*) red_2;
  redter.macroid = TERAPIX_UCODE_GLOBAL_VOL;
  redter.imgwidth = i0->width;
  redter.imgheight = i0->height;
  redter.subimgwidth = TERAPIX_PE_NUMBER;
  redter.subimgheight = imagelet_size;

  ret |= freia_cg_read_reduction_results(&redres);

  // assign reduction parameter
  *po4 = (int32_t) red_2[0];

  return ret;
}


// dag 2: 4 ops and 0 copies, optimized to 3 ops and 0+0+0 copies

/* FREIA terapix helper function for module freia_52
 *
 * RAMPE    = 1024
 * NPE      = 128
 * DMA BW   = 24
 * GRAM W   = 64
 * GRAM H   = 32
 * DAG CUT  = compute
 * OVERLAP  = false
 * IMAGE H  = 0
 * MAX SIZE = 0
 *
 * 2 input images, 1 output image
 * 3 image operations in dag
 * dag length is 4, dag width is 2
 * costs in cycles per imagelet row:
 * - computation: 12
 * - communication: 72
 */
freia_status freia_52_terapix_helper_2_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  int32_t pi3,
  int32_t pi4,
  int32_t pi5,
  int32_t pi6)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret = FREIA_OK;
  // data structures for reductions
  terapix_mcu_macrocode mem_init;
  freia_reduction_results redres;
  terapix_reduction redter;
  // overall structure which describes the computation
  terapix_mcu_instr mcu_instr;
  // operation 1 parameters
  int16_t p_1[1];
  const int32_t x_1 = 0;
  const int32_t y_1 = 0;
  // operation 2 parameters
  int16_t p_2[3];
  const int32_t x_2 = 1;
  const int32_t y_2 = 0;
  // flip flop macro code and I/Os
  terapix_mcu_macrocode mcu_macro[2][3];
  terapix_tile_info tile_in[2][2];
  terapix_tile_info tile_out[2][1];
  // imagelets definitions:
  // - 2 computation imagelets
  // - 2 double buffer imagelets
  // dynamic optimal imagelet size computation
  // this formula must match what the scheduler does!
  int vertical_border = 0;
  int image_height = i0->heightWa;
  int max_computed_size = 256;
  int n_tiles = (image_height+max_computed_size-1)/max_computed_size;
  int imagelet_size = (n_tiles==1)? image_height:
        ((image_height+n_tiles-1)/n_tiles)+2*vertical_border;
  int imagelet_1 = 0;
  int imagelet_2 = 256;
  int imagelet_3 = 512;
  int imagelet_4 = 768;

  // double buffer assignment
  int imagelet_io_1_0 = imagelet_1;
  int imagelet_io_1_1 = imagelet_3;
  int imagelet_io_2_0 = imagelet_2;
  int imagelet_io_2_1 = imagelet_4;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // dyn_param contents
  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);

  // redres contents
  redres.raw = (void*) &redter;
  redres.size = sizeof(terapix_reduction);

  // 0: -(2,1) -> 2
  mcu_macro[0][0].xmin1 = imagelet_io_2_0;
  mcu_macro[1][0].xmin1 = imagelet_io_2_1;
  mcu_macro[0][0].ymin1 = 0;
  mcu_macro[1][0].ymin1 = 0;
  mcu_macro[0][0].xmin2 = imagelet_io_1_0;
  mcu_macro[1][0].xmin2 = imagelet_io_1_1;
  mcu_macro[0][0].ymin2 = 0;
  mcu_macro[1][0].ymin2 = 0;
  mcu_macro[0][0].xmin3 = imagelet_io_2_0;
  mcu_macro[1][0].xmin3 = imagelet_io_2_1;
  mcu_macro[0][0].ymin3 = 0;
  mcu_macro[1][0].ymin3 = 0;
  mcu_macro[0][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][0].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][0].iter2 = imagelet_size;
  mcu_macro[1][0].iter2 = imagelet_size;
  mcu_macro[0][0].iter3 = 0;
  mcu_macro[1][0].iter3 = 0;
  mcu_macro[0][0].iter4 = 0;
  mcu_macro[1][0].iter4 = 0;
  mcu_macro[0][0].addrStart = TERAPIX_UCODE_SUB3;
  mcu_macro[1][0].addrStart = TERAPIX_UCODE_SUB3;
  // 1: *_(2) -> 2
  mcu_macro[0][1].xmin1 = imagelet_io_2_0;
  mcu_macro[1][1].xmin1 = imagelet_io_2_1;
  mcu_macro[0][1].ymin1 = 0;
  mcu_macro[1][1].ymin1 = 0;
  mcu_macro[0][1].xmin2 = imagelet_io_2_0;
  mcu_macro[1][1].xmin2 = imagelet_io_2_1;
  mcu_macro[0][1].ymin2 = 0;
  mcu_macro[1][1].ymin2 = 0;
  // copy of operation 1 parameters
  p_1[0] = pi3;
  gram.xoffset = x_1;
  gram.yoffset = y_1;
  gram.width = 1;
  gram.height = 1;
  gram.params = p_1;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][1].xmin3 = x_1;
  mcu_macro[1][1].xmin3 = x_1;
  mcu_macro[0][1].ymin3 = y_1;
  mcu_macro[1][1].ymin3 = y_1;
  mcu_macro[0][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][1].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][1].iter2 = imagelet_size;
  mcu_macro[1][1].iter2 = imagelet_size;
  mcu_macro[0][1].iter3 = 0;
  mcu_macro[1][1].iter3 = 0;
  mcu_macro[0][1].iter4 = 0;
  mcu_macro[1][1].iter4 = 0;
  mcu_macro[0][1].addrStart = TERAPIX_UCODE_MUL_CONST;
  mcu_macro[1][1].addrStart = TERAPIX_UCODE_MUL_CONST;
  // 2: thr(2) -> 1
  mcu_macro[0][2].xmin1 = imagelet_io_2_0;
  mcu_macro[1][2].xmin1 = imagelet_io_2_1;
  mcu_macro[0][2].ymin1 = 0;
  mcu_macro[1][2].ymin1 = 0;
  mcu_macro[0][2].xmin2 = imagelet_io_1_0;
  mcu_macro[1][2].xmin2 = imagelet_io_1_1;
  mcu_macro[0][2].ymin2 = 0;
  mcu_macro[1][2].ymin2 = 0;
  // copy of operation 2 parameters
  p_2[0] = pi4;
  p_2[1] = pi5;
  p_2[2] = pi6;
  gram.xoffset = x_2;
  gram.yoffset = y_2;
  gram.width = 3;
  gram.height = 1;
  gram.params = p_2;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_macro[0][2].xmin3 = x_2;
  mcu_macro[1][2].xmin3 = x_2;
  mcu_macro[0][2].ymin3 = y_2;
  mcu_macro[1][2].ymin3 = y_2;
  mcu_macro[0][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[1][2].iter1 = TERAPIX_PE_NUMBER;
  mcu_macro[0][2].iter2 = imagelet_size;
  mcu_macro[1][2].iter2 = imagelet_size;
  mcu_macro[0][2].iter3 = 0;
  mcu_macro[1][2].iter3 = 0;
  mcu_macro[0][2].iter4 = 0;
  mcu_macro[1][2].iter4 = 0;
  mcu_macro[0][2].addrStart = TERAPIX_UCODE_THRESHOLD;
  mcu_macro[1][2].addrStart = TERAPIX_UCODE_THRESHOLD;


  // inputs:
  // - imagelet 1 is i0 for imWork1
  tile_in[0][0].x = imagelet_io_1_0;
  tile_in[0][0].y = 0;
  tile_in[1][0].x = imagelet_io_1_1;
  tile_in[1][0].y = 0;
  // - imagelet 2 is i1 for imin
  tile_in[0][1].x = imagelet_io_2_0;
  tile_in[0][1].y = 0;
  tile_in[1][1].x = imagelet_io_2_1;
  tile_in[1][1].y = 0;

  // outputs:
  // - imagelet 1 is o0 for imWork1
  tile_out[0][0].x = imagelet_io_1_0;
  tile_out[0][0].y = 0;
  tile_out[1][0].x = imagelet_io_1_1;
  tile_out[1][0].y = 0;

  // imagelet erosion for the computation
  mcu_instr.borderTop    = 0;
  mcu_instr.borderBottom = 0;
  mcu_instr.borderLeft   = 0;
  mcu_instr.borderRight  = 0;
  mcu_instr.imagelet_height = imagelet_size;
  mcu_instr.imagelet_width  = TERAPIX_PE_NUMBER;

  // outputs
  mcu_instr.nbout = 1;
  mcu_instr.out0 = tile_out[0];
  mcu_instr.out1 = tile_out[1];

  // inputs
  mcu_instr.nbin = 2;
  mcu_instr.in0 = tile_in[0];
  mcu_instr.in1 = tile_in[1];

  // actual instructions
  mcu_instr.nbinstr = 3;
  mcu_instr.instr0   = mcu_macro[0];
  mcu_instr.instr1   = mcu_macro[1];

  // call terapix runtime
  param.size = -1; // not used
  param.raw = (void*) &mcu_instr;
  ret |= freia_cg_template_process(&param, o0, i0, i1);

  // extract measures

  return ret;
}


! updated function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imWork1;                                        /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1;                                                  /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_3 = 0, *w1_1_23 = 0, *w1_1_33 = 0, *w1_1_43 = 0, *w1_1_53 = 0, *w1_1_63 = 0, *w1_1_73 = 0, *w1_0_7 = 0, *w1_0_17 = 0, *w1_0_27 = 0, *w1_0_37 = 0, *w1_0_47 = 0, *w1_0_57 = 0, *w1_0_67 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   w1_0_67 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_57 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_47 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_37 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_27 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_17 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_7 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_73 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_63 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_53 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_43 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_33 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_23 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_3 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   freia_52_terapix_helper_0_0_0(w1_0, w1_0_67, w1_0_57, w1_0_47, w1_0_37, w1_0_27, w1_0_17, w1_0_7, imin, freia_morpho_kernel_8c, freia_morpho_k8_0, freia_morpho_k8_1, freia_morpho_k4_0, freia_morpho_k4_1, freia_morpho_k6_0, freia_morpho_k6_1, freia_morpho_k6_2, freia_morpho_k8_2);              /*0247*/
   
   
   
   freia_52_terapix_helper_0_0_1(w1_1_53, w1_0_57, freia_morpho_k8_2, neighborTransposed_10);         /*0341*/
   
   
   freia_52_terapix_helper_0_0_2(w1_1_3, w1_0_7, freia_morpho_k6_2, neighborTransposed_15);           /*0521*/
   
   
   
   
   freia_52_terapix_helper_0_0_3(w1_1, w1_0_17, freia_morpho_k6_1, neighborTransposed_14);            /*0804*/
   freia_52_terapix_helper_0_0_4(w1_1_23, w1_0_27, freia_morpho_k6_0, neighborTransposed_13);         /*0449*/
   
   
   
   
   freia_52_terapix_helper_0_0_5(w1_1_33, w1_0_37, freia_morpho_k4_1, neighborTransposed_12);         /*0732*/
   freia_52_terapix_helper_0_0_6(w1_1_43, w1_0_47, freia_morpho_k4_0, neighborTransposed_11);         /*0377*/
   
   
   
   
   freia_52_terapix_helper_0_0_7(w1_1_63, w1_0_67, freia_morpho_k8_1, neighborTransposed_9);          /*0624*/
   freia_52_terapix_helper_0_0_8(w1_1_73, w1_0, freia_morpho_k8_0, neighborTransposed_8);             /*0269*/
   
   
   
   
   
   
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   freia_52_terapix_helper_0_0_9(imWork1, w1_1, w1_1_23, w1_1_3, w1_1_33, w1_1_43, w1_1_53, w1_1_63, w1_1_73, neighborTransposed_8, neighborTransposed_9, neighborTransposed_11, neighborTransposed_12, neighborTransposed_13, neighborTransposed_14, neighborTransposed_15, neighborTransposed_10, 255, &volcurrent);  /*0590*/

   ret_19 = 0;                                                          /*0864*/
   
   
   err_3 |= _return28;                                                  /*0635*/
   
   
   err_3 |= _return29;                                                  /*0671*/
   
   
   err_3 |= _return25;                                                  /*0707*/
   
   
   err_3 |= _return26;                                                  /*0743*/
   
   
   err_3 |= _return22;                                                  /*0779*/
   
   
   err_3 |= _return23;                                                  /*0815*/
   
   
   err_3 |= _return24;                                                  /*0851*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   _return4 = err_2;                                                    /*0862*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w1_0_7);
   freia_common_destruct_data(w1_0_17);
   freia_common_destruct_data(w1_0_27);
   freia_common_destruct_data(w1_0_37);
   freia_common_destruct_data(w1_0_47);
   freia_common_destruct_data(w1_0_57);
   freia_common_destruct_data(w1_0_67);
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w1_1_3);
   freia_common_destruct_data(w1_1_23);
   freia_common_destruct_data(w1_1_33);
   freia_common_destruct_data(w1_1_43);
   freia_common_destruct_data(w1_1_53);
   freia_common_destruct_data(w1_1_63);
   freia_common_destruct_data(w1_1_73);
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      freia_52_terapix_helper_1_0_0(imWork1, imWork1, imin, freia_morpho_kernel_8c, &volcurrent);     /*0868*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_52_terapix_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);               /*0886*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! cleaned up function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imWork1;                                        /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1;                                                  /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_3 = 0, *w1_1_23 = 0, *w1_1_33 = 0, *w1_1_43 = 0, *w1_1_53 = 0, *w1_1_63 = 0, *w1_1_73 = 0, *w1_0_7 = 0, *w1_0_17 = 0, *w1_0_27 = 0, *w1_0_37 = 0, *w1_0_47 = 0, *w1_0_57 = 0, *w1_0_67 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   w1_0_67 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_57 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_47 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_37 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_27 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_17 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_7 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_73 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_63 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_53 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_43 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_33 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_23 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_3 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[8] = freia_morpho_k8_0[0];                      /*0255*/
   neighborTransposed_0[7] = freia_morpho_k8_0[1];                      /*0256*/
   neighborTransposed_0[6] = freia_morpho_k8_0[2];                      /*0257*/
   neighborTransposed_0[5] = freia_morpho_k8_0[3];                      /*0258*/
   neighborTransposed_0[4] = freia_morpho_k8_0[4];                      /*0259*/
   neighborTransposed_0[3] = freia_morpho_k8_0[5];                      /*0260*/
   neighborTransposed_0[2] = freia_morpho_k8_0[6];                      /*0261*/
   neighborTransposed_0[1] = freia_morpho_k8_0[7];                      /*0262*/
   neighborTransposed_0[0] = freia_morpho_k8_0[8];                      /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[8] = freia_morpho_k8_1[0];                      /*0291*/
   neighborTransposed_1[7] = freia_morpho_k8_1[1];                      /*0292*/
   neighborTransposed_1[6] = freia_morpho_k8_1[2];                      /*0293*/
   neighborTransposed_1[5] = freia_morpho_k8_1[3];                      /*0294*/
   neighborTransposed_1[4] = freia_morpho_k8_1[4];                      /*0295*/
   neighborTransposed_1[3] = freia_morpho_k8_1[5];                      /*0296*/
   neighborTransposed_1[2] = freia_morpho_k8_1[6];                      /*0297*/
   neighborTransposed_1[1] = freia_morpho_k8_1[7];                      /*0298*/
   neighborTransposed_1[0] = freia_morpho_k8_1[8];                      /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[8] = freia_morpho_k8_2[0];                      /*0327*/
   neighborTransposed_2[7] = freia_morpho_k8_2[1];                      /*0328*/
   neighborTransposed_2[6] = freia_morpho_k8_2[2];                      /*0329*/
   neighborTransposed_2[5] = freia_morpho_k8_2[3];                      /*0330*/
   neighborTransposed_2[4] = freia_morpho_k8_2[4];                      /*0331*/
   neighborTransposed_2[3] = freia_morpho_k8_2[5];                      /*0332*/
   neighborTransposed_2[2] = freia_morpho_k8_2[6];                      /*0333*/
   neighborTransposed_2[1] = freia_morpho_k8_2[7];                      /*0334*/
   neighborTransposed_2[0] = freia_morpho_k8_2[8];                      /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[8] = freia_morpho_k4_0[0];                      /*0363*/
   neighborTransposed_3[7] = freia_morpho_k4_0[1];                      /*0364*/
   neighborTransposed_3[6] = freia_morpho_k4_0[2];                      /*0365*/
   neighborTransposed_3[5] = freia_morpho_k4_0[3];                      /*0366*/
   neighborTransposed_3[4] = freia_morpho_k4_0[4];                      /*0367*/
   neighborTransposed_3[3] = freia_morpho_k4_0[5];                      /*0368*/
   neighborTransposed_3[2] = freia_morpho_k4_0[6];                      /*0369*/
   neighborTransposed_3[1] = freia_morpho_k4_0[7];                      /*0370*/
   neighborTransposed_3[0] = freia_morpho_k4_0[8];                      /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[8] = freia_morpho_k4_1[0];                      /*0399*/
   neighborTransposed_4[7] = freia_morpho_k4_1[1];                      /*0400*/
   neighborTransposed_4[6] = freia_morpho_k4_1[2];                      /*0401*/
   neighborTransposed_4[5] = freia_morpho_k4_1[3];                      /*0402*/
   neighborTransposed_4[4] = freia_morpho_k4_1[4];                      /*0403*/
   neighborTransposed_4[3] = freia_morpho_k4_1[5];                      /*0404*/
   neighborTransposed_4[2] = freia_morpho_k4_1[6];                      /*0405*/
   neighborTransposed_4[1] = freia_morpho_k4_1[7];                      /*0406*/
   neighborTransposed_4[0] = freia_morpho_k4_1[8];                      /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[8] = freia_morpho_k6_0[0];                      /*0435*/
   neighborTransposed_5[7] = freia_morpho_k6_0[1];                      /*0436*/
   neighborTransposed_5[6] = freia_morpho_k6_0[2];                      /*0437*/
   neighborTransposed_5[5] = freia_morpho_k6_0[3];                      /*0438*/
   neighborTransposed_5[4] = freia_morpho_k6_0[4];                      /*0439*/
   neighborTransposed_5[3] = freia_morpho_k6_0[5];                      /*0440*/
   neighborTransposed_5[2] = freia_morpho_k6_0[6];                      /*0441*/
   neighborTransposed_5[1] = freia_morpho_k6_0[7];                      /*0442*/
   neighborTransposed_5[0] = freia_morpho_k6_0[8];                      /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[8] = freia_morpho_k6_1[0];                      /*0471*/
   neighborTransposed_6[7] = freia_morpho_k6_1[1];                      /*0472*/
   neighborTransposed_6[6] = freia_morpho_k6_1[2];                      /*0473*/
   neighborTransposed_6[5] = freia_morpho_k6_1[3];                      /*0474*/
   neighborTransposed_6[4] = freia_morpho_k6_1[4];                      /*0475*/
   neighborTransposed_6[3] = freia_morpho_k6_1[5];                      /*0476*/
   neighborTransposed_6[2] = freia_morpho_k6_1[6];                      /*0477*/
   neighborTransposed_6[1] = freia_morpho_k6_1[7];                      /*0478*/
   neighborTransposed_6[0] = freia_morpho_k6_1[8];                      /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[8] = freia_morpho_k6_2[0];                      /*0507*/
   neighborTransposed_7[7] = freia_morpho_k6_2[1];                      /*0508*/
   neighborTransposed_7[6] = freia_morpho_k6_2[2];                      /*0509*/
   neighborTransposed_7[5] = freia_morpho_k6_2[3];                      /*0510*/
   neighborTransposed_7[4] = freia_morpho_k6_2[4];                      /*0511*/
   neighborTransposed_7[3] = freia_morpho_k6_2[5];                      /*0512*/
   neighborTransposed_7[2] = freia_morpho_k6_2[6];                      /*0513*/
   neighborTransposed_7[1] = freia_morpho_k6_2[7];                      /*0514*/
   neighborTransposed_7[0] = freia_morpho_k6_2[8];                      /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[8] = freia_morpho_k8_0[0];                      /*0566*/
   neighborTransposed_8[7] = freia_morpho_k8_0[1];                      /*0567*/
   neighborTransposed_8[6] = freia_morpho_k8_0[2];                      /*0568*/
   neighborTransposed_8[5] = freia_morpho_k8_0[3];                      /*0569*/
   neighborTransposed_8[4] = freia_morpho_k8_0[4];                      /*0570*/
   neighborTransposed_8[3] = freia_morpho_k8_0[5];                      /*0571*/
   neighborTransposed_8[2] = freia_morpho_k8_0[6];                      /*0572*/
   neighborTransposed_8[1] = freia_morpho_k8_0[7];                      /*0573*/
   neighborTransposed_8[0] = freia_morpho_k8_0[8];                      /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[8] = freia_morpho_k8_1[0];                      /*0602*/
   neighborTransposed_9[7] = freia_morpho_k8_1[1];                      /*0603*/
   neighborTransposed_9[6] = freia_morpho_k8_1[2];                      /*0604*/
   neighborTransposed_9[5] = freia_morpho_k8_1[3];                      /*0605*/
   neighborTransposed_9[4] = freia_morpho_k8_1[4];                      /*0606*/
   neighborTransposed_9[3] = freia_morpho_k8_1[5];                      /*0607*/
   neighborTransposed_9[2] = freia_morpho_k8_1[6];                      /*0608*/
   neighborTransposed_9[1] = freia_morpho_k8_1[7];                      /*0609*/
   neighborTransposed_9[0] = freia_morpho_k8_1[8];                      /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[8] = freia_morpho_k8_2[0];                     /*0638*/
   neighborTransposed_10[7] = freia_morpho_k8_2[1];                     /*0639*/
   neighborTransposed_10[6] = freia_morpho_k8_2[2];                     /*0640*/
   neighborTransposed_10[5] = freia_morpho_k8_2[3];                     /*0641*/
   neighborTransposed_10[4] = freia_morpho_k8_2[4];                     /*0642*/
   neighborTransposed_10[3] = freia_morpho_k8_2[5];                     /*0643*/
   neighborTransposed_10[2] = freia_morpho_k8_2[6];                     /*0644*/
   neighborTransposed_10[1] = freia_morpho_k8_2[7];                     /*0645*/
   neighborTransposed_10[0] = freia_morpho_k8_2[8];                     /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[8] = freia_morpho_k4_0[0];                     /*0674*/
   neighborTransposed_11[7] = freia_morpho_k4_0[1];                     /*0675*/
   neighborTransposed_11[6] = freia_morpho_k4_0[2];                     /*0676*/
   neighborTransposed_11[5] = freia_morpho_k4_0[3];                     /*0677*/
   neighborTransposed_11[4] = freia_morpho_k4_0[4];                     /*0678*/
   neighborTransposed_11[3] = freia_morpho_k4_0[5];                     /*0679*/
   neighborTransposed_11[2] = freia_morpho_k4_0[6];                     /*0680*/
   neighborTransposed_11[1] = freia_morpho_k4_0[7];                     /*0681*/
   neighborTransposed_11[0] = freia_morpho_k4_0[8];                     /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[8] = freia_morpho_k4_1[0];                     /*0710*/
   neighborTransposed_12[7] = freia_morpho_k4_1[1];                     /*0711*/
   neighborTransposed_12[6] = freia_morpho_k4_1[2];                     /*0712*/
   neighborTransposed_12[5] = freia_morpho_k4_1[3];                     /*0713*/
   neighborTransposed_12[4] = freia_morpho_k4_1[4];                     /*0714*/
   neighborTransposed_12[3] = freia_morpho_k4_1[5];                     /*0715*/
   neighborTransposed_12[2] = freia_morpho_k4_1[6];                     /*0716*/
   neighborTransposed_12[1] = freia_morpho_k4_1[7];                     /*0717*/
   neighborTransposed_12[0] = freia_morpho_k4_1[8];                     /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[8] = freia_morpho_k6_0[0];                     /*0746*/
   neighborTransposed_13[7] = freia_morpho_k6_0[1];                     /*0747*/
   neighborTransposed_13[6] = freia_morpho_k6_0[2];                     /*0748*/
   neighborTransposed_13[5] = freia_morpho_k6_0[3];                     /*0749*/
   neighborTransposed_13[4] = freia_morpho_k6_0[4];                     /*0750*/
   neighborTransposed_13[3] = freia_morpho_k6_0[5];                     /*0751*/
   neighborTransposed_13[2] = freia_morpho_k6_0[6];                     /*0752*/
   neighborTransposed_13[1] = freia_morpho_k6_0[7];                     /*0753*/
   neighborTransposed_13[0] = freia_morpho_k6_0[8];                     /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[8] = freia_morpho_k6_1[0];                     /*0782*/
   neighborTransposed_14[7] = freia_morpho_k6_1[1];                     /*0783*/
   neighborTransposed_14[6] = freia_morpho_k6_1[2];                     /*0784*/
   neighborTransposed_14[5] = freia_morpho_k6_1[3];                     /*0785*/
   neighborTransposed_14[4] = freia_morpho_k6_1[4];                     /*0786*/
   neighborTransposed_14[3] = freia_morpho_k6_1[5];                     /*0787*/
   neighborTransposed_14[2] = freia_morpho_k6_1[6];                     /*0788*/
   neighborTransposed_14[1] = freia_morpho_k6_1[7];                     /*0789*/
   neighborTransposed_14[0] = freia_morpho_k6_1[8];                     /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[8] = freia_morpho_k6_2[0];                     /*0818*/
   neighborTransposed_15[7] = freia_morpho_k6_2[1];                     /*0819*/
   neighborTransposed_15[6] = freia_morpho_k6_2[2];                     /*0820*/
   neighborTransposed_15[5] = freia_morpho_k6_2[3];                     /*0821*/
   neighborTransposed_15[4] = freia_morpho_k6_2[4];                     /*0822*/
   neighborTransposed_15[3] = freia_morpho_k6_2[5];                     /*0823*/
   neighborTransposed_15[2] = freia_morpho_k6_2[6];                     /*0824*/
   neighborTransposed_15[1] = freia_morpho_k6_2[7];                     /*0825*/
   neighborTransposed_15[0] = freia_morpho_k6_2[8];                     /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   freia_52_terapix_helper_0_0_0(w1_0, w1_0_67, w1_0_57, w1_0_47, w1_0_37, w1_0_27, w1_0_17, w1_0_7, imin, freia_morpho_kernel_8c, freia_morpho_k8_0, freia_morpho_k8_1, freia_morpho_k4_0, freia_morpho_k4_1, freia_morpho_k6_0, freia_morpho_k6_1, freia_morpho_k6_2, freia_morpho_k8_2);              /*0247*/
   
   
   
   freia_52_terapix_helper_0_0_1(w1_1_53, w1_0_57, freia_morpho_k8_2, neighborTransposed_10);         /*0341*/
   
   
   freia_52_terapix_helper_0_0_2(w1_1_3, w1_0_7, freia_morpho_k6_2, neighborTransposed_15);           /*0521*/
   
   
   
   
   freia_52_terapix_helper_0_0_3(w1_1, w1_0_17, freia_morpho_k6_1, neighborTransposed_14);            /*0804*/
   freia_52_terapix_helper_0_0_4(w1_1_23, w1_0_27, freia_morpho_k6_0, neighborTransposed_13);         /*0449*/
   
   
   
   
   freia_52_terapix_helper_0_0_5(w1_1_33, w1_0_37, freia_morpho_k4_1, neighborTransposed_12);         /*0732*/
   freia_52_terapix_helper_0_0_6(w1_1_43, w1_0_47, freia_morpho_k4_0, neighborTransposed_11);         /*0377*/
   
   
   
   
   freia_52_terapix_helper_0_0_7(w1_1_63, w1_0_67, freia_morpho_k8_1, neighborTransposed_9);          /*0624*/
   freia_52_terapix_helper_0_0_8(w1_1_73, w1_0, freia_morpho_k8_0, neighborTransposed_8);             /*0269*/
   
   
   
   
   
   
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   freia_52_terapix_helper_0_0_9(imWork1, w1_1, w1_1_23, w1_1_3, w1_1_33, w1_1_43, w1_1_53, w1_1_63, w1_1_73, neighborTransposed_8, neighborTransposed_9, neighborTransposed_11, neighborTransposed_12, neighborTransposed_13, neighborTransposed_14, neighborTransposed_15, neighborTransposed_10, 255, &volcurrent);  /*0590*/

   ret_19 = 0;                                                          /*0864*/
   
   
   err_3 |= _return28;                                                  /*0635*/
   
   
   err_3 |= _return29;                                                  /*0671*/
   
   
   err_3 |= _return25;                                                  /*0707*/
   
   
   err_3 |= _return26;                                                  /*0743*/
   
   
   err_3 |= _return22;                                                  /*0779*/
   
   
   err_3 |= _return23;                                                  /*0815*/
   
   
   err_3 |= _return24;                                                  /*0851*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   _return4 = err_2;                                                    /*0862*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w1_0_7);
   freia_common_destruct_data(w1_0_17);
   freia_common_destruct_data(w1_0_27);
   freia_common_destruct_data(w1_0_37);
   freia_common_destruct_data(w1_0_47);
   freia_common_destruct_data(w1_0_57);
   freia_common_destruct_data(w1_0_67);
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w1_1_3);
   freia_common_destruct_data(w1_1_23);
   freia_common_destruct_data(w1_1_33);
   freia_common_destruct_data(w1_1_43);
   freia_common_destruct_data(w1_1_53);
   freia_common_destruct_data(w1_1_63);
   freia_common_destruct_data(w1_1_73);
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      freia_52_terapix_helper_1_0_0(imWork1, imWork1, imin, freia_morpho_kernel_8c, &volcurrent);     /*0868*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_52_terapix_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);               /*0886*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}
#
# OPENCL
#

! initial function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophat, *imout_tophatLin, *imout_tophatLinRecon, *imWork1, *imWork2;    /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   int i_0, i_1;                                                        /*0023*/
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   int i_2, i_3;                                                        /*0027*/
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0, *w2_0;                                           /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   int i_4;                                                             /*0037*/
   //PIPS generated variable
   uint32_t i_5, i_6;                                                   /*0039*/
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   int i_7;                                                             /*0045*/
   //PIPS generated variable
   uint32_t i_8, i_9;                                                   /*0047*/
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   int i_10;                                                            /*0053*/
   //PIPS generated variable
   uint32_t i_11, i_12;                                                 /*0055*/
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   int i_13;                                                            /*0061*/
   //PIPS generated variable
   uint32_t i_14, i_15;                                                 /*0063*/
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   int i_16;                                                            /*0069*/
   //PIPS generated variable
   uint32_t i_17, i_18;                                                 /*0071*/
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   int i_19;                                                            /*0077*/
   //PIPS generated variable
   uint32_t i_20, i_21;                                                 /*0079*/
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   int i_22;                                                            /*0085*/
   //PIPS generated variable
   uint32_t i_23, i_24;                                                 /*0087*/
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   int i_25;                                                            /*0093*/
   //PIPS generated variable
   uint32_t i_26, i_27;                                                 /*0095*/
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   int i_28;                                                            /*0105*/
   //PIPS generated variable
   uint32_t i_29, i_30;                                                 /*0107*/
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   int i_31;                                                            /*0113*/
   //PIPS generated variable
   uint32_t i_32, i_33;                                                 /*0115*/
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   int i_34;                                                            /*0121*/
   //PIPS generated variable
   uint32_t i_35, i_36;                                                 /*0123*/
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   int i_37;                                                            /*0129*/
   //PIPS generated variable
   uint32_t i_38, i_39;                                                 /*0131*/
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   int i_40;                                                            /*0137*/
   //PIPS generated variable
   uint32_t i_41, i_42;                                                 /*0139*/
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   int i_43;                                                            /*0145*/
   //PIPS generated variable
   uint32_t i_44, i_45;                                                 /*0147*/
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   int i_46;                                                            /*0153*/
   //PIPS generated variable
   uint32_t i_47, i_48;                                                 /*0155*/
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   int i_49;                                                            /*0161*/
   //PIPS generated variable
   uint32_t i_50, i_51;                                                 /*0163*/
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophat = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);         /*0179*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imout_tophatLin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);      /*0181*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   imWork2 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0183*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   // 1st tophat
   
   
   freia_aipo_erode_8c(imWork1, imin, freia_morpho_kernel_8c);          /*0191*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0192*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0193*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0194*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0195*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0202*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0203*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0204*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0205*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0206*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   // freia_common_tx_image(imWork1, &fdout);
   
   
   freia_aipo_erode_8c(imout_tophat, imin, freia_morpho_kernel_8c);     /*0216*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0217*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0218*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0219*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0220*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0227*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0228*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0229*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0230*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0231*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/
   ret_1 |= freia_aipo_sub(imout_tophat, imin, imout_tophat);           /*0239*/
   
   
   _return2 = ret_1;                                                    /*0242*/
   freia_aipo_mul_const(imout_tophat, imout_tophat, 2);                 /*0243*/
   // for display
   
   // 2nd tophat
   err_0 |= freia_aipo_not(imWork1, imin);                              /*0247*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   w2_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0251*/

   freia_aipo_set_constant(w2_0, 255);                                  /*0253*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0270*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0277*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0278*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0279*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0280*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0281*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0289*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0302*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0306*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0313*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0314*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0315*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0316*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0317*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/
   err_1 |= _return20;                                                  /*0324*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0325*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0338*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0342*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0349*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0350*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0351*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0352*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0353*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/
   err_1 |= _return21;                                                  /*0360*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0361*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0374*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0378*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0385*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0386*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0387*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0388*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0389*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/
   err_1 |= _return17;                                                  /*0396*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0397*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0410*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0414*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0421*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0422*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0423*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0424*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0425*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/
   err_1 |= _return18;                                                  /*0432*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0433*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0446*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0450*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0457*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0458*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0459*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0460*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0461*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/
   err_1 |= _return14;                                                  /*0468*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0469*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0482*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0486*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0493*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0494*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0495*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0496*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0497*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/
   err_1 |= _return15;                                                  /*0504*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0505*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0518*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0522*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0529*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0530*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0531*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0532*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0533*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/
   err_1 |= _return16;                                                  /*0540*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0541*/

   err_1 |= freia_aipo_copy(imWork1, w2_0);                             /*0543*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w2_0);                                    /*0545*/
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   err_0 |= freia_aipo_not(imWork1, imWork1);                           /*0550*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   freia_aipo_sub(imout_tophatLin, imin, imWork1);                      /*0553*/
   freia_aipo_mul_const(imout_tophatLin, imout_tophatLin, 2);           /*0554*/
   // for display
   
   // 3nd tophat
   err_2 |= freia_aipo_not(imWork1, imin);                              /*0558*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/

   freia_aipo_set_constant(w2_1, 255);                                  /*0564*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0577*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0578*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0579*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0580*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0581*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0600*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0613*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0614*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0615*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0616*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0617*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/
   err_3 |= _return28;                                                  /*0635*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0636*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0649*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0650*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0651*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0652*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0653*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/
   err_3 |= _return29;                                                  /*0671*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0672*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0685*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0686*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0687*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0688*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0689*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/
   err_3 |= _return25;                                                  /*0707*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0708*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0721*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0722*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0723*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0724*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0725*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/
   err_3 |= _return26;                                                  /*0743*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0744*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0757*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0758*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0759*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0760*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0761*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/
   err_3 |= _return22;                                                  /*0779*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0780*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0793*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0794*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0795*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0796*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0797*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/
   err_3 |= _return23;                                                  /*0815*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0816*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0829*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0830*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0831*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0832*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0833*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   err_3 |= _return24;                                                  /*0851*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0852*/

   err_3 |= freia_aipo_copy(imWork1, w2_1);                             /*0854*/
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   err_2 |= freia_aipo_not(imWork1, imWork1);                           /*0861*/
   _return4 = err_2;                                                    /*0862*/

   ret_19 = freia_aipo_global_vol(imWork1, &volcurrent);                /*0864*/
   do {                                                                 /*0882*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      ret_20 |= freia_aipo_inf(imWork1, imWork1, imin);                 /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_aipo_global_vol(imWork1, &volcurrent);            /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   freia_aipo_sup(imWork2, imWork1, imin);                              /*0892*/
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophat);                            /*0906*/
   freia_common_destruct_data(imout_tophatLin);                         /*0907*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/
   freia_common_destruct_data(imWork2);                                 /*0910*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! graphs

// graph for dag "dag_0" of module "freia_52" in dot format
// DAG "dag_0": #i=1 #o=1 #c=207 #s=21 #I=2 #B=0 #A=0
digraph "dag_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "854 =" [shape=circle];
  "854 =" -> "861 !" [label="imWork1"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "854 =" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1"];
  "833 D8" [shape=box];
  "833 D8" -> "840 E8" [label="w1_1"];
  "832 D8" [shape=box];
  "832 D8" -> "833 D8" [label="w1_1"];
  "831 D8" [shape=box];
  "831 D8" -> "832 D8" [label="w1_1"];
  "830 D8" [shape=box];
  "830 D8" -> "831 D8" [label="w1_1"];
  "829 D8" [shape=box];
  "829 D8" -> "830 D8" [label="w1_1"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1"];
  "797 D8" [shape=box];
  "797 D8" -> "804 E8" [label="w1_1"];
  "796 D8" [shape=box];
  "796 D8" -> "797 D8" [label="w1_1"];
  "795 D8" [shape=box];
  "795 D8" -> "796 D8" [label="w1_1"];
  "794 D8" [shape=box];
  "794 D8" -> "795 D8" [label="w1_1"];
  "793 D8" [shape=box];
  "793 D8" -> "794 D8" [label="w1_1"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1"];
  "761 D8" [shape=box];
  "761 D8" -> "768 E8" [label="w1_1"];
  "760 D8" [shape=box];
  "760 D8" -> "761 D8" [label="w1_1"];
  "759 D8" [shape=box];
  "759 D8" -> "760 D8" [label="w1_1"];
  "758 D8" [shape=box];
  "758 D8" -> "759 D8" [label="w1_1"];
  "757 D8" [shape=box];
  "757 D8" -> "758 D8" [label="w1_1"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1"];
  "725 D8" [shape=box];
  "725 D8" -> "732 E8" [label="w1_1"];
  "724 D8" [shape=box];
  "724 D8" -> "725 D8" [label="w1_1"];
  "723 D8" [shape=box];
  "723 D8" -> "724 D8" [label="w1_1"];
  "722 D8" [shape=box];
  "722 D8" -> "723 D8" [label="w1_1"];
  "721 D8" [shape=box];
  "721 D8" -> "722 D8" [label="w1_1"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1"];
  "689 D8" [shape=box];
  "689 D8" -> "696 E8" [label="w1_1"];
  "688 D8" [shape=box];
  "688 D8" -> "689 D8" [label="w1_1"];
  "687 D8" [shape=box];
  "687 D8" -> "688 D8" [label="w1_1"];
  "686 D8" [shape=box];
  "686 D8" -> "687 D8" [label="w1_1"];
  "685 D8" [shape=box];
  "685 D8" -> "686 D8" [label="w1_1"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1"];
  "653 D8" [shape=box];
  "653 D8" -> "660 E8" [label="w1_1"];
  "652 D8" [shape=box];
  "652 D8" -> "653 D8" [label="w1_1"];
  "651 D8" [shape=box];
  "651 D8" -> "652 D8" [label="w1_1"];
  "650 D8" [shape=box];
  "650 D8" -> "651 D8" [label="w1_1"];
  "649 D8" [shape=box];
  "649 D8" -> "650 D8" [label="w1_1"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1"];
  "617 D8" [shape=box];
  "617 D8" -> "624 E8" [label="w1_1"];
  "616 D8" [shape=box];
  "616 D8" -> "617 D8" [label="w1_1"];
  "615 D8" [shape=box];
  "615 D8" -> "616 D8" [label="w1_1"];
  "614 D8" [shape=box];
  "614 D8" -> "615 D8" [label="w1_1"];
  "613 D8" [shape=box];
  "613 D8" -> "614 D8" [label="w1_1"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "636 <" [label="w2_1"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <" [label="w1_1"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1"];
  "581 D8" [shape=box];
  "581 D8" -> "588 E8" [label="w1_1"];
  "580 D8" [shape=box];
  "580 D8" -> "581 D8" [label="w1_1"];
  "579 D8" [shape=box];
  "579 D8" -> "580 D8" [label="w1_1"];
  "578 D8" [shape=box];
  "578 D8" -> "579 D8" [label="w1_1"];
  "577 D8" [shape=box];
  "577 D8" -> "578 D8" [label="w1_1"];
  "564 C" [shape=trapezium,orientation=270];
  "564 C" -> "600 <" [label="w2_1"];
  "558 !" [shape=trapezium,orientation=270];
  "558 !" -> "829 D8" [label="imWork1"];
  "558 !" -> "793 D8" [label="imWork1"];
  "558 !" -> "757 D8" [label="imWork1"];
  "558 !" -> "721 D8" [label="imWork1"];
  "558 !" -> "685 D8" [label="imWork1"];
  "558 !" -> "649 D8" [label="imWork1"];
  "558 !" -> "613 D8" [label="imWork1"];
  "558 !" -> "577 D8" [label="imWork1"];
  "554 *_" [shape=trapezium,orientation=270];
  "553 -" [shape=trapezium,orientation=270];
  "553 -" -> "554 *_" [label="imout_tophatLin"];
  "550 !" [shape=trapezium,orientation=270];
  "550 !" -> "553 -" [label="imWork1"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "543 =" [shape=circle];
  "543 =" -> "550 !" [label="imWork1"];
  "541 <" [shape=trapezium,orientation=270];
  "541 <" -> "543 =" [label="w2_0"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "533 E8" [shape=box];
  "533 E8" -> "541 <" [label="w1_0"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_0"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_0"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_0"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_0"];
  "522 D8" [shape=box];
  "522 D8" -> "529 E8" [label="w1_0"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0"];
  "518 D8" [shape=box];
  "518 D8" -> "519 D8" [label="w1_0"];
  "505 <" [shape=trapezium,orientation=270];
  "505 <" -> "541 <" [label="w2_0"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "497 E8" [shape=box];
  "497 E8" -> "505 <" [label="w1_0"];
  "496 E8" [shape=box];
  "496 E8" -> "497 E8" [label="w1_0"];
  "495 E8" [shape=box];
  "495 E8" -> "496 E8" [label="w1_0"];
  "494 E8" [shape=box];
  "494 E8" -> "495 E8" [label="w1_0"];
  "493 E8" [shape=box];
  "493 E8" -> "494 E8" [label="w1_0"];
  "486 D8" [shape=box];
  "486 D8" -> "493 E8" [label="w1_0"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0"];
  "482 D8" [shape=box];
  "482 D8" -> "483 D8" [label="w1_0"];
  "469 <" [shape=trapezium,orientation=270];
  "469 <" -> "505 <" [label="w2_0"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "461 E8" [shape=box];
  "461 E8" -> "469 <" [label="w1_0"];
  "460 E8" [shape=box];
  "460 E8" -> "461 E8" [label="w1_0"];
  "459 E8" [shape=box];
  "459 E8" -> "460 E8" [label="w1_0"];
  "458 E8" [shape=box];
  "458 E8" -> "459 E8" [label="w1_0"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_0"];
  "450 D8" [shape=box];
  "450 D8" -> "457 E8" [label="w1_0"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0"];
  "446 D8" [shape=box];
  "446 D8" -> "447 D8" [label="w1_0"];
  "433 <" [shape=trapezium,orientation=270];
  "433 <" -> "469 <" [label="w2_0"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "425 E8" [shape=box];
  "425 E8" -> "433 <" [label="w1_0"];
  "424 E8" [shape=box];
  "424 E8" -> "425 E8" [label="w1_0"];
  "423 E8" [shape=box];
  "423 E8" -> "424 E8" [label="w1_0"];
  "422 E8" [shape=box];
  "422 E8" -> "423 E8" [label="w1_0"];
  "421 E8" [shape=box];
  "421 E8" -> "422 E8" [label="w1_0"];
  "414 D8" [shape=box];
  "414 D8" -> "421 E8" [label="w1_0"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0"];
  "410 D8" [shape=box];
  "410 D8" -> "411 D8" [label="w1_0"];
  "397 <" [shape=trapezium,orientation=270];
  "397 <" -> "433 <" [label="w2_0"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "389 E8" [shape=box];
  "389 E8" -> "397 <" [label="w1_0"];
  "388 E8" [shape=box];
  "388 E8" -> "389 E8" [label="w1_0"];
  "387 E8" [shape=box];
  "387 E8" -> "388 E8" [label="w1_0"];
  "386 E8" [shape=box];
  "386 E8" -> "387 E8" [label="w1_0"];
  "385 E8" [shape=box];
  "385 E8" -> "386 E8" [label="w1_0"];
  "378 D8" [shape=box];
  "378 D8" -> "385 E8" [label="w1_0"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0"];
  "374 D8" [shape=box];
  "374 D8" -> "375 D8" [label="w1_0"];
  "361 <" [shape=trapezium,orientation=270];
  "361 <" -> "397 <" [label="w2_0"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "353 E8" [shape=box];
  "353 E8" -> "361 <" [label="w1_0"];
  "352 E8" [shape=box];
  "352 E8" -> "353 E8" [label="w1_0"];
  "351 E8" [shape=box];
  "351 E8" -> "352 E8" [label="w1_0"];
  "350 E8" [shape=box];
  "350 E8" -> "351 E8" [label="w1_0"];
  "349 E8" [shape=box];
  "349 E8" -> "350 E8" [label="w1_0"];
  "342 D8" [shape=box];
  "342 D8" -> "349 E8" [label="w1_0"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0"];
  "338 D8" [shape=box];
  "338 D8" -> "339 D8" [label="w1_0"];
  "325 <" [shape=trapezium,orientation=270];
  "325 <" -> "361 <" [label="w2_0"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "317 E8" [shape=box];
  "317 E8" -> "325 <" [label="w1_0"];
  "316 E8" [shape=box];
  "316 E8" -> "317 E8" [label="w1_0"];
  "315 E8" [shape=box];
  "315 E8" -> "316 E8" [label="w1_0"];
  "314 E8" [shape=box];
  "314 E8" -> "315 E8" [label="w1_0"];
  "313 E8" [shape=box];
  "313 E8" -> "314 E8" [label="w1_0"];
  "306 D8" [shape=box];
  "306 D8" -> "313 E8" [label="w1_0"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0"];
  "302 D8" [shape=box];
  "302 D8" -> "303 D8" [label="w1_0"];
  "289 <" [shape=trapezium,orientation=270];
  "289 <" -> "325 <" [label="w2_0"];
  "281 E8" [shape=box];
  "281 E8" -> "289 <" [label="w1_0"];
  "280 E8" [shape=box];
  "280 E8" -> "281 E8" [label="w1_0"];
  "279 E8" [shape=box];
  "279 E8" -> "280 E8" [label="w1_0"];
  "278 E8" [shape=box];
  "278 E8" -> "279 E8" [label="w1_0"];
  "277 E8" [shape=box];
  "277 E8" -> "278 E8" [label="w1_0"];
  "270 D8" [shape=box];
  "270 D8" -> "277 E8" [label="w1_0"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0"];
  "266 D8" [shape=box];
  "266 D8" -> "267 D8" [label="w1_0"];
  "253 C" [shape=trapezium,orientation=270];
  "253 C" -> "289 <" [label="w2_0"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "518 D8" [label="imWork1"];
  "247 !" -> "482 D8" [label="imWork1"];
  "247 !" -> "446 D8" [label="imWork1"];
  "247 !" -> "410 D8" [label="imWork1"];
  "247 !" -> "374 D8" [label="imWork1"];
  "247 !" -> "338 D8" [label="imWork1"];
  "247 !" -> "302 D8" [label="imWork1"];
  "247 !" -> "266 D8" [label="imWork1"];
  "243 *_" [shape=trapezium,orientation=270];
  "239 -" [shape=trapezium,orientation=270];
  "239 -" -> "243 *_" [label="imout_tophat"];
  "231 D8" [shape=box];
  "231 D8" -> "239 -" [label="imout_tophat"];
  "230 D8" [shape=box];
  "230 D8" -> "231 D8" [label="imout_tophat"];
  "229 D8" [shape=box];
  "229 D8" -> "230 D8" [label="imout_tophat"];
  "228 D8" [shape=box];
  "228 D8" -> "229 D8" [label="imout_tophat"];
  "227 D8" [shape=box];
  "227 D8" -> "228 D8" [label="imout_tophat"];
  "220 E8" [shape=box];
  "220 E8" -> "227 D8" [label="imout_tophat"];
  "219 E8" [shape=box];
  "219 E8" -> "220 E8" [label="imout_tophat"];
  "218 E8" [shape=box];
  "218 E8" -> "219 E8" [label="imout_tophat"];
  "217 E8" [shape=box];
  "217 E8" -> "218 E8" [label="imout_tophat"];
  "216 E8" [shape=box];
  "216 E8" -> "217 E8" [label="imout_tophat"];
  "206 D8" [shape=box];
  "205 D8" [shape=box];
  "205 D8" -> "206 D8" [label="imWork1"];
  "204 D8" [shape=box];
  "204 D8" -> "205 D8" [label="imWork1"];
  "203 D8" [shape=box];
  "203 D8" -> "204 D8" [label="imWork1"];
  "202 D8" [shape=box];
  "202 D8" -> "203 D8" [label="imWork1"];
  "195 E8" [shape=box];
  "195 E8" -> "202 D8" [label="imWork1"];
  "194 E8" [shape=box];
  "194 E8" -> "195 E8" [label="imWork1"];
  "193 E8" [shape=box];
  "193 E8" -> "194 E8" [label="imWork1"];
  "192 E8" [shape=box];
  "192 E8" -> "193 E8" [label="imWork1"];
  "191 E8" [shape=box];
  "191 E8" -> "192 E8" [label="imWork1"];
  "imin" -> "558 !";
  "imin" -> "553 -";
  "imin" -> "247 !";
  "imin" -> "239 -";
  "imin" -> "216 E8";
  "imin" -> "191 E8";
}
// graph for dag "dag_1" of module "freia_52" in dot format
// DAG "dag_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_2" of module "freia_52" in dot format
// DAG "dag_2": #i=2 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "dag_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "892 >" [shape=trapezium,orientation=270];
  "890 thr" [shape=parallelogram];
  "890 thr" -> "892 >" [label="imWork1"];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon"];
  "imWork1" -> "886 -";
  "imin" -> "892 >";
  "imin" -> "886 -";
}
// graph for dag "dag_cleaned_0" of module "freia_52" in dot format
// DAG "dag_cleaned_0": #i=1 #o=1 #c=84 #s=21 #I=0 #B=0 #A=0
digraph "dag_cleaned_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1_3"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1_13"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1_23"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1_33"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1_43"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1_53"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1_63"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1_73"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0_7"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0_17"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0_27"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0_37"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0_47"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0_57"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0_67"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0_77"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "dag_cleaned_1" of module "freia_52" in dot format
// DAG "dag_cleaned_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_cleaned_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_cleaned_2" of module "freia_52" in dot format
// DAG "dag_cleaned_2": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "dag_cleaned_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}
// graph for dag "freia_52_opencl_helper_0_0" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_0_0": #i=1 #o=1 #c=84 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_0_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1_3"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1_13"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1_23"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1_33"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1_43"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1_53"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1_63"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1_73"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0_7"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0_17"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0_27"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0_37"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0_47"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0_57"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0_67"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0_77"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "freia_52_opencl_helper_0_0_1" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_0_0_1": #i=1 #o=8 #c=8 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_0_0_1" {
  // inputs
  "w1_0_79" [shape=circle];

  // outputs
  "w1_0_78" [shape=circle];
  "w1_0_68" [shape=circle];
  "w1_0_58" [shape=circle];
  "w1_0_48" [shape=circle];
  "w1_0_38" [shape=circle];
  "w1_0_28" [shape=circle];
  "w1_0_18" [shape=circle];
  "w1_0_8" [shape=circle];

  // computation vertices
  "519 D8" [shape=box];
  "519 D8" -> "w1_0_8";
  "483 D8" [shape=box];
  "483 D8" -> "w1_0_18";
  "447 D8" [shape=box];
  "447 D8" -> "w1_0_28";
  "411 D8" [shape=box];
  "411 D8" -> "w1_0_38";
  "375 D8" [shape=box];
  "375 D8" -> "w1_0_48";
  "339 D8" [shape=box];
  "339 D8" -> "w1_0_58";
  "303 D8" [shape=box];
  "303 D8" -> "w1_0_68";
  "267 D8" [shape=box];
  "267 D8" -> "w1_0_78";
  "w1_0_79" -> "519 D8";
  "w1_0_79" -> "483 D8";
  "w1_0_79" -> "447 D8";
  "w1_0_79" -> "411 D8";
  "w1_0_79" -> "375 D8";
  "w1_0_79" -> "339 D8";
  "w1_0_79" -> "303 D8";
  "w1_0_79" -> "267 D8";
}
// graph for dag "freia_52_opencl_helper_0_0_3" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_0_0_3": #i=8 #o=1 #c=10 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_0_0_3" {
  // inputs
  "w1_1" [shape=circle];
  "w1_1_10" [shape=circle];
  "w1_1_20" [shape=circle];
  "w1_1_30" [shape=circle];
  "w1_1_40" [shape=circle];
  "w1_1_50" [shape=circle];
  "w1_1_60" [shape=circle];
  "w1_1_70" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "w1_1" -> "852 <";
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "w1_1_10" -> "816 <";
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "w1_1_20" -> "780 <";
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "w1_1_30" -> "744 <";
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "w1_1_40" -> "708 <";
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "w1_1_50" -> "672 <";
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "w1_1_60" -> "636 <";
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "w1_1_70" -> "600 <_";
}
// graph for dag "freia_52_opencl_helper_1_0" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_1_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_1_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "freia_52_opencl_helper_1_0_0" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_1_0_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_1_0_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "freia_52_opencl_helper_2_0" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_2_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_2_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}
// graph for dag "freia_52_opencl_helper_2_0_0" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_2_0_0": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_2_0_0" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}
// graph for dag "freia_52_opencl_helper_D8_112" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_112": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_112" {
  // inputs
  "w1_0_26" [shape=circle];

  // outputs
  "w1_0_25" [shape=circle];

  // computation vertices
  "450 D8" [shape=box];
  "450 D8" -> "w1_0_25";
  "w1_0_26" -> "450 D8";
}
// graph for dag "freia_52_opencl_helper_D8_146" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_146": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_146" {
  // inputs
  "w1_0_66" [shape=circle];

  // outputs
  "w1_0_65" [shape=circle];

  // computation vertices
  "306 D8" [shape=box];
  "306 D8" -> "w1_0_65";
  "w1_0_66" -> "306 D8";
}
// graph for dag "freia_52_opencl_helper_D8_168" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_168": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_168" {
  // inputs
  "w1_0_16" [shape=circle];

  // outputs
  "w1_0_15" [shape=circle];

  // computation vertices
  "486 D8" [shape=box];
  "486 D8" -> "w1_0_15";
  "w1_0_16" -> "486 D8";
}
// graph for dag "freia_52_opencl_helper_D8_292" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_292": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_292" {
  // inputs
  "w1_0_6" [shape=circle];

  // outputs
  "w1_0_5" [shape=circle];

  // computation vertices
  "522 D8" [shape=box];
  "522 D8" -> "w1_0_5";
  "w1_0_6" -> "522 D8";
}
// graph for dag "freia_52_opencl_helper_D8_511" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_511": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_511" {
  // inputs
  "imWork1_5" [shape=circle];

  // outputs
  "w1_0_79" [shape=circle];

  // computation vertices
  "266 D8" [shape=box];
  "266 D8" -> "w1_0_79";
  "imWork1_5" -> "266 D8";
}
// graph for dag "freia_52_opencl_helper_D8_56" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_56": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_56" {
  // inputs
  "w1_0_76" [shape=circle];

  // outputs
  "w1_0_75" [shape=circle];

  // computation vertices
  "270 D8" [shape=box];
  "270 D8" -> "w1_0_75";
  "w1_0_76" -> "270 D8";
}
// graph for dag "freia_52_opencl_helper_D8_84" of module "freia_52" in dot format
// DAG "freia_52_opencl_helper_D8_84": #i=1 #o=1 #c=1 #s=0 #I=0 #B=0 #A=0
digraph "freia_52_opencl_helper_D8_84" {
  // inputs
  "w1_0_56" [shape=circle];

  // outputs
  "w1_0_55" [shape=circle];

  // computation vertices
  "342 D8" [shape=box];
  "342 D8" -> "w1_0_55";
  "w1_0_56" -> "342 D8";
}

! acceleration function

// FREIA OpenCL includes
#include <CL/opencl.h>
#include "freia.h"
#include "private/freia_opencl_runtime.h"


// dag 0: 207 ops and 2 copies, optimized to 84 ops and 0+0+0 copies

// hold kernels for freia_52_opencl_helper_0_0_1
static cl_kernel freia_52_opencl_helper_0_0_1_kernel[2];

// compile kernels for freia_52_opencl_helper_0_0_1
static freia_status freia_52_opencl_helper_0_0_1_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_0_0_1
  const char * freia_52_opencl_helper_0_0_1_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_0_0_1\n"
    "KERNEL void freia_52_opencl_helper_0_0_1(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * o1,\n"
    "  int ofs_o1,\n"
    "  GLOBAL PIXEL * o2,\n"
    "  int ofs_o2,\n"
    "  GLOBAL PIXEL * o3,\n"
    "  int ofs_o3,\n"
    "  GLOBAL PIXEL * o4,\n"
    "  int ofs_o4,\n"
    "  GLOBAL PIXEL * o5,\n"
    "  int ofs_o5,\n"
    "  GLOBAL PIXEL * o6,\n"
    "  int ofs_o6,\n"
    "  GLOBAL PIXEL * o7,\n"
    "  int ofs_o7,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * p1 = o1 + ofs_o1 + shift;\n"
    "  GLOBAL PIXEL * p2 = o2 + ofs_o2 + shift;\n"
    "  GLOBAL PIXEL * p3 = o3 + ofs_o3 + shift;\n"
    "  GLOBAL PIXEL * p4 = o4 + ofs_o4 + shift;\n"
    "  GLOBAL PIXEL * p5 = o5 + ofs_o5 + shift;\n"
    "  GLOBAL PIXEL * p6 = o6 + ofs_o6 + shift;\n"
    "  GLOBAL PIXEL * p7 = o7 + ofs_o7 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t267 = PIXEL_MIN;\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0E = (is_E)? 0: j0[i+1];\n"
    "    PIXEL t303 = PIXEL_MIN;\n"
    "    PIXEL in0N = (is_N)? 0: j0[i-pitch];\n"
    "    PIXEL in0S = (is_S)? 0: j0[i+pitch];\n"
    "    PIXEL t339 = PIXEL_MIN;\n"
    "    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];\n"
    "    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];\n"
    "    PIXEL t375 = PIXEL_MIN;\n"
    "    PIXEL t411 = PIXEL_MIN;\n"
    "    PIXEL t447 = PIXEL_MIN;\n"
    "    PIXEL t483 = PIXEL_MIN;\n"
    "    PIXEL t519 = PIXEL_MIN;\n"
    "    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];\n"
    "\n"
    "    // pixel computations\n"
    "    t267 = PIXEL_SUP(t267, (is_W)? PIXEL_MIN: in0W);\n"
    "    t267 = PIXEL_SUP(t267, in0);\n"
    "    t267 = PIXEL_SUP(t267, (is_E)? PIXEL_MIN: in0E);\n"
    "    t303 = PIXEL_SUP(t303, (is_N)? PIXEL_MIN: in0N);\n"
    "    t303 = PIXEL_SUP(t303, in0);\n"
    "    t303 = PIXEL_SUP(t303, (is_S)? PIXEL_MIN: in0S);\n"
    "    t339 = PIXEL_SUP(t339, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t339 = PIXEL_SUP(t339, in0);\n"
    "    t339 = PIXEL_SUP(t339, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "    t375 = PIXEL_SUP(t375, (is_W)? PIXEL_MIN: in0W);\n"
    "    t375 = PIXEL_SUP(t375, in0);\n"
    "    t375 = PIXEL_SUP(t375, (is_E)? PIXEL_MIN: in0E);\n"
    "    t411 = PIXEL_SUP(t411, (is_N)? PIXEL_MIN: in0N);\n"
    "    t411 = PIXEL_SUP(t411, in0);\n"
    "    t411 = PIXEL_SUP(t411, (is_S)? PIXEL_MIN: in0S);\n"
    "    t447 = PIXEL_SUP(t447, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t447 = PIXEL_SUP(t447, (is_W)? PIXEL_MIN: in0W);\n"
    "    t447 = PIXEL_SUP(t447, in0);\n"
    "    t483 = PIXEL_SUP(t483, (is_N)? PIXEL_MIN: in0N);\n"
    "    t483 = PIXEL_SUP(t483, (is_W)? PIXEL_MIN: in0W);\n"
    "    t483 = PIXEL_SUP(t483, (is_E)? PIXEL_MIN: in0E);\n"
    "    t519 = PIXEL_SUP(t519, (is_N|is_W)? PIXEL_MIN: in0NW);\n"
    "    t519 = PIXEL_SUP(t519, (is_W)? PIXEL_MIN: in0W);\n"
    "    t519 = PIXEL_SUP(t519, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t267;\n"
    "    p1[i] = t303;\n"
    "    p2[i] = t339;\n"
    "    p3[i] = t375;\n"
    "    p4[i] = t411;\n"
    "    p5[i] = t447;\n"
    "    p6[i] = t483;\n"
    "    p7[i] = t519;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_0_0_1_source, "freia_52_opencl_helper_0_0_1", "-DPIXEL8", &freia_52_opencl_helper_0_0_1_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_0_0_1_source, "freia_52_opencl_helper_0_0_1", "-DPIXEL16", &freia_52_opencl_helper_0_0_1_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_0_0_1
freia_status freia_52_opencl_helper_0_0_1(
  freia_data2d * o0,
  freia_data2d * o1,
  freia_data2d * o2,
  freia_data2d * o3,
  freia_data2d * o4,
  freia_data2d * o5,
  freia_data2d * o6,
  freia_data2d * o7,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_0_0_1_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_0_0_1_kernel[bpp];

  // call kernel freia_52_opencl_helper_0_0_1
  err |= freia_op_call_kernel(kernel, 8, 1, 0, 0, o0, o1, o2, o3, o4, o5, o6, o7, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_56
static cl_kernel freia_52_opencl_helper_D8_56_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_56
static freia_status freia_52_opencl_helper_D8_56_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_56
  const char * freia_52_opencl_helper_D8_56_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_56\n"
    "KERNEL void freia_52_opencl_helper_D8_56(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  // N not needed\n"
    "  // S not needed\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t270 = PIXEL_MIN;\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0E = (is_E)? 0: j0[i+1];\n"
    "\n"
    "    // pixel computations\n"
    "    t270 = PIXEL_SUP(t270, (is_W)? PIXEL_MIN: in0W);\n"
    "    t270 = PIXEL_SUP(t270, in0);\n"
    "    t270 = PIXEL_SUP(t270, (is_E)? PIXEL_MIN: in0E);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t270;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_56_source, "freia_52_opencl_helper_D8_56", "-DPIXEL8", &freia_52_opencl_helper_D8_56_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_56_source, "freia_52_opencl_helper_D8_56", "-DPIXEL16", &freia_52_opencl_helper_D8_56_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_56
freia_status freia_52_opencl_helper_D8_56(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_56_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_56_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_56
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_146
static cl_kernel freia_52_opencl_helper_D8_146_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_146
static freia_status freia_52_opencl_helper_D8_146_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_146
  const char * freia_52_opencl_helper_D8_146_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_146\n"
    "KERNEL void freia_52_opencl_helper_D8_146(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    // W not needed\n"
    "    // E not needed\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t306 = PIXEL_MIN;\n"
    "    PIXEL in0N = (is_N)? 0: j0[i-pitch];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0S = (is_S)? 0: j0[i+pitch];\n"
    "\n"
    "    // pixel computations\n"
    "    t306 = PIXEL_SUP(t306, (is_N)? PIXEL_MIN: in0N);\n"
    "    t306 = PIXEL_SUP(t306, in0);\n"
    "    t306 = PIXEL_SUP(t306, (is_S)? PIXEL_MIN: in0S);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t306;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_146_source, "freia_52_opencl_helper_D8_146", "-DPIXEL8", &freia_52_opencl_helper_D8_146_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_146_source, "freia_52_opencl_helper_D8_146", "-DPIXEL16", &freia_52_opencl_helper_D8_146_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_146
freia_status freia_52_opencl_helper_D8_146(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_146_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_146_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_146
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_84
static cl_kernel freia_52_opencl_helper_D8_84_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_84
static freia_status freia_52_opencl_helper_D8_84_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_84
  const char * freia_52_opencl_helper_D8_84_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_84\n"
    "KERNEL void freia_52_opencl_helper_D8_84(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t342 = PIXEL_MIN;\n"
    "    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];\n"
    "\n"
    "    // pixel computations\n"
    "    t342 = PIXEL_SUP(t342, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t342 = PIXEL_SUP(t342, in0);\n"
    "    t342 = PIXEL_SUP(t342, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t342;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_84_source, "freia_52_opencl_helper_D8_84", "-DPIXEL8", &freia_52_opencl_helper_D8_84_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_84_source, "freia_52_opencl_helper_D8_84", "-DPIXEL16", &freia_52_opencl_helper_D8_84_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_84
freia_status freia_52_opencl_helper_D8_84(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_84_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_84_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_84
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_112
static cl_kernel freia_52_opencl_helper_D8_112_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_112
static freia_status freia_52_opencl_helper_D8_112_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_112
  const char * freia_52_opencl_helper_D8_112_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_112\n"
    "KERNEL void freia_52_opencl_helper_D8_112(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  // S not needed\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t450 = PIXEL_MIN;\n"
    "    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0 = j0[i];\n"
    "\n"
    "    // pixel computations\n"
    "    t450 = PIXEL_SUP(t450, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t450 = PIXEL_SUP(t450, (is_W)? PIXEL_MIN: in0W);\n"
    "    t450 = PIXEL_SUP(t450, in0);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t450;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_112_source, "freia_52_opencl_helper_D8_112", "-DPIXEL8", &freia_52_opencl_helper_D8_112_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_112_source, "freia_52_opencl_helper_D8_112", "-DPIXEL16", &freia_52_opencl_helper_D8_112_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_112
freia_status freia_52_opencl_helper_D8_112(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_112_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_112_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_112
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_168
static cl_kernel freia_52_opencl_helper_D8_168_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_168
static freia_status freia_52_opencl_helper_D8_168_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_168
  const char * freia_52_opencl_helper_D8_168_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_168\n"
    "KERNEL void freia_52_opencl_helper_D8_168(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  // S not needed\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t486 = PIXEL_MIN;\n"
    "    PIXEL in0N = (is_N)? 0: j0[i-pitch];\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0E = (is_E)? 0: j0[i+1];\n"
    "\n"
    "    // pixel computations\n"
    "    t486 = PIXEL_SUP(t486, (is_N)? PIXEL_MIN: in0N);\n"
    "    t486 = PIXEL_SUP(t486, (is_W)? PIXEL_MIN: in0W);\n"
    "    t486 = PIXEL_SUP(t486, (is_E)? PIXEL_MIN: in0E);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t486;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_168_source, "freia_52_opencl_helper_D8_168", "-DPIXEL8", &freia_52_opencl_helper_D8_168_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_168_source, "freia_52_opencl_helper_D8_168", "-DPIXEL16", &freia_52_opencl_helper_D8_168_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_168
freia_status freia_52_opencl_helper_D8_168(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_168_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_168_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_168
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_292
static cl_kernel freia_52_opencl_helper_D8_292_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_292
static freia_status freia_52_opencl_helper_D8_292_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_292
  const char * freia_52_opencl_helper_D8_292_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_292\n"
    "KERNEL void freia_52_opencl_helper_D8_292(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    // E not needed\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t522 = PIXEL_MIN;\n"
    "    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];\n"
    "\n"
    "    // pixel computations\n"
    "    t522 = PIXEL_SUP(t522, (is_N|is_W)? PIXEL_MIN: in0NW);\n"
    "    t522 = PIXEL_SUP(t522, (is_W)? PIXEL_MIN: in0W);\n"
    "    t522 = PIXEL_SUP(t522, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t522;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_292_source, "freia_52_opencl_helper_D8_292", "-DPIXEL8", &freia_52_opencl_helper_D8_292_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_292_source, "freia_52_opencl_helper_D8_292", "-DPIXEL16", &freia_52_opencl_helper_D8_292_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_292
freia_status freia_52_opencl_helper_D8_292(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_292_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_292_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_292
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_D8_511
static cl_kernel freia_52_opencl_helper_D8_511_kernel[2];

// compile kernels for freia_52_opencl_helper_D8_511
static freia_status freia_52_opencl_helper_D8_511_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_D8_511
  const char * freia_52_opencl_helper_D8_511_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_D8_511\n"
    "KERNEL void freia_52_opencl_helper_D8_511(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t266 = PIXEL_MIN;\n"
    "    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];\n"
    "    PIXEL in0N = (is_N)? 0: j0[i-pitch];\n"
    "    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0E = (is_E)? 0: j0[i+1];\n"
    "    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];\n"
    "    PIXEL in0S = (is_S)? 0: j0[i+pitch];\n"
    "    PIXEL in0SE = (is_S|is_E)? 0: j0[i+pitch+1];\n"
    "\n"
    "    // pixel computations\n"
    "    t266 = PIXEL_SUP(t266, (is_N|is_W)? PIXEL_MIN: in0NW);\n"
    "    t266 = PIXEL_SUP(t266, (is_N)? PIXEL_MIN: in0N);\n"
    "    t266 = PIXEL_SUP(t266, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t266 = PIXEL_SUP(t266, (is_W)? PIXEL_MIN: in0W);\n"
    "    t266 = PIXEL_SUP(t266, in0);\n"
    "    t266 = PIXEL_SUP(t266, (is_E)? PIXEL_MIN: in0E);\n"
    "    t266 = PIXEL_SUP(t266, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "    t266 = PIXEL_SUP(t266, (is_S)? PIXEL_MIN: in0S);\n"
    "    t266 = PIXEL_SUP(t266, (is_S|is_E)? PIXEL_MIN: in0SE);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t266;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_511_source, "freia_52_opencl_helper_D8_511", "-DPIXEL8", &freia_52_opencl_helper_D8_511_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_D8_511_source, "freia_52_opencl_helper_D8_511", "-DPIXEL16", &freia_52_opencl_helper_D8_511_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_D8_511
freia_status freia_52_opencl_helper_D8_511(
  freia_data2d * o0,
  const freia_data2d * i0)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_D8_511_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_D8_511_kernel[bpp];

  // call kernel freia_52_opencl_helper_D8_511
  err |= freia_op_call_kernel(kernel, 1, 1, 0, 0, o0, i0);

  return err;
}

// hold kernels for freia_52_opencl_helper_0_0_3
static cl_kernel freia_52_opencl_helper_0_0_3_kernel[2];

// compile kernels for freia_52_opencl_helper_0_0_3
static freia_status freia_52_opencl_helper_0_0_3_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_0_0_3
  const char * freia_52_opencl_helper_0_0_3_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_0_0_3\n"
    "KERNEL void freia_52_opencl_helper_0_0_3(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  GLOBAL PIXEL * i1, // const?\n"
    "  int ofs_i1,\n"
    "  GLOBAL PIXEL * i2, // const?\n"
    "  int ofs_i2,\n"
    "  GLOBAL PIXEL * i3, // const?\n"
    "  int ofs_i3,\n"
    "  GLOBAL PIXEL * i4, // const?\n"
    "  int ofs_i4,\n"
    "  GLOBAL PIXEL * i5, // const?\n"
    "  int ofs_i5,\n"
    "  GLOBAL PIXEL * i6, // const?\n"
    "  int ofs_i6,\n"
    "  GLOBAL PIXEL * i7, // const?\n"
    "  int ofs_i7,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch,\n"
    "  int c0,\n"
    "  GLOBAL TMeasure * redX)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // reduction stuff is currently hardcoded...\n"
    "  int vol = 0;\n"
    "  PIXEL minv = PIXEL_MAX;\n"
    "  int2 minpos = { 0, 0 };\n"
    "  PIXEL maxv = PIXEL_MIN;\n"
    "  int2 maxpos = { 0, 0 };\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;\n"
    "  GLOBAL PIXEL * j2 = i2 + ofs_i2 + shift;\n"
    "  GLOBAL PIXEL * j3 = i3 + ofs_i3 + shift;\n"
    "  GLOBAL PIXEL * j4 = i4 + ofs_i4 + shift;\n"
    "  GLOBAL PIXEL * j5 = i5 + ofs_i5 + shift;\n"
    "  GLOBAL PIXEL * j6 = i6 + ofs_i6 + shift;\n"
    "  GLOBAL PIXEL * j7 = i7 + ofs_i7 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // get input pixels\n"
    "    PIXEL in7 = j7[i];\n"
    "    PIXEL in6 = j6[i];\n"
    "    PIXEL in5 = j5[i];\n"
    "    PIXEL in4 = j4[i];\n"
    "    PIXEL in3 = j3[i];\n"
    "    PIXEL in2 = j2[i];\n"
    "    PIXEL in1 = j1[i];\n"
    "    PIXEL in0 = j0[i];\n"
    "\n"
    "    // pixel computations\n"
    "    PIXEL t600 = PIXEL_INF(in7, c0);\n"
    "    PIXEL t636 = PIXEL_INF(t600, in6);\n"
    "    PIXEL t672 = PIXEL_INF(t636, in5);\n"
    "    PIXEL t708 = PIXEL_INF(t672, in4);\n"
    "    PIXEL t744 = PIXEL_INF(t708, in3);\n"
    "    PIXEL t780 = PIXEL_INF(t744, in2);\n"
    "    PIXEL t816 = PIXEL_INF(t780, in1);\n"
    "    PIXEL t852 = PIXEL_INF(t816, in0);\n"
    "    PIXEL t861 = PIXEL_NOT(t852);\n"
    "    PIXEL_VOLUME(red864, t861);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t861;\n"
    "  }\n"
    "\n"
    "  // reduction copy out\n"
    "  int thrid = get_global_id(0)*get_global_size(1)+get_global_id(1);\n"
    "  redX[thrid].vol = vol;\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_0_0_3_source, "freia_52_opencl_helper_0_0_3", "-DPIXEL8", &freia_52_opencl_helper_0_0_3_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_0_0_3_source, "freia_52_opencl_helper_0_0_3", "-DPIXEL16", &freia_52_opencl_helper_0_0_3_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_0_0_3
freia_status freia_52_opencl_helper_0_0_3(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  const freia_data2d * i2,
  const freia_data2d * i3,
  const freia_data2d * i4,
  const freia_data2d * i5,
  const freia_data2d * i6,
  const freia_data2d * i7,
  int32_t c0,
  int32_t * po9)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_0_0_3_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_0_0_3_kernel[bpp];

  // currently only one reduction structure...
  freia_opencl_measure_status redres;

  // call kernel freia_52_opencl_helper_0_0_3
  err |= freia_op_call_kernel(kernel, 1, 8, 1, 1, o0, i0, i1, i2, i3, i4, i5, i6, i7, c0, &redres);

  // return reduction results
  *po9 = redres.volume;

  return err;
}

// dag 1: 3 ops and 0 copies, optimized to 3 ops and 0+0+0 copies

// hold kernels for freia_52_opencl_helper_1_0_0
static cl_kernel freia_52_opencl_helper_1_0_0_kernel[2];

// compile kernels for freia_52_opencl_helper_1_0_0
static freia_status freia_52_opencl_helper_1_0_0_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_1_0_0
  const char * freia_52_opencl_helper_1_0_0_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_1_0_0\n"
    "KERNEL void freia_52_opencl_helper_1_0_0(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  GLOBAL PIXEL * i1, // const?\n"
    "  int ofs_i1,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch,\n"
    "  GLOBAL TMeasure * redX)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // reduction stuff is currently hardcoded...\n"
    "  int vol = 0;\n"
    "  PIXEL minv = PIXEL_MAX;\n"
    "  int2 minpos = { 0, 0 };\n"
    "  PIXEL maxv = PIXEL_MIN;\n"
    "  int2 maxpos = { 0, 0 };\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // N & S boundaries, one thread on first dimension per row\n"
    "  int is_N = (get_global_id(0)==0);\n"
    "  int is_S = (get_global_id(0)==(height-1));\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // W & E boundaries, assuming i global index\n"
    "    int is_W = (i==0);\n"
    "    int is_E = (i==(width-1));\n"
    "\n"
    "    // get input pixels\n"
    "    PIXEL t868 = PIXEL_MIN;\n"
    "    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];\n"
    "    PIXEL in0N = (is_N)? 0: j0[i-pitch];\n"
    "    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];\n"
    "    PIXEL in0W = (is_W)? 0: j0[i-1];\n"
    "    PIXEL in0 = j0[i];\n"
    "    PIXEL in0E = (is_E)? 0: j0[i+1];\n"
    "    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];\n"
    "    PIXEL in0S = (is_S)? 0: j0[i+pitch];\n"
    "    PIXEL in0SE = (is_S|is_E)? 0: j0[i+pitch+1];\n"
    "    PIXEL in1 = j1[i];\n"
    "\n"
    "    // pixel computations\n"
    "    t868 = PIXEL_SUP(t868, (is_N|is_W)? PIXEL_MIN: in0NW);\n"
    "    t868 = PIXEL_SUP(t868, (is_N)? PIXEL_MIN: in0N);\n"
    "    t868 = PIXEL_SUP(t868, (is_N|is_E)? PIXEL_MIN: in0NE);\n"
    "    t868 = PIXEL_SUP(t868, (is_W)? PIXEL_MIN: in0W);\n"
    "    t868 = PIXEL_SUP(t868, in0);\n"
    "    t868 = PIXEL_SUP(t868, (is_E)? PIXEL_MIN: in0E);\n"
    "    t868 = PIXEL_SUP(t868, (is_S|is_W)? PIXEL_MIN: in0SW);\n"
    "    t868 = PIXEL_SUP(t868, (is_S)? PIXEL_MIN: in0S);\n"
    "    t868 = PIXEL_SUP(t868, (is_S|is_E)? PIXEL_MIN: in0SE);\n"
    "    PIXEL t874 = PIXEL_INF(t868, in1);\n"
    "    PIXEL_VOLUME(red880, t874);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t874;\n"
    "  }\n"
    "\n"
    "  // reduction copy out\n"
    "  int thrid = get_global_id(0)*get_global_size(1)+get_global_id(1);\n"
    "  redX[thrid].vol = vol;\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_1_0_0_source, "freia_52_opencl_helper_1_0_0", "-DPIXEL8", &freia_52_opencl_helper_1_0_0_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_1_0_0_source, "freia_52_opencl_helper_1_0_0", "-DPIXEL16", &freia_52_opencl_helper_1_0_0_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_1_0_0
freia_status freia_52_opencl_helper_1_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  int32_t * po3)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_1_0_0_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_1_0_0_kernel[bpp];

  // currently only one reduction structure...
  freia_opencl_measure_status redres;

  // call kernel freia_52_opencl_helper_1_0_0
  err |= freia_op_call_kernel(kernel, 1, 2, 0, 1, o0, i0, i1, &redres);

  // return reduction results
  *po3 = redres.volume;

  return err;
}

// dag 2: 4 ops and 0 copies, optimized to 3 ops and 0+0+0 copies

// hold kernels for freia_52_opencl_helper_2_0_0
static cl_kernel freia_52_opencl_helper_2_0_0_kernel[2];

// compile kernels for freia_52_opencl_helper_2_0_0
static freia_status freia_52_opencl_helper_2_0_0_compile(void)
{
  // OpenCL source for freia_52_opencl_helper_2_0_0
  const char * freia_52_opencl_helper_2_0_0_source =
    "#include <freia_opencl_runtime.hcl>\n"
    "\n"
    "// opencl function freia_52_opencl_helper_2_0_0\n"
    "KERNEL void freia_52_opencl_helper_2_0_0(\n"
    "  GLOBAL PIXEL * o0,\n"
    "  int ofs_o0,\n"
    "  GLOBAL PIXEL * i0, // const?\n"
    "  int ofs_i0,\n"
    "  GLOBAL PIXEL * i1, // const?\n"
    "  int ofs_i1,\n"
    "  int width, // of the working area, vs image pitch below\n"
    "  int height, // of the working area\n"
    "  int pitch,\n"
    "  int c0,\n"
    "  int c1,\n"
    "  int c2,\n"
    "  int c3)\n"
    "{\n"
    "  // no tiling on height dimension\n"
    "  // assert(height==get_global_size(0));\n"
    "  int j = get_global_id(0);\n"
    "\n"
    "  // loop i upper bound\n"
    "  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);\n"
    "  int Wlast = Wtile*(get_global_id(1)+1);\n"
    "  if (Wlast>width) Wlast = width;\n"
    "\n"
    "  // get input & output image pointers\n"
    "  int shift = pitch*j;\n"
    "  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;\n"
    "  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;\n"
    "  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;\n"
    "\n"
    "  int i;\n"
    "  for (i=Wtile*get_global_id(1); i<Wlast; i++)\n"
    "  {\n"
    "    // get input pixels\n"
    "    PIXEL in1 = j1[i];\n"
    "    PIXEL in0 = j0[i];\n"
    "\n"
    "    // pixel computations\n"
    "    PIXEL t886 = PIXEL_SUB(in1, in0);\n"
    "    PIXEL t887 = PIXEL_MUL(t886, c0);\n"
    "    PIXEL t890 = PIXEL_THRESHOLD(t887, c1, c2, c3);\n"
    "\n"
    "    // set output pixels\n"
    "    p0[i] = t890;\n"
    "  }\n"
    "}\n";
  freia_status err = FREIA_OK;
  err |= freia_op_compile_kernel(freia_52_opencl_helper_2_0_0_source, "freia_52_opencl_helper_2_0_0", "-DPIXEL8", &freia_52_opencl_helper_2_0_0_kernel[0]);
  err |= freia_op_compile_kernel(freia_52_opencl_helper_2_0_0_source, "freia_52_opencl_helper_2_0_0", "-DPIXEL16", &freia_52_opencl_helper_2_0_0_kernel[1]);
  return err;
}

// helper function freia_52_opencl_helper_2_0_0
freia_status freia_52_opencl_helper_2_0_0(
  freia_data2d * o0,
  const freia_data2d * i0,
  const freia_data2d * i1,
  int32_t c0,
  int32_t c1,
  int32_t c2,
  int32_t c3)
{
  freia_status err = FREIA_OK;

  // handle on the fly compilation...
  static int to_compile = 1;
  if (to_compile) {
    err |= freia_52_opencl_helper_2_0_0_compile();
    // compilation may have failed
    if (err) return err;
    to_compile = 0;
  }

  // now get kernel, which must be have be compiled
  uint32_t bpp = i0->bpp>>4;
  cl_kernel kernel = freia_52_opencl_helper_2_0_0_kernel[bpp];

  // call kernel freia_52_opencl_helper_2_0_0
  err |= freia_op_call_kernel(kernel, 1, 2, 4, 0, o0, i0, i1, c0, c1, c2, c3);

  return err;
}
#include <freia_opencl_runtime.hcl>
// generated OpenCL kernels for function freia_52

// opencl for dag 0

// opencl function freia_52_opencl_helper_0_0_1
KERNEL void freia_52_opencl_helper_0_0_1(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * o1,
  int ofs_o1,
  GLOBAL PIXEL * o2,
  int ofs_o2,
  GLOBAL PIXEL * o3,
  int ofs_o3,
  GLOBAL PIXEL * o4,
  int ofs_o4,
  GLOBAL PIXEL * o5,
  int ofs_o5,
  GLOBAL PIXEL * o6,
  int ofs_o6,
  GLOBAL PIXEL * o7,
  int ofs_o7,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * p1 = o1 + ofs_o1 + shift;
  GLOBAL PIXEL * p2 = o2 + ofs_o2 + shift;
  GLOBAL PIXEL * p3 = o3 + ofs_o3 + shift;
  GLOBAL PIXEL * p4 = o4 + ofs_o4 + shift;
  GLOBAL PIXEL * p5 = o5 + ofs_o5 + shift;
  GLOBAL PIXEL * p6 = o6 + ofs_o6 + shift;
  GLOBAL PIXEL * p7 = o7 + ofs_o7 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t267 = PIXEL_MIN;
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0 = j0[i];
    PIXEL in0E = (is_E)? 0: j0[i+1];
    PIXEL t303 = PIXEL_MIN;
    PIXEL in0N = (is_N)? 0: j0[i-pitch];
    PIXEL in0S = (is_S)? 0: j0[i+pitch];
    PIXEL t339 = PIXEL_MIN;
    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];
    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];
    PIXEL t375 = PIXEL_MIN;
    PIXEL t411 = PIXEL_MIN;
    PIXEL t447 = PIXEL_MIN;
    PIXEL t483 = PIXEL_MIN;
    PIXEL t519 = PIXEL_MIN;
    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];

    // pixel computations
    t267 = PIXEL_SUP(t267, (is_W)? PIXEL_MIN: in0W);
    t267 = PIXEL_SUP(t267, in0);
    t267 = PIXEL_SUP(t267, (is_E)? PIXEL_MIN: in0E);
    t303 = PIXEL_SUP(t303, (is_N)? PIXEL_MIN: in0N);
    t303 = PIXEL_SUP(t303, in0);
    t303 = PIXEL_SUP(t303, (is_S)? PIXEL_MIN: in0S);
    t339 = PIXEL_SUP(t339, (is_N|is_E)? PIXEL_MIN: in0NE);
    t339 = PIXEL_SUP(t339, in0);
    t339 = PIXEL_SUP(t339, (is_S|is_W)? PIXEL_MIN: in0SW);
    t375 = PIXEL_SUP(t375, (is_W)? PIXEL_MIN: in0W);
    t375 = PIXEL_SUP(t375, in0);
    t375 = PIXEL_SUP(t375, (is_E)? PIXEL_MIN: in0E);
    t411 = PIXEL_SUP(t411, (is_N)? PIXEL_MIN: in0N);
    t411 = PIXEL_SUP(t411, in0);
    t411 = PIXEL_SUP(t411, (is_S)? PIXEL_MIN: in0S);
    t447 = PIXEL_SUP(t447, (is_N|is_E)? PIXEL_MIN: in0NE);
    t447 = PIXEL_SUP(t447, (is_W)? PIXEL_MIN: in0W);
    t447 = PIXEL_SUP(t447, in0);
    t483 = PIXEL_SUP(t483, (is_N)? PIXEL_MIN: in0N);
    t483 = PIXEL_SUP(t483, (is_W)? PIXEL_MIN: in0W);
    t483 = PIXEL_SUP(t483, (is_E)? PIXEL_MIN: in0E);
    t519 = PIXEL_SUP(t519, (is_N|is_W)? PIXEL_MIN: in0NW);
    t519 = PIXEL_SUP(t519, (is_W)? PIXEL_MIN: in0W);
    t519 = PIXEL_SUP(t519, (is_S|is_W)? PIXEL_MIN: in0SW);

    // set output pixels
    p0[i] = t267;
    p1[i] = t303;
    p2[i] = t339;
    p3[i] = t375;
    p4[i] = t411;
    p5[i] = t447;
    p6[i] = t483;
    p7[i] = t519;
  }
}

// opencl function freia_52_opencl_helper_D8_56
KERNEL void freia_52_opencl_helper_D8_56(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  // N not needed
  // S not needed

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t270 = PIXEL_MIN;
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0 = j0[i];
    PIXEL in0E = (is_E)? 0: j0[i+1];

    // pixel computations
    t270 = PIXEL_SUP(t270, (is_W)? PIXEL_MIN: in0W);
    t270 = PIXEL_SUP(t270, in0);
    t270 = PIXEL_SUP(t270, (is_E)? PIXEL_MIN: in0E);

    // set output pixels
    p0[i] = t270;
  }
}

// opencl function freia_52_opencl_helper_D8_146
KERNEL void freia_52_opencl_helper_D8_146(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    // W not needed
    // E not needed

    // get input pixels
    PIXEL t306 = PIXEL_MIN;
    PIXEL in0N = (is_N)? 0: j0[i-pitch];
    PIXEL in0 = j0[i];
    PIXEL in0S = (is_S)? 0: j0[i+pitch];

    // pixel computations
    t306 = PIXEL_SUP(t306, (is_N)? PIXEL_MIN: in0N);
    t306 = PIXEL_SUP(t306, in0);
    t306 = PIXEL_SUP(t306, (is_S)? PIXEL_MIN: in0S);

    // set output pixels
    p0[i] = t306;
  }
}

// opencl function freia_52_opencl_helper_D8_84
KERNEL void freia_52_opencl_helper_D8_84(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t342 = PIXEL_MIN;
    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];
    PIXEL in0 = j0[i];
    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];

    // pixel computations
    t342 = PIXEL_SUP(t342, (is_N|is_E)? PIXEL_MIN: in0NE);
    t342 = PIXEL_SUP(t342, in0);
    t342 = PIXEL_SUP(t342, (is_S|is_W)? PIXEL_MIN: in0SW);

    // set output pixels
    p0[i] = t342;
  }
}

// opencl function freia_52_opencl_helper_D8_112
KERNEL void freia_52_opencl_helper_D8_112(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  // S not needed

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t450 = PIXEL_MIN;
    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0 = j0[i];

    // pixel computations
    t450 = PIXEL_SUP(t450, (is_N|is_E)? PIXEL_MIN: in0NE);
    t450 = PIXEL_SUP(t450, (is_W)? PIXEL_MIN: in0W);
    t450 = PIXEL_SUP(t450, in0);

    // set output pixels
    p0[i] = t450;
  }
}

// opencl function freia_52_opencl_helper_D8_168
KERNEL void freia_52_opencl_helper_D8_168(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  // S not needed

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t486 = PIXEL_MIN;
    PIXEL in0N = (is_N)? 0: j0[i-pitch];
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0E = (is_E)? 0: j0[i+1];

    // pixel computations
    t486 = PIXEL_SUP(t486, (is_N)? PIXEL_MIN: in0N);
    t486 = PIXEL_SUP(t486, (is_W)? PIXEL_MIN: in0W);
    t486 = PIXEL_SUP(t486, (is_E)? PIXEL_MIN: in0E);

    // set output pixels
    p0[i] = t486;
  }
}

// opencl function freia_52_opencl_helper_D8_292
KERNEL void freia_52_opencl_helper_D8_292(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    // E not needed

    // get input pixels
    PIXEL t522 = PIXEL_MIN;
    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];

    // pixel computations
    t522 = PIXEL_SUP(t522, (is_N|is_W)? PIXEL_MIN: in0NW);
    t522 = PIXEL_SUP(t522, (is_W)? PIXEL_MIN: in0W);
    t522 = PIXEL_SUP(t522, (is_S|is_W)? PIXEL_MIN: in0SW);

    // set output pixels
    p0[i] = t522;
  }
}

// opencl function freia_52_opencl_helper_D8_511
KERNEL void freia_52_opencl_helper_D8_511(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t266 = PIXEL_MIN;
    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];
    PIXEL in0N = (is_N)? 0: j0[i-pitch];
    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0 = j0[i];
    PIXEL in0E = (is_E)? 0: j0[i+1];
    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];
    PIXEL in0S = (is_S)? 0: j0[i+pitch];
    PIXEL in0SE = (is_S|is_E)? 0: j0[i+pitch+1];

    // pixel computations
    t266 = PIXEL_SUP(t266, (is_N|is_W)? PIXEL_MIN: in0NW);
    t266 = PIXEL_SUP(t266, (is_N)? PIXEL_MIN: in0N);
    t266 = PIXEL_SUP(t266, (is_N|is_E)? PIXEL_MIN: in0NE);
    t266 = PIXEL_SUP(t266, (is_W)? PIXEL_MIN: in0W);
    t266 = PIXEL_SUP(t266, in0);
    t266 = PIXEL_SUP(t266, (is_E)? PIXEL_MIN: in0E);
    t266 = PIXEL_SUP(t266, (is_S|is_W)? PIXEL_MIN: in0SW);
    t266 = PIXEL_SUP(t266, (is_S)? PIXEL_MIN: in0S);
    t266 = PIXEL_SUP(t266, (is_S|is_E)? PIXEL_MIN: in0SE);

    // set output pixels
    p0[i] = t266;
  }
}

// opencl function freia_52_opencl_helper_0_0_3
KERNEL void freia_52_opencl_helper_0_0_3(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  GLOBAL PIXEL * i1, // const?
  int ofs_i1,
  GLOBAL PIXEL * i2, // const?
  int ofs_i2,
  GLOBAL PIXEL * i3, // const?
  int ofs_i3,
  GLOBAL PIXEL * i4, // const?
  int ofs_i4,
  GLOBAL PIXEL * i5, // const?
  int ofs_i5,
  GLOBAL PIXEL * i6, // const?
  int ofs_i6,
  GLOBAL PIXEL * i7, // const?
  int ofs_i7,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch,
  int c0,
  GLOBAL TMeasure * redX)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // reduction stuff is currently hardcoded...
  int vol = 0;
  PIXEL minv = PIXEL_MAX;
  int2 minpos = { 0, 0 };
  PIXEL maxv = PIXEL_MIN;
  int2 maxpos = { 0, 0 };

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;
  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;
  GLOBAL PIXEL * j2 = i2 + ofs_i2 + shift;
  GLOBAL PIXEL * j3 = i3 + ofs_i3 + shift;
  GLOBAL PIXEL * j4 = i4 + ofs_i4 + shift;
  GLOBAL PIXEL * j5 = i5 + ofs_i5 + shift;
  GLOBAL PIXEL * j6 = i6 + ofs_i6 + shift;
  GLOBAL PIXEL * j7 = i7 + ofs_i7 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // get input pixels
    PIXEL in7 = j7[i];
    PIXEL in6 = j6[i];
    PIXEL in5 = j5[i];
    PIXEL in4 = j4[i];
    PIXEL in3 = j3[i];
    PIXEL in2 = j2[i];
    PIXEL in1 = j1[i];
    PIXEL in0 = j0[i];

    // pixel computations
    PIXEL t600 = PIXEL_INF(in7, c0);
    PIXEL t636 = PIXEL_INF(t600, in6);
    PIXEL t672 = PIXEL_INF(t636, in5);
    PIXEL t708 = PIXEL_INF(t672, in4);
    PIXEL t744 = PIXEL_INF(t708, in3);
    PIXEL t780 = PIXEL_INF(t744, in2);
    PIXEL t816 = PIXEL_INF(t780, in1);
    PIXEL t852 = PIXEL_INF(t816, in0);
    PIXEL t861 = PIXEL_NOT(t852);
    PIXEL_VOLUME(red864, t861);

    // set output pixels
    p0[i] = t861;
  }

  // reduction copy out
  int thrid = get_global_id(0)*get_global_size(1)+get_global_id(1);
  redX[thrid].vol = vol;
}

// opencl for dag 1

// opencl function freia_52_opencl_helper_1_0_0
KERNEL void freia_52_opencl_helper_1_0_0(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  GLOBAL PIXEL * i1, // const?
  int ofs_i1,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch,
  GLOBAL TMeasure * redX)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // reduction stuff is currently hardcoded...
  int vol = 0;
  PIXEL minv = PIXEL_MAX;
  int2 minpos = { 0, 0 };
  PIXEL maxv = PIXEL_MIN;
  int2 maxpos = { 0, 0 };

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // N & S boundaries, one thread on first dimension per row
  int is_N = (get_global_id(0)==0);
  int is_S = (get_global_id(0)==(height-1));

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;
  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // W & E boundaries, assuming i global index
    int is_W = (i==0);
    int is_E = (i==(width-1));

    // get input pixels
    PIXEL t868 = PIXEL_MIN;
    PIXEL in0NW = (is_N|is_W)? 0: j0[i-pitch-1];
    PIXEL in0N = (is_N)? 0: j0[i-pitch];
    PIXEL in0NE = (is_N|is_E)? 0: j0[i-pitch+1];
    PIXEL in0W = (is_W)? 0: j0[i-1];
    PIXEL in0 = j0[i];
    PIXEL in0E = (is_E)? 0: j0[i+1];
    PIXEL in0SW = (is_S|is_W)? 0: j0[i+pitch-1];
    PIXEL in0S = (is_S)? 0: j0[i+pitch];
    PIXEL in0SE = (is_S|is_E)? 0: j0[i+pitch+1];
    PIXEL in1 = j1[i];

    // pixel computations
    t868 = PIXEL_SUP(t868, (is_N|is_W)? PIXEL_MIN: in0NW);
    t868 = PIXEL_SUP(t868, (is_N)? PIXEL_MIN: in0N);
    t868 = PIXEL_SUP(t868, (is_N|is_E)? PIXEL_MIN: in0NE);
    t868 = PIXEL_SUP(t868, (is_W)? PIXEL_MIN: in0W);
    t868 = PIXEL_SUP(t868, in0);
    t868 = PIXEL_SUP(t868, (is_E)? PIXEL_MIN: in0E);
    t868 = PIXEL_SUP(t868, (is_S|is_W)? PIXEL_MIN: in0SW);
    t868 = PIXEL_SUP(t868, (is_S)? PIXEL_MIN: in0S);
    t868 = PIXEL_SUP(t868, (is_S|is_E)? PIXEL_MIN: in0SE);
    PIXEL t874 = PIXEL_INF(t868, in1);
    PIXEL_VOLUME(red880, t874);

    // set output pixels
    p0[i] = t874;
  }

  // reduction copy out
  int thrid = get_global_id(0)*get_global_size(1)+get_global_id(1);
  redX[thrid].vol = vol;
}

// opencl for dag 2

// opencl function freia_52_opencl_helper_2_0_0
KERNEL void freia_52_opencl_helper_2_0_0(
  GLOBAL PIXEL * o0,
  int ofs_o0,
  GLOBAL PIXEL * i0, // const?
  int ofs_i0,
  GLOBAL PIXEL * i1, // const?
  int ofs_i1,
  int width, // of the working area, vs image pitch below
  int height, // of the working area
  int pitch,
  int c0,
  int c1,
  int c2,
  int c3)
{
  // no tiling on height dimension
  // assert(height==get_global_size(0));
  int j = get_global_id(0);

  // loop i upper bound
  int Wtile = (width+get_global_size(1)-1)/get_global_size(1);
  int Wlast = Wtile*(get_global_id(1)+1);
  if (Wlast>width) Wlast = width;

  // get input & output image pointers
  int shift = pitch*j;
  GLOBAL PIXEL * p0 = o0 + ofs_o0 + shift;
  GLOBAL PIXEL * j0 = i0 + ofs_i0 + shift;
  GLOBAL PIXEL * j1 = i1 + ofs_i1 + shift;

  int i;
  for (i=Wtile*get_global_id(1); i<Wlast; i++)
  {
    // get input pixels
    PIXEL in1 = j1[i];
    PIXEL in0 = j0[i];

    // pixel computations
    PIXEL t886 = PIXEL_SUB(in1, in0);
    PIXEL t887 = PIXEL_MUL(t886, c0);
    PIXEL t890 = PIXEL_THRESHOLD(t887, c1, c2, c3);

    // set output pixels
    p0[i] = t890;
  }
}

! updated function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imWork1;                                        /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1;                                                  /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_10 = 0, *w1_1_20 = 0, *w1_1_30 = 0, *w1_1_40 = 0, *w1_1_50 = 0, *w1_1_60 = 0, *w1_1_70 = 0, *w1_0_5 = 0, *w1_0_8 = 0, *w1_0_15 = 0, *w1_0_18 = 0, *w1_0_25 = 0, *w1_0_28 = 0, *w1_0_35 = 0, *w1_0_38 = 0, *w1_0_45 = 0, *w1_0_48 = 0, *w1_0_55 = 0, *w1_0_58 = 0, *w1_0_65 = 0, *w1_0_68 = 0, *w1_0_75 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   w1_0_75 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_68 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_65 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_58 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_55 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_48 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_45 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_38 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_35 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_28 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_25 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_18 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_15 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_8 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_5 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_70 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_60 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_50 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_40 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_30 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_20 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_10 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   freia_aipo_not(imWork1, imin);                                       /*0247*/
   
   
   freia_52_opencl_helper_D8_511(w1_0, imWork1);                        /*0266*/
   freia_52_opencl_helper_0_0_1(w1_0, w1_0_68, w1_0_58, w1_0_48, w1_0_38, w1_0_28, w1_0_18, w1_0_8, w1_0);           /*0267*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0268*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0269*/
   freia_52_opencl_helper_D8_56(w1_0_75, w1_0);                         /*0270*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0_68);                        /*0304*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0);                           /*0305*/
   freia_52_opencl_helper_D8_146(w1_0_65, w1_0);                        /*0306*/
   freia_52_opencl_helper_D8_84(w1_0, w1_0_58);                         /*0340*/
   freia_52_opencl_helper_D8_84(w1_0, w1_0);                            /*0341*/
   freia_52_opencl_helper_D8_84(w1_0_55, w1_0);                         /*0342*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0_48);                         /*0376*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0377*/
   freia_52_opencl_helper_D8_56(w1_0_45, w1_0);                         /*0378*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0_38);                        /*0412*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0);                           /*0413*/
   freia_52_opencl_helper_D8_146(w1_0_35, w1_0);                        /*0414*/
   freia_52_opencl_helper_D8_112(w1_0, w1_0_28);                        /*0448*/
   freia_52_opencl_helper_D8_112(w1_0, w1_0);                           /*0449*/
   freia_52_opencl_helper_D8_112(w1_0_25, w1_0);                        /*0450*/
   freia_52_opencl_helper_D8_168(w1_0, w1_0_18);                        /*0484*/
   freia_52_opencl_helper_D8_168(w1_0, w1_0);                           /*0485*/
   freia_52_opencl_helper_D8_168(w1_0_15, w1_0);                        /*0486*/
   freia_52_opencl_helper_D8_292(w1_0, w1_0_8);                         /*0520*/
   freia_52_opencl_helper_D8_292(w1_0, w1_0);                           /*0521*/
   freia_52_opencl_helper_D8_292(w1_0_5, w1_0);                         /*0522*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_75, neighborTransposed_8);            /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1_70, w1_1, neighborTransposed_8);            /*0592*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_65, neighborTransposed_9);            /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1_60, w1_1, neighborTransposed_9);            /*0628*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_55, neighborTransposed_10);           /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1_50, w1_1, neighborTransposed_10);           /*0664*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_45, neighborTransposed_11);           /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1_40, w1_1, neighborTransposed_11);           /*0700*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_35, neighborTransposed_12);           /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1_30, w1_1, neighborTransposed_12);           /*0736*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_25, neighborTransposed_13);           /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1_20, w1_1, neighborTransposed_13);           /*0772*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_15, neighborTransposed_14);           /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1_10, w1_1, neighborTransposed_14);           /*0808*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_5, neighborTransposed_15);            /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   freia_52_opencl_helper_0_0_3(imWork1, w1_1, w1_1_10, w1_1_20, w1_1_30, w1_1_40, w1_1_50, w1_1_60, w1_1_70, 255, &volcurrent);    /*0852*/

   ret_19 = 0;                                                          /*0864*/
   
   
   
   
   
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   err_3 |= _return28;                                                  /*0635*/
   
   
   err_3 |= _return29;                                                  /*0671*/
   
   
   err_3 |= _return25;                                                  /*0707*/
   
   
   err_3 |= _return26;                                                  /*0743*/
   
   
   err_3 |= _return22;                                                  /*0779*/
   
   
   err_3 |= _return23;                                                  /*0815*/
   
   
   err_3 |= _return24;                                                  /*0851*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   _return4 = err_2;                                                    /*0862*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w1_0_5);
   freia_common_destruct_data(w1_0_8);
   freia_common_destruct_data(w1_0_15);
   freia_common_destruct_data(w1_0_18);
   freia_common_destruct_data(w1_0_25);
   freia_common_destruct_data(w1_0_28);
   freia_common_destruct_data(w1_0_35);
   freia_common_destruct_data(w1_0_38);
   freia_common_destruct_data(w1_0_45);
   freia_common_destruct_data(w1_0_48);
   freia_common_destruct_data(w1_0_55);
   freia_common_destruct_data(w1_0_58);
   freia_common_destruct_data(w1_0_65);
   freia_common_destruct_data(w1_0_68);
   freia_common_destruct_data(w1_0_75);
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w1_1_10);
   freia_common_destruct_data(w1_1_20);
   freia_common_destruct_data(w1_1_30);
   freia_common_destruct_data(w1_1_40);
   freia_common_destruct_data(w1_1_50);
   freia_common_destruct_data(w1_1_60);
   freia_common_destruct_data(w1_1_70);
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      freia_52_opencl_helper_1_0_0(imWork1, imWork1, imin, &volcurrent);               /*0868*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_52_opencl_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);                /*0886*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! cleaned up function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imWork1;                                        /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0;                                                  /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1;                                                  /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/
   // hardware accelerator generated variable
   freia_data2d *w1_1_10 = 0, *w1_1_20 = 0, *w1_1_30 = 0, *w1_1_40 = 0, *w1_1_50 = 0, *w1_1_60 = 0, *w1_1_70 = 0, *w1_0_5 = 0, *w1_0_8 = 0, *w1_0_15 = 0, *w1_0_18 = 0, *w1_0_25 = 0, *w1_0_28 = 0, *w1_0_35 = 0, *w1_0_38 = 0, *w1_0_45 = 0, *w1_0_48 = 0, *w1_0_55 = 0, *w1_0_58 = 0, *w1_0_65 = 0, *w1_0_68 = 0, *w1_0_75 = 0;

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   w1_0_75 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_68 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_65 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_58 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_55 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_48 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_45 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_38 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_35 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_28 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_25 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_18 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_15 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_8 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_0_5 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_70 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_60 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_50 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_40 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_30 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_20 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   w1_1_10 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[8] = freia_morpho_k8_0[0];                      /*0255*/
   neighborTransposed_0[7] = freia_morpho_k8_0[1];                      /*0256*/
   neighborTransposed_0[6] = freia_morpho_k8_0[2];                      /*0257*/
   neighborTransposed_0[5] = freia_morpho_k8_0[3];                      /*0258*/
   neighborTransposed_0[4] = freia_morpho_k8_0[4];                      /*0259*/
   neighborTransposed_0[3] = freia_morpho_k8_0[5];                      /*0260*/
   neighborTransposed_0[2] = freia_morpho_k8_0[6];                      /*0261*/
   neighborTransposed_0[1] = freia_morpho_k8_0[7];                      /*0262*/
   neighborTransposed_0[0] = freia_morpho_k8_0[8];                      /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[8] = freia_morpho_k8_1[0];                      /*0291*/
   neighborTransposed_1[7] = freia_morpho_k8_1[1];                      /*0292*/
   neighborTransposed_1[6] = freia_morpho_k8_1[2];                      /*0293*/
   neighborTransposed_1[5] = freia_morpho_k8_1[3];                      /*0294*/
   neighborTransposed_1[4] = freia_morpho_k8_1[4];                      /*0295*/
   neighborTransposed_1[3] = freia_morpho_k8_1[5];                      /*0296*/
   neighborTransposed_1[2] = freia_morpho_k8_1[6];                      /*0297*/
   neighborTransposed_1[1] = freia_morpho_k8_1[7];                      /*0298*/
   neighborTransposed_1[0] = freia_morpho_k8_1[8];                      /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[8] = freia_morpho_k8_2[0];                      /*0327*/
   neighborTransposed_2[7] = freia_morpho_k8_2[1];                      /*0328*/
   neighborTransposed_2[6] = freia_morpho_k8_2[2];                      /*0329*/
   neighborTransposed_2[5] = freia_morpho_k8_2[3];                      /*0330*/
   neighborTransposed_2[4] = freia_morpho_k8_2[4];                      /*0331*/
   neighborTransposed_2[3] = freia_morpho_k8_2[5];                      /*0332*/
   neighborTransposed_2[2] = freia_morpho_k8_2[6];                      /*0333*/
   neighborTransposed_2[1] = freia_morpho_k8_2[7];                      /*0334*/
   neighborTransposed_2[0] = freia_morpho_k8_2[8];                      /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[8] = freia_morpho_k4_0[0];                      /*0363*/
   neighborTransposed_3[7] = freia_morpho_k4_0[1];                      /*0364*/
   neighborTransposed_3[6] = freia_morpho_k4_0[2];                      /*0365*/
   neighborTransposed_3[5] = freia_morpho_k4_0[3];                      /*0366*/
   neighborTransposed_3[4] = freia_morpho_k4_0[4];                      /*0367*/
   neighborTransposed_3[3] = freia_morpho_k4_0[5];                      /*0368*/
   neighborTransposed_3[2] = freia_morpho_k4_0[6];                      /*0369*/
   neighborTransposed_3[1] = freia_morpho_k4_0[7];                      /*0370*/
   neighborTransposed_3[0] = freia_morpho_k4_0[8];                      /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[8] = freia_morpho_k4_1[0];                      /*0399*/
   neighborTransposed_4[7] = freia_morpho_k4_1[1];                      /*0400*/
   neighborTransposed_4[6] = freia_morpho_k4_1[2];                      /*0401*/
   neighborTransposed_4[5] = freia_morpho_k4_1[3];                      /*0402*/
   neighborTransposed_4[4] = freia_morpho_k4_1[4];                      /*0403*/
   neighborTransposed_4[3] = freia_morpho_k4_1[5];                      /*0404*/
   neighborTransposed_4[2] = freia_morpho_k4_1[6];                      /*0405*/
   neighborTransposed_4[1] = freia_morpho_k4_1[7];                      /*0406*/
   neighborTransposed_4[0] = freia_morpho_k4_1[8];                      /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[8] = freia_morpho_k6_0[0];                      /*0435*/
   neighborTransposed_5[7] = freia_morpho_k6_0[1];                      /*0436*/
   neighborTransposed_5[6] = freia_morpho_k6_0[2];                      /*0437*/
   neighborTransposed_5[5] = freia_morpho_k6_0[3];                      /*0438*/
   neighborTransposed_5[4] = freia_morpho_k6_0[4];                      /*0439*/
   neighborTransposed_5[3] = freia_morpho_k6_0[5];                      /*0440*/
   neighborTransposed_5[2] = freia_morpho_k6_0[6];                      /*0441*/
   neighborTransposed_5[1] = freia_morpho_k6_0[7];                      /*0442*/
   neighborTransposed_5[0] = freia_morpho_k6_0[8];                      /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[8] = freia_morpho_k6_1[0];                      /*0471*/
   neighborTransposed_6[7] = freia_morpho_k6_1[1];                      /*0472*/
   neighborTransposed_6[6] = freia_morpho_k6_1[2];                      /*0473*/
   neighborTransposed_6[5] = freia_morpho_k6_1[3];                      /*0474*/
   neighborTransposed_6[4] = freia_morpho_k6_1[4];                      /*0475*/
   neighborTransposed_6[3] = freia_morpho_k6_1[5];                      /*0476*/
   neighborTransposed_6[2] = freia_morpho_k6_1[6];                      /*0477*/
   neighborTransposed_6[1] = freia_morpho_k6_1[7];                      /*0478*/
   neighborTransposed_6[0] = freia_morpho_k6_1[8];                      /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[8] = freia_morpho_k6_2[0];                      /*0507*/
   neighborTransposed_7[7] = freia_morpho_k6_2[1];                      /*0508*/
   neighborTransposed_7[6] = freia_morpho_k6_2[2];                      /*0509*/
   neighborTransposed_7[5] = freia_morpho_k6_2[3];                      /*0510*/
   neighborTransposed_7[4] = freia_morpho_k6_2[4];                      /*0511*/
   neighborTransposed_7[3] = freia_morpho_k6_2[5];                      /*0512*/
   neighborTransposed_7[2] = freia_morpho_k6_2[6];                      /*0513*/
   neighborTransposed_7[1] = freia_morpho_k6_2[7];                      /*0514*/
   neighborTransposed_7[0] = freia_morpho_k6_2[8];                      /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[8] = freia_morpho_k8_0[0];                      /*0566*/
   neighborTransposed_8[7] = freia_morpho_k8_0[1];                      /*0567*/
   neighborTransposed_8[6] = freia_morpho_k8_0[2];                      /*0568*/
   neighborTransposed_8[5] = freia_morpho_k8_0[3];                      /*0569*/
   neighborTransposed_8[4] = freia_morpho_k8_0[4];                      /*0570*/
   neighborTransposed_8[3] = freia_morpho_k8_0[5];                      /*0571*/
   neighborTransposed_8[2] = freia_morpho_k8_0[6];                      /*0572*/
   neighborTransposed_8[1] = freia_morpho_k8_0[7];                      /*0573*/
   neighborTransposed_8[0] = freia_morpho_k8_0[8];                      /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[8] = freia_morpho_k8_1[0];                      /*0602*/
   neighborTransposed_9[7] = freia_morpho_k8_1[1];                      /*0603*/
   neighborTransposed_9[6] = freia_morpho_k8_1[2];                      /*0604*/
   neighborTransposed_9[5] = freia_morpho_k8_1[3];                      /*0605*/
   neighborTransposed_9[4] = freia_morpho_k8_1[4];                      /*0606*/
   neighborTransposed_9[3] = freia_morpho_k8_1[5];                      /*0607*/
   neighborTransposed_9[2] = freia_morpho_k8_1[6];                      /*0608*/
   neighborTransposed_9[1] = freia_morpho_k8_1[7];                      /*0609*/
   neighborTransposed_9[0] = freia_morpho_k8_1[8];                      /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[8] = freia_morpho_k8_2[0];                     /*0638*/
   neighborTransposed_10[7] = freia_morpho_k8_2[1];                     /*0639*/
   neighborTransposed_10[6] = freia_morpho_k8_2[2];                     /*0640*/
   neighborTransposed_10[5] = freia_morpho_k8_2[3];                     /*0641*/
   neighborTransposed_10[4] = freia_morpho_k8_2[4];                     /*0642*/
   neighborTransposed_10[3] = freia_morpho_k8_2[5];                     /*0643*/
   neighborTransposed_10[2] = freia_morpho_k8_2[6];                     /*0644*/
   neighborTransposed_10[1] = freia_morpho_k8_2[7];                     /*0645*/
   neighborTransposed_10[0] = freia_morpho_k8_2[8];                     /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[8] = freia_morpho_k4_0[0];                     /*0674*/
   neighborTransposed_11[7] = freia_morpho_k4_0[1];                     /*0675*/
   neighborTransposed_11[6] = freia_morpho_k4_0[2];                     /*0676*/
   neighborTransposed_11[5] = freia_morpho_k4_0[3];                     /*0677*/
   neighborTransposed_11[4] = freia_morpho_k4_0[4];                     /*0678*/
   neighborTransposed_11[3] = freia_morpho_k4_0[5];                     /*0679*/
   neighborTransposed_11[2] = freia_morpho_k4_0[6];                     /*0680*/
   neighborTransposed_11[1] = freia_morpho_k4_0[7];                     /*0681*/
   neighborTransposed_11[0] = freia_morpho_k4_0[8];                     /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[8] = freia_morpho_k4_1[0];                     /*0710*/
   neighborTransposed_12[7] = freia_morpho_k4_1[1];                     /*0711*/
   neighborTransposed_12[6] = freia_morpho_k4_1[2];                     /*0712*/
   neighborTransposed_12[5] = freia_morpho_k4_1[3];                     /*0713*/
   neighborTransposed_12[4] = freia_morpho_k4_1[4];                     /*0714*/
   neighborTransposed_12[3] = freia_morpho_k4_1[5];                     /*0715*/
   neighborTransposed_12[2] = freia_morpho_k4_1[6];                     /*0716*/
   neighborTransposed_12[1] = freia_morpho_k4_1[7];                     /*0717*/
   neighborTransposed_12[0] = freia_morpho_k4_1[8];                     /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[8] = freia_morpho_k6_0[0];                     /*0746*/
   neighborTransposed_13[7] = freia_morpho_k6_0[1];                     /*0747*/
   neighborTransposed_13[6] = freia_morpho_k6_0[2];                     /*0748*/
   neighborTransposed_13[5] = freia_morpho_k6_0[3];                     /*0749*/
   neighborTransposed_13[4] = freia_morpho_k6_0[4];                     /*0750*/
   neighborTransposed_13[3] = freia_morpho_k6_0[5];                     /*0751*/
   neighborTransposed_13[2] = freia_morpho_k6_0[6];                     /*0752*/
   neighborTransposed_13[1] = freia_morpho_k6_0[7];                     /*0753*/
   neighborTransposed_13[0] = freia_morpho_k6_0[8];                     /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[8] = freia_morpho_k6_1[0];                     /*0782*/
   neighborTransposed_14[7] = freia_morpho_k6_1[1];                     /*0783*/
   neighborTransposed_14[6] = freia_morpho_k6_1[2];                     /*0784*/
   neighborTransposed_14[5] = freia_morpho_k6_1[3];                     /*0785*/
   neighborTransposed_14[4] = freia_morpho_k6_1[4];                     /*0786*/
   neighborTransposed_14[3] = freia_morpho_k6_1[5];                     /*0787*/
   neighborTransposed_14[2] = freia_morpho_k6_1[6];                     /*0788*/
   neighborTransposed_14[1] = freia_morpho_k6_1[7];                     /*0789*/
   neighborTransposed_14[0] = freia_morpho_k6_1[8];                     /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[8] = freia_morpho_k6_2[0];                     /*0818*/
   neighborTransposed_15[7] = freia_morpho_k6_2[1];                     /*0819*/
   neighborTransposed_15[6] = freia_morpho_k6_2[2];                     /*0820*/
   neighborTransposed_15[5] = freia_morpho_k6_2[3];                     /*0821*/
   neighborTransposed_15[4] = freia_morpho_k6_2[4];                     /*0822*/
   neighborTransposed_15[3] = freia_morpho_k6_2[5];                     /*0823*/
   neighborTransposed_15[2] = freia_morpho_k6_2[6];                     /*0824*/
   neighborTransposed_15[1] = freia_morpho_k6_2[7];                     /*0825*/
   neighborTransposed_15[0] = freia_morpho_k6_2[8];                     /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   freia_aipo_not(imWork1, imin);                                       /*0247*/
   
   
   freia_52_opencl_helper_D8_511(w1_0, imWork1);                        /*0266*/
   freia_52_opencl_helper_0_0_1(w1_0, w1_0_68, w1_0_58, w1_0_48, w1_0_38, w1_0_28, w1_0_18, w1_0_8, w1_0);           /*0267*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0268*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0269*/
   freia_52_opencl_helper_D8_56(w1_0_75, w1_0);                         /*0270*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0_68);                        /*0304*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0);                           /*0305*/
   freia_52_opencl_helper_D8_146(w1_0_65, w1_0);                        /*0306*/
   freia_52_opencl_helper_D8_84(w1_0, w1_0_58);                         /*0340*/
   freia_52_opencl_helper_D8_84(w1_0, w1_0);                            /*0341*/
   freia_52_opencl_helper_D8_84(w1_0_55, w1_0);                         /*0342*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0_48);                         /*0376*/
   freia_52_opencl_helper_D8_56(w1_0, w1_0);                            /*0377*/
   freia_52_opencl_helper_D8_56(w1_0_45, w1_0);                         /*0378*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0_38);                        /*0412*/
   freia_52_opencl_helper_D8_146(w1_0, w1_0);                           /*0413*/
   freia_52_opencl_helper_D8_146(w1_0_35, w1_0);                        /*0414*/
   freia_52_opencl_helper_D8_112(w1_0, w1_0_28);                        /*0448*/
   freia_52_opencl_helper_D8_112(w1_0, w1_0);                           /*0449*/
   freia_52_opencl_helper_D8_112(w1_0_25, w1_0);                        /*0450*/
   freia_52_opencl_helper_D8_168(w1_0, w1_0_18);                        /*0484*/
   freia_52_opencl_helper_D8_168(w1_0, w1_0);                           /*0485*/
   freia_52_opencl_helper_D8_168(w1_0_15, w1_0);                        /*0486*/
   freia_52_opencl_helper_D8_292(w1_0, w1_0_8);                         /*0520*/
   freia_52_opencl_helper_D8_292(w1_0, w1_0);                           /*0521*/
   freia_52_opencl_helper_D8_292(w1_0_5, w1_0);                         /*0522*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_75, neighborTransposed_8);            /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1_70, w1_1, neighborTransposed_8);            /*0592*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_65, neighborTransposed_9);            /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1_60, w1_1, neighborTransposed_9);            /*0628*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_55, neighborTransposed_10);           /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1_50, w1_1, neighborTransposed_10);           /*0664*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_45, neighborTransposed_11);           /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1_40, w1_1, neighborTransposed_11);           /*0700*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_35, neighborTransposed_12);           /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1_30, w1_1, neighborTransposed_12);           /*0736*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_25, neighborTransposed_13);           /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1_20, w1_1, neighborTransposed_13);           /*0772*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_15, neighborTransposed_14);           /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1_10, w1_1, neighborTransposed_14);           /*0808*/
   
   
   freia_aipo_erode_8c(w1_1, w1_0_5, neighborTransposed_15);            /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   freia_52_opencl_helper_0_0_3(imWork1, w1_1, w1_1_10, w1_1_20, w1_1_30, w1_1_40, w1_1_50, w1_1_60, w1_1_70, 255, &volcurrent);    /*0852*/

   ret_19 = 0;                                                          /*0864*/
   
   
   
   
   
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   err_3 |= _return28;                                                  /*0635*/
   
   
   err_3 |= _return29;                                                  /*0671*/
   
   
   err_3 |= _return25;                                                  /*0707*/
   
   
   err_3 |= _return26;                                                  /*0743*/
   
   
   err_3 |= _return22;                                                  /*0779*/
   
   
   err_3 |= _return23;                                                  /*0815*/
   
   
   err_3 |= _return24;                                                  /*0851*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   _return4 = err_2;                                                    /*0862*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w1_0_5);
   freia_common_destruct_data(w1_0_8);
   freia_common_destruct_data(w1_0_15);
   freia_common_destruct_data(w1_0_18);
   freia_common_destruct_data(w1_0_25);
   freia_common_destruct_data(w1_0_28);
   freia_common_destruct_data(w1_0_35);
   freia_common_destruct_data(w1_0_38);
   freia_common_destruct_data(w1_0_45);
   freia_common_destruct_data(w1_0_48);
   freia_common_destruct_data(w1_0_55);
   freia_common_destruct_data(w1_0_58);
   freia_common_destruct_data(w1_0_65);
   freia_common_destruct_data(w1_0_68);
   freia_common_destruct_data(w1_0_75);
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w1_1_10);
   freia_common_destruct_data(w1_1_20);
   freia_common_destruct_data(w1_1_30);
   freia_common_destruct_data(w1_1_40);
   freia_common_destruct_data(w1_1_50);
   freia_common_destruct_data(w1_1_60);
   freia_common_destruct_data(w1_1_70);
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      freia_52_opencl_helper_1_0_0(imWork1, imWork1, imin, &volcurrent);               /*0868*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_52_opencl_helper_2_0_0(imWork1, imWork1, imin, 2, 90, 255, 1);                /*0886*/
   // for display
   // threshold one these tophat
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}
#
# SIGMAC
#
#
# compile generated freia_52
#

! initial function

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imout_tophat, *imout_tophatLin, *imout_tophatLinRecon, *imWork1, *imWork2;    /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   int i_0, i_1;                                                        /*0023*/
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   int i_2, i_3;                                                        /*0027*/
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   freia_data2d *w1_0, *w2_0;                                           /*0031*/
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   int i_4;                                                             /*0037*/
   //PIPS generated variable
   uint32_t i_5, i_6;                                                   /*0039*/
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   int i_7;                                                             /*0045*/
   //PIPS generated variable
   uint32_t i_8, i_9;                                                   /*0047*/
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   int i_10;                                                            /*0053*/
   //PIPS generated variable
   uint32_t i_11, i_12;                                                 /*0055*/
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   int i_13;                                                            /*0061*/
   //PIPS generated variable
   uint32_t i_14, i_15;                                                 /*0063*/
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   int i_16;                                                            /*0069*/
   //PIPS generated variable
   uint32_t i_17, i_18;                                                 /*0071*/
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   int i_19;                                                            /*0077*/
   //PIPS generated variable
   uint32_t i_20, i_21;                                                 /*0079*/
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   int i_22;                                                            /*0085*/
   //PIPS generated variable
   uint32_t i_23, i_24;                                                 /*0087*/
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   int i_25;                                                            /*0093*/
   //PIPS generated variable
   uint32_t i_26, i_27;                                                 /*0095*/
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   freia_data2d *w1_1, *w2_1;                                           /*0099*/
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   int i_28;                                                            /*0105*/
   //PIPS generated variable
   uint32_t i_29, i_30;                                                 /*0107*/
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   int i_31;                                                            /*0113*/
   //PIPS generated variable
   uint32_t i_32, i_33;                                                 /*0115*/
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   int i_34;                                                            /*0121*/
   //PIPS generated variable
   uint32_t i_35, i_36;                                                 /*0123*/
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   int i_37;                                                            /*0129*/
   //PIPS generated variable
   uint32_t i_38, i_39;                                                 /*0131*/
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   int i_40;                                                            /*0137*/
   //PIPS generated variable
   uint32_t i_41, i_42;                                                 /*0139*/
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   int i_43;                                                            /*0145*/
   //PIPS generated variable
   uint32_t i_44, i_45;                                                 /*0147*/
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   int i_46;                                                            /*0153*/
   //PIPS generated variable
   uint32_t i_47, i_48;                                                 /*0155*/
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   int i_49;                                                            /*0161*/
   //PIPS generated variable
   uint32_t i_50, i_51;                                                 /*0163*/
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imout_tophat = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);         /*0179*/
   imout_tophatLinRecon = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);                /*0180*/
   imout_tophatLin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);      /*0181*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   imWork2 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0183*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   // 1st tophat
   
   
   freia_aipo_erode_8c(imWork1, imin, freia_morpho_kernel_8c);          /*0191*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0192*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0193*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0194*/
   freia_aipo_erode_8c(imWork1, imWork1, freia_morpho_kernel_8c);       /*0195*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0202*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0203*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0204*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0205*/
   freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);      /*0206*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   // freia_common_tx_image(imWork1, &fdout);
   
   
   freia_aipo_erode_8c(imout_tophat, imin, freia_morpho_kernel_8c);     /*0216*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0217*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0218*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0219*/
   freia_aipo_erode_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);            /*0220*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0227*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0228*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0229*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0230*/
   freia_aipo_dilate_8c(imout_tophat, imout_tophat, freia_morpho_kernel_8c);           /*0231*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/
   ret_1 |= freia_aipo_sub(imout_tophat, imin, imout_tophat);           /*0239*/
   
   
   _return2 = ret_1;                                                    /*0242*/
   freia_aipo_mul_const(imout_tophat, imout_tophat, 2);                 /*0243*/
   // for display
   
   // 2nd tophat
   err_0 |= freia_aipo_not(imWork1, imin);                              /*0247*/
   
   
   w1_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0250*/
   w2_0 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0251*/

   freia_aipo_set_constant(w2_0, 255);                                  /*0253*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0266*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0267*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0268*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0269*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_0);                 /*0270*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0277*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0278*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0279*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0280*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_0);               /*0281*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0289*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0302*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0303*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0304*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0305*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_1);                 /*0306*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0313*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0314*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0315*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0316*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_1);               /*0317*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/
   err_1 |= _return20;                                                  /*0324*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0325*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0338*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0339*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0340*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0341*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k8_2);                 /*0342*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0349*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0350*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0351*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0352*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_2);               /*0353*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/
   err_1 |= _return21;                                                  /*0360*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0361*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0374*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0375*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0376*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0377*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_0);                 /*0378*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0385*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0386*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0387*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0388*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_3);               /*0389*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/
   err_1 |= _return17;                                                  /*0396*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0397*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0410*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0411*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0412*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0413*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k4_1);                 /*0414*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0421*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0422*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0423*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0424*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_4);               /*0425*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/
   err_1 |= _return18;                                                  /*0432*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0433*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0446*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0447*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0448*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0449*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_0);                 /*0450*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0457*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0458*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0459*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0460*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_5);               /*0461*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/
   err_1 |= _return14;                                                  /*0468*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0469*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0482*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0483*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0484*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0485*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_1);                 /*0486*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0493*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0494*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0495*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0496*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_6);               /*0497*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/
   err_1 |= _return15;                                                  /*0504*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0505*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   freia_aipo_dilate_8c(w1_0, imWork1, freia_morpho_kernel_8c);         /*0518*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0519*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0520*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0521*/
   freia_aipo_dilate_8c(w1_0, w1_0, freia_morpho_k6_2);                 /*0522*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0529*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0530*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0531*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0532*/
   freia_aipo_erode_8c(w1_0, w1_0, neighborTransposed_7);               /*0533*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/
   err_1 |= _return16;                                                  /*0540*/
   err_1 |= freia_aipo_inf(w2_0, w2_0, w1_0);                           /*0541*/

   err_1 |= freia_aipo_copy(imWork1, w2_0);                             /*0543*/
   freia_common_destruct_data(w1_0);                                    /*0544*/
   freia_common_destruct_data(w2_0);                                    /*0545*/
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   err_0 |= freia_aipo_not(imWork1, imWork1);                           /*0550*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   freia_aipo_sub(imout_tophatLin, imin, imWork1);                      /*0553*/
   freia_aipo_mul_const(imout_tophatLin, imout_tophatLin, 2);           /*0554*/
   // for display
   
   // 3nd tophat
   err_2 |= freia_aipo_not(imWork1, imin);                              /*0558*/
   
   
   w1_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0561*/
   w2_1 = freia_common_create_data(imWork1->bpp, imWork1->widthWa, imWork1->heightWa);                /*0562*/

   freia_aipo_set_constant(w2_1, 255);                                  /*0564*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0577*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0578*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0579*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0580*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_0);                 /*0581*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0588*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0589*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0590*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0591*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_8);               /*0592*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0600*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0613*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0614*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0615*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0616*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_1);                 /*0617*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0624*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0625*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0626*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0627*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_9);               /*0628*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/
   err_3 |= _return28;                                                  /*0635*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0636*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0649*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0650*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0651*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0652*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k8_2);                 /*0653*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0660*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0661*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0662*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0663*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_10);              /*0664*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/
   err_3 |= _return29;                                                  /*0671*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0672*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0685*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0686*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0687*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0688*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_0);                 /*0689*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0696*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0697*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0698*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0699*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_11);              /*0700*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/
   err_3 |= _return25;                                                  /*0707*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0708*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0721*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0722*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0723*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0724*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k4_1);                 /*0725*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0732*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0733*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0734*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0735*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_12);              /*0736*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/
   err_3 |= _return26;                                                  /*0743*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0744*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0757*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0758*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0759*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0760*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_0);                 /*0761*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0768*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0769*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0770*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0771*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_13);              /*0772*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/
   err_3 |= _return22;                                                  /*0779*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0780*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0793*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0794*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0795*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0796*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_1);                 /*0797*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0804*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0805*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0806*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0807*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_14);              /*0808*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/
   err_3 |= _return23;                                                  /*0815*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0816*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   freia_aipo_dilate_8c(w1_1, imWork1, freia_morpho_kernel_8c);         /*0829*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0830*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0831*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0832*/
   freia_aipo_dilate_8c(w1_1, w1_1, freia_morpho_k6_2);                 /*0833*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0840*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0841*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0842*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0843*/
   freia_aipo_erode_8c(w1_1, w1_1, neighborTransposed_15);              /*0844*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   err_3 |= _return24;                                                  /*0851*/
   err_3 |= freia_aipo_inf(w2_1, w2_1, w1_1);                           /*0852*/

   err_3 |= freia_aipo_copy(imWork1, w2_1);                             /*0854*/
   freia_common_destruct_data(w1_1);                                    /*0855*/
   freia_common_destruct_data(w2_1);                                    /*0856*/
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   err_2 |= freia_aipo_not(imWork1, imWork1);                           /*0861*/
   _return4 = err_2;                                                    /*0862*/

   ret_19 = freia_aipo_global_vol(imWork1, &volcurrent);                /*0864*/
   do {                                                                 /*0882*/
      freia_aipo_dilate_8c(imWork1, imWork1, freia_morpho_kernel_8c);   /*0868*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      ret_20 |= freia_aipo_inf(imWork1, imWork1, imin);                 /*0874*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_aipo_global_vol(imWork1, &volcurrent);            /*0880*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   freia_aipo_sub(imout_tophatLinRecon, imin, imWork1);                 /*0886*/
   freia_aipo_mul_const(imout_tophatLinRecon, imout_tophatLinRecon, 2);                /*0887*/
   // for display
   // threshold one these tophat
   freia_aipo_threshold(imWork1, imout_tophatLinRecon, 90, 255, 1);     /*0890*/
   // the threshold over the source image
   freia_aipo_sup(imWork2, imWork1, imin);                              /*0892*/
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imout_tophat);                            /*0906*/
   freia_common_destruct_data(imout_tophatLin);                         /*0907*/
   freia_common_destruct_data(imout_tophatLinRecon);                    /*0908*/
   freia_common_destruct_data(imWork1);                                 /*0909*/
   freia_common_destruct_data(imWork2);                                 /*0910*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! graphs

// graph for dag "dag_0" of module "freia_52" in dot format
// DAG "dag_0": #i=1 #o=1 #c=207 #s=21 #I=2 #B=0 #A=0
digraph "dag_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "854 =" [shape=circle];
  "854 =" -> "861 !" [label="imWork1"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "854 =" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1"];
  "833 D8" [shape=box];
  "833 D8" -> "840 E8" [label="w1_1"];
  "832 D8" [shape=box];
  "832 D8" -> "833 D8" [label="w1_1"];
  "831 D8" [shape=box];
  "831 D8" -> "832 D8" [label="w1_1"];
  "830 D8" [shape=box];
  "830 D8" -> "831 D8" [label="w1_1"];
  "829 D8" [shape=box];
  "829 D8" -> "830 D8" [label="w1_1"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1"];
  "797 D8" [shape=box];
  "797 D8" -> "804 E8" [label="w1_1"];
  "796 D8" [shape=box];
  "796 D8" -> "797 D8" [label="w1_1"];
  "795 D8" [shape=box];
  "795 D8" -> "796 D8" [label="w1_1"];
  "794 D8" [shape=box];
  "794 D8" -> "795 D8" [label="w1_1"];
  "793 D8" [shape=box];
  "793 D8" -> "794 D8" [label="w1_1"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1"];
  "761 D8" [shape=box];
  "761 D8" -> "768 E8" [label="w1_1"];
  "760 D8" [shape=box];
  "760 D8" -> "761 D8" [label="w1_1"];
  "759 D8" [shape=box];
  "759 D8" -> "760 D8" [label="w1_1"];
  "758 D8" [shape=box];
  "758 D8" -> "759 D8" [label="w1_1"];
  "757 D8" [shape=box];
  "757 D8" -> "758 D8" [label="w1_1"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1"];
  "725 D8" [shape=box];
  "725 D8" -> "732 E8" [label="w1_1"];
  "724 D8" [shape=box];
  "724 D8" -> "725 D8" [label="w1_1"];
  "723 D8" [shape=box];
  "723 D8" -> "724 D8" [label="w1_1"];
  "722 D8" [shape=box];
  "722 D8" -> "723 D8" [label="w1_1"];
  "721 D8" [shape=box];
  "721 D8" -> "722 D8" [label="w1_1"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1"];
  "689 D8" [shape=box];
  "689 D8" -> "696 E8" [label="w1_1"];
  "688 D8" [shape=box];
  "688 D8" -> "689 D8" [label="w1_1"];
  "687 D8" [shape=box];
  "687 D8" -> "688 D8" [label="w1_1"];
  "686 D8" [shape=box];
  "686 D8" -> "687 D8" [label="w1_1"];
  "685 D8" [shape=box];
  "685 D8" -> "686 D8" [label="w1_1"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1"];
  "653 D8" [shape=box];
  "653 D8" -> "660 E8" [label="w1_1"];
  "652 D8" [shape=box];
  "652 D8" -> "653 D8" [label="w1_1"];
  "651 D8" [shape=box];
  "651 D8" -> "652 D8" [label="w1_1"];
  "650 D8" [shape=box];
  "650 D8" -> "651 D8" [label="w1_1"];
  "649 D8" [shape=box];
  "649 D8" -> "650 D8" [label="w1_1"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1"];
  "617 D8" [shape=box];
  "617 D8" -> "624 E8" [label="w1_1"];
  "616 D8" [shape=box];
  "616 D8" -> "617 D8" [label="w1_1"];
  "615 D8" [shape=box];
  "615 D8" -> "616 D8" [label="w1_1"];
  "614 D8" [shape=box];
  "614 D8" -> "615 D8" [label="w1_1"];
  "613 D8" [shape=box];
  "613 D8" -> "614 D8" [label="w1_1"];
  "600 <" [shape=trapezium,orientation=270];
  "600 <" -> "636 <" [label="w2_1"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <" [label="w1_1"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1"];
  "581 D8" [shape=box];
  "581 D8" -> "588 E8" [label="w1_1"];
  "580 D8" [shape=box];
  "580 D8" -> "581 D8" [label="w1_1"];
  "579 D8" [shape=box];
  "579 D8" -> "580 D8" [label="w1_1"];
  "578 D8" [shape=box];
  "578 D8" -> "579 D8" [label="w1_1"];
  "577 D8" [shape=box];
  "577 D8" -> "578 D8" [label="w1_1"];
  "564 C" [shape=trapezium,orientation=270];
  "564 C" -> "600 <" [label="w2_1"];
  "558 !" [shape=trapezium,orientation=270];
  "558 !" -> "829 D8" [label="imWork1"];
  "558 !" -> "793 D8" [label="imWork1"];
  "558 !" -> "757 D8" [label="imWork1"];
  "558 !" -> "721 D8" [label="imWork1"];
  "558 !" -> "685 D8" [label="imWork1"];
  "558 !" -> "649 D8" [label="imWork1"];
  "558 !" -> "613 D8" [label="imWork1"];
  "558 !" -> "577 D8" [label="imWork1"];
  "554 *_" [shape=trapezium,orientation=270];
  "553 -" [shape=trapezium,orientation=270];
  "553 -" -> "554 *_" [label="imout_tophatLin"];
  "550 !" [shape=trapezium,orientation=270];
  "550 !" -> "553 -" [label="imWork1"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "543 =" [shape=circle];
  "543 =" -> "550 !" [label="imWork1"];
  "541 <" [shape=trapezium,orientation=270];
  "541 <" -> "543 =" [label="w2_0"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "533 E8" [shape=box];
  "533 E8" -> "541 <" [label="w1_0"];
  "532 E8" [shape=box];
  "532 E8" -> "533 E8" [label="w1_0"];
  "531 E8" [shape=box];
  "531 E8" -> "532 E8" [label="w1_0"];
  "530 E8" [shape=box];
  "530 E8" -> "531 E8" [label="w1_0"];
  "529 E8" [shape=box];
  "529 E8" -> "530 E8" [label="w1_0"];
  "522 D8" [shape=box];
  "522 D8" -> "529 E8" [label="w1_0"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0"];
  "518 D8" [shape=box];
  "518 D8" -> "519 D8" [label="w1_0"];
  "505 <" [shape=trapezium,orientation=270];
  "505 <" -> "541 <" [label="w2_0"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "497 E8" [shape=box];
  "497 E8" -> "505 <" [label="w1_0"];
  "496 E8" [shape=box];
  "496 E8" -> "497 E8" [label="w1_0"];
  "495 E8" [shape=box];
  "495 E8" -> "496 E8" [label="w1_0"];
  "494 E8" [shape=box];
  "494 E8" -> "495 E8" [label="w1_0"];
  "493 E8" [shape=box];
  "493 E8" -> "494 E8" [label="w1_0"];
  "486 D8" [shape=box];
  "486 D8" -> "493 E8" [label="w1_0"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0"];
  "482 D8" [shape=box];
  "482 D8" -> "483 D8" [label="w1_0"];
  "469 <" [shape=trapezium,orientation=270];
  "469 <" -> "505 <" [label="w2_0"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "461 E8" [shape=box];
  "461 E8" -> "469 <" [label="w1_0"];
  "460 E8" [shape=box];
  "460 E8" -> "461 E8" [label="w1_0"];
  "459 E8" [shape=box];
  "459 E8" -> "460 E8" [label="w1_0"];
  "458 E8" [shape=box];
  "458 E8" -> "459 E8" [label="w1_0"];
  "457 E8" [shape=box];
  "457 E8" -> "458 E8" [label="w1_0"];
  "450 D8" [shape=box];
  "450 D8" -> "457 E8" [label="w1_0"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0"];
  "446 D8" [shape=box];
  "446 D8" -> "447 D8" [label="w1_0"];
  "433 <" [shape=trapezium,orientation=270];
  "433 <" -> "469 <" [label="w2_0"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "425 E8" [shape=box];
  "425 E8" -> "433 <" [label="w1_0"];
  "424 E8" [shape=box];
  "424 E8" -> "425 E8" [label="w1_0"];
  "423 E8" [shape=box];
  "423 E8" -> "424 E8" [label="w1_0"];
  "422 E8" [shape=box];
  "422 E8" -> "423 E8" [label="w1_0"];
  "421 E8" [shape=box];
  "421 E8" -> "422 E8" [label="w1_0"];
  "414 D8" [shape=box];
  "414 D8" -> "421 E8" [label="w1_0"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0"];
  "410 D8" [shape=box];
  "410 D8" -> "411 D8" [label="w1_0"];
  "397 <" [shape=trapezium,orientation=270];
  "397 <" -> "433 <" [label="w2_0"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "389 E8" [shape=box];
  "389 E8" -> "397 <" [label="w1_0"];
  "388 E8" [shape=box];
  "388 E8" -> "389 E8" [label="w1_0"];
  "387 E8" [shape=box];
  "387 E8" -> "388 E8" [label="w1_0"];
  "386 E8" [shape=box];
  "386 E8" -> "387 E8" [label="w1_0"];
  "385 E8" [shape=box];
  "385 E8" -> "386 E8" [label="w1_0"];
  "378 D8" [shape=box];
  "378 D8" -> "385 E8" [label="w1_0"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0"];
  "374 D8" [shape=box];
  "374 D8" -> "375 D8" [label="w1_0"];
  "361 <" [shape=trapezium,orientation=270];
  "361 <" -> "397 <" [label="w2_0"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "353 E8" [shape=box];
  "353 E8" -> "361 <" [label="w1_0"];
  "352 E8" [shape=box];
  "352 E8" -> "353 E8" [label="w1_0"];
  "351 E8" [shape=box];
  "351 E8" -> "352 E8" [label="w1_0"];
  "350 E8" [shape=box];
  "350 E8" -> "351 E8" [label="w1_0"];
  "349 E8" [shape=box];
  "349 E8" -> "350 E8" [label="w1_0"];
  "342 D8" [shape=box];
  "342 D8" -> "349 E8" [label="w1_0"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0"];
  "338 D8" [shape=box];
  "338 D8" -> "339 D8" [label="w1_0"];
  "325 <" [shape=trapezium,orientation=270];
  "325 <" -> "361 <" [label="w2_0"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "317 E8" [shape=box];
  "317 E8" -> "325 <" [label="w1_0"];
  "316 E8" [shape=box];
  "316 E8" -> "317 E8" [label="w1_0"];
  "315 E8" [shape=box];
  "315 E8" -> "316 E8" [label="w1_0"];
  "314 E8" [shape=box];
  "314 E8" -> "315 E8" [label="w1_0"];
  "313 E8" [shape=box];
  "313 E8" -> "314 E8" [label="w1_0"];
  "306 D8" [shape=box];
  "306 D8" -> "313 E8" [label="w1_0"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0"];
  "302 D8" [shape=box];
  "302 D8" -> "303 D8" [label="w1_0"];
  "289 <" [shape=trapezium,orientation=270];
  "289 <" -> "325 <" [label="w2_0"];
  "281 E8" [shape=box];
  "281 E8" -> "289 <" [label="w1_0"];
  "280 E8" [shape=box];
  "280 E8" -> "281 E8" [label="w1_0"];
  "279 E8" [shape=box];
  "279 E8" -> "280 E8" [label="w1_0"];
  "278 E8" [shape=box];
  "278 E8" -> "279 E8" [label="w1_0"];
  "277 E8" [shape=box];
  "277 E8" -> "278 E8" [label="w1_0"];
  "270 D8" [shape=box];
  "270 D8" -> "277 E8" [label="w1_0"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0"];
  "266 D8" [shape=box];
  "266 D8" -> "267 D8" [label="w1_0"];
  "253 C" [shape=trapezium,orientation=270];
  "253 C" -> "289 <" [label="w2_0"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "518 D8" [label="imWork1"];
  "247 !" -> "482 D8" [label="imWork1"];
  "247 !" -> "446 D8" [label="imWork1"];
  "247 !" -> "410 D8" [label="imWork1"];
  "247 !" -> "374 D8" [label="imWork1"];
  "247 !" -> "338 D8" [label="imWork1"];
  "247 !" -> "302 D8" [label="imWork1"];
  "247 !" -> "266 D8" [label="imWork1"];
  "243 *_" [shape=trapezium,orientation=270];
  "239 -" [shape=trapezium,orientation=270];
  "239 -" -> "243 *_" [label="imout_tophat"];
  "231 D8" [shape=box];
  "231 D8" -> "239 -" [label="imout_tophat"];
  "230 D8" [shape=box];
  "230 D8" -> "231 D8" [label="imout_tophat"];
  "229 D8" [shape=box];
  "229 D8" -> "230 D8" [label="imout_tophat"];
  "228 D8" [shape=box];
  "228 D8" -> "229 D8" [label="imout_tophat"];
  "227 D8" [shape=box];
  "227 D8" -> "228 D8" [label="imout_tophat"];
  "220 E8" [shape=box];
  "220 E8" -> "227 D8" [label="imout_tophat"];
  "219 E8" [shape=box];
  "219 E8" -> "220 E8" [label="imout_tophat"];
  "218 E8" [shape=box];
  "218 E8" -> "219 E8" [label="imout_tophat"];
  "217 E8" [shape=box];
  "217 E8" -> "218 E8" [label="imout_tophat"];
  "216 E8" [shape=box];
  "216 E8" -> "217 E8" [label="imout_tophat"];
  "206 D8" [shape=box];
  "205 D8" [shape=box];
  "205 D8" -> "206 D8" [label="imWork1"];
  "204 D8" [shape=box];
  "204 D8" -> "205 D8" [label="imWork1"];
  "203 D8" [shape=box];
  "203 D8" -> "204 D8" [label="imWork1"];
  "202 D8" [shape=box];
  "202 D8" -> "203 D8" [label="imWork1"];
  "195 E8" [shape=box];
  "195 E8" -> "202 D8" [label="imWork1"];
  "194 E8" [shape=box];
  "194 E8" -> "195 E8" [label="imWork1"];
  "193 E8" [shape=box];
  "193 E8" -> "194 E8" [label="imWork1"];
  "192 E8" [shape=box];
  "192 E8" -> "193 E8" [label="imWork1"];
  "191 E8" [shape=box];
  "191 E8" -> "192 E8" [label="imWork1"];
  "imin" -> "558 !";
  "imin" -> "553 -";
  "imin" -> "247 !";
  "imin" -> "239 -";
  "imin" -> "216 E8";
  "imin" -> "191 E8";
}
// graph for dag "dag_1" of module "freia_52" in dot format
// DAG "dag_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_2" of module "freia_52" in dot format
// DAG "dag_2": #i=2 #o=1 #c=4 #s=0 #I=0 #B=0 #A=0
digraph "dag_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "892 >" [shape=trapezium,orientation=270];
  "890 thr" [shape=parallelogram];
  "890 thr" -> "892 >" [label="imWork1"];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon"];
  "imWork1" -> "886 -";
  "imin" -> "892 >";
  "imin" -> "886 -";
}
// graph for dag "dag_cleaned_0" of module "freia_52" in dot format
// DAG "dag_cleaned_0": #i=1 #o=1 #c=84 #s=21 #I=0 #B=0 #A=0
digraph "dag_cleaned_0" {
  // inputs
  "imin" [shape=circle];

  // outputs
  "imWork1" [shape=circle];

  // computation vertices
  "864 vol" [shape=diamond];
  "861 !" [shape=trapezium,orientation=270];
  "861 !" -> "864 vol" [label="imWork1"];
  "861 !" -> "imWork1";
  "860 ?" [shape=none];
  "860 ?" -> "862 ?" [arrowhead=empty,label="err_2"];
  "859 ?" [shape=none];
  "859 ?" -> "860 ?" [arrowhead=empty,label="_return10"];
  "852 <" [shape=trapezium,orientation=270];
  "852 <" -> "861 !" [label="w2_1"];
  "851 ?" [shape=none];
  "851 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "844 E8" [shape=box];
  "844 E8" -> "852 <" [label="w1_1"];
  "843 E8" [shape=box];
  "843 E8" -> "844 E8" [label="w1_1_1"];
  "842 E8" [shape=box];
  "842 E8" -> "843 E8" [label="w1_1_2"];
  "841 E8" [shape=box];
  "841 E8" -> "842 E8" [label="w1_1_3"];
  "840 E8" [shape=box];
  "840 E8" -> "841 E8" [label="w1_1_4"];
  "816 <" [shape=trapezium,orientation=270];
  "816 <" -> "852 <" [label="w2_1_1"];
  "815 ?" [shape=none];
  "815 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "815 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "808 E8" [shape=box];
  "808 E8" -> "816 <" [label="w1_1_10"];
  "807 E8" [shape=box];
  "807 E8" -> "808 E8" [label="w1_1_11"];
  "806 E8" [shape=box];
  "806 E8" -> "807 E8" [label="w1_1_12"];
  "805 E8" [shape=box];
  "805 E8" -> "806 E8" [label="w1_1_13"];
  "804 E8" [shape=box];
  "804 E8" -> "805 E8" [label="w1_1_14"];
  "780 <" [shape=trapezium,orientation=270];
  "780 <" -> "816 <" [label="w2_1_2"];
  "779 ?" [shape=none];
  "779 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "779 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "772 E8" [shape=box];
  "772 E8" -> "780 <" [label="w1_1_20"];
  "771 E8" [shape=box];
  "771 E8" -> "772 E8" [label="w1_1_21"];
  "770 E8" [shape=box];
  "770 E8" -> "771 E8" [label="w1_1_22"];
  "769 E8" [shape=box];
  "769 E8" -> "770 E8" [label="w1_1_23"];
  "768 E8" [shape=box];
  "768 E8" -> "769 E8" [label="w1_1_24"];
  "744 <" [shape=trapezium,orientation=270];
  "744 <" -> "780 <" [label="w2_1_3"];
  "743 ?" [shape=none];
  "743 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "743 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "736 E8" [shape=box];
  "736 E8" -> "744 <" [label="w1_1_30"];
  "735 E8" [shape=box];
  "735 E8" -> "736 E8" [label="w1_1_31"];
  "734 E8" [shape=box];
  "734 E8" -> "735 E8" [label="w1_1_32"];
  "733 E8" [shape=box];
  "733 E8" -> "734 E8" [label="w1_1_33"];
  "732 E8" [shape=box];
  "732 E8" -> "733 E8" [label="w1_1_34"];
  "708 <" [shape=trapezium,orientation=270];
  "708 <" -> "744 <" [label="w2_1_4"];
  "707 ?" [shape=none];
  "707 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "707 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "700 E8" [shape=box];
  "700 E8" -> "708 <" [label="w1_1_40"];
  "699 E8" [shape=box];
  "699 E8" -> "700 E8" [label="w1_1_41"];
  "698 E8" [shape=box];
  "698 E8" -> "699 E8" [label="w1_1_42"];
  "697 E8" [shape=box];
  "697 E8" -> "698 E8" [label="w1_1_43"];
  "696 E8" [shape=box];
  "696 E8" -> "697 E8" [label="w1_1_44"];
  "672 <" [shape=trapezium,orientation=270];
  "672 <" -> "708 <" [label="w2_1_5"];
  "671 ?" [shape=none];
  "671 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "671 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "664 E8" [shape=box];
  "664 E8" -> "672 <" [label="w1_1_50"];
  "663 E8" [shape=box];
  "663 E8" -> "664 E8" [label="w1_1_51"];
  "662 E8" [shape=box];
  "662 E8" -> "663 E8" [label="w1_1_52"];
  "661 E8" [shape=box];
  "661 E8" -> "662 E8" [label="w1_1_53"];
  "660 E8" [shape=box];
  "660 E8" -> "661 E8" [label="w1_1_54"];
  "636 <" [shape=trapezium,orientation=270];
  "636 <" -> "672 <" [label="w2_1_6"];
  "635 ?" [shape=none];
  "635 ?" -> "859 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "851 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "815 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "779 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "743 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "707 ?" [arrowhead=empty,label="err_3"];
  "635 ?" -> "671 ?" [arrowhead=empty,label="err_3"];
  "628 E8" [shape=box];
  "628 E8" -> "636 <" [label="w1_1_60"];
  "627 E8" [shape=box];
  "627 E8" -> "628 E8" [label="w1_1_61"];
  "626 E8" [shape=box];
  "626 E8" -> "627 E8" [label="w1_1_62"];
  "625 E8" [shape=box];
  "625 E8" -> "626 E8" [label="w1_1_63"];
  "624 E8" [shape=box];
  "624 E8" -> "625 E8" [label="w1_1_64"];
  "600 <_" [shape=trapezium,orientation=270];
  "600 <_" -> "636 <" [label="w2_1_7"];
  "592 E8" [shape=box];
  "592 E8" -> "600 <_" [label="w1_1_70"];
  "591 E8" [shape=box];
  "591 E8" -> "592 E8" [label="w1_1_71"];
  "590 E8" [shape=box];
  "590 E8" -> "591 E8" [label="w1_1_72"];
  "589 E8" [shape=box];
  "589 E8" -> "590 E8" [label="w1_1_73"];
  "588 E8" [shape=box];
  "588 E8" -> "589 E8" [label="w1_1_74"];
  "549 ?" [shape=none];
  "549 ?" -> "551 ?" [arrowhead=empty,label="err_0"];
  "548 ?" [shape=none];
  "548 ?" -> "549 ?" [arrowhead=empty,label="_return9"];
  "540 ?" [shape=none];
  "540 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "522 D8" [shape=box];
  "522 D8" -> "840 E8" [label="w1_0_5"];
  "521 D8" [shape=box];
  "521 D8" -> "522 D8" [label="w1_0_6"];
  "520 D8" [shape=box];
  "520 D8" -> "521 D8" [label="w1_0_7"];
  "519 D8" [shape=box];
  "519 D8" -> "520 D8" [label="w1_0_8"];
  "504 ?" [shape=none];
  "504 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "504 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "486 D8" [shape=box];
  "486 D8" -> "804 E8" [label="w1_0_15"];
  "485 D8" [shape=box];
  "485 D8" -> "486 D8" [label="w1_0_16"];
  "484 D8" [shape=box];
  "484 D8" -> "485 D8" [label="w1_0_17"];
  "483 D8" [shape=box];
  "483 D8" -> "484 D8" [label="w1_0_18"];
  "468 ?" [shape=none];
  "468 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "468 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "450 D8" [shape=box];
  "450 D8" -> "768 E8" [label="w1_0_25"];
  "449 D8" [shape=box];
  "449 D8" -> "450 D8" [label="w1_0_26"];
  "448 D8" [shape=box];
  "448 D8" -> "449 D8" [label="w1_0_27"];
  "447 D8" [shape=box];
  "447 D8" -> "448 D8" [label="w1_0_28"];
  "432 ?" [shape=none];
  "432 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "432 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "414 D8" [shape=box];
  "414 D8" -> "732 E8" [label="w1_0_35"];
  "413 D8" [shape=box];
  "413 D8" -> "414 D8" [label="w1_0_36"];
  "412 D8" [shape=box];
  "412 D8" -> "413 D8" [label="w1_0_37"];
  "411 D8" [shape=box];
  "411 D8" -> "412 D8" [label="w1_0_38"];
  "396 ?" [shape=none];
  "396 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "396 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "378 D8" [shape=box];
  "378 D8" -> "696 E8" [label="w1_0_45"];
  "377 D8" [shape=box];
  "377 D8" -> "378 D8" [label="w1_0_46"];
  "376 D8" [shape=box];
  "376 D8" -> "377 D8" [label="w1_0_47"];
  "375 D8" [shape=box];
  "375 D8" -> "376 D8" [label="w1_0_48"];
  "360 ?" [shape=none];
  "360 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "360 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "342 D8" [shape=box];
  "342 D8" -> "660 E8" [label="w1_0_55"];
  "341 D8" [shape=box];
  "341 D8" -> "342 D8" [label="w1_0_56"];
  "340 D8" [shape=box];
  "340 D8" -> "341 D8" [label="w1_0_57"];
  "339 D8" [shape=box];
  "339 D8" -> "340 D8" [label="w1_0_58"];
  "324 ?" [shape=none];
  "324 ?" -> "548 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "540 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "504 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "468 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "432 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "396 ?" [arrowhead=empty,label="err_1"];
  "324 ?" -> "360 ?" [arrowhead=empty,label="err_1"];
  "306 D8" [shape=box];
  "306 D8" -> "624 E8" [label="w1_0_65"];
  "305 D8" [shape=box];
  "305 D8" -> "306 D8" [label="w1_0_66"];
  "304 D8" [shape=box];
  "304 D8" -> "305 D8" [label="w1_0_67"];
  "303 D8" [shape=box];
  "303 D8" -> "304 D8" [label="w1_0_68"];
  "270 D8" [shape=box];
  "270 D8" -> "588 E8" [label="w1_0_75"];
  "269 D8" [shape=box];
  "269 D8" -> "270 D8" [label="w1_0_76"];
  "268 D8" [shape=box];
  "268 D8" -> "269 D8" [label="w1_0_77"];
  "267 D8" [shape=box];
  "267 D8" -> "268 D8" [label="w1_0_78"];
  "266 D8" [shape=box];
  "266 D8" -> "519 D8" [label="w1_0_79"];
  "266 D8" -> "483 D8" [label="w1_0_79"];
  "266 D8" -> "447 D8" [label="w1_0_79"];
  "266 D8" -> "411 D8" [label="w1_0_79"];
  "266 D8" -> "375 D8" [label="w1_0_79"];
  "266 D8" -> "339 D8" [label="w1_0_79"];
  "266 D8" -> "303 D8" [label="w1_0_79"];
  "266 D8" -> "267 D8" [label="w1_0_79"];
  "247 !" [shape=trapezium,orientation=270];
  "247 !" -> "266 D8" [label="imWork1_5"];
  "imin" -> "247 !";
}
// graph for dag "dag_cleaned_1" of module "freia_52" in dot format
// DAG "dag_cleaned_1": #i=2 #o=1 #c=3 #s=2 #I=0 #B=0 #A=0
digraph "dag_cleaned_1" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "880 vol" [shape=diamond];
  "877 ?" [shape=none];
  "877 ?" -> "878 ?" [arrowhead=empty,label="_return7"];
  "874 <" [shape=trapezium,orientation=270];
  "874 <" -> "880 vol" [label="imWork1"];
  "874 <" -> "imWork1'";
  "imin" -> "874 <";
  "868 D8" [shape=box];
  "868 D8" -> "874 <" [label="imWork1_16"];
  "imWork1" -> "868 D8";
}
// graph for dag "dag_cleaned_2" of module "freia_52" in dot format
// DAG "dag_cleaned_2": #i=2 #o=1 #c=3 #s=0 #I=0 #B=0 #A=0
digraph "dag_cleaned_2" {
  // inputs
  "imWork1" [shape=circle];
  "imin" [shape=circle];

  // outputs
  "imWork1'" [shape=circle];

  // computation vertices
  "890 thr" [shape=parallelogram];
  "890 thr" -> "imWork1'";
  "887 *_" [shape=trapezium,orientation=270];
  "887 *_" -> "890 thr" [label="imout_tophatLinRecon"];
  "886 -" [shape=trapezium,orientation=270];
  "886 -" -> "887 *_" [label="imout_tophatLinRecon_1"];
  "imWork1" -> "886 -";
  "imin" -> "886 -";
}

! updated function for OPENCL

int freia_52(void)
{

   freia_dataio fdin, fdout;                                            /*0016*/
   freia_data2d *imin, *imWork1;                                        /*0017*/
   //PIPS generated variable
   freia_status _return0, _return1, _return2, _return3, _return4, _return5, _return6, _return7, _return8, _return9, _return10, _return11, _return12, _return13, _return14, _return15, _return16, _return17, _return18, _return19, _return20, _return21, _return22, _return23, _return24, _return25, _return26, _return27, _return28, _return29, _return30, _return31, _return32, _return33, _return34, _return35, _return36, _return37, _return38, _return39, _return40, _return41, _return42, _return43, _return44, _return45, _return46, _return47, _return48, _return49, _return50, _return51, _return52, _return53, _return54, _return55, _return56, _return57, _return58, _return59, _return60, _return61;               /*0019*/
   //PIPS generated variable
   freia_status ret_0;                                                  /*0021*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_1, ret_2;                                           /*0025*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_0 = 0;                                              /*0029*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_1 = 0, ret_3;                                       /*0033*/
   //PIPS generated variable
   int32_t neighborTransposed_0[9];                                     /*0035*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_4;                                                  /*0041*/
   //PIPS generated variable
   int32_t neighborTransposed_1[9];                                     /*0043*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_5;                                                  /*0049*/
   //PIPS generated variable
   int32_t neighborTransposed_2[9];                                     /*0051*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_6;                                                  /*0057*/
   //PIPS generated variable
   int32_t neighborTransposed_3[9];                                     /*0059*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_7;                                                  /*0065*/
   //PIPS generated variable
   int32_t neighborTransposed_4[9];                                     /*0067*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_8;                                                  /*0073*/
   //PIPS generated variable
   int32_t neighborTransposed_5[9];                                     /*0075*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_9;                                                  /*0081*/
   //PIPS generated variable
   int32_t neighborTransposed_6[9];                                     /*0083*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_10;                                                 /*0089*/
   //PIPS generated variable
   int32_t neighborTransposed_7[9];                                     /*0091*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_2 = 0;                                              /*0097*/
   //PIPS generated variable
   //PIPS generated variable
   freia_status err_3 = 0, ret_11;                                      /*0101*/
   //PIPS generated variable
   int32_t neighborTransposed_8[9];                                     /*0103*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_12;                                                 /*0109*/
   //PIPS generated variable
   int32_t neighborTransposed_9[9];                                     /*0111*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_13;                                                 /*0117*/
   //PIPS generated variable
   int32_t neighborTransposed_10[9];                                    /*0119*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_14;                                                 /*0125*/
   //PIPS generated variable
   int32_t neighborTransposed_11[9];                                    /*0127*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_15;                                                 /*0133*/
   //PIPS generated variable
   int32_t neighborTransposed_12[9];                                    /*0135*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_16;                                                 /*0141*/
   //PIPS generated variable
   int32_t neighborTransposed_13[9];                                    /*0143*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_17;                                                 /*0149*/
   //PIPS generated variable
   int32_t neighborTransposed_14[9];                                    /*0151*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_18;                                                 /*0157*/
   //PIPS generated variable
   int32_t neighborTransposed_15[9];                                    /*0159*/
   //PIPS generated variable
   //PIPS generated variable
   //PIPS generated variable
   freia_status ret_19 = 0;                                             /*0165*/
   //PIPS generated variable
   int32_t volcurrent, volprevious;                                     /*0167*/
   //PIPS generated variable
   freia_status ret_20;                                                 /*0169*/
   //PIPS generated variable
   int i_52;                                                            /*0171*/

   freia_common_open_input(&fdin, 0);                                   /*0173*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, fdin.framebpp);             /*0174*/
   
   // there should be a freia_initialize()?
   // for opencl freia_op_init_opencl(0xffffffff, 2, false, fdin.framewidth, fdin.frameheight);
   imin = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);  /*0178*/
   imWork1 = freia_common_create_data(fdin.framebpp, fdin.framewidth, fdin.frameheight);              /*0182*/
   
   // input
   freia_common_rx_image(imin, &fdin);                                  /*0186*/
   
   
   _return6 = 0;                                                        /*0198*/
   ret_0 = 0;                                                           /*0199*/
   
   
   _return5 = 0;                                                        /*0209*/
   
   
   _return1 = ret_0;                                                    /*0212*/
   
   
   _return13 = 0;                                                       /*0223*/
   ret_2 = 0;                                                           /*0224*/
   
   
   _return11 = 0;                                                       /*0234*/
   
   
   _return8 = ret_2;                                                    /*0237*/
   ret_1 = _return8;                                                    /*0238*/

   neighborTransposed_0[-0+8] = freia_morpho_k8_0[0];                   /*0255*/
   neighborTransposed_0[-1+8] = freia_morpho_k8_0[1];                   /*0256*/
   neighborTransposed_0[-2+8] = freia_morpho_k8_0[2];                   /*0257*/
   neighborTransposed_0[-3+8] = freia_morpho_k8_0[3];                   /*0258*/
   neighborTransposed_0[-4+8] = freia_morpho_k8_0[4];                   /*0259*/
   neighborTransposed_0[-5+8] = freia_morpho_k8_0[5];                   /*0260*/
   neighborTransposed_0[-6+8] = freia_morpho_k8_0[6];                   /*0261*/
   neighborTransposed_0[-7+8] = freia_morpho_k8_0[7];                   /*0262*/
   neighborTransposed_0[-8+8] = freia_morpho_k8_0[8];                   /*0263*/
   
   
   _return35 = 0;                                                       /*0273*/
   ret_3 = 0;                                                           /*0274*/
   
   
   _return51 = 0;                                                       /*0284*/
   
   
   _return19 = ret_3;                                                   /*0287*/
   err_1 |= _return19;                                                  /*0288*/

   neighborTransposed_1[-0+8] = freia_morpho_k8_1[0];                   /*0291*/
   neighborTransposed_1[-1+8] = freia_morpho_k8_1[1];                   /*0292*/
   neighborTransposed_1[-2+8] = freia_morpho_k8_1[2];                   /*0293*/
   neighborTransposed_1[-3+8] = freia_morpho_k8_1[3];                   /*0294*/
   neighborTransposed_1[-4+8] = freia_morpho_k8_1[4];                   /*0295*/
   neighborTransposed_1[-5+8] = freia_morpho_k8_1[5];                   /*0296*/
   neighborTransposed_1[-6+8] = freia_morpho_k8_1[6];                   /*0297*/
   neighborTransposed_1[-7+8] = freia_morpho_k8_1[7];                   /*0298*/
   neighborTransposed_1[-8+8] = freia_morpho_k8_1[8];                   /*0299*/
   
   
   _return36 = 0;                                                       /*0309*/
   ret_4 = 0;                                                           /*0310*/
   
   
   _return52 = 0;                                                       /*0320*/
   
   
   _return20 = ret_4;                                                   /*0323*/

   neighborTransposed_2[-0+8] = freia_morpho_k8_2[0];                   /*0327*/
   neighborTransposed_2[-1+8] = freia_morpho_k8_2[1];                   /*0328*/
   neighborTransposed_2[-2+8] = freia_morpho_k8_2[2];                   /*0329*/
   neighborTransposed_2[-3+8] = freia_morpho_k8_2[3];                   /*0330*/
   neighborTransposed_2[-4+8] = freia_morpho_k8_2[4];                   /*0331*/
   neighborTransposed_2[-5+8] = freia_morpho_k8_2[5];                   /*0332*/
   neighborTransposed_2[-6+8] = freia_morpho_k8_2[6];                   /*0333*/
   neighborTransposed_2[-7+8] = freia_morpho_k8_2[7];                   /*0334*/
   neighborTransposed_2[-8+8] = freia_morpho_k8_2[8];                   /*0335*/
   
   
   _return37 = 0;                                                       /*0345*/
   ret_5 = 0;                                                           /*0346*/
   
   
   _return53 = 0;                                                       /*0356*/
   
   
   _return21 = ret_5;                                                   /*0359*/

   neighborTransposed_3[-0+8] = freia_morpho_k4_0[0];                   /*0363*/
   neighborTransposed_3[-1+8] = freia_morpho_k4_0[1];                   /*0364*/
   neighborTransposed_3[-2+8] = freia_morpho_k4_0[2];                   /*0365*/
   neighborTransposed_3[-3+8] = freia_morpho_k4_0[3];                   /*0366*/
   neighborTransposed_3[-4+8] = freia_morpho_k4_0[4];                   /*0367*/
   neighborTransposed_3[-5+8] = freia_morpho_k4_0[5];                   /*0368*/
   neighborTransposed_3[-6+8] = freia_morpho_k4_0[6];                   /*0369*/
   neighborTransposed_3[-7+8] = freia_morpho_k4_0[7];                   /*0370*/
   neighborTransposed_3[-8+8] = freia_morpho_k4_0[8];                   /*0371*/
   
   
   _return33 = 0;                                                       /*0381*/
   ret_6 = 0;                                                           /*0382*/
   
   
   _return49 = 0;                                                       /*0392*/
   
   
   _return17 = ret_6;                                                   /*0395*/

   neighborTransposed_4[-0+8] = freia_morpho_k4_1[0];                   /*0399*/
   neighborTransposed_4[-1+8] = freia_morpho_k4_1[1];                   /*0400*/
   neighborTransposed_4[-2+8] = freia_morpho_k4_1[2];                   /*0401*/
   neighborTransposed_4[-3+8] = freia_morpho_k4_1[3];                   /*0402*/
   neighborTransposed_4[-4+8] = freia_morpho_k4_1[4];                   /*0403*/
   neighborTransposed_4[-5+8] = freia_morpho_k4_1[5];                   /*0404*/
   neighborTransposed_4[-6+8] = freia_morpho_k4_1[6];                   /*0405*/
   neighborTransposed_4[-7+8] = freia_morpho_k4_1[7];                   /*0406*/
   neighborTransposed_4[-8+8] = freia_morpho_k4_1[8];                   /*0407*/
   
   
   _return34 = 0;                                                       /*0417*/
   ret_7 = 0;                                                           /*0418*/
   
   
   _return50 = 0;                                                       /*0428*/
   
   
   _return18 = ret_7;                                                   /*0431*/

   neighborTransposed_5[-0+8] = freia_morpho_k6_0[0];                   /*0435*/
   neighborTransposed_5[-1+8] = freia_morpho_k6_0[1];                   /*0436*/
   neighborTransposed_5[-2+8] = freia_morpho_k6_0[2];                   /*0437*/
   neighborTransposed_5[-3+8] = freia_morpho_k6_0[3];                   /*0438*/
   neighborTransposed_5[-4+8] = freia_morpho_k6_0[4];                   /*0439*/
   neighborTransposed_5[-5+8] = freia_morpho_k6_0[5];                   /*0440*/
   neighborTransposed_5[-6+8] = freia_morpho_k6_0[6];                   /*0441*/
   neighborTransposed_5[-7+8] = freia_morpho_k6_0[7];                   /*0442*/
   neighborTransposed_5[-8+8] = freia_morpho_k6_0[8];                   /*0443*/
   
   
   _return30 = 0;                                                       /*0453*/
   ret_8 = 0;                                                           /*0454*/
   
   
   _return46 = 0;                                                       /*0464*/
   
   
   _return14 = ret_8;                                                   /*0467*/

   neighborTransposed_6[-0+8] = freia_morpho_k6_1[0];                   /*0471*/
   neighborTransposed_6[-1+8] = freia_morpho_k6_1[1];                   /*0472*/
   neighborTransposed_6[-2+8] = freia_morpho_k6_1[2];                   /*0473*/
   neighborTransposed_6[-3+8] = freia_morpho_k6_1[3];                   /*0474*/
   neighborTransposed_6[-4+8] = freia_morpho_k6_1[4];                   /*0475*/
   neighborTransposed_6[-5+8] = freia_morpho_k6_1[5];                   /*0476*/
   neighborTransposed_6[-6+8] = freia_morpho_k6_1[6];                   /*0477*/
   neighborTransposed_6[-7+8] = freia_morpho_k6_1[7];                   /*0478*/
   neighborTransposed_6[-8+8] = freia_morpho_k6_1[8];                   /*0479*/
   
   
   _return31 = 0;                                                       /*0489*/
   ret_9 = 0;                                                           /*0490*/
   
   
   _return47 = 0;                                                       /*0500*/
   
   
   _return15 = ret_9;                                                   /*0503*/

   neighborTransposed_7[-0+8] = freia_morpho_k6_2[0];                   /*0507*/
   neighborTransposed_7[-1+8] = freia_morpho_k6_2[1];                   /*0508*/
   neighborTransposed_7[-2+8] = freia_morpho_k6_2[2];                   /*0509*/
   neighborTransposed_7[-3+8] = freia_morpho_k6_2[3];                   /*0510*/
   neighborTransposed_7[-4+8] = freia_morpho_k6_2[4];                   /*0511*/
   neighborTransposed_7[-5+8] = freia_morpho_k6_2[5];                   /*0512*/
   neighborTransposed_7[-6+8] = freia_morpho_k6_2[6];                   /*0513*/
   neighborTransposed_7[-7+8] = freia_morpho_k6_2[7];                   /*0514*/
   neighborTransposed_7[-8+8] = freia_morpho_k6_2[8];                   /*0515*/
   
   
   _return32 = 0;                                                       /*0525*/
   ret_10 = 0;                                                          /*0526*/
   
   
   _return48 = 0;                                                       /*0536*/
   
   
   _return16 = ret_10;                                                  /*0539*/

   neighborTransposed_8[-0+8] = freia_morpho_k8_0[0];                   /*0566*/
   neighborTransposed_8[-1+8] = freia_morpho_k8_0[1];                   /*0567*/
   neighborTransposed_8[-2+8] = freia_morpho_k8_0[2];                   /*0568*/
   neighborTransposed_8[-3+8] = freia_morpho_k8_0[3];                   /*0569*/
   neighborTransposed_8[-4+8] = freia_morpho_k8_0[4];                   /*0570*/
   neighborTransposed_8[-5+8] = freia_morpho_k8_0[5];                   /*0571*/
   neighborTransposed_8[-6+8] = freia_morpho_k8_0[6];                   /*0572*/
   neighborTransposed_8[-7+8] = freia_morpho_k8_0[7];                   /*0573*/
   neighborTransposed_8[-8+8] = freia_morpho_k8_0[8];                   /*0574*/
   
   
   _return43 = 0;                                                       /*0584*/
   ret_11 = 0;                                                          /*0585*/
   
   
   _return59 = 0;                                                       /*0595*/
   
   
   _return27 = ret_11;                                                  /*0598*/
   err_3 |= _return27;                                                  /*0599*/

   neighborTransposed_9[-0+8] = freia_morpho_k8_1[0];                   /*0602*/
   neighborTransposed_9[-1+8] = freia_morpho_k8_1[1];                   /*0603*/
   neighborTransposed_9[-2+8] = freia_morpho_k8_1[2];                   /*0604*/
   neighborTransposed_9[-3+8] = freia_morpho_k8_1[3];                   /*0605*/
   neighborTransposed_9[-4+8] = freia_morpho_k8_1[4];                   /*0606*/
   neighborTransposed_9[-5+8] = freia_morpho_k8_1[5];                   /*0607*/
   neighborTransposed_9[-6+8] = freia_morpho_k8_1[6];                   /*0608*/
   neighborTransposed_9[-7+8] = freia_morpho_k8_1[7];                   /*0609*/
   neighborTransposed_9[-8+8] = freia_morpho_k8_1[8];                   /*0610*/
   
   
   _return44 = 0;                                                       /*0620*/
   ret_12 = 0;                                                          /*0621*/
   
   
   _return60 = 0;                                                       /*0631*/
   
   
   _return28 = ret_12;                                                  /*0634*/

   neighborTransposed_10[-0+8] = freia_morpho_k8_2[0];                  /*0638*/
   neighborTransposed_10[-1+8] = freia_morpho_k8_2[1];                  /*0639*/
   neighborTransposed_10[-2+8] = freia_morpho_k8_2[2];                  /*0640*/
   neighborTransposed_10[-3+8] = freia_morpho_k8_2[3];                  /*0641*/
   neighborTransposed_10[-4+8] = freia_morpho_k8_2[4];                  /*0642*/
   neighborTransposed_10[-5+8] = freia_morpho_k8_2[5];                  /*0643*/
   neighborTransposed_10[-6+8] = freia_morpho_k8_2[6];                  /*0644*/
   neighborTransposed_10[-7+8] = freia_morpho_k8_2[7];                  /*0645*/
   neighborTransposed_10[-8+8] = freia_morpho_k8_2[8];                  /*0646*/
   
   
   _return45 = 0;                                                       /*0656*/
   ret_13 = 0;                                                          /*0657*/
   
   
   _return61 = 0;                                                       /*0667*/
   
   
   _return29 = ret_13;                                                  /*0670*/

   neighborTransposed_11[-0+8] = freia_morpho_k4_0[0];                  /*0674*/
   neighborTransposed_11[-1+8] = freia_morpho_k4_0[1];                  /*0675*/
   neighborTransposed_11[-2+8] = freia_morpho_k4_0[2];                  /*0676*/
   neighborTransposed_11[-3+8] = freia_morpho_k4_0[3];                  /*0677*/
   neighborTransposed_11[-4+8] = freia_morpho_k4_0[4];                  /*0678*/
   neighborTransposed_11[-5+8] = freia_morpho_k4_0[5];                  /*0679*/
   neighborTransposed_11[-6+8] = freia_morpho_k4_0[6];                  /*0680*/
   neighborTransposed_11[-7+8] = freia_morpho_k4_0[7];                  /*0681*/
   neighborTransposed_11[-8+8] = freia_morpho_k4_0[8];                  /*0682*/
   
   
   _return41 = 0;                                                       /*0692*/
   ret_14 = 0;                                                          /*0693*/
   
   
   _return57 = 0;                                                       /*0703*/
   
   
   _return25 = ret_14;                                                  /*0706*/

   neighborTransposed_12[-0+8] = freia_morpho_k4_1[0];                  /*0710*/
   neighborTransposed_12[-1+8] = freia_morpho_k4_1[1];                  /*0711*/
   neighborTransposed_12[-2+8] = freia_morpho_k4_1[2];                  /*0712*/
   neighborTransposed_12[-3+8] = freia_morpho_k4_1[3];                  /*0713*/
   neighborTransposed_12[-4+8] = freia_morpho_k4_1[4];                  /*0714*/
   neighborTransposed_12[-5+8] = freia_morpho_k4_1[5];                  /*0715*/
   neighborTransposed_12[-6+8] = freia_morpho_k4_1[6];                  /*0716*/
   neighborTransposed_12[-7+8] = freia_morpho_k4_1[7];                  /*0717*/
   neighborTransposed_12[-8+8] = freia_morpho_k4_1[8];                  /*0718*/
   
   
   _return42 = 0;                                                       /*0728*/
   ret_15 = 0;                                                          /*0729*/
   
   
   _return58 = 0;                                                       /*0739*/
   
   
   _return26 = ret_15;                                                  /*0742*/

   neighborTransposed_13[-0+8] = freia_morpho_k6_0[0];                  /*0746*/
   neighborTransposed_13[-1+8] = freia_morpho_k6_0[1];                  /*0747*/
   neighborTransposed_13[-2+8] = freia_morpho_k6_0[2];                  /*0748*/
   neighborTransposed_13[-3+8] = freia_morpho_k6_0[3];                  /*0749*/
   neighborTransposed_13[-4+8] = freia_morpho_k6_0[4];                  /*0750*/
   neighborTransposed_13[-5+8] = freia_morpho_k6_0[5];                  /*0751*/
   neighborTransposed_13[-6+8] = freia_morpho_k6_0[6];                  /*0752*/
   neighborTransposed_13[-7+8] = freia_morpho_k6_0[7];                  /*0753*/
   neighborTransposed_13[-8+8] = freia_morpho_k6_0[8];                  /*0754*/
   
   
   _return38 = 0;                                                       /*0764*/
   ret_16 = 0;                                                          /*0765*/
   
   
   _return54 = 0;                                                       /*0775*/
   
   
   _return22 = ret_16;                                                  /*0778*/

   neighborTransposed_14[-0+8] = freia_morpho_k6_1[0];                  /*0782*/
   neighborTransposed_14[-1+8] = freia_morpho_k6_1[1];                  /*0783*/
   neighborTransposed_14[-2+8] = freia_morpho_k6_1[2];                  /*0784*/
   neighborTransposed_14[-3+8] = freia_morpho_k6_1[3];                  /*0785*/
   neighborTransposed_14[-4+8] = freia_morpho_k6_1[4];                  /*0786*/
   neighborTransposed_14[-5+8] = freia_morpho_k6_1[5];                  /*0787*/
   neighborTransposed_14[-6+8] = freia_morpho_k6_1[6];                  /*0788*/
   neighborTransposed_14[-7+8] = freia_morpho_k6_1[7];                  /*0789*/
   neighborTransposed_14[-8+8] = freia_morpho_k6_1[8];                  /*0790*/
   
   
   _return39 = 0;                                                       /*0800*/
   ret_17 = 0;                                                          /*0801*/
   
   
   _return55 = 0;                                                       /*0811*/
   
   
   _return23 = ret_17;                                                  /*0814*/

   neighborTransposed_15[-0+8] = freia_morpho_k6_2[0];                  /*0818*/
   neighborTransposed_15[-1+8] = freia_morpho_k6_2[1];                  /*0819*/
   neighborTransposed_15[-2+8] = freia_morpho_k6_2[2];                  /*0820*/
   neighborTransposed_15[-3+8] = freia_morpho_k6_2[3];                  /*0821*/
   neighborTransposed_15[-4+8] = freia_morpho_k6_2[4];                  /*0822*/
   neighborTransposed_15[-5+8] = freia_morpho_k6_2[5];                  /*0823*/
   neighborTransposed_15[-6+8] = freia_morpho_k6_2[6];                  /*0824*/
   neighborTransposed_15[-7+8] = freia_morpho_k6_2[7];                  /*0825*/
   neighborTransposed_15[-8+8] = freia_morpho_k6_2[8];                  /*0826*/
   
   
   _return40 = 0;                                                       /*0836*/
   ret_18 = 0;                                                          /*0837*/
   
   
   _return56 = 0;                                                       /*0847*/
   
   
   _return24 = ret_18;                                                  /*0850*/
   
   
   
   
   
   // 1st tophat
   
   
   
   
   // freia_common_tx_image(imWork1, &fdout);
   
   
   
   
   
   
   _return2 = ret_1;                                                    /*0242*/
   // for display
   
   // 2nd tophat
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   ret_19 = freia_mppa_launch(0, 1, 1, 0, 1, imin, imWork1, &volcurrent);              /*0864*/
   
   
   
   
   
   
   
   err_1 |= _return20;                                                  /*0324*/
   
   
   
   
   err_1 |= _return21;                                                  /*0360*/
   
   
   
   
   err_1 |= _return17;                                                  /*0396*/
   
   
   
   
   err_1 |= _return18;                                                  /*0432*/
   
   
   
   
   err_1 |= _return14;                                                  /*0468*/
   
   
   
   
   err_1 |= _return15;                                                  /*0504*/
   
   
   
   
   err_1 |= _return16;                                                  /*0540*/
   
   
   
   _return9 = err_1;                                                    /*0548*/
   err_0 |= _return9;                                                   /*0549*/
   _return3 = err_0;                                                    /*0551*/
   // freia_common_tx_image(imWork1, &fdout);
   // for display
   
   // 3nd tophat
   
   
   
   
   
   err_3 |= _return28;                                                  /*0635*/
   
   
   err_3 |= _return29;                                                  /*0671*/
   
   
   err_3 |= _return25;                                                  /*0707*/
   
   
   err_3 |= _return26;                                                  /*0743*/
   
   
   err_3 |= _return22;                                                  /*0779*/
   
   
   err_3 |= _return23;                                                  /*0815*/
   
   
   err_3 |= _return24;                                                  /*0851*/
   
   
   
   _return10 = err_3;                                                   /*0859*/
   err_2 |= _return10;                                                  /*0860*/
   _return4 = err_2;                                                    /*0862*/
   do {                                                                 /*0882*/
      i_52 = 1;                                                         /*0869*/
      
      
      _return12 = 0;                                                    /*0872*/
      ret_20 = 0;                                                       /*0873*/
      volprevious = volcurrent;                                         /*0879*/
      ret_19 |= freia_mppa_launch(1, 2, 1, 0, 1, imWork1, imin, imWork1, &volcurrent);                /*0880*/
      
      
      _return7 = ret_20;                                                /*0877*/
      ret_19 |= _return7;                                               /*0878*/
   }
   while (volcurrent!=volprevious);                                     /*0882*/
   
   
   _return0 = ret_19;                                                   /*0885*/
   // for display
   // threshold one these tophat
   freia_mppa_launch(2, 2, 1, 0, 0, imWork1, imin, imWork1);            /*0890*/
   // the threshold over the source image
   
   // output
   freia_common_tx_image(imin, &fdout);                                 /*0895*/
   freia_common_tx_image(imWork1, &fdout);                              /*0896*/
   
   
   
   
   
   
   
   // cleanup
   freia_common_destruct_data(imin);                                    /*0905*/
   freia_common_destruct_data(imWork1);                                 /*0909*/

   freia_common_close_input(&fdin);                                     /*0912*/
   freia_common_close_output(&fdout);                                   /*0913*/

   return 0;                                                            /*0915*/
}

! Sigma-C subgraphs for OPENCL

/* C INCLUDES */
#include <stdio.h>

/* SIGMA-C INCLUDES */
#include "sigmacAgents.h"


// code module=freia_52 fname=freia_52_sigmac_helper_0 split=0


/*#####################################################################*/
/*################ freia_52_sigmac_helper_0_0 Subgraph ################*/
/*#####################################################################*/

AGENT_MERGE_ARITH(agent_compound_0_0, int16_t, 3, 1, 
  int16_t pi0 = inp[0][i];
  int16_t pi1 = inp[1][i];
  int16_t pi2 = inp[2][i];
  int16_t po0 = PIXEL_INFC(pi0, 255);
  int16_t po1 = PIXEL_INF(po0, pi1);
  int16_t po2 = PIXEL_INF(po1, pi2);
  outp[0][i] = po2;
);

AGENT_MERGE_ARITH(agent_compound_0_1, int16_t, 4, 1, 
  int16_t pi0 = inp[0][i];
  int16_t pi1 = inp[1][i];
  int16_t pi2 = inp[2][i];
  int16_t pi3 = inp[3][i];
  int16_t po0 = PIXEL_INF(pi1, pi0);
  int16_t po1 = PIXEL_INF(po0, pi2);
  int16_t po2 = PIXEL_INF(po1, pi3);
  outp[0][i] = po2;
);

AGENT_MERGE_ARITH(agent_compound_0_2, int16_t, 3, 1, 
  int16_t pi0 = inp[0][i];
  int16_t pi1 = inp[1][i];
  int16_t pi2 = inp[2][i];
  int16_t po0 = PIXEL_INF(pi1, pi0);
  int16_t po1 = PIXEL_INF(po0, pi2);
  int16_t po2 = PIXEL_NOT(po1);
  outp[0][i] = po2;
);


#define pi0_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi0_0, int16_t)


#define pi1_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi1_0, int16_t)


#define pi2_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi2_0, int16_t)


#define pi3_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi3_0, int16_t)


#define pi4_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi4_0, int16_t)


#define pi5_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi5_0, int16_t)


#define pi6_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi6_0, int16_t)


#define pi8_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi8_0, int16_t)


#define pi9_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\

CUSTOM_MORPHO_AGENT(pi9_0, int16_t)


#define pi10_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi10_0, int16_t)


#define pi11_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\

CUSTOM_MORPHO_AGENT(pi11_0, int16_t)


#define pi12_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\

CUSTOM_MORPHO_AGENT(pi12_0, int16_t)


#define pi13_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi13_0, int16_t)


#define pi14_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\

CUSTOM_MORPHO_AGENT(pi14_0, int16_t)


#define pi15_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\

CUSTOM_MORPHO_AGENT(pi15_0, int16_t)


#define pi16_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi16_0, int16_t)


#define pi17_0(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi17_0, int16_t)

subgraph
freia_52_sigmac_helper_0_0
(char pipein[255],
 char pipeout[255],
 int width,
 int height,
 size_t sizeMax,
 char pipeparin[255],
 char pipeparout[255])
{

  map {
    agent lhin = new Launcher_In(pipein, 1, width, height);
    agent strin = new Streamer_In(width, height, 1);
    connect (lhin.param, strin.input);
    SigmaC_agent_setUnitType(strin,"k1-I/O");
    agent lhout = new Launcher_Out(pipeout, 1, width, height);
    agent strout = new Streamer_Out(width, height, 1);
    connect (strout.output, lhout.result);
    SigmaC_agent_setUnitType(strout,"k1-I/O");

    agent mr = new Measures_Retriever(pipeparout, 1);
    agent jo = new Join<int32_t>(1, 1);
    SigmaC_agent_setUnitType(jo,"k1-I/O");
    connect (jo.output, mr.input);

    // parameters declaration...
    int16_t pi0[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi1[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi2[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi3[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi4[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi5[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi6[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi7 = 255;
    int16_t pi8[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    int16_t pi9[9] = { 1, 0, 0, 1, 0, 0, 1, 0, 0 };
    int16_t pi10[9] = { 0, 1, 0, 1, 0, 1, 0, 0, 0 };
    int16_t pi11[9] = { 0, 0, 1, 1, 1, 0, 0, 0, 0 };
    int16_t pi12[9] = { 0, 1, 0, 0, 1, 0, 0, 1, 0 };
    int16_t pi13[9] = { 0, 0, 0, 1, 1, 1, 0, 0, 0 };
    int16_t pi14[9] = { 0, 0, 1, 0, 1, 0, 1, 0, 0 };
    int16_t pi15[9] = { 0, 1, 0, 0, 1, 0, 0, 1, 0 };
    int16_t pi16[9] = { 0, 0, 0, 1, 1, 1, 0, 0, 0 };
    int16_t pi17[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };

    // instantiations...
    agent not1 = new img_invert_16(width);
    agent dup1 = new rep(8, width);
    agent dil32 = new dilate_pi17_0(width, height);
    agent dil31 = new dilate_pi16_0(width, height);
    agent dil30 = new dilate_pi16_0(width, height);
    agent dil29 = new dilate_pi16_0(width, height);
    agent dil28 = new dilate_pi16_0(width, height);
    agent dil27 = new dilate_pi15_0(width, height);
    agent dil26 = new dilate_pi15_0(width, height);
    agent dil25 = new dilate_pi15_0(width, height);
    agent dil24 = new dilate_pi15_0(width, height);
    agent dil23 = new dilate_pi14_0(width, height);
    agent dil22 = new dilate_pi14_0(width, height);
    agent dil21 = new dilate_pi14_0(width, height);
    agent dil20 = new dilate_pi14_0(width, height);
    agent dil19 = new dilate_pi13_0(width, height);
    agent dil18 = new dilate_pi13_0(width, height);
    agent dil17 = new dilate_pi13_0(width, height);
    agent dil16 = new dilate_pi13_0(width, height);
    agent dil15 = new dilate_pi12_0(width, height);
    agent dil14 = new dilate_pi12_0(width, height);
    agent dil13 = new dilate_pi12_0(width, height);
    agent dil12 = new dilate_pi12_0(width, height);
    agent dil11 = new dilate_pi11_0(width, height);
    agent dil10 = new dilate_pi11_0(width, height);
    agent dil9 = new dilate_pi11_0(width, height);
    agent dil8 = new dilate_pi11_0(width, height);
    agent dil7 = new dilate_pi10_0(width, height);
    agent dil6 = new dilate_pi10_0(width, height);
    agent dil5 = new dilate_pi10_0(width, height);
    agent dil4 = new dilate_pi10_0(width, height);
    agent dil3 = new dilate_pi9_0(width, height);
    agent dil2 = new dilate_pi9_0(width, height);
    agent dil1 = new dilate_pi9_0(width, height);
    agent dil0 = new dilate_pi9_0(width, height);
    agent ero39 = new erode_pi8_0(width, height);
    agent ero38 = new erode_pi8_0(width, height);
    agent ero37 = new erode_pi8_0(width, height);
    agent ero36 = new erode_pi8_0(width, height);
    agent ero35 = new erode_pi8_0(width, height);
    agent ero34 = new erode_pi6_0(width, height);
    agent ero33 = new erode_pi6_0(width, height);
    agent ero32 = new erode_pi6_0(width, height);
    agent ero31 = new erode_pi6_0(width, height);
    agent ero30 = new erode_pi6_0(width, height);
    agent ero29 = new erode_pi5_0(width, height);
    agent ero28 = new erode_pi5_0(width, height);
    agent ero27 = new erode_pi5_0(width, height);
    agent ero26 = new erode_pi5_0(width, height);
    agent ero25 = new erode_pi5_0(width, height);
    agent cpd0 = new agent_compound_0_0(width);
    agent ero24 = new erode_pi4_0(width, height);
    agent ero23 = new erode_pi4_0(width, height);
    agent ero22 = new erode_pi4_0(width, height);
    agent ero21 = new erode_pi4_0(width, height);
    agent ero20 = new erode_pi4_0(width, height);
    agent ero19 = new erode_pi3_0(width, height);
    agent ero18 = new erode_pi3_0(width, height);
    agent ero17 = new erode_pi3_0(width, height);
    agent ero16 = new erode_pi3_0(width, height);
    agent ero15 = new erode_pi3_0(width, height);
    agent ero14 = new erode_pi2_0(width, height);
    agent ero13 = new erode_pi2_0(width, height);
    agent ero12 = new erode_pi2_0(width, height);
    agent ero11 = new erode_pi2_0(width, height);
    agent ero10 = new erode_pi2_0(width, height);
    agent cpd1 = new agent_compound_0_1(width);
    agent ero9 = new erode_pi1_0(width, height);
    agent ero8 = new erode_pi1_0(width, height);
    agent ero7 = new erode_pi1_0(width, height);
    agent ero6 = new erode_pi1_0(width, height);
    agent ero5 = new erode_pi1_0(width, height);
    agent ero4 = new erode_pi0_0(width, height);
    agent ero3 = new erode_pi0_0(width, height);
    agent ero2 = new erode_pi0_0(width, height);
    agent ero1 = new erode_pi0_0(width, height);
    agent ero0 = new erode_pi0_0(width, height);
    agent dup0 = new rep(2, width);
    agent cpd2 = new agent_compound_0_2(width);
    agent vol0 = new img_global_vol(width, height);

    // connections...
    connect (strin.output[0] /* imin */, not1.input);
    connect (not1.output, dil32.input);
    connect (dil32.output, dup1.input);
    connect (dup1.output[7], dil3.input);
    connect (dup1.output[6], dil7.input);
    connect (dup1.output[5], dil11.input);
    connect (dup1.output[4], dil15.input);
    connect (dup1.output[3], dil19.input);
    connect (dup1.output[2], dil23.input);
    connect (dup1.output[1], dil27.input);
    connect (dup1.output[0], dil31.input);
    connect (dil31.output, dil30.input);
    connect (dil30.output, dil29.input);
    connect (dil29.output, dil28.input);
    connect (dil28.output, ero39.input);
    connect (dil27.output, dil26.input);
    connect (dil26.output, dil25.input);
    connect (dil25.output, dil24.input);
    connect (dil24.output, ero34.input);
    connect (dil23.output, dil22.input);
    connect (dil22.output, dil21.input);
    connect (dil21.output, dil20.input);
    connect (dil20.output, ero29.input);
    connect (dil19.output, dil18.input);
    connect (dil18.output, dil17.input);
    connect (dil17.output, dil16.input);
    connect (dil16.output, ero24.input);
    connect (dil15.output, dil14.input);
    connect (dil14.output, dil13.input);
    connect (dil13.output, dil12.input);
    connect (dil12.output, ero19.input);
    connect (dil11.output, dil10.input);
    connect (dil10.output, dil9.input);
    connect (dil9.output, dil8.input);
    connect (dil8.output, ero14.input);
    connect (dil7.output, dil6.input);
    connect (dil6.output, dil5.input);
    connect (dil5.output, dil4.input);
    connect (dil4.output, ero9.input);
    connect (dil3.output, dil2.input);
    connect (dil2.output, dil1.input);
    connect (dil1.output, dil0.input);
    connect (dil0.output, ero4.input);
    connect (ero39.output, ero38.input);
    connect (ero38.output, ero37.input);
    connect (ero37.output, ero36.input);
    connect (ero36.output, ero35.input);
    connect (ero35.output, cpd0.input[0]);
    connect (ero34.output, ero33.input);
    connect (ero33.output, ero32.input);
    connect (ero32.output, ero31.input);
    connect (ero31.output, ero30.input);
    connect (ero30.output, cpd0.input[1]);
    connect (ero29.output, ero28.input);
    connect (ero28.output, ero27.input);
    connect (ero27.output, ero26.input);
    connect (ero26.output, ero25.input);
    connect (ero25.output, cpd0.input[2]);
    connect (cpd0.output[0], cpd1.input[1]);
    connect (ero24.output, ero23.input);
    connect (ero23.output, ero22.input);
    connect (ero22.output, ero21.input);
    connect (ero21.output, ero20.input);
    connect (ero20.output, cpd1.input[0]);
    connect (ero19.output, ero18.input);
    connect (ero18.output, ero17.input);
    connect (ero17.output, ero16.input);
    connect (ero16.output, ero15.input);
    connect (ero15.output, cpd1.input[2]);
    connect (ero14.output, ero13.input);
    connect (ero13.output, ero12.input);
    connect (ero12.output, ero11.input);
    connect (ero11.output, ero10.input);
    connect (ero10.output, cpd1.input[3]);
    connect (cpd1.output[0], cpd2.input[1]);
    connect (ero9.output, ero8.input);
    connect (ero8.output, ero7.input);
    connect (ero7.output, ero6.input);
    connect (ero6.output, ero5.input);
    connect (ero5.output, cpd2.input[0]);
    connect (ero4.output, ero3.input);
    connect (ero3.output, ero2.input);
    connect (ero2.output, ero1.input);
    connect (ero1.output, ero0.input);
    connect (ero0.output, cpd2.input[2]);
    connect (cpd2.output[0], dup0.input);
    connect (dup0.output[1], vol0.input);
    connect (dup0.output[0], strout.input[0] /* imWork1 */);
    connect (vol0.output, jo.input[0]);
  }
}

// code module=freia_52 fname=freia_52_sigmac_helper_1 split=0


/*#####################################################################*/
/*################ freia_52_sigmac_helper_1_0 Subgraph ################*/
/*#####################################################################*/


#define pi0_1(OPR)				\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[olid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[clid][i+2]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+0]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+1]);	\
ret = PIXEL_ ## OPR(ret, buffer[ilid][i+2]);	\

CUSTOM_MORPHO_AGENT(pi0_1, int16_t)

subgraph
freia_52_sigmac_helper_1_0
(char pipein[255],
 char pipeout[255],
 int width,
 int height,
 size_t sizeMax,
 char pipeparin[255],
 char pipeparout[255])
{

  map {
    agent lhin = new Launcher_In(pipein, 2, width, height);
    agent strin = new Streamer_In(width, height, 2);
    connect (lhin.param, strin.input);
    SigmaC_agent_setUnitType(strin,"k1-I/O");
    agent lhout = new Launcher_Out(pipeout, 1, width, height);
    agent strout = new Streamer_Out(width, height, 1);
    connect (strout.output, lhout.result);
    SigmaC_agent_setUnitType(strout,"k1-I/O");

    agent mr = new Measures_Retriever(pipeparout, 1);
    agent jo = new Join<int32_t>(1, 1);
    SigmaC_agent_setUnitType(jo,"k1-I/O");
    connect (jo.output, mr.input);

    // parameters declaration...
    int16_t pi0[9] = { 1, 1, 1, 1, 1, 1, 1, 1, 1 };

    // instantiations...
    agent dil0 = new dilate_pi0_1(width, height);
    agent dup0 = new rep(2, width);
    agent inf0 = new img_inf_img_16(width);
    agent vol0 = new img_global_vol(width, height);

    // connections...
    connect (strin.output[0] /* imWork1 */, dil0.input);
    connect (dil0.output, inf0.input[0]);
    connect (strin.output[1] /* imin */, inf0.input[1]);
    connect (inf0.output, dup0.input);
    connect (dup0.output[1], vol0.input);
    connect (dup0.output[0], strout.input[0] /* imWork1 */);
    connect (vol0.output, jo.input[0]);
  }
}

// code module=freia_52 fname=freia_52_sigmac_helper_2 split=0


/*#####################################################################*/
/*################ freia_52_sigmac_helper_2_0 Subgraph ################*/
/*#####################################################################*/

AGENT_MERGE_ARITH(agent_compound_2_0, int16_t, 2, 1, 
  int16_t pi0 = inp[0][i];
  int16_t pi1 = inp[1][i];
  int16_t po0 = PIXEL_SUB(pi1, pi0);
  int16_t po1 = PIXEL_MULCST(po0, 2);
  int16_t po2 = PIXEL_THR(po1, 90, 255, 1);
  outp[0][i] = po2;
);

subgraph
freia_52_sigmac_helper_2_0
(char pipein[255],
 char pipeout[255],
 int width,
 int height,
 size_t sizeMax,
 char pipeparin[255],
 char pipeparout[255])
{

  map {
    agent lhin = new Launcher_In(pipein, 2, width, height);
    agent strin = new Streamer_In(width, height, 2);
    connect (lhin.param, strin.input);
    SigmaC_agent_setUnitType(strin,"k1-I/O");
    agent lhout = new Launcher_Out(pipeout, 1, width, height);
    agent strout = new Streamer_Out(width, height, 1);
    connect (strout.output, lhout.result);
    SigmaC_agent_setUnitType(strout,"k1-I/O");

    // parameters declaration...
    int16_t pi0 = 90;
    int16_t pi1 = 255;
    int16_t pi2 = 1;
    int16_t pi3 = 2;

    // instantiations...
    agent cpd0 = new agent_compound_2_0(width);

    // connections...
    connect (strin.output[1] /* imin */, cpd0.input[1]);
    connect (strin.output[0] /* imWork1 */, cpd0.input[0]);
    connect (cpd0.output[0], strout.input[0] /* imWork1 */);
  }
}



/*#####################################################################*/
/*########################### Subgraph Root ###########################*/
/*#####################################################################*/

subgraph root () {
  map {
    int width = 256, height = 256;
    size_t sizeMax = width * height * sizeof(int16_t);

    char cmd[255] = "cd .. && ./main";
    int i, n_pipes = 22;
    char pipes[n_pipes][255];
    for (i=0; i<n_pipes; i++)
      tmpnam(pipes[i]);

    agent pp = new Pipes(cmd, n_pipes, pipes);
    agent sk = new Sink<char>(1);
    SigmaC_agent_setUnitType(sk, "native");
    connect(pp.output, sk.input);

    new Malloc(pipes[0], pipes[1]);
    new Free(pipes[2], pipes[3]);
    new MCopy(pipes[4], pipes[5]);
    new SendDataToMPPA(pipes[6], pipes[7], sizeMax);
    new SendDataToHost(pipes[8], pipes[9], sizeMax);

    new freia_52_sigmac_helper_0_0
    (pipes[10], pipes[11],
     width, height, sizeMax,
     pipes[12], pipes[13]);

    new freia_52_sigmac_helper_1_0
    (pipes[14], pipes[15],
     width, height, sizeMax,
     pipes[16], pipes[17]);

    new freia_52_sigmac_helper_2_0
    (pipes[18], pipes[19],
     width, height, sizeMax,
     pipes[20], pipes[21]);

  }
}
#
# FREIA COMPILATION DONE
#

