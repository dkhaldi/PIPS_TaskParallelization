# WSPACE=foo FILE=foo.c tpips default_tpips
#setenv PIPS_HWAC_DEBUG_LEVEL=5
delete ${WSPACE}
setenv NAME ${NAME:-$WSPACE}
setenv FREIA_TARGET ${FREIA_TARGET:-SPOC}
# props...
setproperty ABORT_ON_USER_ERROR=TRUE
setproperty FREIA_DAG_LABEL_ARCS=TRUE
#setproperty FREIA_DAG_LABEL_NODES=TRUE
setproperty MEMORY_EFFECTS_ONLY=FALSE
# use "old" effects...
setproperty CONSTANT_PATH_EFFECTS=FALSE
# faster on long sequences
setproperty SEMANTICS_NORMALIZATION_LEVEL_BEFORE_STORAGE 2
setproperty PREPROCESSOR_MISSING_FILE_HANDLING="generate"
#setenv PIPS_HWAC_DEBUG_LEVEL=7
setproperty CHECK_FORTRAN_SYNTAX_BEFORE_RUNNING_PIPS FALSE
create ${WSPACE} ${FILE} freia.c
#activate NEW_CONTROLIZER
setproperty PRETTYPRINT_STATEMENT_NUMBER=TRUE
echo
echo ! initial function
echo
display PRINTED_FILE[${NAME}]
#
# handle some scalar deps...
#
apply FREIA_REMOVE_SCALAR_WW_DEPS[${NAME}]
#
# possibly to some unrolling, for SPoC only
#
${DO_UNROLL:-#} FREIA_UNROLL_WHILE[${NAME}]
#display PRINTED_FILE
#
# apply compiler and clean unused images
#
apply FREIA_${FREIA_TARGET}_COMPILER[${NAME}]
setproperty DYNAMIC_ALLOCATION="freia_common_create_data"
setproperty DYNAMIC_DEALLOCATION="freia_common_destruct_data"
apply CLEAN_UNUSED_DYNAMIC_VARIABLES[${NAME}]
touch ${FREIA_TARGET}_FILE[${NAME}]
#
# show FREIA target results
#
setproperty ABORT_ON_USER_ERROR FALSE
echo
echo ! graphs
echo
# this fails in some case where there is no graph
shell cat ./${WSPACE}.database/${NAME}/*.dot
# back to normal
setproperty ABORT_ON_USER_ERROR TRUE
echo
echo ! acceleration function
echo
# I have an issue here...
#touch ${FREIA_TARGET}_FILE[${NAME}]
#display ${FREIA_TARGET}_FILE[${NAME}]
shell cat ./${WSPACE}.database/${NAME}/*_helper_functions.c*
#
# new function code
#
echo
echo ! updated function
echo
display PRINTED_FILE[${NAME}]
echo
echo ! cleaned up function
echo
make SUMMARY_EFFECTS[freia_common_create_data freia_common_destruct_data]
apply PARTIAL_EVAL[${NAME}]
# no, too efficient, helper functions are removed.
#apply USE_DEF_ELIMINATION[${NAME}]
# no, too efficient, do/while loops that contain helpers are removed
# argh! some while loop bodies are also whiped out:-(
#setproperty SIMPLIFY_CONTROL_DO_WHILE FALSE
#apply SIMPLIFY_CONTROL[${NAME}]
display PRINTED_FILE[${NAME}]
close
delete ${WSPACE}
