
PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int i, m, n, j1, j2;

//  P(i,j1,j2,m,n) {}

   m = rand();

//  P(i,j1,j2,m,n) {0<=m}

   n = rand();

//  P(i,j1,j2,m,n) {0<=m, 0<=n}

   if (!(0<m&&m<n))

//  P(i,j1,j2,m,n) {0<=m, 0<=n}

      deadlock();

//  P(i,j1,j2,m,n) {1<=m, m+1<=n, 0<=n}

   i = n;

//  P(i,j1,j2,m,n) {i==n, 0<=i, m+1<=i, 1<=m}

   j1 = j2 = 0;

//  P(i,j1,j2,m,n) {i==n, j1==0, j2==0, 0<=i, m+1<=i, 1<=m}

   while (flip())

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

      if (flip()) {

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(i>0&&i<m))

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

            deadlock();

//  P(i,j1,j2,m,n) {1<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, i+1<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         i--;

//  P(i,j1,j2,m,n) {0<=i, 1<=i+2j1+2j2, 5<=3i+4j1+4j2+2m,
//    7<=3i+2j1+4j2+4m, 3<=2i+2j1+3j2+m, i+j1+j2+1<=n, 11<=3i+4j2+8m,
//    3<=i+2j2+2m, i+2<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         j1++;

//  P(i,j1,j2,m,n) {0<=i, 3<=i+2j1+2j2, 9<=3i+4j1+4j2+2m,
//    9<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 11<=3i+4j2+8m,
//    3<=i+2j2+2m, i+2<=m, 1<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         if (!(i>0&&i>=m))

//  P(i,j1,j2,m,n) {0<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, i+1<=m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

            deadlock();

//  P(i,j1,j2,m,n) {1<=i, 2<=i+2j1+2j2, 8<=3i+4j1+4j2+2m,
//    10<=3i+2j1+4j2+4m, 5<=2i+2j1+3j2+m, i+j1+j2<=n, 14<=3i+4j2+8m,
//    4<=i+2j2+2m, m<=i, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         i -= m;

//  P(i,j1,j2,m,n) {0<=i, 8<=3i+4j1+4j2+5m, 10<=3i+2j1+4j2+7m,
//    5<=2i+2j1+3j2+3m, 2<=i+2j1+2j2+m, i+j1+j2+m<=n, 14<=3i+4j2+11m,
//    4<=i+2j2+3m, 1<=i+m, 0<=j1, 0<=j2, 1<=m, m+1<=n}

         j2++;

//  P(i,j1,j2,m,n) {0<=i, 12<=3i+4j1+4j2+5m, 14<=3i+2j1+4j2+7m,
//    8<=2i+2j1+3j2+3m, 4<=i+2j1+2j2+m, i+j1+j2+m<=n+1,
//    18<=3i+4j2+11m, 6<=i+2j2+3m, 1<=i+m, 0<=j1, 1<=j2, 1<=m, m+1<=n}

         if (!(j1<=n&&j2<=n))

//  P() {0==-1}

            checking_error();
      }
}
