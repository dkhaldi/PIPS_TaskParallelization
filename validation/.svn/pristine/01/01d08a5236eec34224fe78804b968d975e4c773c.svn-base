
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int n0, n, i, f, j, s;

//  T(n0) {0<=n0}

   n0 = rand();

//  T(n) {n==n0, 0<=n}

   n = n0;

//  T(i) {i==0, n==n0, 0<=n}

   i = 0;

//  T(f) {i==0, n==n0, 0<=f, 0<=n}

   f = rand();

//  T() {i==0, n==n0, 0<=f, f<=1, 0<=n}

   if (!(f<=1))

//  T() {0==-1}

      deadlock();

//  T(j) {i==0, j==0, n==n0, 0<=f, f<=1, 0<=n}

   j = 0;

//  T(s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   s = 1;

//  T() {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   if (!(j<=n0))

//  T() {0==-1}

      checking_error();

//  T(f,i,j,n,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i#init<=i,
//    i+j#init+n#init+s<=i#init+j+n+s#init, i+n0+s<=j+n+1,
//    j#init+n#init<=j+n, j<=n0, n<=n#init, n<=n0, 1<=s, s<=2}

   while (rand_b())

//  T(f,i,j,n,s) {f+i==i#init+s#init-1, j+n+s#init==j#init+n#init+2,
//    j#init+s==j+1, j+s#init<=f+j#init+2, f+1<=s#init,
//    j#init+2<=j+s#init, j<=n0, 0<=n0, s#init<=2}

      if (rand_b()) {

//  T() {s==1, i+1<=n, 0<=n0}

         if (!(i<n&&s==1))

//  T() {0==-1}

            deadlock();

//  T(f) {f==0, s==1, i+1<=n, 0<=n0}

         f = 0;

//  T(s) {f==0, s==2, s#init==1, i+1<=n, 0<=n0}

         s = 2;

//  T(j) {f==0, j==j#init+1, s==2, i+1<=n, 0<=n0}

         j++;

//  T() {f==0, s==2, i+1<=n, j<=n0, 0<=n0}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {f==1, s==2, 0<=n0}

         if (!(f==1&&s==2))

//  T() {0==-1}

            deadlock();

//  T(n) {f==1, n==n#init-1, s==2, 0<=n0}

         n--;

//  T(j) {f==1, j==j#init+1, s==2, 0<=n0}

         j++;

//  T() {f==1, s==2, j<=n0, 0<=n0}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {f==0, s==2, 0<=n0}

         if (!(f==0&&s==2))

//  T() {0==-1}

            deadlock();

//  T(i) {f==0, i==i#init+1, s==2, 0<=n0}

         i++;

//  T(s) {f==0, s==1, s#init==2, 0<=n0}

         s = 1;

//  T() {f==0, s==1, j<=n0, 0<=n0}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {f==1, s==2, 0<=n0}

         if (!(f==1&&s==2))

//  T() {0==-1}

            deadlock();

//  T(s) {f==1, s==1, s#init==2, 0<=n0}

         s = 1;

//  T() {f==1, s==1, j<=n0, 0<=n0}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int n0, n, i, f, j, s;

//  T(n0) {0<=n0}

   n0 = rand();

//  T(n) {n==n0, 0<=n}

   n = n0;

//  T(i) {i==0, n==n0, 0<=n}

   i = 0;

//  T(f) {i==0, n==n0, 0<=f, 0<=n}

   f = rand();

//  T() {i==0, n==n0, 0<=f, f<=1, 0<=n}

   if (!(f<=1))

//  T() {0==-1}

      deadlock();

//  T(j) {i==0, j==0, n==n0, 0<=f, f<=1, 0<=n}

   j = 0;

//  T(s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   s = 1;

//  T() {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   if (!(j<=n0))

//  T() {0==-1}

      checking_error();

//  T(f,i,j,n,s) {i==j, i==n, i==n#init, i==n0, i#init==0, j#init==0,
//    s==1, s#init==1, 0<=f, f<=f#init, f#init<=f+i, f#init<=1}

   if (i<n) {

//  T(f,j,s) {f==0, i==0, j==1, j#init==0, n==n0, s==2, s#init==1,
//    0<=f#init, f#init<=1, 1<=n}

      if (f==0) {

//  T() {f==0, i==0, j==0, n==n0, s==1, 1<=n}

         if (!(i<n&&s==1))

//  T() {0==-1}

            deadlock();

//  T(f) {f==0, f#init==0, i==0, j==0, n==n0, s==1, 1<=n}

         f = 0;

//  T(s) {f==0, i==0, j==0, n==n0, s==2, s#init==1, 1<=n}

         s = 2;

//  T(j) {f==0, i==0, j==1, j#init==0, n==n0, s==2, 1<=n}

         j++;

//  T() {f==0, i==0, j==1, n==n0, s==2, 1<=n}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {f==1, i==0, j==0, n==n0, s==1, 1<=n}

         if (!(i<n&&s==1))

//  T() {0==-1}

            deadlock();

//  T(f) {f==0, f#init==1, i==0, j==0, n==n0, s==1, 1<=n}

         f = 0;

//  T(s) {f==0, i==0, j==0, n==n0, s==2, s#init==1, 1<=n}

         s = 2;

//  T(j) {f==0, i==0, j==1, j#init==0, n==n0, s==2, 1<=n}

         j++;

//  T() {f==0, i==0, j==1, n==n0, s==2, 1<=n}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }

//  T(f,i,j,n,s) {f==0, 2f#init+j#init==i#init+1, f#init+n==n#init,
//    i==j-1, n==n0, s==2, s#init==2, 0<=f#init, 2f#init+j#init<=i+1,
//    0<=i, i+1<=n}

      while (rand_b())

//  T(f,i,j,n,s) {f==0, f#init+j#init==j-1, i+j==i#init+j#init+2,
//    j+n==j#init+n#init+1, s==2, s#init==2, i+1<=n, j#init+1<=j,
//    j<=j#init+2, j<=n0, 1<=n0}

         if (rand_b()) {

//  T() {f==0, s==2, i+2<=n, 1<=n0}

            if (!(f==0&&s==2&&i<n-1))

//  T() {0==-1}

               deadlock();

//  T(i) {f==0, i==i#init+1, s==2, i+1<=n, 1<=n0}

            i++;

//  T(s) {f==0, s==1, s#init==2, i+1<=n, 1<=n0}

            s = 1;

//  T() {f==0, s==1, i+1<=n, j<=n0, 1<=n0}

            if (!(j<=n0))

//  T() {0==-1}

               checking_error();

//  T() {f==0, s==1, i+1<=n, j<=n0, 1<=n0}

            if (!(i<n&&s==1))

//  T() {0==-1}

               deadlock();

//  T(f) {f==0, f#init==0, s==1, i+1<=n, j<=n0, 1<=n0}

            f = 0;

//  T(s) {f==0, s==2, s#init==1, i+1<=n, j<=n0, 1<=n0}

            s = 2;

//  T(j) {f==0, j==j#init+1, s==2, i+1<=n, j<=n0+1, 1<=n0}

            j++;

//  T() {f==0, s==2, i+1<=n, j<=n0, 1<=n0}

            if (!(j<=n0))

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {f==1, s==2, i+2<=n, 1<=n0}

            if (!(f==1&&s==2&&i<n-1))

//  T() {0==-1}

               deadlock();

//  T(n) {f==1, n==n#init-1, s==2, i+1<=n, 1<=n0}

            n--;

//  T(j) {f==1, j==j#init+1, s==2, i+1<=n, 1<=n0}

            j++;

//  T() {f==1, s==2, i+1<=n, j<=n0, 1<=n0}

            if (!(j<=n0))

//  T() {0==-1}

               checking_error();

//  T() {f==1, s==2, i+1<=n, j<=n0, 1<=n0}

            if (!(f==1&&s==2))

//  T() {0==-1}

               deadlock();

//  T(s) {f==1, s==1, s#init==2, i+1<=n, j<=n0, 1<=n0}

            s = 1;

//  T() {f==1, s==1, i+1<=n, j<=n0, 1<=n0}

            if (!(j<=n0))

//  T() {0==-1}

               checking_error();

//  T() {f==1, s==1, i+1<=n, j<=n0, 1<=n0}

            if (!(i<n&&s==1))

//  T() {0==-1}

               deadlock();

//  T(f) {f==0, f#init==1, s==1, i+1<=n, j<=n0, 1<=n0}

            f = 0;

//  T(s) {f==0, s==2, s#init==1, i+1<=n, j<=n0, 1<=n0}

            s = 2;

//  T(j) {f==0, j==j#init+1, s==2, i+1<=n, j<=n0+1, 1<=n0}

            j++;

//  T() {f==0, s==2, i+1<=n, j<=n0, 1<=n0}

            if (!(j<=n0))

//  T() {0==-1}

               checking_error();
         }

//  T(i,s) {f==0, i==i#init+1, i==j, i==n, i==n0, s==1, s#init==2,
//    1<=i}

      if (rand_b()) {

//  T() {0==-1}

         if (!(f==1&&s==2&&i==n-1))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         n--;

//  T() {0==-1}

         j++;

//  T() {0==-1}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();

//  T() {0==-1}

         if (!(f==1&&s==2))

//  T() {0==-1}

            deadlock();

//  T() {0==-1}

         s = 1;

//  T() {0==-1}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {f==0, i==j-1, i==n-1, i==n0-1, s==2, 0<=i}

         if (!(f==0&&s==2&&i==n-1))

//  T() {0==-1}

            deadlock();

//  T(i) {f==0, i==i#init+1, i==j, i==n, i==n0, s==2, 1<=i}

         i++;

//  T(s) {f==0, i==j, i==n, i==n0, s==1, s#init==2, 1<=i}

         s = 1;

//  T() {f==0, i==j, i==n, i==n0, s==1, 1<=i}

         if (!(j<=n0))

//  T() {0==-1}

            checking_error();
      }
   }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int n0, n, i, f, j, s;

//  P() {}

   n0 = rand();

//  P(n0) {0<=n0}

   n = n0;

//  P(n,n0) {n==n0, 0<=n}

   i = 0;

//  P(i,n,n0) {i==0, n==n0, 0<=n}

   f = rand();

//  P(f,i,n,n0) {i==0, n==n0, 0<=f, 0<=n}

   if (!(f<=1))

//  P(f,i,n,n0) {i==0, n==n0, 2<=f, 0<=n}

      deadlock();

//  P(f,i,n,n0) {i==0, n==n0, 0<=f, f<=1, 0<=n}

   j = 0;

//  P(f,i,j,n,n0) {i==0, j==0, n==n0, 0<=f, f<=1, 0<=n}

   s = 1;

//  P(f,i,j,n,n0,s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   if (!(j<=n0))

//  P() {0==-1}

      checking_error();

//  P(f,i,j,n,n0,s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   while (rand_b())

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

      if (rand_b()) {

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

         if (!(i<n&&s==1))

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

            deadlock();

//  P(f,i,j,n,n0,s) {s==1, 0<=f, f<=1, f+n<=n0+1, 0<=i, i+n0<=j+n,
//    i+1<=n, j<=n0, n<=n0}

         f = 0;

//  P(f,i,j,n,n0,s) {f==0, s==1, 0<=i, i+n0<=j+n, i+1<=n, j<=n0,
//    n<=n0, 0<=n0}

         s = 2;

//  P(f,i,j,n,n0,s) {f==0, s==2, 0<=i, i+n0<=j+n, i+1<=n, j<=n0,
//    n<=n0, 0<=n0}

         j++;

//  P(f,i,j,n,n0,s) {f==0, s==2, 0<=i, i+n0+1<=j+n, i+1<=n, j<=n0+1,
//    n<=n0, 0<=n0}

         if (!(j<=n0))

//  P(f,i,j,n,n0,s) {f==0, j==n0+1, s==2, 0<=i, i+1<=n, 1<=j, n+1<=j}

            checking_error();
      }
      else if (rand_b()) {

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

         if (!(f==1&&s==2))

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, f+s<=2, 0<=i,
//    i+n0+s<=j+n+1, j<=n0, n<=n0, 1<=s, s<=2}

            deadlock();

//  P(f,i,j,n,n0,s) {f==1, s==2, 0<=i, i+n0+1<=j+n, j<=n0, n+1<=n0}

         n--;

//  P(f,i,j,n,n0,s) {f==1, s==2, 0<=i, i+n0<=j+n, j<=n0, n+2<=n0,
//    0<=n0}

         j++;

//  P(f,i,j,n,n0,s) {f==1, s==2, 0<=i, i+n0+1<=j+n, j<=n0+1, n+2<=n0,
//    0<=n0}

         if (!(j<=n0))

//  P(f,i,j,n,n0,s) {f==1, j==n0+1, s==2, 0<=i, i<=n, 1<=j, n+3<=j}

            checking_error();
      }
      else if (rand_b()) {

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

         if (!(f==0&&s==2))

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, s<=f+1, 0<=i,
//    i+n0+s<=j+n+1, j<=n0, n<=n0, n+s<=n0+1, 1<=s, s<=2}

            deadlock();

//  P(f,i,j,n,n0,s) {f==0, s==2, 0<=i, i+n0+1<=j+n, j<=n0, n<=n0}

         i++;

//  P(f,i,j,n,n0,s) {f==0, s==2, 1<=i, i+n0<=j+n, j<=n0, n<=n0, 0<=n0}

         s = 1;

//  P(f,i,j,n,n0,s) {f==0, s==1, 1<=i, i+n0<=j+n, j<=n0, n<=n0, 0<=n0}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, 0<=i, i+n0+s<=j+n+1,
//    j<=n0, n<=n0, 1<=s, s<=2}

         if (!(f==1&&s==2))

//  P(f,i,j,n,n0,s) {0<=f, f<=1, f+n+s<=n0+2, f+s<=2, 0<=i,
//    i+n0+s<=j+n+1, j<=n0, n<=n0, 1<=s, s<=2}

            deadlock();

//  P(f,i,j,n,n0,s) {f==1, s==2, 0<=i, i+n0+1<=j+n, j<=n0, n+1<=n0}

         s = 1;

//  P(f,i,j,n,n0,s) {f==1, s==1, 0<=i, i+n0+1<=j+n, j<=n0, n+1<=n0,
//    0<=n0}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int n0, n, i, f, j, s;

//  P() {}

   n0 = rand();

//  P(n0) {0<=n0}

   n = n0;

//  P(n,n0) {n==n0, 0<=n}

   i = 0;

//  P(i,n,n0) {i==0, n==n0, 0<=n}

   f = rand();

//  P(f,i,n,n0) {i==0, n==n0, 0<=f, 0<=n}

   if (!(f<=1))

//  P(f,i,n,n0) {i==0, n==n0, 2<=f, 0<=n}

      deadlock();

//  P(f,i,n,n0) {i==0, n==n0, 0<=f, f<=1, 0<=n}

   j = 0;

//  P(f,i,j,n,n0) {i==0, j==0, n==n0, 0<=f, f<=1, 0<=n}

   s = 1;

//  P(f,i,j,n,n0,s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   if (!(j<=n0))

//  P() {0==-1}

      checking_error();

//  P(f,i,j,n,n0,s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 0<=n}

   if (i<n) {

//  P(f,i,j,n,n0,s) {i==0, j==0, n==n0, s==1, 0<=f, f<=1, 1<=n}

      if (f==0) {

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==1, 1<=n}

         if (!(i<n&&s==1))

//  P() {0==-1}

            deadlock();

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==1, 1<=n}

         f = 0;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==1, 1<=n}

         s = 2;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==2, 1<=n}

         j++;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==1, n==n0, s==2, 1<=n}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(f,i,j,n,n0,s) {f==1, i==0, j==0, n==n0, s==1, 1<=n}

         if (!(i<n&&s==1))

//  P() {0==-1}

            deadlock();

//  P(f,i,j,n,n0,s) {f==1, i==0, j==0, n==n0, s==1, 1<=n}

         f = 0;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==1, 1<=n}

         s = 2;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==0, n==n0, s==2, 1<=n}

         j++;

//  P(f,i,j,n,n0,s) {f==0, i==0, j==1, n==n0, s==2, 1<=n}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }

//  P(f,i,j,n,n0,s) {f==0, i==0, j==1, n==n0, s==2, 1<=n}

      while (rand_b())

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

         if (rand_b()) {

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

            if (!(f==0&&s==2&&i<n-1))

//  P(f,i,j,n,n0,s) {f==0, i==j-1, i==n-1, i==n0-1, s==2, 0<=i}

               deadlock();

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+2<=n}

            i++;

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==2, 1<=i, i+1<=n, 1<=n}

            s = 1;

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==1, 1<=i, i+1<=n, 1<=n}

            if (!(j<=n0))

//  P() {0==-1}

               checking_error();

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==1, 1<=i, i+1<=n, 1<=n}

            if (!(i<n&&s==1))

//  P() {0==-1}

               deadlock();

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==1, 1<=i, i+1<=n, 1<=n}

            f = 0;

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==1, 1<=i, i+1<=n, 1<=n}

            s = 2;

//  P(f,i,j,n,n0,s) {f==0, i==j, n==n0, s==2, 1<=i, i+1<=n, 1<=n}

            j++;

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 1<=i, i+1<=n, 1<=n}

            if (!(j<=n0))

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

            if (!(f==1&&s==2&&i<n-1))

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

               deadlock();

//  P() {0==-1}

            n--;

//  P() {0==-1}

            j++;

//  P() {0==-1}

            if (!(j<=n0))

//  P() {0==-1}

               checking_error();

//  P() {0==-1}

            if (!(f==1&&s==2))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            s = 1;

//  P() {0==-1}

            if (!(j<=n0))

//  P() {0==-1}

               checking_error();

//  P() {0==-1}

            if (!(i<n&&s==1))

//  P() {0==-1}

               deadlock();

//  P() {0==-1}

            f = 0;

//  P() {0==-1}

            s = 2;

//  P() {0==-1}

            j++;

//  P() {0==-1}

            if (!(j<=n0))

//  P() {0==-1}

               checking_error();
         }

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

      if (rand_b()) {

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

         if (!(f==1&&s==2&&i==n-1))

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

            deadlock();

//  P() {0==-1}

         n--;

//  P() {0==-1}

         j++;

//  P() {0==-1}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();

//  P() {0==-1}

         if (!(f==1&&s==2))

//  P() {0==-1}

            deadlock();

//  P() {0==-1}

         s = 1;

//  P() {0==-1}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+1<=n}

         if (!(f==0&&s==2&&i==n-1))

//  P(f,i,j,n,n0,s) {f==0, i==j-1, n==n0, s==2, 0<=i, i+2<=n}

            deadlock();

//  P(f,i,j,n,n0,s) {f==0, i==j-1, i==n-1, i==n0-1, s==2, 0<=i}

         i++;

//  P(f,i,j,n,n0,s) {f==0, i==j, i==n, i==n0, s==2, 1<=i}

         s = 1;

//  P(f,i,j,n,n0,s) {f==0, i==j, i==n, i==n0, s==1, 1<=i}

         if (!(j<=n0))

//  P() {0==-1}

            checking_error();
      }
   }
}
