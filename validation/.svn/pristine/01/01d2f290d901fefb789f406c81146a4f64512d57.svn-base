
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int i, j;

//  T(i) {i==2}

   i = 2;

//  T(j) {i==2, j==0}

   j = 0;

//  T() {i==2, j==0}

   if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

      checking_error();

//  T(i,j) {i<=20, i#init+2j<=i+2j#init, 2j+2<=i, 0<=j, j<=4,
//    j#init<=j}

   while (rand_b())

//  T(i,j) {i+2j==i#init+2j#init+4, 9i#init<=7i+4, i#init+2<=i,
//    i<=i#init+4, 5i<=6i#init+10, 0<=j, j<=4}

      if (rand_b()) {

//  T() {10<=i, i+j<=20}

         if (!(i+j<=20&&i>=10))

//  T() {0==-1}

            deadlock();

//  T(i) {i==i#init+4, 14<=i, i+j<=24}

         i += 4;

//  T() {14<=i, i<=20, 0<=j, j<=4}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {i<=9, i+j<=20}

         if (!(i+j<=20&&i<10))

//  T() {0==-1}

            deadlock();

//  T(i) {i==i#init+2, i<=11, i+j<=22}

         i += 2;

//  T(j) {j==j#init+1, i<=11, i+j<=23}

         j++;

//  T() {2<=i, i<=11, 0<=j, j<=4}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int i, j;

//  T(i) {i==2}

   i = 2;

//  T(j) {i==2, j==0}

   j = 0;

//  T() {i==2, j==0}

   if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

      checking_error();

//  T(i,j) {i==2j+2, i#init==2j#init+2, 0<=j, j<=3, j#init<=j}

   while (rand_b()) {

//  T() {i<=7, i+j<=17}

      if (!(i+j<=17&&i<8))

//  T() {0==-1}

         deadlock();

//  T(i) {i==i#init+2, i<=9, i+j<=19}

      i += 2;

//  T(j) {j==j#init+1, i<=9, i+j<=20}

      j++;

//  T() {2<=i, i<=9, 0<=j, j<=4}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

         checking_error();
   }

//  T(i,j) {i#init==8, j==4, j#init==3, 17<=i, i<=20}

   if (rand_b()) {

//  T() {0==-1}

      if (!(i+j>17&&(i+j<=20&&i<10)))

//  T() {0==-1}

         deadlock();

//  T() {0==-1}

      i += 2;

//  T() {0==-1}

      j++;

//  T() {0==-1}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

         checking_error();
   }
   else {

//  T() {i==2j+2, 3<=j, j<=5}

      if (!(i+j<=17&&i>=8))

//  T() {0==-1}

         deadlock();

//  T(i) {i==2j+4, i#init==2j+2, 3<=j, j<=5}

      i += 2;

//  T(j) {i==2j+2, j==j#init+1, 4<=j, j<=6}

      j++;

//  T() {i==10, j==4}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

         checking_error();

//  T(i) {j==4, 10<=i, i<=16, i#init<=i}

      while (rand_b()) {

//  T() {j==4, 10<=i, i<=12}

         if (!(i+j<=16&&i>=10))

//  T() {0==-1}

            deadlock();

//  T(i) {i==i#init+4, j==4, 14<=i, i<=16}

         i += 4;

//  T() {j==4, 14<=i, i<=16}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

            checking_error();
      }

//  T() {j==4, 13<=i}

      if (!(i+j>16&&i>=10))

//  T() {0==-1}

         deadlock();

//  T(i) {i==i#init+4, j==4, 17<=i}

      i += 4;

//  T() {j==4, 17<=i, i<=20}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  T() {0==-1}

         checking_error();
   }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int i, j;

//  P() {}

   i = 2;

//  P(i) {i==2}

   j = 0;

//  P(i,j) {i==2, j==0}

   if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

      checking_error();

//  P(i,j) {i==2, j==0}

   while (rand_b())

//  P(i,j) {i<=20, 2j+2<=i, 0<=j, j<=4}

      if (rand_b()) {

//  P(i,j) {i<=20, 2j+2<=i, 0<=j, j<=4}

         if (!(i+j<=20&&i>=10))

//  P(i,j) {i<=20, 2j+2<=i, 16j<=i+47, i<=11j+9, 0<=j, j<=4}

            deadlock();

//  P(i,j) {10<=i, i<=20, i+j<=20, 0<=j, j<=4}

         i += 4;

//  P(i,j) {14<=i, i<=24, i+j<=24, 0<=j, j<=4}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P(i,j) {21<=i, i<=24, i+j<=24, 0<=j, j<=4}

            checking_error();
      }
      else {

//  P(i,j) {i<=20, 2j+2<=i, 0<=j, j<=4}

         if (!(i+j<=20&&i<10))

//  P(i,j) {10<=i, i<=20, 0<=j, j<=4}

            deadlock();

//  P(i,j) {i<=9, 2j+2<=i, 0<=j, j<=4}

         i += 2;

//  P(i,j) {i<=11, 2j+4<=i, 0<=j, j<=4}

         j++;

//  P(i,j) {i<=11, 2j+2<=i, 1<=j, j<=5}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int i, j;

//  P() {}

   i = 2;

//  P(i) {i==2}

   j = 0;

//  P(i,j) {i==2, j==0}

   if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

      checking_error();

//  P(i,j) {i==2, j==0}

   while (rand_b()) {

//  P(i,j) {i==2j+2, 0<=j, j<=3}

      if (!(i+j<=17&&i<8))

//  P(i,j) {i==8, j==3}

         deadlock();

//  P(i,j) {i==2j+2, 0<=j, j<=2}

      i += 2;

//  P(i,j) {i==2j+4, 0<=j, j<=2}

      j++;

//  P(i,j) {i==2j+2, 1<=j, j<=3}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

         checking_error();
   }

//  P(i,j) {i==2j+2, 0<=j, j<=3}

   if (rand_b()) {

//  P(i,j) {i==2j+2, 0<=j, j<=3}

      if (!(i+j>17&&(i+j<=20&&i<10)))

//  P(i,j) {i==2j+2, 0<=j, j<=3}

         deadlock();

//  P() {0==-1}

      i += 2;

//  P() {0==-1}

      j++;

//  P() {0==-1}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

         checking_error();
   }
   else {

//  P(i,j) {i==2j+2, 0<=j, j<=3}

      if (!(i+j<=17&&i>=8))

//  P(i,j) {i==2j+2, 0<=j, j<=2}

         deadlock();

//  P(i,j) {i==8, j==3}

      i += 2;

//  P(i,j) {i==10, j==3}

      j++;

//  P(i,j) {i==10, j==4}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

         checking_error();

//  P(i,j) {i==10, j==4}

      while (rand_b()) {

//  P(i,j) {j==4, 10<=i, i<=16}

         if (!(i+j<=16&&i>=10))

//  P(i,j) {j==4, 13<=i, i<=16}

            deadlock();

//  P(i,j) {j==4, 10<=i, i<=12}

         i += 4;

//  P(i,j) {j==4, 14<=i, i<=16}

         if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

            checking_error();
      }

//  P(i,j) {j==4, 10<=i, i<=16}

      if (!(i+j>16&&i>=10))

//  P(i,j) {j==4, 10<=i, i<=12}

         deadlock();

//  P(i,j) {j==4, 13<=i, i<=16}

      i += 4;

//  P(i,j) {j==4, 17<=i, i<=20}

      if (!(2<=i&&i<=20&&0<=j&&j<=4))

//  P() {0==-1}

         checking_error();
   }
}
