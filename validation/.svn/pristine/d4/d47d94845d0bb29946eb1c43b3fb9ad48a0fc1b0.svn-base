
POINTS-TO


// Points To IN: none


// Points To OUT: unreachable

void dereferencing02()
{

// Points To: none

   double x[2] = {1., 2.};

// Points To: none

   double *p[1] = {&x[0]};

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY

   double **q = &p[0];

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT

   double **w;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> undefined , EXACT

   int i = 1;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> undefined , EXACT

   
   
   **q = 2.;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> undefined , EXACT

   **(q+(i = 0)) = 3.;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> undefined , EXACT

   w = q;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> p[0] , EXACT

   **(w+(i = 2)) = 4.;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> p[0] , EXACT

   x[0] = **q;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[0] , EXACT
// w -> p[0] , EXACT

   q++;

// Points To:
// p[*] -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> p[1] , EXACT
// w -> p[0] , EXACT

   p[1] = *q++;

// Points To: unreachable

   return;
}

// Points To IN: none


// Points To OUT: unreachable

int main()
{

// Points To: none

   dereferencing02();

// Points To: unreachable

   return 1;
}

PROPER  EFFECTS WITH POINTS TO

void dereferencing02()
{
//             <may be written>: x[*]
   double x[2] = {1., 2.};
//             <may be written>: p[*]
   double *p[1] = {&x[0]};
//             <    is written>: q
   double **q = &p[0];
   double **w;
//             <    is written>: i
   int i = 1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p[0] q
   
   
   **q = 2.;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p[0] q
   **(q+(i = 0)) = 3.;
//             <    is read   >: q
//             <    is written>: w
   w = q;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p[2] w
   **(w+(i = 2)) = 4.;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: x[0]
   x[0] = **q;
//             <    is read   >: q
//             <    is written>: q
   q++;
//             <    is read   >: p[1] q
//             <    is written>: p[1] q
   p[1] = *q++;
   return;
}
int main()
{
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   dereferencing02();
   return 1;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
