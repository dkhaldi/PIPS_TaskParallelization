// MPI style
int main(int argc, char *argv[])
{
   {
      //PIPS generated variable
      int rank0;
      //PIPS generated variable
      MPI_Status status0;
      //PIPS generated variable
      MPI_Request request0;
      //PIPS generated variable
      unsigned int i;
      //PIPS generated variable
      double A[100], B[100], C[100], D[100];
      //PIPS generated variable
      int N;
      //PIPS generated variable
      double a, b;
      //PIPS generated variable
      int _rtl_0_0, _rtl_0_0_0, _rtl_0_0_1, _rtl_0_0_2, _rtl_0_0_3, _rtl_0_0_4;
      MPI_Init(&argc, &argv);
      MPI_Comm_rank(MPI_COMM_WORLD, &rank0);
      if (rank0==0) {
         N = 100;
         MPI_Isend(&N, 1, MPI_INT, 1, 1, MPI_COMM_WORLD, &request0);
      }
      if (rank0==0)
         for(i = 0; i <= N-1; i += 1) {






            B[i] = 3;
            _rtl_0_0_3 = i;



            A[i] = 5;
            _rtl_0_0_1 = i;

            _rtl_0_0_2 = i;

            _rtl_0_0_4 = i;

         }
      if (rank0==1) {
         MPI_Recv(&N, 1, MPI_INT, 0, MPI_ANY_TAG, MPI_COMM_WORLD, &status0);
         for(i = 0; i <= N-1; i += 1)
            C[i] = 5;
         for(_rtl_0_0_0 = 0; _rtl_0_0_0 <= 99; _rtl_0_0_0 += 1)
            MPI_Isend(&C[_rtl_0_0_0], 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, &request0);
      }
      if (rank0==0) {
         for(_rtl_0_0 = 0; _rtl_0_0 <= 99; _rtl_0_0 += 1)
            MPI_Recv(&C[_rtl_0_0], 1, MPI_FLOAT, 1, MPI_ANY_TAG, MPI_COMM_WORLD, &status0);
         for(i = 0; i <= N-1; i += 1)
            D[i] = A[i]+B[i]+C[i];
      }
   }
   MPI_Finalize();

   return 0;
}
