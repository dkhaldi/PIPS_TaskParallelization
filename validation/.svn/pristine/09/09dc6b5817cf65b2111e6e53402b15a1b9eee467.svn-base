
Symbol table for block_scope12

block_scope12!block_scope12

Declarations for module "block_scope12!block_scope12" with type "() -> int"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "TOP-LEVEL:foo" with type "functional" "int -> int"
	Declared entity "block_scope12!:*STATIC*" with type "area" with size 0
	Declared entity "block_scope12!block_scope12:*DYNAMIC*" with type "area" with size 36
	Declared entity "block_scope12!block_scope12:*HEAP*" with type "area" with size 0
	Declared entity "block_scope12!block_scope12:*STACK*" with type "area" with size 0
	Declared entity "block_scope12!block_scope12:*STATIC*" with type "area" with size 0
	Declared entity "block_scope12!block_scope12:0`1`x" with type "variable" "int"
	Declared entity "block_scope12!block_scope12:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "block_scope12!block_scope12:0`__func__" with type "variable" "char *"
	Declared entity "block_scope12!block_scope12:0`x" with type "variable" "int"
	Declared entity "block_scope12!block_scope12:block_scope12!block_scope12" with type "variable" "int"

* empty extern declaration list *


Layout for return variable:

	Variable "block_scope12!block_scope12:block_scope12!block_scope12"	size = 4

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	External Variable "TOP-LEVEL:_IO_2_1_stdin_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stdout_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stderr_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:stdin"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stdout"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stderr"	offset = UNKNOWN,	size = 8


Layout for memory area "block_scope12!:*STATIC*" of size 0:
	* empty area *


Layout for memory area "block_scope12!block_scope12:*DYNAMIC*" of size 36:
	Variable "block_scope12!block_scope12:0`x"	offset = 28	size = 4
	Variable "block_scope12!block_scope12:0`1`x"	offset = 32	size = 4
	Variable "block_scope12!block_scope12:0`__func__"	offset = 0	size = 14
	Variable "block_scope12!block_scope12:0`__FUNCTION__"	offset = 14	size = 14


Layout for memory area "block_scope12!block_scope12:*HEAP*" of size 0:
	* empty area *


Layout for memory area "block_scope12!block_scope12:*STACK*" of size 0:
	* empty area *


Layout for memory area "block_scope12!block_scope12:*STATIC*" of size 0:
	* empty area *

End of declarations for module block_scope12!block_scope12


Parser output

static int block_scope12()
{
   extern int foo(int);
   int x = 6;
   {
      extern int foo(int);
      int x = foo(x);
      printf("internal: %d\n", x);
   }

   return foo(x);
}

Parser output

static int block_scope12()
{
   extern int foo(int);
   int x = 6;
   {
      extern int foo(int);
      int x = foo(x);
      printf("internal: %d\n", x);
   }

   return foo(x);
}

Controlizer output

static int block_scope12()
{
   extern int foo(int);
   int x = 6;
   {
      extern int foo(int);
      int x = foo(x);
      printf("internal: %d\n", x);
   }

   return foo(x);
}

Check warnings

C_PARSER[block_scope12!block_scope12] (simplify_C_expression) Variable "x" is probably used before it is defined
C_PARSER[block_scope12!block_scope12] (simplify_C_expression) Variable "x" is probably used before it is defined
