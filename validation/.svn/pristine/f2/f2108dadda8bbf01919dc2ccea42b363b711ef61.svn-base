      SUBROUTINE DOTPROD(A, B, C)

! include "DOTPROD_INC.f"
        INTEGER*2 SIZE
        PARAMETER (SIZE=10000)
! end include "DOTPROD_INC.f"
!       INCLUDE 'DOTPROD_INC.f'

      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)

! include "DOTPROD_INC.f"
        INTEGER*2 SIZE
        PARAMETER (SIZE=10000)
! end include "DOTPROD_INC.f"
!       INCLUDE 'DOTPROD_INC.f'

      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, SIZE                                                 0013
         A(1) = A(1)+B(I)*C(I)                                          0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER*2 I_0
      INTEGER I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      DO 10 I = 1, 10000                                                0013
         I_0 = B(I)*C(I)
         A(1) = A(1)+I_0                                                0014
10       CONTINUE                                                       0015

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER*2 I_0
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      LU_NUB0 = 10000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 9999, 8
         I_0 = B(LU_IND0+1)*C(LU_IND0+1)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+2)*C(LU_IND0+2)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+3)*C(LU_IND0+3)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+4)*C(LU_IND0+4)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+5)*C(LU_IND0+5)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+6)*C(LU_IND0+6)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+7)*C(LU_IND0+7)
         A(1) = A(1)+I_0
         I_0 = B(LU_IND0+8)*C(LU_IND0+8)
         A(1) = A(1)+I_0
99998    CONTINUE
      I = 10001

      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER*2 I_0
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
      LU_NUB0 = 10000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 9999, 8
         I_0 = B(1+LU_IND0)*C(1+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(2+LU_IND0)*C(2+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(3+LU_IND0)*C(3+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(4+LU_IND0)*C(4+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(5+LU_IND0)*C(5+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(6+LU_IND0)*C(6+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(7+LU_IND0)*C(7+LU_IND0)
         A(1) = I_0+A(1)
         I_0 = B(8+LU_IND0)*C(8+LU_IND0)
         A(1) = I_0+A(1)
99998    CONTINUE
      I = 10001
      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER*2 I_0
      INTEGER LU_IND0
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 9999, 8
         I_0 = B(LU_IND0+1)*C(LU_IND0+1)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+2)*C(LU_IND0+2)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+3)*C(LU_IND0+3)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+4)*C(LU_IND0+4)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+5)*C(LU_IND0+5)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+6)*C(LU_IND0+6)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+7)*C(LU_IND0+7)
         A(1) = I_0+A(1)
         I_0 = B(LU_IND0+8)*C(LU_IND0+8)
         A(1) = I_0+A(1)
99998    CONTINUE
      END
      SUBROUTINE DOTPROD(A, B, C)
      INTEGER*2 SIZE
      PARAMETER (SIZE = 10000)
      INTEGER*2 I_07, I_06, I_05, I_04, I_03, I_02, I_01, I_00
      INTEGER LU_IND00
      INTEGER*2 A(1:1), B(1:SIZE), C(1:SIZE)

      A(1) = 0                                                          0012
99999 CONTINUE
      DO 99998 LU_IND00 = 0, 9999, 8
         I_00 = B(LU_IND00+1)*C(LU_IND00+1)
         A(1) = I_00+A(1)
         I_01 = B(LU_IND00+2)*C(LU_IND00+2)
         A(1) = I_01+A(1)
         I_02 = B(LU_IND00+3)*C(LU_IND00+3)
         A(1) = I_02+A(1)
         I_03 = B(LU_IND00+4)*C(LU_IND00+4)
         A(1) = I_03+A(1)
         I_04 = B(LU_IND00+5)*C(LU_IND00+5)
         A(1) = I_04+A(1)
         I_05 = B(LU_IND00+6)*C(LU_IND00+6)
         A(1) = I_05+A(1)
         I_06 = B(LU_IND00+7)*C(LU_IND00+7)
         A(1) = I_06+A(1)
         I_07 = B(LU_IND00+8)*C(LU_IND00+8)
         A(1) = I_07+A(1)
99998    CONTINUE
      END
/* C pretty print for module DOTPROD. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

void
dotprod (short a[1], short b[10000], short c[10000])
{
  static const short size = 10000;
  a8hi pdata0;
  v8hi vec20;
  v8hi vec10;
  v8hi vec00;
  int lu_ind00;

  a[0] = 0;
  ;
  for (lu_ind00 = 0; lu_ind00 <= 9999; lu_ind00 += 8)
    {
      simd_load_v8hi (vec10, b[(1 + lu_ind00) - 1]);
      simd_load_v8hi (vec20, c[(1 + lu_ind00) - 1]);
      simd_mulw (vec00, vec10, vec20);
      simd_store_v8hi (vec00, pdata0[0]);
      a[0] = (pdata0[0] + a[0]);
      a[0] = (pdata0[1] + a[0]);
      a[0] = (pdata0[2] + a[0]);
      a[0] = (pdata0[3] + a[0]);
      a[0] = (pdata0[4] + a[0]);
      a[0] = (pdata0[5] + a[0]);
      a[0] = (pdata0[6] + a[0]);
      a[0] = (pdata0[7] + a[0]);
      continue;
    }
}

