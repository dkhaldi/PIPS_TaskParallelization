!
! File TRANSPOSE_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "TRANSPOSE_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 512)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, T LID, I
     &, I_4, I_5
      REAL*4 A(1:N, 1:N), B(1:N, 1:N)
      CALL HPFC INIT HOST
c
c initialize b
c
! collecting distributed variable B
      PSI2 = 1
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      T LID = 2*PSI1+PSI2-2
      CALL HPFC RCV FROM NODE(T LID)
      CALL HPFC REAL4 BUFUPK
      DO ALPHA2 = MAX(256*PSI2-255, 256*PSI1-252), MIN(13, 256*PSI2)
         ALPHA1 = ALPHA2-3
         LALPHA1 = ALPHA1-256*PSI1+256
         LALPHA2 = ALPHA2-256*PSI2+256
         BUF INDEX = BUF INDEX+1
         B(ALPHA1,ALPHA2) = HPFC REAL4 BUFF(BUF INDEX)
      ENDDO
! end of collect
      I_4 = I+3
      PRINT *, (B(I,I_4), I = 1, 10)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
c
c first a simple copy
c
c A = B
c
c
c now transpose !
c
c B = TRANSPOSE(A)
c
! collecting distributed variable A_1
      DO PSI1 = 1, 2
         PSI2 = 1
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = 2*PSI1+PSI2-2
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO LALPHA2 = MAX(128*PSI2+HPFC DIVIDE(-PSI1-255, 2), 1), MIN
     &   (5, 128*PSI2+HPFC DIVIDE(-PSI1-1, 2))
            ALPHA2 = 2*LALPHA2+PSI1-2
            ALPHA1 = ALPHA2+3
            LALPHA1 = ALPHA1-256*PSI2+256
            BUF INDEX = BUF INDEX+1
            A(ALPHA1,ALPHA2) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      I_5 = I+3
c
c END OF TRANSPOSITION
c
      PRINT *, (A(I_5,I), I = 1, 10)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      CALL HPFC HOST END
      END
!
! That is all for TRANSPOSE_host.f
!
!
! File TRANSPOSE_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "TRANSPOSE_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 512)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, I_10, 
     &I_11, I_12, I_13, I_6, I_7, I_8, I_9, I, J, LALPHAp2, LALPHAp1
     &, PSIp1, T LID, PSIp2
      REAL*4 A(1:256, 1:256), B(1:256, 1:256), B_1(1:256, 1:256), A_1
     &(1:256, 1:256)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_11, I_12, I_13, 1, N, 3, 1)
      CALL HPFC LOOP BOUNDS(I_7, I_8, I_9, 1, N, 3, 2)
! all livenesss for B
      LIVE MAPPING(3) = .FALSE.
      LIVE MAPPING(2) = .FALSE.
! all livenesss for A
      LIVE MAPPING(4) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for B
      LIVE MAPPING(3) = .TRUE.
      MSTATUS(3) = 3
! direct remapping for A
      LIVE MAPPING(4) = .TRUE.
      MSTATUS(4) = 4
c
c initialize b
c
      J = I_9
      DO I_6 = I_7, I_8
         J = J+1
         I = I_13
         DO I_10 = I_11, I_12
            I = I+1
            B(I_10,I_6) = REAL(I+J)
         ENDDO
      ENDDO
! collecting distributed variable B
      PSI1 = MY POS(1,1)
      PSI2 = MY POS(2,1)
      IF (PSI2.EQ.1) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA2 = MAX(256*PSI2-255, 256*PSI1-252), MIN(13, 256*
     &   PSI2)
            ALPHA1 = ALPHA2-3
            LALPHA1 = ALPHA1-256*PSI1+256
            LALPHA2 = ALPHA2-256*PSI2+256
            BUF INDEX = BUF INDEX+1
            HPFC REAL4 BUFF(BUF INDEX) = B(LALPHA1,LALPHA2)
         ENDDO
         CALL HPFC REAL4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! begin remappings
      include 'TRANSPOSE_B_3_2_node.h'
! liveness management
! clean live set for B
      LIVE MAPPING(3) = .FALSE.
! end of liveness management
! end remappings
c
c first a simple copy
c
c A = B
c
      DO J = 1, 256
         DO I = 1, 256
            A(I,J) = B_1(I,J)
         ENDDO
      ENDDO
c
c now transpose !
c
c B = TRANSPOSE(A)
c
! begin remappings
      include 'TRANSPOSE_A_4_1_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(4) = .FALSE.
! end of liveness management
! end remappings
      DO J = 1, 256
         DO I = 1, 256
            B_1(I,J) = A_1(J,I)
         ENDDO
      ENDDO
! collecting distributed variable A_1
      PSI1 = MY POS(1,1)
      PSI2 = MY POS(2,1)
      IF (PSI2.EQ.1) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO LALPHA2 = MAX(128*PSI2+HPFC DIVIDE(-PSI1-255, 2), 1), MIN
     &   (5, 128*PSI2+HPFC DIVIDE(-PSI1-1, 2))
            ALPHA2 = 2*LALPHA2+PSI1-2
            ALPHA1 = ALPHA2+3
            LALPHA1 = ALPHA1-256*PSI2+256
            BUF INDEX = BUF INDEX+1
            HPFC REAL4 BUFF(BUF INDEX) = A_1(LALPHA1,LALPHA2)
         ENDDO
         CALL HPFC REAL4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for TRANSPOSE_node.f
!
