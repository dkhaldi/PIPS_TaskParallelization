int main(int argc, char **argv)
{
//		< is static > FALSE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   int i, j, k;
//		< is static > FALSE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   int n = 1024;
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Initialize array. */
   init_array();
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Start timer. */
   
#pragma scop
#pragma live-out a
   for(i = 0; i <= n-1; i += 1) {
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      x = a[i][i];
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      for(j = 0; j <= i-1; j += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            0 <= 0`j <= i-1
//		<   tests   >
         x = x-a[i][j]*a[i][j];
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      p[i] = 1.0/sqrt(x);
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      for(j = i+1; j <= n-1; j += 1) {
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            i+1 <= 0`j <= n-1
//		<   tests   >
         x = a[i][j];
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            i+1 <= 0`j <= n-1
//		<   tests   >
         for(k = 0; k <= i-1; k += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            i+1 <= 0`j <= n-1
//                            0 <= 0`k <= i-1
//		<   tests   >
            x = x-a[j][k]*a[i][k];
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            i+1 <= 0`j <= n-1
//		<   tests   >
         a[j][i] = x*p[i];
      }
   }
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Stop and print timer. */
#pragma endscop
   ;
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >

   print_array(argc, argv);
//		< is static > TRUE
//		< parameter > 0`n, 0`k, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >

   return 0;
}
