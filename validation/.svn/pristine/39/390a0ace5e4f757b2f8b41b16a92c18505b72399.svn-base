
Preconditions for FRAER01 (min and max of three variables, x, y and z)


C  P() {}

      PROGRAM FRAER01

C     Example from Fraer's PhD, P. 72

C     We do get the convex approximation of the postcondition.

C     The redundancy elimination used in PIPS fails in this case.

C     To get a stronger postcondition by bounding x, y and z: see fraer03

      INTEGER X, Y, Z

C  P() {}


      READ *, X, Y, Z                                                   0013

C  P(X,Y,Z) {}


      IF (X.LT.Y) THEN                                                  0015

C  P(X,Y,Z) {X+1<=Y}

         MAX2 = Y                                                       0016

C  P(MAX2,X,Y,Z) {MAX2==Y, X+1<=MAX2}

         MIN2 = X                                                       0017
      ELSE

C  P(X,Y,Z) {Y<=X}

         MAX2 = X                                                       0019

C  P(MAX2,X,Y,Z) {MAX2==X, Y<=MAX2}

         MIN2 = Y                                                       0020
      ENDIF

C  P(MAX2,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, Y<=MAX2, MIN2<=Y}


      CALL PRINTMIN2(MIN2, X, Y)                                        0023

C  P(MAX2,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, Y<=MAX2, MIN2<=Y}

      CALL PRINTMAX2(MAX2, X, Y)                                        0024

C  P(MAX2,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, Y<=MAX2, MIN2<=Y}


      IF (MAX2.LT.Z) THEN                                               0026

C  P(MAX2,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, Y<=MAX2, MAX2+1<=Z, MIN2<=Y}

         MAX3 = Z                                                       0027

C  P(MAX2,MAX3,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, MAX3==Z, MAX2+1<=MAX3,
C    Y<=MAX2, MIN2<=Y}

         MIN3 = MIN2                                                    0028
      ELSE

C  P(MAX2,MIN2,X,Y,Z) {MAX2+MIN2==X+Y, Y<=MAX2, Z<=MAX2, MIN2<=Y}

         MAX3 = MAX2                                                    0030

C  P(MAX2,MAX3,MIN2,X,Y,Z) {MAX2==MAX3, MAX2+MIN2==X+Y, Y<=MAX2,
C    Z<=MAX2, MIN2<=Y}

         IF (MIN2.GT.Z) THEN                                            0031

C  P(MAX2,MAX3,MIN2,X,Y,Z) {MAX2==MAX3, MAX2+MIN2==X+Y, Y<=MAX2,
C    Z<=MAX2, MIN2<=Y, Z+1<=MIN2}

            MIN3 = Z                                                    0032
         ELSE

C  P(MAX2,MAX3,MIN2,X,Y,Z) {MAX2==MAX3, MAX2+MIN2==X+Y, Y<=MAX2,
C    Z<=MAX2, MIN2<=Y, MIN2<=Z}

            MIN3 = MIN2                                                 0034
         ENDIF
      ENDIF

C  P(MAX2,MAX3,MIN2,MIN3,X,Y,Z) {MAX2+MIN2==X+Y, MAX2<=MAX3,
C    X+Y+Z<=MAX2+MAX3+MIN3, MAX3+MIN3<=MAX2+Z, MAX2+MIN3<=X+Y,
C    X<=MAX2, Y<=MAX2}


      CALL PRINTMIN3(MIN3, X, Y, Z)                                     0038

C  P(MAX2,MAX3,MIN2,MIN3,X,Y,Z) {MAX2+MIN2==X+Y, MAX2<=MAX3,
C    X+Y+Z<=MAX2+MAX3+MIN3, MAX3+MIN3<=MAX2+Z, MAX2+MIN3<=X+Y,
C    X<=MAX2, Y<=MAX2}

      CALL PRINTMAX3(MAX3, X, Y, Z)                                     0039

C  P(MAX2,MAX3,MIN2,MIN3,X,Y,Z) {MAX2+MIN2==X+Y, MAX2<=MAX3,
C    X+Y+Z<=MAX2+MAX3+MIN3, MAX3+MIN3<=MAX2+Z, MAX2+MIN3<=X+Y,
C    X<=MAX2, Y<=MAX2}


      PRINT *, MIN2, MAX2, MIN3, MAX3                                   0041

      END

Preconditions for PRINTMIN2


C  P() {MIN2<=X, MIN2<=Y}


      SUBROUTINE PRINTMIN2(MIN2, X, Y)

      INTEGER X, Y

C  P() {MIN2<=X, MIN2<=Y}


      PRINT *, MIN2, X, Y                                               0006

      END

Preconditions for PRINTMAX2


C  P() {X<=MAX2, Y<=MAX2}


      SUBROUTINE PRINTMAX2(MAX2, X, Y)

      INTEGER X, Y

C  P() {X<=MAX2, Y<=MAX2}


      PRINT *, MAX2, X, Y                                               0006

      END

Preconditions for PRINTMIN3


C  P() {MIN3<=X, 2MIN3<=X+Y, MIN3<=Y, MIN3<=Z}


      SUBROUTINE PRINTMIN3(MIN3, X, Y, Z)

      INTEGER X, Y, Z

C  P() {MIN3<=X, 2MIN3<=X+Y, MIN3<=Y, MIN3<=Z}


      PRINT *, MIN3, X, Y, Z                                            0006

      END

Preconditions for PRINTMAX3


C  P() {X<=MAX3, X+Y<=2MAX3, X+Y+Z<=3MAX3, X+Z<=2MAX3, Y<=MAX3,
C    Y+Z<=2MAX3, Z<=MAX3}


      SUBROUTINE PRINTMAX3(MAX3, X, Y, Z)

      INTEGER X, Y, Z

C  P() {X<=MAX3, X+Y<=2MAX3, X+Y+Z<=3MAX3, X+Z<=2MAX3, Y<=MAX3,
C    Y+Z<=2MAX3, Z<=MAX3}


      PRINT *, MAX3, X, Y, Z                                            0006

      END

ICFG with preconditions for FRAER01 (not in the value space you'd like)

FRAER01

C  P() {MIN2<=X, MIN2<=Y}

    PRINTMIN2

C  P() {X<=MAX2, Y<=MAX2}

    PRINTMAX2

C  P() {MIN3<=X, 2MIN3<=X+Y, MIN3<=Y, MIN3<=Z}

    PRINTMIN3

C  P() {X<=MAX3, X+Y<=2MAX3, X+Y+Z<=3MAX3, X+Z<=2MAX3, Y<=MAX3,
C    Y+Z<=2MAX3, Z<=MAX3}

    PRINTMAX3
