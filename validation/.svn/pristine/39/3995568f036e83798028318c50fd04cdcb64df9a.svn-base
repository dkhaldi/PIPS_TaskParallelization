      SUBROUTINE WP65(PROC_ID)
      INTEGER*4 idiv
      EXTERNAL idiv
      INTEGER PROC_ID,BANK_ID,L,O,I_0,L_I,J_0,L_J,L_I_1,L_I_2,K_0,L_K
      REAL*4 L_T_0_0(0:0,0:24),L_A_0_0(0:1,0:25),L_B_0_0(0:1,0:25),
     &L_C_0_0(0:1,0:25)

C     WP65 DISTRIBUTED CODE FOR NPNL

C     To scan the tile set for WP65
      DO 99973 I_0 = 0, 99
         DO 99974 J_0 = PROC_ID, 3, 4
            DOALL BANK_ID = 0, 3
               DO 99995 L_J = 0, 24
                  DO 99996 L = idiv(I_0+2500*J_0, 400), idiv(2400+I_0
     &            +2500*J_0, 400)
                     L_I_1 = MAX(0, 100*BANK_ID-I_0-2500*J_0+400*L-
     &               100*L_J)
                     L_I_2 = MIN(0, 99+100*BANK_ID-I_0-2500*J_0+400*L
     &               -100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_A_0_0(L_I_1,
     &                  L_J), L_I_2-L_I_1+1)
                     ENDIF
99996                CONTINUE
99995             CONTINUE
99994          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99984 L_J = 0, 24
                  DO 99985 L = MAX(0, idiv(4-BANK_ID, 4), idiv(4-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(25, idiv(101-BANK_ID, 
     &            4), idiv(2-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = MAX(0, -10001+100*BANK_ID-I_0+400*L, 
     &               -101+100*BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     L_I_2 = MIN(0, -2+100*BANK_ID-I_0+400*L, -2+100*
     &               BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_A_0_0(1+L_I_1,
     &                  1+L_J), L_I_2-L_I_1+1)
                     ENDIF
99985                CONTINUE
99984             CONTINUE
99983          CONTINUE
            ENDDO
C           To scan each iteration of the current tile
            DO 99975 L_I = 0, 0
               DO 99976 L_J = 0, 24
                  L_T_0_0(L_I,L_J) = L_A_0_0(L_I,L_J)
                  DO 300 K = 0, 99
                     L_A_0_0(L_I,L_J) = L_A_0_0(L_I+1,L_J+1)
300                  CONTINUE
200               CONTINUE
99976             CONTINUE
99975          CONTINUE
            DOALL BANK_ID = 0, 3
               DO 99989 L_J = 0, 24
                  DO 99990 L = MAX(idiv(I_0+2500*J_0, 400), idiv(3-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(idiv(2400+I_0+2500*J_0
     &            , 400), idiv(99-BANK_ID, 4), idiv(-BANK_ID+25*J_0+
     &            L_J, 4))
                     L_I_1 = 0
                     L_I_2 = 0
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_T_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99990                CONTINUE
99989             CONTINUE
99988          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99978 L_J = 0, 24
                  DO 99979 L = MAX(0, idiv(3-BANK_ID+25*J_0+L_J, 4))
     &            , MIN(24, idiv(-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = 0
                     L_I_2 = 0
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_A_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99979                CONTINUE
99978             CONTINUE
99977          CONTINUE
            ENDDO
99974       CONTINUE
99973    CONTINUE

C     To scan the tile set for WP65
      DO 99945 I_0 = 0, 99
         DO 99946 J_0 = PROC_ID, 3, 4
            DOALL BANK_ID = 0, 3
               DO 99967 L_J = 0, 24
                  DO 99968 L = MAX(0, idiv(4-BANK_ID, 4), idiv(4-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(25, idiv(101-BANK_ID, 
     &            4), idiv(2-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = MAX(0, -10001+100*BANK_ID-I_0+400*L, 
     &               -101+100*BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     L_I_2 = MIN(0, -2+100*BANK_ID-I_0+400*L, -2+100*
     &               BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_C_0_0(1+L_I_1,
     &                  1+L_J), L_I_2-L_I_1+1)
                     ENDIF
99968                CONTINUE
99967             CONTINUE
99966          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99956 L_J = 0, 24
                  DO 99957 L = MAX(0, idiv(4-BANK_ID, 4), idiv(4-
     &            BANK_ID+25*J_0+L_J, 4)), MIN(25, idiv(101-BANK_ID, 
     &            4), idiv(2-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = MAX(0, -10001+100*BANK_ID-I_0+400*L, 
     &               -101+100*BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     L_I_2 = MIN(0, -2+100*BANK_ID-I_0+400*L, -2+100*
     &               BANK_ID-I_0-2500*J_0+400*L-100*L_J)
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_RECEIVE_4(BANK_ID, L_B_0_0(1+L_I_1,
     &                  1+L_J), L_I_2-L_I_1+1)
                     ENDIF
99957                CONTINUE
99956             CONTINUE
99955          CONTINUE
            ENDDO
C           To scan each iteration of the current tile
            DO 99947 L_I = 0, 0
               DO 99948 L_J = 0, 24
                  DO 99998 K = 0, 99
                     L_B_0_0(L_I,L_J) = L_C_0_0(L_I+1,L_J+1)
99998                CONTINUE
                  DO 99996 K = 0, 99
                     L_C_0_0(L_I,L_J) = L_B_0_0(L_I+1,L_J+1)
99996                CONTINUE
99997             CONTINUE
99948             CONTINUE
99947          CONTINUE
            DOALL BANK_ID = 0, 3
               DO 99961 L_J = 0, 24
                  DO 99962 L = MAX(0, idiv(3-BANK_ID+25*J_0+L_J, 4))
     &            , MIN(24, idiv(-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = 0
                     L_I_2 = 0
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_B_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99962                CONTINUE
99961             CONTINUE
99960          CONTINUE
            ENDDO
            DOALL BANK_ID = 0, 3
               DO 99950 L_J = 0, 24
                  DO 99951 L = MAX(0, idiv(3-BANK_ID+25*J_0+L_J, 4))
     &            , MIN(24, idiv(-BANK_ID+25*J_0+L_J, 4))
                     L_I_1 = 0
                     L_I_2 = 0
                     IF (L_I_1.LE.L_I_2) THEN
                        CALL WP65_SEND_4(BANK_ID, L_C_0_0(L_I_1,L_J)
     &                  , L_I_2-L_I_1+1)
                     ENDIF
99951                CONTINUE
99950             CONTINUE
99949          CONTINUE
            ENDDO
99946       CONTINUE
99945    CONTINUE
      END
      SUBROUTINE BANK(BANK_ID)
      INTEGER*4 idiv
      EXTERNAL idiv
      INTEGER PROC_ID,BANK_ID,L,O,I_0,L_I,J_0,L_J,O_1,O_2,K_0,L_K
      REAL*4 ES_T(0:99,0:25),ES_A(0:99,0:25),ES_B(0:99,0:25),ES_C(0:
     &99,0:25)

C     BANK DISTRIBUTED CODE FOR NPNL

C     To scan the tile set for BANK
      DO 99971 I_0 = 0, 99
         DO 99972 J_0 = 0, 3
            PROC_ID = MOD(J_0, 4)
            DO 99997 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99998 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  O_1 = MAX(0, -100*BANK_ID+I_0-400*L, -100*BANK_ID+
     &            I_0+2500*J_0-400*L+100*L_J)
                  O_2 = MIN(99, 9900-100*BANK_ID+I_0-400*L, -100*
     &            BANK_ID+I_0+2500*J_0-400*L+100*L_J)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_A(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99998             CONTINUE
99997          CONTINUE
            DO 99986 L_J = 0, 24
               DO 99987 L = 0, 25
                  O_1 = MAX(0, 101-100*BANK_ID+I_0+2500*J_0-400*L+100
     &            *L_J, 101-100*BANK_ID+I_0-400*L)
                  O_2 = MIN(99, 101-100*BANK_ID+I_0+2500*J_0-400*L+
     &            100*L_J, 10001-100*BANK_ID+I_0-400*L)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_A(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99987             CONTINUE
99986          CONTINUE
            DO 99991 L_J = MAX(0, BANK_ID-25*J_0), 24
               DO 99992 L = MAX(0, idiv(3-BANK_ID+25*J_0, 4)), idiv(
     &         24-BANK_ID+25*J_0, 4)
                  DO 99993 O = MAX(0, -100*BANK_ID+I_0+2500*J_0-400*L
     &            +100*L_J), MIN(99, -100*BANK_ID+I_0+2500*J_0-400*L+
     &            100*L_J)
                     IF (idiv(199+100*BANK_ID-I_0+400*L+O, 100).LE.
     &               idiv(100+100*BANK_ID-I_0+400*L+O, 100)) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_T(O,L), 1)
                     ENDIF
99993                CONTINUE
99992             CONTINUE
99991          CONTINUE
            DO 99980 L_J = 0, 24
               DO 99981 L = 0, 24
                  DO 99982 O = MAX(0, -100*BANK_ID+I_0-400*L, -100*
     &            BANK_ID+I_0+2500*J_0-400*L+100*L_J), MIN(99, 9900-
     &            100*BANK_ID+I_0-400*L, -100*BANK_ID+I_0+2500*J_0-
     &            400*L+100*L_J)
                     IF (idiv(199+100*BANK_ID-I_0+400*L+O, 100).LE.
     &               idiv(100+100*BANK_ID-I_0+400*L+O, 100).AND.idiv(
     &               199+100*BANK_ID-I_0+400*L+O, 100).LE.idiv(100+
     &               100*BANK_ID+400*L+O, 100).AND.idiv(100+100*
     &               BANK_ID+400*L+O, 100).LE.idiv(100+100*BANK_ID-
     &               I_0+400*L+O, 100)) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_A(O,L), 1)
                     ENDIF
99982                CONTINUE
99981             CONTINUE
99980          CONTINUE
99972       CONTINUE
99971    CONTINUE

C     To scan the tile set for BANK
      DO 99943 I_0 = 0, 99
         DO 99944 J_0 = 0, 3
            PROC_ID = MOD(J_0, 4)
            DO 99969 L_J = 0, 24
               DO 99970 L = 0, 25
                  O_1 = MAX(0, 101-100*BANK_ID+I_0+2500*J_0-400*L+100
     &            *L_J, 101-100*BANK_ID+I_0-400*L)
                  O_2 = MIN(99, 101-100*BANK_ID+I_0+2500*J_0-400*L+
     &            100*L_J, 10001-100*BANK_ID+I_0-400*L)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_C(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99970             CONTINUE
99969          CONTINUE
            DO 99958 L_J = 0, 24
               DO 99959 L = 0, 25
                  O_1 = MAX(0, 101-100*BANK_ID+I_0+2500*J_0-400*L+100
     &            *L_J, 101-100*BANK_ID+I_0-400*L)
                  O_2 = MIN(99, 101-100*BANK_ID+I_0+2500*J_0-400*L+
     &            100*L_J, 10001-100*BANK_ID+I_0-400*L)
                  IF (O_1.LE.O_2) THEN
                     CALL BANK_SEND_4(PROC_ID, ES_B(O_1,L), O_2-O_1+1
     &               )
                  ENDIF
99959             CONTINUE
99958          CONTINUE
            DO 99963 L_J = 0, 24
               DO 99964 L = 0, 24
                  DO 99965 O = MAX(0, -100*BANK_ID+I_0-400*L, -100*
     &            BANK_ID+I_0+2500*J_0-400*L+100*L_J), MIN(99, 9900-
     &            100*BANK_ID+I_0-400*L, -100*BANK_ID+I_0+2500*J_0-
     &            400*L+100*L_J)
                     IF (idiv(199+100*BANK_ID-I_0+400*L+O, 100).LE.
     &               idiv(100+100*BANK_ID-I_0+400*L+O, 100).AND.idiv(
     &               199+100*BANK_ID-I_0+400*L+O, 100).LE.idiv(100+
     &               100*BANK_ID+400*L+O, 100).AND.idiv(100+100*
     &               BANK_ID+400*L+O, 100).LE.idiv(100+100*BANK_ID-
     &               I_0+400*L+O, 100)) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_B(O,L), 1)
                     ENDIF
99965                CONTINUE
99964             CONTINUE
99963          CONTINUE
            DO 99952 L_J = 0, 24
               DO 99953 L = 0, 24
                  DO 99954 O = MAX(0, -100*BANK_ID+I_0-400*L, -100*
     &            BANK_ID+I_0+2500*J_0-400*L+100*L_J), MIN(99, 9900-
     &            100*BANK_ID+I_0-400*L, -100*BANK_ID+I_0+2500*J_0-
     &            400*L+100*L_J)
                     IF (idiv(199+100*BANK_ID-I_0+400*L+O, 100).LE.
     &               idiv(100+100*BANK_ID-I_0+400*L+O, 100).AND.idiv(
     &               199+100*BANK_ID-I_0+400*L+O, 100).LE.idiv(100+
     &               100*BANK_ID+400*L+O, 100).AND.idiv(100+100*
     &               BANK_ID+400*L+O, 100).LE.idiv(100+100*BANK_ID-
     &               I_0+400*L+O, 100)) THEN
                        CALL BANK_RECEIVE_4(PROC_ID, ES_C(O,L), 1)
                     ENDIF
99954                CONTINUE
99953             CONTINUE
99952          CONTINUE
99944       CONTINUE
99943    CONTINUE
      END
