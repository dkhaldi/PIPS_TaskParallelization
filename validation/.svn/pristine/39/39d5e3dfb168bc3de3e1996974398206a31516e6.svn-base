//
// Init Code
//
int main()
{
   int n, m;
   int a[n], b[m];
   int i, j, k;

   for(i = 0; i <= n-1; i += 1)
      a[i] = i;
   for(j = 0; j <= m-1; j += 1)
      b[j] = a[2*j];

   for(k = 0; k <= m-1; k += 1)
      printf("b[%d]=%d", k, b[k]);

   return 0;
}
//
// OUT regions for for21
//
int main()
{
   int n, m;
   int a[n], b[m];
   int i, j, k;

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1+2<=2m, PHI1+1<=n}>


   for(i = 0; i <= n-1; i += 1)

//  <a[PHI1]-OUT-MAY-{PHI1==i, PHI1+2<=2m, 0<=i, i+1<=n}>

      a[i] = i;

//  <b[PHI1]-OUT-EXACT-{0<=PHI1, PHI1+1<=m, 0<=i, n<=i}>

   for(j = 0; j <= m-1; j += 1)

//  <b[PHI1]-OUT-EXACT-{PHI1==j, 0<=i, n<=i, 0<=j, j+1<=m}>

      b[j] = a[2*j];

//  <__IO_EFFECTS:LUNS[PHI1]-OUT-EXACT-{PHI1==1, 0<=i, n<=i, m<=j,
//    1<=m}>


   for(k = 0; k <= m-1; k += 1)

//  <stdout[PHI1]-OUT-MAY-{PHI1==0, 0<=k, k+1<=m}>
//  <__IO_EFFECTS:LUNS[PHI1]-OUT-EXACT-{PHI1==1, 0<=i, n<=i, m<=j,
//    0<=k, k+1<=m}>

      printf("b[%d]=%d", k, b[k]);

   return 0;
}
//
// Source code for for21 after LOOP_BOUND_MINIMIZATION_WITH_OUT_REGIONS
//
int main()
{
   int n, m;
   int a[n], b[m];
   int i, j, k;

   for(i = 0; i <= pips_min(2, n-1, 2*m-2); i += 1)
      a[i] = i;
   for(j = 0; j <= m-1; j += 1)
      b[j] = a[2*j];

   for(k = 0; k <= m-1; k += 1)
      printf("b[%d]=%d", k, b[k]);

   return 0;
}

Warnings

