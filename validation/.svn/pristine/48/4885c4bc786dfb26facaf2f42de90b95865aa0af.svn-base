int foo(unsigned char i, unsigned char j)
{
   int k = 0;
   if (i<j) {
      i++, j++;
      if (i<j)
         // true branch, reached most of the time
         // i <= 254, j<= 255
         k = 1;
      else
         // false branch reachable because j may have overflowed from 255 to 0
         // j == 0 (found with PIPS precondition only when i == 255)
         k = 2;
   }
   if (k==0) {
      // i>=j
      scanf("%d", &k);
      k = 0;
   }
   else if (k==1) {
      // i <= 254
      scanf("%d", &k);
      scanf("%d", &j);
      k = 1;
   }
   else if (k==2) {
      // j == 0
      scanf("%d", &k);
      scanf("%d", &i);
      k = 2;
   }
   return k;
}

Transformers for "foo"


//  T(foo) {}

int foo(unsigned char i, unsigned char j)
{

//  T(k) {k==0}

   int k = 0;

//  T(i,j,k) {i+j#init==i#init+j, j#init<=j, j<=j#init+1}

   if (i<j) {

//  T(i,j) {i==i#init+1, j==j#init+1}

      i++, j++;

//  T(k) {1<=k, k<=2}

      if (i<j)

//  T(k) {k==1}

         // true branch, reached most of the time
         // i <= 254, j<= 255
         k = 1;
      else

//  T(k) {k==2}

         // false branch reachable because j may have overflowed from 255 to 0
         // j == 0 (found with PIPS precondition only when i == 255)
         k = 2;
   }

//  T(i,j,k) {k==k#init}

   if (k==0) {

//  T(k) {}

      // i>=j
      scanf("%d", &k);

//  T(k) {k==0}

      k = 0;
   }
   else if (k==1) {

//  T(k) {}

      // i <= 254
      scanf("%d", &k);

//  T(j) {}

      scanf("%d", &j);

//  T(k) {k==1}

      k = 1;
   }
   else if (k==2) {

//  T(k) {}

      // j == 0
      scanf("%d", &k);

//  T(i) {}

      scanf("%d", &i);

//  T(k) {k==2}

      k = 2;
   }

//  T(foo) {foo==k}

   return k;
}

Preconditions for "foo"


//  P() {0<=i, i<=255, 0<=j, j<=255}

int foo(unsigned char i, unsigned char j)
{

//  P() {0<=i, i<=255, 0<=j, j<=255}

   int k = 0;

//  P(k) {k==0, 0<=i, i<=255, 0<=j, j<=255}

   if (i<j) {

//  P(k) {k==0, 0<=i, i<=255, i+1<=j, 0<=j, j<=255}

      i++, j++;

//  P(i,j,k) {k==0, 1<=i, i<=255, 255i+j<=65025, 0<=j, j<=255}

      if (i<j)

//  P(i,j,k) {k==0, 1<=i, i<=255, i+1<=j, 255i+j<=65025, 0<=j, j<=255}

         // true branch, reached most of the time
         // i <= 254, j<= 255
         k = 1;
      else

//  P(i,j,k) {k==0, 1<=i, i<=255, j<=i, 255i+j<=65025, 0<=j, j<=255}

         // false branch reachable because j may have overflowed from 255 to 0
         // j == 0 (found with PIPS precondition only when i == 255)
         k = 2;
   }

//  P(i,j,k) {0<=i, i<=255, j+254k<=509i, j<=i+254k, j+254k<=i+508,
//    255i+256j+255k<=130305, 510i+2j+255k<=130560, k<=2i, 0<=j,
//    j<=255, j+k<=256, 0<=k, k<=2}

   if (k==0) {

//  P(i,j,k) {k==0, 0<=i, i<=255, j<=255i, j<=i, 0<=j, j<=255}

      // i>=j
      scanf("%d", &k);

//  P(i,j,k) {0<=i, i<=255, j<=255i, j<=i, 0<=j, j<=255}

      k = 0;
   }
   else if (k==1) {

//  P(i,j,k) {k==1, 1<=i, i<=255, i+j<=509, 252i+253j<=128523,
//    255i+j<=65152, 0<=j, j<=255}

      // i <= 254
      scanf("%d", &k);

//  P(i,j,k) {1<=i, i<=255, i+j<=509, 252i+253j<=128523,
//    255i+j<=65152, 0<=j, j<=255}

      scanf("%d", &j);

//  P(i,j,k) {1<=i, i<=255, 0<=j, j<=255}

      k = 1;
   }
   else if (k==2) {

//  P(i,j,k) {k==2, 1<=i, i<=255, j<=i, j+253<=254i, j+252<=253i,
//    i+j<=508, 251i+252j<=127763, 254i+j<=64770, 0<=j, j<=254}

      // j == 0
      scanf("%d", &k);

//  P(i,j,k) {1<=i, i<=255, j<=i, j+253<=254i, j+252<=253i, i+j<=508,
//    251i+252j<=127763, 254i+j<=64770, 0<=j, j<=254}

      scanf("%d", &i);

//  P(i,j,k) {0<=i, i<=255, 0<=j, j<=254}

      k = 2;
   }

//  P(i,j,k) {0<=i, i<=255, j<=128i+127k, j<=i+254k, 0<=j, j<=255,
//    j+k<=256, 0<=k, k<=2}

   return k;
}
