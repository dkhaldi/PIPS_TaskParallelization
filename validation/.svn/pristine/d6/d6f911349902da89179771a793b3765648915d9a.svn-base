!
! File INIT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      END
!
! That is all for INIT_host.f
!
!
! File INIT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for INIT
!
!
! initializing array AX, number 3
!
      NODIMA(3) = 2
      ATOT(3) = 3

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 20
      RANGEA(3, 1, 3) = 20
!
      RANGEA(3, 1, 4) = 0

      RANGEA(3, 2, 1) = 1
      RANGEA(3, 2, 2) = 20
      RANGEA(3, 2, 3) = 20
!
      RANGEA(3, 2, 4) = 2
      RANGEA(3, 2, 5) = 5
      RANGEA(3, 2, 6) = 1
      RANGEA(3, 2, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
      ALIGN(3, 2, 1) = 2
      ALIGN(3, 2, 2) = 1
      ALIGN(3, 2, 3) = 0
!
! That is all for INIT_init.h
!
!
! File INIT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_NODE(AX, INIT AX LO2, INIT AX UP2)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER I_0, I_1, I_2, I_3, INIT AX UP2, INIT AX LO2, I, J
      INTEGER AX(1:N, INIT AX LO2:INIT AX UP2)
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, N, 3, 1)
      J = I_3
      DO I_0 = I_1, I_2
         J = J+1
         DO I = 1, N
            AX(I,I_0) = I+N*J
         ENDDO
      ENDDO
      END
!
! That is all for INIT_node.f
!
!
! File INIT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for INIT
!
      integer 
     $    INIT AX LO1,
     $    INIT AX UP1
      parameter(INIT AX LO1 = 1)
      parameter(INIT AX UP1 = 20)
!
! That is all for INIT_parameters.h
!
!
! File PRESCRIPTIVE_A_1_2_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(2).EQ.1) THEN
         IF (.NOT.LIVE MAPPING(2)) THEN
! send part
! remapping A[2]: A_1[1] -> A[2]
            PSI1 = MY POS(1,2)
            IF (MY LID.LE.4) THEN
               DO PSIp1 = 1, 2
                  PSIp2 = (PSI1+1)/2
                  T LID = 2*PSIp1+PSIp2-2
                  IF (MY LID.NE.T LID) THEN
! - lazy sending
                     BUF INDEX = 0
                     SEND NOT INITIALIZED = .TRUE.
                     DO LALPHA2 = 1, 5
                        DO LALPHA1 = 10*PSIp1-9, 10*PSIp1
                           LALPHAp2 = LALPHA2+5*PSI1-10*PSIp2+5
                           LALPHAp1 = LALPHA1-10*PSIp1+10
                           BUF INDEX = BUF INDEX+1
                           HPFC INTEGER4 BUFF(BUF INDEX) = A_1(
     &                     LALPHA1,LALPHA2)
                           IF (BUF INDEX.EQ.HPFC INTEGER4 BUFF SIZE
     &                     ) THEN
                              CALL HPFC INTEGER4 BUFPCK
                              CALL HPFC BROADCAST 0(T LID)
                              BUF INDEX = 0
                              SEND NOT INITIALIZED = .TRUE.
                           ENDIF
                        ENDDO
                     ENDDO
                     IF (BUF INDEX.NE.0) THEN
                        CALL HPFC INTEGER4 BUFPCK
                        CALL HPFC BROADCAST 0(T LID)
                     ENDIF
                  ENDIF
               ENDDO
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            PSIp2 = MY POS(2,1)
            IF (MY LID.LE.4) THEN
               DO PSI1 = 2*PSIp2-1, 2*PSIp2
                  T LID = PSI1
                  IF (MY LID.NE.T LID) THEN
! - lazy receiving
                     BUF INDEX = 0
                     RECEIVED NOT PERFORMED = .TRUE.
                     SIZE OF RECEIVED BUFFER = 0
                     DO LALPHA2 = 1, 5
                        DO LALPHA1 = 10*PSIp1-9, 10*PSIp1
                           LALPHAp2 = LALPHA2+5*PSI1-10*PSIp2+5
                           LALPHAp1 = LALPHA1-10*PSIp1+10
                           IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER
     &                     ) THEN
                              RECEIVED NOT PERFORMED = .TRUE.
                              CALL HPFC INTEGER4 BUFUPK(T LID)
                              BUF INDEX = 0
                           ENDIF
                           BUF INDEX = BUF INDEX+1
                           A(LALPHAp1,LALPHAp2) = HPFC INTEGER4 BUFF(
     &                     BUF INDEX)
                        ENDDO
                     ENDDO
                  ELSE
! - lazy copying
                     DO LALPHA2 = 1, 5
                        DO LALPHA1 = 10*PSIp1-9, 10*PSIp1
                           LALPHAp2 = LALPHA2+5*PSI1-10*PSIp2+5
                           LALPHAp1 = LALPHA1-10*PSIp1+10
                           A(LALPHAp1,LALPHAp2) = A_1(LALPHA1,LALPHA2
     &                     )
                        ENDDO
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(2) = .TRUE.
         MSTATUS(2) = 2
      ENDIF
!
! That is all for PRESCRIPTIVE_A_1_2_node.h
!
!
! File PRESCRIPTIVE_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRESCRIPTIVE_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, T LID
      INTEGER A(1:N, 1:N)
      CALL HPFC INIT HOST
      CALL INIT_HOST
! collecting distributed variable A
      PSI2 = 2
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      T LID = 2*PSI1+PSI2-2
      CALL HPFC RCV FROM NODE(T LID)
      CALL HPFC INTEGER4 BUFUPK
      ALPHA2 = 15
      ALPHA1 = 5
      LALPHA1 = 5
      LALPHA2 = 5
      BUF INDEX = BUF INDEX+1
      A(ALPHA1,ALPHA2) = HPFC INTEGER4 BUFF(BUF INDEX)
! end of collect
      PRINT *, A(5,15)
      CALL HPFC HOST END
      END
!
! That is all for PRESCRIPTIVE_host.f
!
!
! File PRESCRIPTIVE_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for PRESCRIPTIVE
!
!
! initializing array A, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 2

      MSTATUS(2) = 2
      LIVEMAPPING(2) = .TRUE.

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 20
      RANGEA(2, 1, 3) = 20
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 10
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 20
      RANGEA(2, 2, 3) = 20
!
      RANGEA(2, 2, 4) = 2
      RANGEA(2, 2, 5) = 10
      RANGEA(2, 2, 6) = 1
      RANGEA(2, 2, 7) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array A_1, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 3

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 20
      RANGEA(1, 1, 3) = 20
!
      RANGEA(1, 1, 4) = 0

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 20
      RANGEA(1, 2, 3) = 20
!
      RANGEA(1, 2, 4) = 2
      RANGEA(1, 2, 5) = 5
      RANGEA(1, 2, 6) = 1
      RANGEA(1, 2, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 2
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for PRESCRIPTIVE_init.h
!
!
! File PRESCRIPTIVE_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRESCRIPTIVE_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PSI2, LALPHAp1
     &, LALPHAp2, PSIp1, T LID, PSIp2
      INTEGER A(1:10, 1:10), A_1(1:N, 1:5)
      CALL HPFC INIT NODE
! all livenesss for A
      LIVE MAPPING(2) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! begin remappings
      MSTATUS(2) = 1
! liveness management
! end of liveness management
! end remappings
      CALL INIT_NODE(A_1, PRESCRIPTIVE A_1 LO2, PRESCRIPTIVE A_1 UP2)
! begin remappings
      include 'PRESCRIPTIVE_A_1_2_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(1) = .FALSE.
! end of liveness management
! end remappings
! collecting distributed variable A
      PSI1 = MY POS(1,1)
      PSI2 = MY POS(2,1)
      IF (PSI2.EQ.2) THEN
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         ALPHA2 = 15
         ALPHA1 = 5
         LALPHA1 = 5
         LALPHA2 = 5
         BUF INDEX = BUF INDEX+1
         HPFC INTEGER4 BUFF(BUF INDEX) = A(LALPHA1,LALPHA2)
         CALL HPFC INTEGER4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
      CALL HPFC NODE END
      END
!
! That is all for PRESCRIPTIVE_node.f
!
!
! File PRESCRIPTIVE_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for PRESCRIPTIVE
!
      integer 
     $    PRESCRIPTIVE A LO1,
     $    PRESCRIPTIVE A UP1
      parameter(PRESCRIPTIVE A LO1 = 1)
      parameter(PRESCRIPTIVE A UP1 = 10)
      integer 
     $    PRESCRIPTIVE A LO2,
     $    PRESCRIPTIVE A UP2
      parameter(PRESCRIPTIVE A LO2 = 1)
      parameter(PRESCRIPTIVE A UP2 = 10)
      integer 
     $    PRESCRIPTIVE A_1 LO1,
     $    PRESCRIPTIVE A_1 UP1
      parameter(PRESCRIPTIVE A_1 LO1 = 1)
      parameter(PRESCRIPTIVE A_1 UP1 = 20)
      integer 
     $    PRESCRIPTIVE A_1 LO2,
     $    PRESCRIPTIVE A_1 UP2
      parameter(PRESCRIPTIVE A_1 LO2 = 1)
      parameter(PRESCRIPTIVE A_1 UP2 = 5)
!
! That is all for PRESCRIPTIVE_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template A, number 2
!
      NODIMT(2) = 2
      TTOP(2) = 1

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 20
      RANGET(2, 1, 3) = 20

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 20
      RANGET(2, 2, 3) = 20

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 10
      DIST(2, 2, 1) = 2
      DIST(2, 2, 2) = 10
!
! initializing template AX, number 3
!
      NODIMT(3) = 2
      TTOP(3) = 2

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 20
      RANGET(3, 1, 3) = 20

      RANGET(3, 2, 1) = 1
      RANGET(3, 2, 2) = 20
      RANGET(3, 2, 3) = 20

      DIST(3, 1, 1) = 2
      DIST(3, 1, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! initializing processors P, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 4
      RANGEP(2, 1, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 3)
      parameter(REALNBOFTEMPLATES = 2)
      parameter(REALNBOFPROCESSORS = 2)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
