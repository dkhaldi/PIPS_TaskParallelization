
Transformers for "main"


//  T(main) {main==0}

int main()
{

//  T() {}

   int ii, jj;


//  T(N) {N==100}

   int N = 100;

//  T() {}

   double A[100][100];

//  T(ii,jj) {ii+1<=N, 0<=ii}


   for(ii = 0; ii <= N-1; ii += 1)

//  T(jj) {jj+1<=N, 0<=jj}

      for(jj = 0; jj <= N-1; jj += 1)

//  T() {}

         if (1) {

//  T() {}

            A[ii][jj] = 1.0;

//  T() {}

            A[N/2][N/2] = 0.;
         }
   {

//  T() {}

      int i;

//  T(i) {i+1<=N, 0<=i}


      for(i = 0; i <= N-1; i += 1) {

//  T() {}

         int j;

//  T(j) {j+1<=N, 0<=j}

         for(j = 0; j <= N-1; j += 1)

//  T() {}

            printf("%f\n", A[i][j]);
      }
   }

//  T(main) {main==0}


   return 0;
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   int ii, jj;


//  P() {}

   int N = 100;

//  P(N) {N==100}

   double A[100][100];

//  P(N) {N==100}


   for(ii = 0; ii <= N-1; ii += 1)

//  P(N,ii,jj) {N==100, 0<=ii, ii<=99}

      for(jj = 0; jj <= N-1; jj += 1)

//  P(N,ii,jj) {N==100, 0<=ii, ii<=99, 0<=jj, jj<=99}

         if (1) {

//  P(N,ii,jj) {N==100, 0<=ii, ii<=99, 0<=jj, jj<=99}

            A[ii][jj] = 1.0;

//  P(N,ii,jj) {N==100, 0<=ii, ii<=99, 0<=jj, jj<=99}

            A[N/2][N/2] = 0.;
         }
   {

//  P(N,ii,jj) {N==100, ii==100, jj==100}

      int i;

//  P(N,ii,jj) {N==100, ii==100, jj==100}


      for(i = 0; i <= N-1; i += 1) {

//  P(N,i,ii,jj) {N==100, ii==100, jj==100, 0<=i, i<=99}

         int j;

//  P(N,i,ii,jj) {N==100, ii==100, jj==100, 0<=i, i<=99}

         for(j = 0; j <= N-1; j += 1)

//  P(N,i,ii,j,jj) {N==100, ii==100, jj==100, 0<=i, i<=99, 0<=j,
//    j<=99}

            printf("%f\n", A[i][j]);
      }
   }

//  P(N,ii,jj) {N==100, ii==100, jj==100}


   return 0;
}

Regions for "main"


//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1}>

int main()
{
   int ii, jj;

   int N = 100;
   double A[100][100];

//  <A[PHI1][PHI2]-W-MAY-{0<=PHI1, PHI1<=99, 0<=PHI2, PHI2<=99,
//    N==100}>


   for(ii = 0; ii <= N-1; ii += 1)

//  <A[PHI1][PHI2]-W-MAY-{0<=PHI1, PHI1<=99, 50ii<=50PHI1+49PHI2,
//    PHI1<=PHI2+ii, PHI2+ii<=PHI1+99, 49PHI1+50PHI2<=49ii+4950,
//    50ii<=99PHI1, 99PHI1<=49ii+4950, N==100, 0<=ii, ii<=99}>

      for(jj = 0; jj <= N-1; jj += 1)

//  <A[PHI1][PHI2]-W-MAY-{50ii<=50PHI1+49PHI2, PHI1<=PHI2+ii,
//    PHI2+ii<=PHI1+99, 49PHI1+50PHI2<=49ii+4950, 50jj<=49PHI1+50PHI2,
//    PHI2<=PHI1+jj, PHI1+jj<=PHI2+99, 50PHI1+49PHI2<=49jj+4950,
//    50ii<=99PHI1, 99PHI1<=49ii+4950, 50jj<=99PHI2,
//    99PHI2<=49jj+4950, N==100, 0<=ii, ii<=99, 0<=jj, jj<=99}>

         if (1) {

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==ii, PHI2==jj, N==100, 0<=ii, ii<=99,
//    0<=jj, jj<=99}>

            A[ii][jj] = 1.0;

//  <A[PHI1][PHI2]-W-MAY-{50<=PHI1, PHI1<=50, 50<=PHI2, PHI2<=50,
//    N==100, 0<=ii, ii<=99, 0<=jj, jj<=99}>

            A[N/2][N/2] = 0.;
         }
   {
      int i;

//  <A[PHI1][PHI2]-R-MAY-{0<=PHI1, PHI1<=99, 0<=PHI2, PHI2<=99,
//    N==100, ii==100, jj==100}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1, N==100, ii==100,
//    jj==100}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1, N==100, ii==100,
//    jj==100}>


      for(i = 0; i <= N-1; i += 1) {
         int j;

//  <A[PHI1][PHI2]-R-MAY-{PHI1==i, 0<=PHI2, PHI2<=99, N==100, ii==100,
//    jj==100, 0<=i, i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1, N==100, ii==100, jj==100,
//    0<=i, i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1, N==100, ii==100, jj==100,
//    0<=i, i<=99}>

         for(j = 0; j <= N-1; j += 1)

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j, N==100, ii==100,
//    jj==100, 0<=j, j<=99, 0<=i, i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1, N==100, ii==100,
//    jj==100, 0<=j, j<=99, 0<=i, i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1, N==100, ii==100,
//    jj==100, 0<=j, j<=99, 0<=i, i<=99}>

            printf("%f\n", A[i][j]);
      }
   }

//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1}>


   return 0;
}
