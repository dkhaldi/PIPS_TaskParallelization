setenv WKS matmul02

delete $WKS

setenv CPRETTYPRINTER_DEBUG_LEVEL 9

setproperty ABORT_ON_USER_ERROR TRUE

create $WKS $WKS.f include/p4a_stubs.f

setproperty PRETTYPRINT_STATEMENT_NUMBER FALSE

setproperty EVAL_SYMBOLIC_CONSTANT FALSE
setproperty GPU_LAUNCHER_PREFIX "P4A_LAUNCHER"
setproperty GPU_WRAPPER_PREFIX "P4A_WRAPPER"
setproperty GPU_KERNEL_PREFIX "P4A_KERNEL"
setproperty KERNEL_LOAD_STORE_ALLOCATE_FUNCTION "P4A_ACCEL_MALLOC"
setproperty KERNEL_LOAD_STORE_DEALLOCATE_FUNCTION "P4A_ACCEL_FREE"
setproperty KERNEL_LOAD_STORE_LOAD_FUNCTION "P4A_COPY_TO_ACCEL_2D"
setproperty KERNEL_LOAD_STORE_STORE_FUNCTION "P4A_COPY_FROM_ACCEL_2D"
setproperty NESTED_PARALLELISM_THRESHOLD 2
setproperty OUTLINE_INDEPENDENT_COMPILATION_UNIT TRUE

activate MUST_REGIONS
activate TRANSFORMERS_INTER_FULL
activate INTERPROCEDURAL_SUMMARY_PRECONDITION
activate PRECONDITIONS_INTER_FULL

# Loop normalize for the C language and GPU friendly
setproperty LOOP_NORMALIZE_ONE_INCREMENT TRUE
setproperty LOOP_NORMALIZE_LOWER_BOUND 0
# It is legal in the following by construction:
setproperty LOOP_NORMALIZE_SKIP_INDEX_SIDE_EFFECT TRUE
# If we do this here, the side effect at the end of a loop on the index
# break parallelization. It would require to apply USE_DEF_ELIM...
apply LOOP_NORMALIZE[MATMUL02]

apply PRIVATIZE_MODULE[MATMUL02]


# Should not coredump, neither prevent some parallelization
#apply LOCALIZE_DECLARATION[main]

#activate PRINT_CODE_PRECONDITIONS
#display PRINTED_FILE[%ALLFUNC]

apply COARSE_GRAIN_PARALLELIZATION[MATMUL02]



setproperty GPU_USE_LAUNCHER TRUE
setproperty GPU_USE_WRAPPER FALSE
setproperty GPU_USE_KERNEL FALSE

apply GPU_IFY[MATMUL02]

apply LOOP_NORMALIZE [P4A_LAUNCHER_MATMUL02]
apply LOOP_NORMALIZE [P4A_LAUNCHER_MATMUL02_1]

apply PRIVATIZE_MODULE [P4A_LAUNCHER_MATMUL02]
apply PRIVATIZE_MODULE [P4A_LAUNCHER_MATMUL02_1]

apply COARSE_GRAIN_PARALLELIZATION [P4A_LAUNCHER_MATMUL02]
apply COARSE_GRAIN_PARALLELIZATION [P4A_LAUNCHER_MATMUL02_1]

apply LIMIT_NESTED_PARALLELISM [P4A_LAUNCHER_MATMUL02]
apply LIMIT_NESTED_PARALLELISM [P4A_LAUNCHER_MATMUL02_1]

apply GPU_LOOP_NEST_ANNOTATE [P4A_LAUNCHER_MATMUL02]
apply GPU_LOOP_NEST_ANNOTATE [P4A_LAUNCHER_MATMUL02_1]

setproperty GPU_USE_LAUNCHER FALSE
setproperty GPU_USE_WRAPPER TRUE
setproperty GPU_USE_KERNEL TRUE

apply GPU_IFY [P4A_LAUNCHER_MATMUL02]
apply GPU_IFY [P4A_LAUNCHER_MATMUL02_1]

#apply KERNEL_LOAD_STORE [P4A_LAUNCHER_MATMUL02]
#apply KERNEL_LOAD_STORE [P4A_LAUNCHER_MATMUL02_1]

setproperty PRETTYPRINT_C_FUNCTION_NAME_WITH_UNDERSCORE TRUE
display C_PRINTED_FILE [P4A_LAUNCHER_MATMUL02]
display C_PRINTED_FILE [P4A_LAUNCHER_MATMUL02_1]

setproperty PRETTYPRINT_C_FUNCTION_NAME_WITH_UNDERSCORE FALSE
display C_PRINTED_FILE [P4A_KERNEL_MATMUL02]
display C_PRINTED_FILE [P4A_KERNEL_MATMUL02_1]
display C_PRINTED_FILE [P4A_WRAPPER_MATMUL02]
display C_PRINTED_FILE [P4A_WRAPPER_MATMUL02_1]

apply UNSPLIT

echo
echo copying files
echo
shell cp $WKS.database/P4A_LAUNCHER_MATMUL02/P4A_LAUNCHER_MATMUL02.c  $WKS.database/Src
shell cp $WKS.database/P4A_LAUNCHER_MATMUL02_1/P4A_LAUNCHER_MATMUL02_1.c  $WKS.database/Src
shell cp $WKS.database/P4A_WRAPPER_MATMUL02/P4A_WRAPPER_MATMUL02.c  $WKS.database/Src
shell cp $WKS.database/P4A_WRAPPER_MATMUL02_1/P4A_WRAPPER_MATMUL02_1.c  $WKS.database/Src
shell cp $WKS.database/P4A_KERNEL_MATMUL02/P4A_KERNEL_MATMUL02.c  $WKS.database/Src
shell cp $WKS.database/P4A_KERNEL_MATMUL02_1/P4A_KERNEL_MATMUL02_1.c  $WKS.database/Src

echo
echo producing objects
echo
shell ${PIPS_F77:-gfortran} -g -c $WKS.database/Src/$WKS.f  -o $WKS.database/Src/$WKS.o
shell cc -g -c $WKS.database/Src/P4A_LAUNCHER_MATMUL02.c  -o $WKS.database/Src/P4A_LAUNCHER.o
shell cc -g -c $WKS.database/Src/P4A_LAUNCHER_MATMUL02_1.c  -o $WKS.database/Src/P4A_LAUNCHER_1.o
shell cc -g -c $WKS.database/Src/P4A_WRAPPER_MATMUL02.c  -o $WKS.database/Src/P4A_WRAPPER.o
shell cc -g -c $WKS.database/Src/P4A_WRAPPER_MATMUL02_1.c  -o $WKS.database/Src/P4A_WRAPPER_1.o
shell cc -g -c $WKS.database/Src/P4A_KERNEL_MATMUL02.c  -o $WKS.database/Src/P4A_KERNEL.o
shell cc -g -c $WKS.database/Src/P4A_KERNEL_MATMUL02_1.c  -o $WKS.database/Src/P4A_KERNEL_1.o

echo
echo producing executables
echo
shell ${PIPS_F77:-gfortran} $WKS.database/Src/*.o -o $WKS.database/Src/$WKS

echo
echo execution
echo
shell ./$WKS.database/Src/$WKS

close $WKS
delete $WKS
quit
