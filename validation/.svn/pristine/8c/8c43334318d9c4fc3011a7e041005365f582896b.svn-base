
Initial code for constants04

void constants04(int *FIFO2, int *FIFO1, int I_41, int y)
{
   //PIPS generated variable
   int re5, re6, re7;
   //PIPS generated variable
   int *im1;
   //PIPS generated variable
   int re8;
   //PIPS generated variable
   int *im2, *im3, *im4, *im5, *im6, *im7, *im8, *im9, *im10, *im11, *im12, *im13, *im14;
   //PIPS generated variable
   int re9;
   //PIPS generated variable
   int N1 = I_41/(0+1);
   im14 = FIFO2;
   im13 = FIFO1;
   re8 = 260*y;
   im1 = re8+im13;
   im12 = im1;
   im11 = 260+im1;
   im10 = 520+im1;
   im9 = 780+im1;
   im8 = 1040+im1;
   im2 = im8;
   im3 = im9;
   im4 = im10;
   im5 = im11;
   im6 = im12;
   im7 = im14;
l99997:
   for(re9 = 0; re9 <= N1; re9 += 0+1) {
      re7 = pips_min(2, *im6, *im5);
      re6 = pips_min(2, re7, *im4);
      re5 = pips_min(2, re6, *im3);

      *im7 = pips_min(2, re5, *im2);
      im2 = im2+1;
      im3 = im3+1;
      im4 = im4+1;
      im5 = im5+1;
      im6 = im6+1;
      im7 = im7+1;
   }
}

Code for constants04 after partial evaluation/constant propagation

void constants04(int *FIFO2, int *FIFO1, int I_41, int y)
{
   //PIPS generated variable
   int re5, re6, re7;
   //PIPS generated variable
   int *im1;
   //PIPS generated variable
   int re8;
   //PIPS generated variable
   int *im2, *im3, *im4, *im5, *im6, *im7, *im8, *im9, *im10, *im11, *im12, *im13, *im14;
   //PIPS generated variable
   int re9;
   //PIPS generated variable
   int N1 = I_41;
   im14 = FIFO2;
   im13 = FIFO1;
   re8 = 260*y;
   im1 = im13+re8;
   im12 = im1;
   im11 = im1+260;
   im10 = im1+520;
   im9 = im1+780;
   im8 = im1+1040;
   im2 = im8;
   im3 = im9;
   im4 = im10;
   im5 = im11;
   im6 = im12;
   im7 = im14;
l99997:
   for(re9 = 0; re9 <= N1; re9 += 1) {
      re7 = pips_min(2, *im6, *im5);
      re6 = pips_min(2, re7, *im4);
      re5 = pips_min(2, re6, *im3);

      *im7 = pips_min(2, re5, *im2);
      im2 = im2+1;
      im3 = im3+1;
      im4 = im4+1;
      im5 = im5+1;
      im6 = im6+1;
      im7 = im7+1;
   }
}
#
# Warnings
#
TRANSFORMERS_INTRA_FAST[constants04] (transformers_intra_fast) Property SEMANTICS_FLOW_SENSITIVE is ignored

In Pass TRANSFORMERS_INTRA_FAST, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass TRANSFORMERS_INTRA_FAST, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass TRANSFORMERS_INTRA_FAST, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass TRANSFORMERS_INTRA_FAST, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass TRANSFORMERS_INTRA_FAST, at line 33 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re6 = pips_min(2, re7, *im4);

In Pass TRANSFORMERS_INTRA_FAST, at line 33 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re6 = pips_min(2, re7, *im4);

In Pass TRANSFORMERS_INTRA_FAST, at line 34 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re5 = pips_min(2, re6, *im3);

In Pass TRANSFORMERS_INTRA_FAST, at line 34 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re5 = pips_min(2, re6, *im3);

In Pass TRANSFORMERS_INTRA_FAST, at line 36 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.

*im7 = pips_min(2, re5, *im2);

In Pass TRANSFORMERS_INTRA_FAST, at line 36 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.

*im7 = pips_min(2, re5, *im2);

In Pass TRANSFORMERS_INTRA_FAST, at line 36 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.

*im7 = pips_min(2, re5, *im2);

In Pass PARTIAL_EVAL, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass PARTIAL_EVAL, at line 32 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re7 = pips_min(2, *im6, *im5);

In Pass PARTIAL_EVAL, at line 33 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re6 = pips_min(2, re7, *im4);

In Pass PARTIAL_EVAL, at line 34 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.
re5 = pips_min(2, re6, *im3);

In Pass PARTIAL_EVAL, at line 36 of Function "constants04":
Activate TRANSFORMERS_INTER_FULL_WITH_POINTS_TO and setproperty SEMANTICS_ANALYZE_CONSTANT_PATH TRUE. It might generate more accurate transformers.

*im7 = pips_min(2, re5, *im2);

