
Symbol table for "generate07!"

generate07!

Declarations for module "generate07!" with type "() -> unknown"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "TOP-LEVEL:generate07" with type "functional" "() -> void"
	Declared entity "generate07!:*DYNAMIC*" with type "area" with size 0
	Declared entity "generate07!:*HEAP*" with type "area" with size 0
	Declared entity "generate07!:*STACK*" with type "area" with size 0
	Declared entity "generate07!:*STATIC*" with type "area" with size 0

* empty extern declaration list *


Derived entities:

	Variable "generate07!:#_PIPS_STRUCT_1"	kind = struct
	Variable "generate07!:?count"	kind = enum
	Variable "generate07!:?kount"	kind = enum
	Variable "generate07!:?us_count"	kind = enum

Typedef entities:

	Typedef "generate07!:$fii"	with type "variable" "double"
	Typedef "generate07!:$foo"	with type "variable" "fii"
	Typedef "generate07!:$morning_t"	with type "variable" "struct {int bonjour:two+drei; int hello:three;}"

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "generate07!:*DYNAMIC*" of size 0:
	* empty area *


Layout for memory area "generate07!:*HEAP*" of size 0:
	* empty area *


Layout for memory area "generate07!:*STACK*" of size 0:
	* empty area *


Layout for memory area "generate07!:*STATIC*" of size 0:
	* empty area *

End of declarations for module generate07!


Symbol table for "generate07"

generate07

Declarations for module "generate07" with type "() -> void"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "TOP-LEVEL:func" with type "functional" "foo x z_t x morning_t x double * -> fii"
	Declared entity "generate07!:*STATIC*" with type "area" with size 0
	Declared entity "generate07:*DYNAMIC*" with type "area" with size 60
	Declared entity "generate07:*HEAP*" with type "area" with size 0
	Declared entity "generate07:*STACK*" with type "area" with size 0
	Declared entity "generate07:*STATIC*" with type "area" with size 0
	Declared entity "generate07:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "generate07:0`__func__" with type "variable" "char *"
	Declared entity "generate07:0`i" with type "variable" "int"
	Declared entity "generate07:0`u" with type "variable" "morning_t"
	Declared entity "generate07:0`x" with type "variable" "double"
	Declared entity "generate07:0`y" with type "variable" "foo"
	Declared entity "generate07:0`z" with type "variable" "z_t"

External variable list:

	Declared external entity "TOP-LEVEL:func"	with type "functional" "foo x z_t x morning_t x double * -> fii"

Derived entities:

	Variable "generate07:0`'_PIPS_UNION_1"	kind = union

Typedef entities:

	Typedef "generate07:0`$z_t"	with type "variable" "union {int either; double or;}"

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "generate07!:*STATIC*" of size 0:
	* empty area *


Layout for memory area "generate07:*DYNAMIC*" of size 60:
	Variable "generate07:0`i"	offset = 22	size = 4
	Variable "generate07:0`x"	offset = 26	size = 8
	Variable "generate07:0`y"	offset = 34	size = 16
	Variable "generate07:0`z"	offset = 50	size = 8
	Variable "generate07:0`u"	offset = 58	size = 2
	Variable "generate07:0`__func__"	offset = 0	size = 11
	Variable "generate07:0`__FUNCTION__"	offset = 11	size = 11


Layout for memory area "generate07:*HEAP*" of size 0:
	* empty area *


Layout for memory area "generate07:*STACK*" of size 0:
	* empty area *


Layout for memory area "generate07:*STATIC*" of size 0:
	* empty area *

End of declarations for module generate07


Parsed printed file for "generate07"

void generate07()
{
   int i = 0;
   double x = 1.;
   foo y;
   typedef union {
      int either;
      double or;
   } z_t;
   z_t z;
   morning_t u;
   extern fii func(foo, z_t, morning_t, double *);
   
   // use an undeclared function without source code, which returns
   // implictly an inta typedef type
   (void) func(y, z, u, &x);
}

Parsed printed file for "func"

fii func(foo f1, z_t f2, morning_t f3, double *f4)
{
}

Printed synthesized file "func!"

//
//     This module was automatically generated by PIPS
//
enum count {zero, un, deux, trois, quatre};
typedef double fii;
typedef fii foo[deux];
typedef union {
   int either;
   double or;
} z_t;
enum us_count {one=un, two, three, four};
enum kount {null, eins, zwei, drei, vier};
typedef struct {
   int bonjour:two+drei;
   int hello:three;
} morning_t;
fii func(foo f1, z_t f2, morning_t f3, double *f4);

Compile the generated code

#
# compile generated generate07
#
