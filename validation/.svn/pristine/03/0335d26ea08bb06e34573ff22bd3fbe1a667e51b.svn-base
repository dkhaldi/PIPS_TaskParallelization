
Transformers for "update_sub"


//  T(_sub1_1[0][var2]) {_sub1_1[0][var2]==3}

void update_sub(sub *sub1)
{

//  T(_sub1_1[0][var2]) {_sub1_1[0][var2]==3}

   sub1->var2 = 3;

//  T() {}

   return;
}

Transformers for "update_s3"


//  T(_a_1[0][s3][2][var2]) {_a_1[0][s3][2][var2]==3}

void update_s3(content *a)
{
   {

//  T() {}

      int i;

//  T(_a_1[0][s3][2][var2],i) {0<=i, i<=3}

      for(i = 0; i <= 3; i += 1)

//  T(_a_1[0][s3][2][var2]) {}

         update_sub(&(a->s3)[i]);
   }

//  T(_a_1[0][s3][2][var2]) {_a_1[0][s3][2][var2]==3}

   update_sub(&(a->s3)[2]);

//  T() {}

   return;
}

Preconditions for main


//  P() {}

int main(int argc, char *argv[])
{

//  P() {}

   content a;

//  P() {}

   int k = 0;

//  P(k) {k==0}

   update_s3(&a);
   {

//  P(a[s3][2][var2],k) {a[s3][2][var2]==3, k==0}

      int i;

//  P(a[s3][2][var2],k) {a[s3][2][var2]==3, k==0}


      for(i = 0; i <= (a.s3)[2].var2-1; i += 1)

//  P(a[s3][2][var2],i,k) {a[s3][2][var2]==3, k==0, 0<=i, i<=2}

         foo(k);
   }

//  P(a[s3][2][var2],k) {a[s3][2][var2]==3, k==0}


   return 0;
}
