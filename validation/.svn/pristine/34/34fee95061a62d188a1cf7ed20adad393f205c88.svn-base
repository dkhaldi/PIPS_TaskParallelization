
Parsed code for "call11"

void call11(int n, int m, int x[n][m])
{
   int i, j;

   for (i = 0;i<n;i++)
      for (j = 0;j<m;j++)
         x[i][j] = 0;
}

Code for "call11"

void call11(int n, int m, int x[n][m])
{
   int i, j;

   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= m-1; j += 1)
         x[i][j] = 0;
}

Proper effects for "call11"

void call11(int n, int m, int x[n][m])
{
   int i, j;
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <    is read   >: m n
//             <    is written>: j
      for(j = 0; j <= m-1; j += 1)
//             <    is read   >: i j m n
//             <    is written>: x[i][j]
         x[i][j] = 0;
}

Cumulated effects for "call11"

//             <may be written>: x[*][*]
//             <    is read   >: m n
void call11(int n, int m, int x[n][m])
{
   int i, j;
//             <may be read   >: i j m
//             <may be written>: j x[*][*]
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <may be read   >: i j
//             <may be written>: x[*][*]
//             <    is read   >: m n
//             <    is written>: j
      for(j = 0; j <= m-1; j += 1)
//             <may be written>: x[*][*]
//             <    is read   >: i j m n
         x[i][j] = 0;
}

Cumulated effects for "main"

int main()
{
//             <    is written>: d1
   int d1 = 10;
//             <    is written>: d2
   int d2 = 10;
//             <    is written>: d3
   int d3 = 10;
//             <    is written>: d4
   int d4 = 10;
//             <    is read   >: d1 d2 d3 d4
   int y[d1][d2][d3][d4];
   int i, j;
//             <may be read   >: d2 d3 d4 i j
//             <may be written>: j y[*][*][*][*]
//             <    is read   >: d1
//             <    is written>: i

   for(i = 0; i <= d1-1; i += 1)
//             <may be read   >: d3 d4 i j
//             <may be written>: y[*][*][*][*]
//             <    is read   >: d1 d2
//             <    is written>: j
      for(j = 0; j <= d2-1; j += 1)
//             <may be written>: y[*][*][*][*]
//             <    is read   >: d1 d2 d3 d4 i j
         call11(d3, d4, &y[i][j][0]);
}

Regions for "call11"


//  <x[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1+1<=n, 0<=PHI2, PHI2+1<=m}>

void call11(int n, int m, int x[n][m])
{
   int i, j;

//  <x[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1+1<=n, 0<=PHI2, PHI2+1<=m}>


   for(i = 0; i <= n-1; i += 1)

//  <x[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2+1<=m, 0<=i,
//    i+1<=n}>

      for(j = 0; j <= m-1; j += 1)

//  <x[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==j, 0<=i, i+1<=n, 0<=j,
//    j+1<=m}>

         x[i][j] = 0;
}

Regions for "main"

int main()
{
   int d1 = 10;
   int d2 = 10;
   int d3 = 10;
   int d4 = 10;
   int y[d1][d2][d3][d4];
   int i, j;

//  <y[PHI1][PHI2][PHI3][PHI4]-W-EXACT-{0<=PHI1, PHI1<=9, 0<=PHI2,
//    PHI2<=9, 0<=PHI3, PHI3<=9, 0<=PHI4, PHI4<=9, d1==10, d2==10,
//    d3==10, d4==10}>


   for(i = 0; i <= d1-1; i += 1)

//  <y[PHI1][PHI2][PHI3][PHI4]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=9,
//    0<=PHI3, PHI3<=9, 0<=PHI4, PHI4<=9, d1==10, d2==10, d3==10,
//    d4==10, 0<=i, i<=9}>

      for(j = 0; j <= d2-1; j += 1)

//  <y[PHI1][PHI2][PHI3][PHI4]-W-EXACT-{PHI1==i, PHI2==j, 0<=PHI3,
//    PHI3<=9, 0<=PHI4, PHI4<=9, d1==10, d2==10, d3==10, d4==10, 0<=i,
//    i<=9, 0<=j, j<=9}>

         call11(d3, d4, &y[i][j][0]);
}
