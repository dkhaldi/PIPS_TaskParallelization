
POINTS-TO


// Points To IN: none


// Points To OUT:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

void init3(mys **p)
{

// Points To: none

   int i;

// Points To: none

   p = malloc(5*sizeof(mys *));

// Points To:
// *HEAP*_l_17[*] -> undefined , EXACT
// p -> *HEAP*_l_17[0] , MAY

   for(i = 0; i <= 4; i += 1) {

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_17[*] -> undefined , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

      p[i] = malloc(sizeof(mys));

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_17[*] -> undefined , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// *HEAP*_l_20.tab2 -> undefined , MAY
// p -> *HEAP*_l_17[0] , MAY

      p[i]->tab2 = malloc(5*sizeof(int));
   }

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_17[*] -> undefined , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY


   p[0]->num = 11;

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_17[*] -> undefined , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

   (p[0]->tab1)[0] = 20;

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

   (p[0]->tab2)[0] = 30;

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY


   for(i = 1; i <= 4; i += 1) {

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

      p[i]->num = 10;

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

      (p[i]->tab1)[0] = 21;

// Points To:
// *HEAP*_l_17[*] -> *HEAP*_l_20 , MAY
// *HEAP*_l_20.tab2 -> *HEAP*_l_21[0] , MAY
// p -> *HEAP*_l_17[0] , MAY

      (p[i]->tab2)[0] = (p[i]->tab1)[0];
   }
}
