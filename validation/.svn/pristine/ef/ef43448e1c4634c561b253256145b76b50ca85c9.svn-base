
POINTS-TO


// Points To IN:
// argv[0] -> *NULL* , MAY
// argv[0] -> _argv_2[0][0] , MAY


// Points To OUT: none

int main(int argc, char *argv[])
{

// Points To: none

   int *pi;

// Points To:
// pi -> undefined , EXACT

   float *px;

// Points To:
// argv[0] -> *NULL* , MAY
// argv[0] -> _argv_2[0][0] , MAY
// pi -> undefined , EXACT
// px -> undefined , EXACT

   char *pc = argv[0];

// Points To:
// argv[0] -> *NULL* , MAY
// argv[0] -> _argv_2[0][0] , MAY
// pc -> *NULL* , MAY
// pc -> _argv_2[0][0] , MAY
// pi -> undefined , EXACT
// px -> undefined , EXACT


   pi = (int *) malloc(sizeof(int));

// Points To:
// argv[0] -> *NULL* , MAY
// argv[0] -> _argv_2[0][0] , MAY
// pc -> *NULL* , MAY
// pc -> _argv_2[0][0] , MAY
// pi -> *HEAP*_l_11 , MAY
// px -> undefined , EXACT

   px = (float *) malloc(sizeof(float));

// Points To:
// argv[0] -> *NULL* , MAY
// argv[0] -> _argv_2[0][0] , MAY
// pc -> *NULL* , MAY
// pc -> _argv_2[0][0] , MAY
// pi -> *HEAP*_l_11 , MAY
// px -> *HEAP*_l_12 , MAY


   return (int) *pc;
}
main

Declarations for module "main" with type "int x char *[] -> int"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "main:*DYNAMIC*" with type "area" with size 34
	Declared entity "main:*FORMAL*" with type "area" with size 1
	Declared entity "main:*HEAP*" with type "area" with size 8
	Declared entity "main:*HEAP*_l_11" with type "variable" "int"
	Declared entity "main:*HEAP*_l_12" with type "variable" "float"
	Declared entity "main:*STACK*" with type "area" with size 0
	Declared entity "main:*STATIC*" with type "area" with size 0
	Declared entity "main:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "main:0`__func__" with type "variable" "char *"
	Declared entity "main:0`pc" with type "variable" "char *"
	Declared entity "main:0`pi" with type "variable" "int *"
	Declared entity "main:0`px" with type "variable" "float *"
	Declared entity "main:_argv_2" with type "variable" "char"
	Declared entity "main:argc" with type "variable" "int"
	Declared entity "main:argv" with type "variable" "char *"
	Declared entity "main:main" with type "variable" "int"
	Declared entity "malloc02!:*STATIC*" with type "area" with size 0

* empty extern declaration list *


Layout for formal parameters:

	Variable main:argc	offset = 1
	Variable main:argv	offset = 2

Layout for return variable:

	Variable "main:main"	size = 4

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	External Variable "TOP-LEVEL:_IO_2_1_stdin_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stdout_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stderr_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:stdin"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stdout"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stderr"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__morecore"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__malloc_initialize_hook"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__free_hook"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__malloc_hook"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__realloc_hook"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__memalign_hook"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:__after_morecore_hook"	offset = UNKNOWN,	size = 8


Layout for memory area "main:*DYNAMIC*" of size 34:
	Variable "main:0`pi"	offset = 10	size = 8
	Variable "main:0`px"	offset = 18	size = 8
	Variable "main:0`pc"	offset = 26	size = 8
	Variable "main:0`__func__"	offset = 0	size = 5
	Variable "main:0`__FUNCTION__"	offset = 5	size = 5


Layout for memory area "main:*FORMAL*" of size 1:
	Dynamic Variable "main:_argv_2"	offset = UNKNOWN, 	size = DYNAMIC


Layout for memory area "main:*HEAP*" of size 8:
	Dynamic Variable "main:*HEAP*_l_11"	offset = UNKNOWN, 	size = DYNAMIC
	Dynamic Variable "main:*HEAP*_l_12"	offset = UNKNOWN, 	size = DYNAMIC


Layout for memory area "main:*STACK*" of size 0:
	* empty area *


Layout for memory area "main:*STATIC*" of size 0:
	* empty area *


Layout for memory area "malloc02!:*STATIC*" of size 0:
	* empty area *

End of declarations for module main

