setenv WS="partial_eval02"
setproperty ABORT_ON_USER_ERROR TRUE
delete $WS
create $WS $WS.c

echo
echo Initial code for "$WS"
echo

display PRINTED_FILE[$WS]

echo
echo Initial code for "main"
echo

display PRINTED_FILE[main]

echo
echo Cumulated effects for "$WS"
echo

activate PRINT_CODE_CUMULATED_EFFECTS
display PRINTED_FILE[$WS]
activate PRINT_CODE

echo
echo Preconditions "main"
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[main]
activate PRINT_CODE

echo
echo Preconditions "$WS"
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[$WS]
activate PRINT_CODE

echo
echo Code after partial evaluation for "partial_eval02"
echo

apply PARTIAL_EVAL[$WS]
display PRINTED_FILE[$WS]


echo
echo Code after partial evaluation for "main"
echo

apply PARTIAL_EVAL[main]
display PRINTED_FILE[main]

echo
echo Same code with evaluation of constants
echo

setproperty EVAL_SYMBOLIC_CONSTANT TRUE
apply PARTIAL_EVAL[$WS]
display PRINTED_FILE[$WS]

echo
echo Unsplit resulting code
echo

apply UNSPLIT
shell cc $WS.c -o $WS.database/Tmp/ref
shell cc $WS.database/Src/$WS.c -o $WS.database/Tmp/out
shell if test `./$WS.database/Tmp/ref` = `./$WS.database/Tmp/out`; then echo "ok"; else echo "ko" ; fi

close
#delete $WS
quit
