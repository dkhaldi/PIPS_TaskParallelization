foo

Declarations for module "foo" with type "int x int -> void"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "foo:*DYNAMIC*" with type "area" with size 12
	Declared entity "foo:*HEAP*" with type "area" with size 0
	Declared entity "foo:*STACK*" with type "area" with size 0
	Declared entity "foo:*STATIC*" with type "area" with size 0
	Declared entity "foo:0`A" with type "variable" "int[m]"
	Declared entity "foo:0`B" with type "variable" "int[n]"
	Declared entity "foo:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "foo:0`__func__" with type "variable" "char *"
	Declared entity "foo:0`j" with type "variable" "int"
	Declared entity "foo:m" with type "variable" "int"
	Declared entity "foo:n" with type "variable" "int"
	Declared entity "sizeofArray02!:*STATIC*" with type "area" with size 0

* empty extern declaration list *


Layout for formal parameters:

	Variable foo:m	offset = 1
	Variable foo:n	offset = 2

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "foo:*DYNAMIC*" of size 12:
	Variable "foo:0`j"	offset = 8	size = 4
	Variable "foo:0`__func__"	offset = 0	size = 4
	Variable "foo:0`__FUNCTION__"	offset = 4	size = 4


Layout for memory area "foo:*HEAP*" of size 0:
	* empty area *


Layout for memory area "foo:*STACK*" of size 0:
	Dynamic Variable "foo:0`A"	offset = UNKNOWN, 	size = DYNAMIC
	Dynamic Variable "foo:0`B"	offset = UNKNOWN, 	size = DYNAMIC


Layout for memory area "foo:*STATIC*" of size 0:
	* empty area *


Layout for memory area "sizeofArray02!:*STATIC*" of size 0:
	* empty area *

End of declarations for module foo

sizeofArray02!

Declarations for module "sizeofArray02!" with type "() -> unknown"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "TOP-LEVEL:foo" with type "functional" "int x int -> void"
	Declared entity "sizeofArray02!:*DYNAMIC*" with type "area" with size 0
	Declared entity "sizeofArray02!:*HEAP*" with type "area" with size 0
	Declared entity "sizeofArray02!:*STACK*" with type "area" with size 0
	Declared entity "sizeofArray02!:*STATIC*" with type "area" with size 0

* empty extern declaration list *


Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "sizeofArray02!:*DYNAMIC*" of size 0:
	* empty area *


Layout for memory area "sizeofArray02!:*HEAP*" of size 0:
	* empty area *


Layout for memory area "sizeofArray02!:*STACK*" of size 0:
	* empty area *


Layout for memory area "sizeofArray02!:*STATIC*" of size 0:
	* empty area *

End of declarations for module sizeofArray02!


Parsed code

//Checks the memory allocation offsets of non continous arrays of dynamic sizes.

extern void foo(int m, int n);
void foo(int m, int n)
{
   int A[m];
   int j;
   int B[n];
}
