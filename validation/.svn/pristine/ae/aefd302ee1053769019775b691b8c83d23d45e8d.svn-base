int main()
{
   int i, j, a[10][20];
#pragma omp parallel for private(j)
   for(i = 0; i <= 9; i += 1) {
      int b[1][20];
#pragma omp parallel for 
      for(j = 0; j <= 19; j += 1)
         b[0][j] = j;

#pragma omp parallel for 
      for(j = 0; j <= 19; j += 1)
         a[i][j] = b[0][j];
   }

   for(i = 0; i <= 9; i += 1)
      for(j = 0; j <= 19; j += 1)
         printf("a[%d][%d] = %d\n", i, j, a[i][j]);
   return 0;
}
#
# Code after flatten_code for module main
#
int main()
{
   int i, j, a[10][20];
   //PIPS generated variable
   int b[1][20];
   for(i = 0; i <= 9; i += 1) {
      for(j = 0; j <= 19; j += 1)
         b[0][j] = j;

      for(j = 0; j <= 19; j += 1)
         a[i][j] = b[0][j];
   }

   for(i = 0; i <= 9; i += 1)
      for(j = 0; j <= 19; j += 1)
         printf("a[%d][%d] = %d\n", i, j, a[i][j]);
   return 0;
}
