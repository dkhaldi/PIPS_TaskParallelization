
Transformers for "main"


//  T(main) {main==0}

int main()
{

//  T(N) {N==100}

   int N = 100;

//  T() {}

   double A[100][100];
   {

//  T() {}

      int i;

//  T(0`1`i) {1<=0`1`i, 0`1`i<=N}

      for(i = 1; i <= N; i += 1) {

//  T() {}

         int j;

//  T(0`1`2`3`j) {1<=0`1`2`3`j, 0`1`2`3`j<=N}

         for(j = 1; j <= N; j += 1) {

//  T(x0) {}

            int x0 = i*j;

//  T() {}

            double x1 = (double) N/2;

//  T() {}

            if (x0<x1) {

//  T() {}

               A[N-i-1][i+j-1] = 1.0;

//  T() {}

               A[i-1][N-i-j-1] = 1.0;
            }

//  T() {}

            if (i==j)

//  T() {}

               A[i-1][j-1] = 1.0;
         }
      }
   }
   {

//  T() {}

      int i;

//  T(0`7`i) {0<=0`7`i, 0`7`i+1<=N}

      for(i = 0; i <= N-1; i += 1) {

//  T() {}

         int j;

//  T(0`7`8`j) {0<=0`7`8`j, 0`7`8`j+1<=N}

         for(j = 0; j <= N-1; j += 1)

//  T() {}

            printf("%f\n", A[i][j]);
      }
   }

//  T(main) {main==0}


   return 0;
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   int N = 100;

//  P(N) {N==100}

   double A[100][100];
   {

//  P(N) {N==100}

      int i;

//  P(N) {N==100}

      for(i = 1; i <= N; i += 1) {

//  P(0`1`i,N) {N==100, 1<=0`1`i, 0`1`i<=100}

         int j;

//  P(0`1`i,N) {N==100, 1<=0`1`i, 0`1`i<=100}

         for(j = 1; j <= N; j += 1) {

//  P(0`1`2`3`j,0`1`i,N) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    1<=0`1`i, 0`1`i<=100}

            int x0 = i*j;

//  P(0`1`2`3`j,0`1`i,N,x0) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    x0<=1000`1`2`3`j, 0`1`2`3`j<=x0, 1<=0`1`i, 0`1`i<=100,
//    x0<=1000`1`i, 0`1`i<=x0}

            double x1 = (double) N/2;

//  P(0`1`2`3`j,0`1`i,N,x0) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    x0<=1000`1`2`3`j, 0`1`2`3`j<=x0, 1<=0`1`i, 0`1`i<=100,
//    x0<=1000`1`i, 0`1`i<=x0}

            if (x0<x1) {

//  P(0`1`2`3`j,0`1`i,N,x0) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    x0<=1000`1`2`3`j, 0`1`2`3`j<=x0, 1<=0`1`i, 0`1`i<=100,
//    x0<=1000`1`i, 0`1`i<=x0}

               A[N-i-1][i+j-1] = 1.0;

//  P(0`1`2`3`j,0`1`i,N,x0) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    x0<=1000`1`2`3`j, 0`1`2`3`j<=x0, 1<=0`1`i, 0`1`i<=100,
//    x0<=1000`1`i, 0`1`i<=x0}

               A[i-1][N-i-j-1] = 1.0;
            }

//  P(0`1`2`3`j,0`1`i,N,x0) {N==100, 1<=0`1`2`3`j, 0`1`2`3`j<=100,
//    x0<=1000`1`2`3`j, 0`1`2`3`j<=x0, 1<=0`1`i, 0`1`i<=100,
//    x0<=1000`1`i, 0`1`i<=x0}

            if (i==j)

//  P(0`1`2`3`j,0`1`i,N,x0) {0`1`2`3`j==0`1`i, N==100, 1<=0`1`2`3`j,
//    0`1`2`3`j<=100, x0<=1000`1`2`3`j, 0`1`2`3`j<=x0}

               A[i-1][j-1] = 1.0;
         }
      }
   }
   {

//  P(N) {N==100}

      int i;

//  P(N) {N==100}

      for(i = 0; i <= N-1; i += 1) {

//  P(0`7`i,N) {N==100, 0<=0`7`i, 0`7`i<=99}

         int j;

//  P(0`7`i,N) {N==100, 0<=0`7`i, 0`7`i<=99}

         for(j = 0; j <= N-1; j += 1)

//  P(0`7`8`j,0`7`i,N) {N==100, 0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i,
//    0`7`i<=99}

            printf("%f\n", A[i][j]);
      }
   }

//  P(N) {N==100}


   return 0;
}

Regions for "main"


//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1}>

int main()
{
   int N = 100;
   double A[100][100];
   {
      int i;

//  <A[PHI1][PHI2]-W-MAY-{N==100}>

      for(i = 1; i <= N; i += 1) {
         int j;

//  <A[PHI1][PHI2]-W-MAY-{N==100}>

         for(j = 1; j <= N; j += 1) {
            int x0 = i*j;
            double x1 = (double) N/2;

//  <A[PHI1][PHI2]-W-MAY-{x0+4800<=150PHI1+50PHI2+500`1`2`3`j,
//    150PHI1+50PHI2+x0<=500`1`2`3`j+14800,
//    x0+240150<=2400PHI1+2450PHI2+25500`1`2`3`j+500`1`i,
//    0`1`i+4803<=48PHI1+49PHI2+2x0+490`1`2`3`j,
//    0`1`2`3`j+20`1`i+96<=3PHI1+PHI2+2x0,
//    3PHI1+PHI2+0`1`2`3`j+20`1`i<=2x0+296,
//    48PHI1+49PHI2+0`1`i<=2x0+490`1`2`3`j+4703,
//    2400PHI1+2450PHI2+x0<=25500`1`2`3`j+500`1`i+235150,
//    0`1`2`3`j<=201PHI1+PHI2+102, 201PHI1+PHI2+0`1`2`3`j<=19898,
//    490002<=4899PHI1+4999PHI2+49990`1`2`3`j+1000`1`i,
//    0`1`i+4899<=51PHI1+50PHI2+500`1`2`3`j,
//    49PHI2+510`1`2`3`j<=51PHI1+1000`1`i+4902,
//    0`1`2`3`j+20`1`i<=3PHI1+PHI2+104,
//    3PHI1+PHI2+0`1`2`3`j+20`1`i<=496,
//    51PHI1+510`1`2`3`j<=49PHI2+1000`1`i+5098,
//    51PHI1+50PHI2+0`1`i<=500`1`2`3`j+4999,
//    4899PHI1+4999PHI2<=49990`1`2`3`j+1000`1`i+480002, N==100,
//    0`1`2`3`j<=x0, x0<=1000`1`2`3`j, 0`1`i<=x0, x0<=1000`1`i,
//    0`1`2`3`j<=100, 0`1`i<=100}>

            if (x0<x1) {

//  <A[PHI1][PHI2]-W-EXACT-{PHI1+0`1`i==99, 0`1`2`3`j+0`1`i==PHI2+1,
//    N==100, 0`1`2`3`j<=x0, x0<=1000`1`2`3`j, 0`1`i<=x0,
//    x0<=1000`1`i, 1<=0`1`2`3`j, 0`1`2`3`j<=100, 0`1`i<=100}>

               A[N-i-1][i+j-1] = 1.0;

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==0`1`i-1, PHI2+0`1`2`3`j+0`1`i==99,
//    N==100, 0`1`2`3`j<=x0, x0<=1000`1`2`3`j, 0`1`i<=x0,
//    x0<=1000`1`i, 1<=0`1`2`3`j, 0`1`2`3`j<=100, 0`1`i<=100}>

               A[i-1][N-i-j-1] = 1.0;
            }

//  <A[PHI1][PHI2]-W-MAY-{PHI1==0`1`i-1, PHI2==0`1`2`3`j-1,
//    0`1`2`3`j==0`1`i, N==100, 0`1`2`3`j<=x0, x0<=1000`1`2`3`j,
//    1<=0`1`2`3`j, 0`1`2`3`j<=100}>

            if (i==j)

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==0`1`i-1, PHI2==0`1`2`3`j-1,
//    0`1`2`3`j==0`1`i, N==100, 0`1`2`3`j<=x0, x0<=1000`1`2`3`j,
//    1<=0`1`2`3`j, 0`1`2`3`j<=100}>

               A[i-1][j-1] = 1.0;
         }
      }
   }
   {
      int i;

//  <A[PHI1][PHI2]-R-MAY-{0<=PHI1, PHI1<=99, 0<=PHI2, PHI2<=99,
//    N==100}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1, N==100}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1, N==100}>

      for(i = 0; i <= N-1; i += 1) {
         int j;

//  <A[PHI1][PHI2]-R-MAY-{PHI1==0`7`i, 0<=PHI2, PHI2<=99, N==100,
//    0<=0`7`i, 0`7`i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1, N==100, 0<=0`7`i,
//    0`7`i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-MAY-{PHI1==1, N==100, 0<=0`7`i,
//    0`7`i<=99}>

         for(j = 0; j <= N-1; j += 1)

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==0`7`i, PHI2==0`7`8`j, N==100,
//    0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1, N==100, 0<=0`7`8`j,
//    0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1, N==100, 0<=0`7`8`j,
//    0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}>

            printf("%f\n", A[i][j]);
      }
   }

//  <__IO_EFFECTS:LUNS[PHI1]-R-MAY-{PHI1==1}>


   return 0;
}
