!
! File ECG_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "ECG_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 32768)
      INTEGER*4 N
      PARAMETER (N = 32768)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, T LID, V, I
      REAL*4 SIGNAL(1:N, 1:5)
      include "RESULT_HOST_parameters.h"
      include "RESULT_HOST_host.h"
      CALL HPFC INIT HOST

      DO V = 1, 5
         READ *, (SIGNAL(I,V), I = 1, N)
      ENDDO
! updating shared variable V
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = V
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
! updating distributed variable SIGNAL
      DO PSI1 = 1, 5
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA1 = 1, 32768
            ALPHA2 = PSI1
            LALPHA1 = ALPHA1
            LALPHA2 = 1
            BUF INDEX = BUF INDEX+1
            HPFC REAL4 BUFF(BUF INDEX) = SIGNAL(ALPHA1,ALPHA2)
         ENDDO
         T LID = PSI1
         CALL HPFC REAL4 BUFPCK
         CALL HPFC SND TO NODE(T LID)
      ENDDO
! end of update
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update


      CALL PRINTOUT_HOST
      CALL HPFC HOST END
      END
!
! That is all for ECG_host.f
!
!
! File ECG_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for ECG
!
!
! initializing array SIGNAL, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 2

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 32768
      RANGEA(2, 1, 3) = 32768
!
      RANGEA(2, 1, 4) = 0

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 5
      RANGEA(2, 2, 3) = 5
!
      RANGEA(2, 2, 4) = 2
      RANGEA(2, 2, 5) = 1
      RANGEA(2, 2, 6) = 1
      RANGEA(2, 2, 7) = -1

      ALIGN(2, 1, 1) = 2
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
!
! That is all for ECG_init.h
!
!
! File ECG_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "ECG_parameters.h"
      REAL*4 PROCESS
      EXTERNAL PROCESS
      INTEGER*4 N
      PARAMETER (N = 32768)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, I_0, I_1, I_2, 
     &I_3, V, I
      REAL*4 SIGNAL(1:N, 1:1), POWER
      include "RESULT_NODE_parameters.h"
      include "RESULT_NODE_node.h"
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, 5, 1, 1)

! updating shared variable V
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      V = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
! updating distributed variable SIGNAL
      PSI1 = MY POS(1,2)
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC RCV FROM HOST
      CALL HPFC REAL4 BUFUPK
      DO ALPHA1 = 1, 32768
         ALPHA2 = PSI1
         LALPHA1 = ALPHA1
         LALPHA2 = 1
         BUF INDEX = BUF INDEX+1
         SIGNAL(LALPHA1,LALPHA2) = HPFC REAL4 BUFF(BUF INDEX)
      ENDDO
! end of update
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update

      DO I_0 = I_1, I_2
         POWER(I_0) = PROCESS(SIGNAL(1,I_0))
      ENDDO

      CALL PRINTOUT_NODE
      CALL HPFC NODE END
      END
!
! That is all for ECG_node.f
!
!
! File ECG_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for ECG
!
      integer 
     $    ECG SIGNAL LO1,
     $    ECG SIGNAL UP1
      parameter(ECG SIGNAL LO1 = 1)
      parameter(ECG SIGNAL UP1 = 32768)
      integer 
     $    ECG SIGNAL LO2,
     $    ECG SIGNAL UP2
      parameter(ECG SIGNAL LO2 = 1)
      parameter(ECG SIGNAL UP2 = 1)
!
! That is all for ECG_parameters.h
!


      subroutine fft1(s, f)
!fcd$ pure
      integer i, n
      parameter(n=32768)
      real s(n), f(n)

      do i = 1, n
         f(i) = s(i)
      enddo

      end
!
! File PRINTOUT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE PRINTOUT_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRINTOUT_parameters.h"
      REAL*4 P
      include "RESULT_HOST_parameters.h"
      include "RESULT_HOST_host.h"

      P = 0.
      CALL HPRE SUM HPFC REAL4(P, 1)
      CALL HPOST SUM HPFC REAL4(P, 1)

      PRINT *, P

      END
!
! That is all for PRINTOUT_host.f
!
!
! File PRINTOUT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for PRINTOUT
!
!
! That is all for PRINTOUT_init.h
!
!
! File PRINTOUT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE PRINTOUT_NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRINTOUT_parameters.h"
      INTEGER I_0, I_1, I_2, I_3
      REAL*4 POWER, P
      include "RESULT_NODE_parameters.h"
      include "RESULT_NODE_node.h"
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, 5, 1, 1)

      P = 0.
      CALL NPRE SUM HPFC REAL4(P, 1)
      DO I_0 = I_1, I_2
         P = P+POWER(I_0)
      ENDDO
      CALL NPOST SUM HPFC REAL4(P, 1)

      END
!
! That is all for PRINTOUT_node.f
!
!
! File PRINTOUT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for PRINTOUT
!
!
! That is all for PRINTOUT_parameters.h
!


      real function process(sig)
!fcd$ pure
!fcd$ pure fft1
      integer f, n
      parameter(n=32768)
      real sig(n)
      real spectre(n)

      call fft1(signal, spectre)

      p = 0.
      do f = 1, n
         p = p + spectre(f)**2
      enddo
      process = sqrt(p)
      end
!
! File RESULT_host.h
! This file has been automatically generated by the HPF compiler
!
      COMMON /RESULT_HOST/ POWER(1:5)
!
! That is all for RESULT_host.h
!
!
! File RESULT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for RESULT
!
!
! initializing array POWER, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 2

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 5
      RANGEA(1, 1, 3) = 5
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 1
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for RESULT_init.h
!
!
! File RESULT_node.h
! This file has been automatically generated by the HPF compiler
!
      COMMON /RESULT_NODE/ POWER(1:1)
!
! That is all for RESULT_node.h
!
!
! File RESULT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for RESULT
!
      integer 
     $    RESULT POWER LO1,
     $    RESULT POWER UP1
      parameter(RESULT POWER LO1 = 1)
      parameter(RESULT POWER UP1 = 1)
!
! That is all for RESULT_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 5
      RANGET(1, 1, 3) = 5

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 1
!
! initializing template T, number 2
!
      NODIMT(2) = 1
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 5
      RANGET(2, 1, 3) = 5

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 1
!
! Processors Initializations
!
!
! initializing processors PROC, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 5
      RANGEP(1, 1, 3) = 5
!
! initializing processors PROC, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 5
      RANGEP(2, 1, 3) = 5
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 2)
      parameter(REALNBOFPROCESSORS = 2)
      parameter(REALMAXSIZEOFPROCS = 5)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
