
Source code with proper effects

int main()
{
   int i, j, k;                                                         /*0003*/
   int a[500];                                                          /*0004*/
//             <    is written>: i

   i = 0;                                                               /*0006*/
//             <    is written>: j
   j = 1;                                                               /*0007*/
//             <    is written>: i

   for(i = 0; i <= 499; i += 1) {                                       /*0009*/
//             <    is read   >: j
//             <    is written>: j
      j++;                                                              /*0010*/
//             <    is read   >: i
//             <    is written>: a[i]
      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0012*/
   }
//             <    is written>: k
   /* We would have j==501 in the preconditions here... if we'd use
      // the proper activate and properties: the fast analysis exclude
      // fix points (see for01.tpips) */
   k = 2;                                                               /*0017*/
//             <    is read   >: k
   return k;                                                            /*0018*/
}

Source code with cumulated effects

int main()
{
   int i, j, k;                                                         /*0003*/
   int a[500];                                                          /*0004*/
//             <    is written>: i

   i = 0;                                                               /*0006*/
//             <    is written>: j
   j = 1;                                                               /*0007*/
//             <may be written>: a[*]
//             <    is read   >: i j
//             <    is written>: i j

   for(i = 0; i <= 499; i += 1) {                                       /*0009*/
//             <    is read   >: j
//             <    is written>: j
      j++;                                                              /*0010*/
//             <may be written>: a[*]
//             <    is read   >: i
      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0012*/
   }
//             <    is written>: k
   /* We would have j==501 in the preconditions here... if we'd use
      // the proper activate and properties: the fast analysis exclude
      // fix points (see for01.tpips) */
   k = 2;                                                               /*0017*/
//             <    is read   >: k
   return k;                                                            /*0018*/
}

Dependence graph


 ******** Whole Dependence Graph with Dependence Cones ******

	06 --> 09 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
	07 --> 10 with conflicts
		from <j-W-EXACT> to <j-W-EXACT>
		from <j-W-EXACT> to <j-R-EXACT>
	10 --> 10 with conflicts
		from <j-W-EXACT> to <j-W-EXACT> at levels  1

		from <j-W-EXACT> to <j-R-EXACT> at levels  1

		from <j-R-EXACT> to <j-W-EXACT> at levels  1

	17 --> 18 with conflicts
		from <k-W-EXACT> to <k-R-EXACT>

****************** End of Dependence Graph ******************

Source code with transformers


//  T(main) {main==2}

int main()
{

//  T() {}

   int i, j, k;                                                         /*0003*/

//  T() {}

   int a[500];                                                          /*0004*/

//  T(i) {i==0}


   i = 0;                                                               /*0006*/

//  T(j) {j==1}

   j = 1;                                                               /*0007*/

//  T(i,j) {0<=i, i<=499}


   for(i = 0; i <= 499; i += 1) {                                       /*0009*/

//  T(j) {j==j#init+1}

      j++;                                                              /*0010*/

//  T() {}

      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0012*/
   }

//  T(k) {k==2}

   /* We would have j==501 in the preconditions here... if we'd use
      // the proper activate and properties: the fast analysis exclude
      // fix points (see for01.tpips) */
   k = 2;                                                               /*0017*/

//  T(main) {k==main}

   return k;                                                            /*0018*/
}

Source code with preconditions


//  P() {}

int main()
{

//  P() {}

   int i, j, k;                                                         /*0003*/

//  P() {}

   int a[500];                                                          /*0004*/

//  P() {}


   i = 0;                                                               /*0006*/

//  P(i) {i==0}

   j = 1;                                                               /*0007*/

//  P(i,j) {i==0, j==1}


   for(i = 0; i <= 499; i += 1) {                                       /*0009*/

//  P(i,j) {0<=i, i<=499}

      j++;                                                              /*0010*/

//  P(i,j) {0<=i, i<=499}

      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0012*/
   }

//  P(i,j) {i==500}

   /* We would have j==501 in the preconditions here... if we'd use
      // the proper activate and properties: the fast analysis exclude
      // fix points (see for01.tpips) */
   k = 2;                                                               /*0017*/

//  P(i,j,k) {i==500, k==2}

   return k;                                                            /*0018*/
}

Warnings

(activate_phase) Rule `C_PARSER' already active
TRANSFORMERS_INTRA_FAST[main] (transformers_intra_fast) Property SEMANTICS_FIX_POINT is ignored
TRANSFORMERS_INTRA_FAST[for01!] (transformers_intra_fast) Property SEMANTICS_FIX_POINT is ignored
