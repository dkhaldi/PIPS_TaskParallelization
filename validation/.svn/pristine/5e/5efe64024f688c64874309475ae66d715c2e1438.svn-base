
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int e, ne, uo, i;

//  T(e,ne,uo) {e==0, ne==0, uo==0}

   e = ne = uo = 0;

//  T(i) {e==0, ne==0, uo==0, 0<=i}

   i = rand();

//  T() {e==0, ne==0, uo==0, 1<=i}

   if (!(i>=1))

//  T() {0==-1}

      deadlock();

//  T() {e==0, ne==0, uo==0, 1<=i}

   if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

      checking_error();

//  T(e,i,ne,uo) {e+i+ne+uo==e#init+i#init+ne#init+uo#init, e<=1,
//    1<=e+i+ne+uo}

   while (rand_b())

//  T(e,i,ne,uo) {e+i+ne+uo==e#init+i#init+ne#init+uo#init,
//    e#init+i#init+ne#init+uo#init<=i+ne+uo+1}

      if (rand_b()) {

//  T() {1<=i}

         if (!(i>=1))

//  T() {0==-1}

            deadlock();

//  T(ne) {e+ne#init==ne, 1<=i}

         ne += e;

//  T(uo) {uo==uo#init+1, 1<=i}

         uo++;

//  T(i) {i==i#init-1, 0<=i}

         i--;

//  T(e) {e==0, 0<=i}

         e = 0;

//  T() {e==0, 0<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {1<=ne+uo}

         if (!(ne+uo>=1))

//  T() {0==-1}

            deadlock();

//  T(i) {i#init+ne+uo==i+1, 1<=ne+uo}

         i += ne+uo-1;

//  T(e) {e==e#init+1, 1<=ne+uo}

         e++;

//  T(ne) {ne==0, 1<=ne#init+uo}

         ne = 0;

//  T(uo) {ne==0, uo==0}

         uo = 0;

//  T() {ne==0, uo==0, e<=1}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {1<=i}

         if (!(i>=1))

//  T() {0==-1}

            deadlock();

//  T(i) {e+i#init+ne+uo==i+1, 1<=i#init}

         i += e+ne+uo-1;

//  T(e) {e==1, e#init+ne+uo<=i}

         e = 1;

//  T(ne) {e==1, ne==0}

         ne = 0;

//  T(uo) {e==1, ne==0, uo==0}

         uo = 0;

//  T() {e==1, ne==0, uo==0}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int e, ne, uo, i;

//  T(e,ne,uo) {e==0, ne==0, uo==0}

   e = ne = uo = 0;

//  T(i) {e==0, ne==0, uo==0, 0<=i}

   i = rand();

//  T() {e==0, ne==0, uo==0, 1<=i}

   if (!(i>=1))

//  T() {0==-1}

      deadlock();

//  T() {e==0, ne==0, uo==0, 1<=i}

   if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

      checking_error();

//  T(e,i,ne,uo) {e#init+i#init+ne#init+uo#init==e+i, ne==0, uo==0,
//    e<=1, 1<=e+i}

   while (rand_b())

//  T(e,i,ne,uo) {e#init+i#init+ne#init+uo#init==e+i, ne==0, uo==0,
//    e#init+i#init+ne#init+uo#init<=i+1, 1<=i#init}

      if (rand_b()) {

//  T() {2<=e+i+ne+uo, 1<=i}

         if (!(i>=1&&e+ne+uo+i-1>=1))

//  T() {0==-1}

            deadlock();

//  T(i) {e+i#init+ne+uo==i+1, 2<=e+i#init+ne+uo, 1<=i#init}

         i += e+ne+uo-1;

//  T(e) {e==1, e#init+ne+uo<=i, 1<=i}

         e = 1;

//  T(ne) {e==1, ne==0, 1<=i}

         ne = 0;

//  T(uo) {e==1, ne==0, uo==0, 1<=i}

         uo = 0;

//  T() {e==1, ne==0, uo==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {2<=i}

         if (!(i>=2))

//  T() {0==-1}

            deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

         ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

         uo++;

//  T(i) {i==i#init-1, 1<=i}

         i--;

//  T(e) {e==0, 1<=i}

         e = 0;

//  T() {e==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();

//  T(e,i,ne,uo) {e==0, e#init+ne#init==ne, i+uo==i#init+uo#init,
//    1<=i, i<=i#init}

         while (rand_b()) {

//  T() {2<=i}

            if (!(i>=2))

//  T() {0==-1}

               deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

            ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

            uo++;

//  T(i) {i==i#init-1, 1<=i}

            i--;

//  T(e) {e==0, 1<=i}

            e = 0;

//  T() {e==0, 1<=i}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }

//  T(e,i,ne,uo) {e#init+i#init+ne#init+uo#init==e+i, ne==0, uo==0,
//    e<=1}

         if (rand_b()) {

//  T() {1<=ne+uo}

            if (!(ne+uo>=1))

//  T() {0==-1}

               deadlock();

//  T(i) {i#init+ne+uo==i+1, 1<=ne+uo}

            i += ne+uo-1;

//  T(e) {e==e#init+1, 1<=ne+uo}

            e++;

//  T(ne) {ne==0, 1<=ne#init+uo}

            ne = 0;

//  T(uo) {ne==0, uo==0}

            uo = 0;

//  T() {ne==0, uo==0, e<=1}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {1<=i}

            if (!(i>=1))

//  T() {0==-1}

               deadlock();

//  T(i) {e+i#init+ne+uo==i+1, 1<=i#init}

            i += e+ne+uo-1;

//  T(e) {e==1, e#init+ne+uo<=i}

            e = 1;

//  T(ne) {e==1, ne==0}

            ne = 0;

//  T(uo) {e==1, ne==0, uo==0}

            uo = 0;

//  T() {e==1, ne==0, uo==0}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }
      }
      else if (rand_b()) {

//  T() {i==1}

         if (!(i==1))

//  T() {0==-1}

            deadlock();

//  T(ne) {e+ne#init==ne, i==1}

         ne += e;

//  T(uo) {i==1, uo==uo#init+1}

         uo++;

//  T(i) {i==0, i#init==1}

         i--;

//  T(e) {e==0, i==0}

         e = 0;

//  T() {e==0, i==0}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();

//  T() {e==0, i==0, 2<=ne+uo}

         if (!(ne+uo>=2))

//  T() {0==-1}

            deadlock();

//  T(i) {e==0, ne+uo==i+1, i#init==0, 2<=ne+uo}

         i += ne+uo-1;

//  T(e) {e==1, e#init==0, ne+uo==i+1, 2<=ne+uo}

         e++;

//  T(ne) {e==1, ne#init+uo==i+1, ne==0, 2<=ne#init+uo}

         ne = 0;

//  T(uo) {e==1, ne==0, uo==0, 1<=i}

         uo = 0;

//  T() {e==1, ne==0, uo==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  T() {2<=i}

         if (!(i>=2))

//  T() {0==-1}

            deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

         ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

         uo++;

//  T(i) {i==i#init-1, 1<=i}

         i--;

//  T(e) {e==0, 1<=i}

         e = 0;

//  T() {e==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();

//  T(e,i,ne,uo) {e==0, e#init+ne#init==ne, i+uo==i#init+uo#init,
//    1<=i, i<=i#init}

         while (rand_b()) {

//  T() {2<=i}

            if (!(i>=2))

//  T() {0==-1}

               deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

            ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

            uo++;

//  T(i) {i==i#init-1, 1<=i}

            i--;

//  T(e) {e==0, 1<=i}

            e = 0;

//  T() {e==0, 1<=i}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }

//  T() {i==1}

         if (!(i==1))

//  T() {0==-1}

            deadlock();

//  T(ne) {e+ne#init==ne, i==1}

         ne += e;

//  T(uo) {i==1, uo==uo#init+1}

         uo++;

//  T(i) {i==0, i#init==1}

         i--;

//  T(e) {e==0, i==0}

         e = 0;

//  T() {e==0, i==0}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();

//  T() {e==0, i==0, 2<=ne+uo}

         if (!(ne+uo>=2))

//  T() {0==-1}

            deadlock();

//  T(i) {e==0, ne+uo==i+1, i#init==0, 2<=ne+uo}

         i += ne+uo-1;

//  T(e) {e==1, e#init==0, ne+uo==i+1, 2<=ne+uo}

         e++;

//  T(ne) {e==1, ne#init+uo==i+1, ne==0, 2<=ne#init+uo}

         ne = 0;

//  T(uo) {e==1, ne==0, uo==0, 1<=i}

         uo = 0;

//  T() {e==1, ne==0, uo==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

            checking_error();
      }
      else {

//  T(e,i,ne,uo) {e==1, e#init+i#init+ne#init+uo#init==i+1, ne==0,
//    uo==0, e#init+i#init+ne#init+uo#init<=1, 1<=i#init}

         if (rand_b()) {

//  T(e,i,ne,uo) {e==0, e#init+ne#init==ne, i==0, i#init+uo#init==uo,
//    1<=i#init}

            if (rand_b()) {

//  T() {2<=i}

               if (!(i>=2))

//  T() {0==-1}

                  deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

               ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

               uo++;

//  T(i) {i==i#init-1, 1<=i}

               i--;

//  T(e) {e==0, 1<=i}

               e = 0;

//  T() {e==0, 1<=i}

               if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

                  checking_error();

//  T(e,i,ne,uo) {e==0, e#init+ne#init==ne, i+uo==i#init+uo#init,
//    1<=i, i<=i#init}

               while (rand_b()) {

//  T() {2<=i}

                  if (!(i>=2))

//  T() {0==-1}

                     deadlock();

//  T(ne) {e+ne#init==ne, 2<=i}

                  ne += e;

//  T(uo) {uo==uo#init+1, 2<=i}

                  uo++;

//  T(i) {i==i#init-1, 1<=i}

                  i--;

//  T(e) {e==0, 1<=i}

                  e = 0;

//  T() {e==0, 1<=i}

                  if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

                     checking_error();
               }

//  T() {i==1}

               if (!(i==1))

//  T() {0==-1}

                  deadlock();

//  T(ne) {e+ne#init==ne, i==1}

               ne += e;

//  T(uo) {i==1, uo==uo#init+1}

               uo++;

//  T(i) {i==0, i#init==1}

               i--;

//  T(e) {e==0, i==0}

               e = 0;

//  T() {e==0, i==0}

               if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

                  checking_error();
            }
            else {

//  T() {i==1}

               if (!(i==1))

//  T() {0==-1}

                  deadlock();

//  T(ne) {e+ne#init==ne, i==1}

               ne += e;

//  T(uo) {i==1, uo==uo#init+1}

               uo++;

//  T(i) {i==0, i#init==1}

               i--;

//  T(e) {e==0, i==0}

               e = 0;

//  T() {e==0, i==0}

               if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

                  checking_error();
            }

//  T() {e==0, i==0, ne+uo==1}

            if (!(ne+uo==1))

//  T() {0==-1}

               deadlock();

//  T(i) {e==0, i==0, i#init==0, ne+uo==1}

            i += ne+uo-1;

//  T(e) {e==1, e#init==0, i==0, ne+uo==1}

            e++;

//  T(ne) {e==1, i==0, ne==0, ne#init+uo==1}

            ne = 0;

//  T(uo) {e==1, i==0, ne==0, uo==0}

            uo = 0;

//  T() {e==1, i==0, ne==0, uo==0}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }
         else {

//  T() {e+i+ne+uo<=1, 1<=i}

            if (!(i>=1&&e+ne+uo+i-1<1))

//  T() {0==-1}

               deadlock();

//  T(i) {e+i#init+ne+uo==i+1, e+i#init+ne+uo<=1, 1<=i#init}

            i += e+ne+uo-1;

//  T(e) {e==1, e#init+ne+uo<=i, i<=0}

            e = 1;

//  T(ne) {e==1, ne==0, i<=0}

            ne = 0;

//  T(uo) {e==1, ne==0, uo==0, i<=0}

            uo = 0;

//  T() {e==1, ne==0, uo==0, i<=0}

            if (e>=2||uo+ne>=1&&e>=1)

//  T() {0==-1}

               checking_error();
         }

//  T() {0==-1}

         deadlock();
      }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int e, ne, uo, i;

//  P() {}

   e = ne = uo = 0;

//  P(e,ne,uo) {e==0, ne==0, uo==0}

   i = rand();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 0<=i}

   if (!(i>=1))

//  P(e,i,ne,uo) {e==0, i==0, ne==0, uo==0}

      deadlock();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 1<=i}

   if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

      checking_error();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 1<=i}

   while (rand_b())

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, 0<=uo}

      if (rand_b()) {

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, 0<=uo}

         if (!(i>=1))

//  P(e,i,ne,uo) {i==0, 0<=e, e<=1, e+ne<=1, 1<=e+ne+uo, 1<=e+uo,
//    ne<=uo, 0<=uo}

            deadlock();

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, e+ne<=1, 1<=i, ne<=uo,
//    0<=uo}

         ne += e;

//  P(e,i,ne,uo) {0<=e, e<=1, ne<=e+uo, 1<=i, 1<=i+ne+uo, ne<=1,
//    0<=uo}

         uo++;

//  P(e,i,ne,uo) {0<=e, e<=1, ne+1<=e+uo, 1<=i, 2<=i+ne+uo, ne<=1,
//    1<=uo}

         i--;

//  P(e,i,ne,uo) {0<=e, e<=1, ne+1<=e+uo, 0<=i, 1<=i+ne+uo, ne<=1,
//    1<=uo}

         e = 0;

//  P(e,i,ne,uo) {e==0, 0<=i, 1<=i+ne+uo, ne<=1, 1<=uo}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, 0<=uo}

         if (!(ne+uo>=1))

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, ne+uo<=0, 0<=uo}

            deadlock();

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, 1<=ne+uo, 0<=uo}

         i += ne+uo-1;

//  P(e,i,ne,uo) {0<=e, e<=1, 0<=e+i, ne<=e+i, e+ne<=1, ne+uo<=i+1,
//    ne<=uo, 1<=ne+uo, 0<=uo}

         e++;

//  P(e,i,ne,uo) {1<=e, e<=2, 1<=e+i, ne+1<=e+i, e+ne<=2, ne+uo<=i+1,
//    ne<=uo, 1<=ne+uo, 0<=uo}

         ne = 0;

//  P(e,i,ne,uo) {ne==0, 1<=e, e<=2, 0<=i, 1<=uo}

         uo = 0;

//  P(e,i,ne,uo) {ne==0, uo==0, 1<=e, e<=2, 0<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  P(e,i,ne,uo) {e==2, ne==0, uo==0, 0<=i}

            checking_error();
      }
      else {

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, 1<=e+i+uo, e+ne<=1, 0<=i,
//    ne<=uo, 0<=uo}

         if (!(i>=1))

//  P(e,i,ne,uo) {i==0, 0<=e, e<=1, e+ne<=1, 1<=e+ne+uo, 1<=e+uo,
//    ne<=uo, 0<=uo}

            deadlock();

//  P(e,i,ne,uo) {0<=e, e<=1, 1<=e+i+ne+uo, e+ne<=1, 1<=i, ne<=uo,
//    0<=uo}

         i += e+ne+uo-1;

//  P(e,i,ne,uo) {0<=e, e<=1, e+ne+uo<=i, e+ne<=1, 0<=i, ne<=uo,
//    0<=uo}

         e = 1;

//  P(e,i,ne,uo) {e==1, 0<=i, ne+uo<=i, ne<=1, ne<=uo, 0<=uo}

         ne = 0;

//  P(e,i,ne,uo) {e==1, ne==0, 0<=i, 0<=uo}

         uo = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 0<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int e, ne, uo, i;

//  P() {}

   e = ne = uo = 0;

//  P(e,ne,uo) {e==0, ne==0, uo==0}

   i = rand();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 0<=i}

   if (!(i>=1))

//  P(e,i,ne,uo) {e==0, i==0, ne==0, uo==0}

      deadlock();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 1<=i}

   if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

      checking_error();

//  P(e,i,ne,uo) {e==0, ne==0, uo==0, 1<=i}

   while (rand_b())

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

      if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         if (!(i>=1&&e+ne+uo+i-1>=1))

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, e+i<=1, 1<=i}

            deadlock();

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=e+i, 1<=i}

         i += e+ne+uo-1;

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         e = 1;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

         ne = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

         uo = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         if (!(i>=2))

//  P(e,i,ne,uo) {i==1, ne==0, uo==0, 0<=e, e<=1}

            deadlock();

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=i}

         ne += e;

//  P(e,i,ne,uo) {e==ne, uo==0, 0<=e, e<=1, 2<=i}

         uo++;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 2<=i}

         i--;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 1<=i}

         e = 0;

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

         while (rand_b()) {

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            if (!(i>=2))

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

               deadlock();

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

            ne += e;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

            uo++;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 2<=uo}

            i--;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

            e = 0;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

         if (rand_b()) {

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            if (!(ne+uo>=1))

//  P() {0==-1}

               deadlock();

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            i += ne+uo-1;

//  P(e,i,ne,uo) {e==0, ne+uo<=i, 0<=ne, ne<=1, 1<=uo}

            e++;

//  P(e,i,ne,uo) {e==1, ne+uo<=i, 0<=ne, ne<=1, 1<=uo}

            ne = 0;

//  P(e,i,ne,uo) {e==1, ne==0, 1<=i, uo<=i, 1<=uo}

            uo = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            if (!(i>=1))

//  P() {0==-1}

               deadlock();

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            i += e+ne+uo-1;

//  P(e,i,ne,uo) {e==0, ne+uo<=i, 0<=ne, ne<=1, 1<=uo}

            e = 1;

//  P(e,i,ne,uo) {e==1, ne+uo<=i, 0<=ne, ne<=1, 1<=uo}

            ne = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo<=i, 1<=uo}

            uo = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }
      }
      else if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         if (!(i==1))

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=i}

            deadlock();

//  P(e,i,ne,uo) {i==1, ne==0, uo==0, 0<=e, e<=1}

         ne += e;

//  P(e,i,ne,uo) {e==ne, i==1, uo==0, 0<=e, e<=1}

         uo++;

//  P(e,i,ne,uo) {e==ne, i==1, uo==1, 0<=e, e<=1}

         i--;

//  P(e,i,ne,uo) {e==ne, i==0, uo==1, 0<=e, e<=1}

         e = 0;

//  P(e,i,ne,uo) {e==0, i==0, uo==1, 0<=ne, ne<=1}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();

//  P(e,i,ne,uo) {e==0, i==0, uo==1, 0<=ne, ne<=1}

         if (!(ne+uo>=2))

//  P(e,i,ne,uo) {e==0, i==0, ne==0, uo==1}

            deadlock();

//  P(e,i,ne,uo) {e==0, i==0, ne==1, uo==1}

         i += ne+uo-1;

//  P(e,i,ne,uo) {e==0, i==1, ne==1, uo==1}

         e++;

//  P(e,i,ne,uo) {e==1, i==1, ne==1, uo==1}

         ne = 0;

//  P(e,i,ne,uo) {e==1, i==1, ne==0, uo==1}

         uo = 0;

//  P(e,i,ne,uo) {e==1, i==1, ne==0, uo==0}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();
      }
      else if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         if (!(i>=2))

//  P(e,i,ne,uo) {i==1, ne==0, uo==0, 0<=e, e<=1}

            deadlock();

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=i}

         ne += e;

//  P(e,i,ne,uo) {e==ne, uo==0, 0<=e, e<=1, 2<=i}

         uo++;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 2<=i}

         i--;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 1<=i}

         e = 0;

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

         while (rand_b()) {

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

            if (!(i>=2))

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

               deadlock();

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

            ne += e;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

            uo++;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 2<=uo}

            i--;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

            e = 0;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

         if (!(i==1))

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

            deadlock();

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

         ne += e;

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

         uo++;

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 2<=uo}

         i--;

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

         e = 0;

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

         if (!(ne+uo>=2))

//  P() {0==-1}

            deadlock();

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

         i += ne+uo-1;

//  P(e,i,ne,uo) {e==0, ne+uo==i+1, 0<=ne, ne<=1, 2<=uo}

         e++;

//  P(e,i,ne,uo) {e==1, ne+uo==i+1, 0<=ne, ne<=1, 2<=uo}

         ne = 0;

//  P(e,i,ne,uo) {e==1, ne==0, 1<=i, i<=uo, uo<=i+1, 2<=uo}

         uo = 0;

//  P(e,i,ne,uo) {e==1, ne==0, uo==0, 1<=i}

         if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

         if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

            if (rand_b()) {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

               if (!(i>=2))

//  P(e,i,ne,uo) {i==1, ne==0, uo==0, 0<=e, e<=1}

                  deadlock();

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=i}

               ne += e;

//  P(e,i,ne,uo) {e==ne, uo==0, 0<=e, e<=1, 2<=i}

               uo++;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 2<=i}

               i--;

//  P(e,i,ne,uo) {e==ne, uo==1, 0<=e, e<=1, 1<=i}

               e = 0;

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

               if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

                  checking_error();

//  P(e,i,ne,uo) {e==0, uo==1, 1<=i, 0<=ne, ne<=1}

               while (rand_b()) {

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

                  if (!(i>=2))

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

                     deadlock();

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

                  ne += e;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

                  uo++;

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 2<=uo}

                  i--;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

                  e = 0;

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 2<=uo}

                  if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

                     checking_error();
               }

//  P(e,i,ne,uo) {e==0, 1<=i, 0<=ne, ne<=1, 1<=uo}

               if (!(i==1))

//  P(e,i,ne,uo) {e==0, 2<=i, 0<=ne, ne<=1, 1<=uo}

                  deadlock();

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

               ne += e;

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 1<=uo}

               uo++;

//  P(e,i,ne,uo) {e==0, i==1, 0<=ne, ne<=1, 2<=uo}

               i--;

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

               e = 0;

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=uo}

               if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

                  checking_error();
            }
            else {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

               if (!(i==1))

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=i}

                  deadlock();

//  P(e,i,ne,uo) {i==1, ne==0, uo==0, 0<=e, e<=1}

               ne += e;

//  P(e,i,ne,uo) {e==ne, i==1, uo==0, 0<=e, e<=1}

               uo++;

//  P(e,i,ne,uo) {e==ne, i==1, uo==1, 0<=e, e<=1}

               i--;

//  P(e,i,ne,uo) {e==ne, i==0, uo==1, 0<=e, e<=1}

               e = 0;

//  P(e,i,ne,uo) {e==0, i==0, uo==1, 0<=ne, ne<=1}

               if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

                  checking_error();
            }

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 1<=uo}

            if (!(ne+uo==1))

//  P(e,i,ne,uo) {e==0, i==0, 0<=ne, ne<=1, 2<=ne+uo, 1<=uo}

               deadlock();

//  P(e,i,ne,uo) {e==0, i==0, ne==0, uo==1}

            i += ne+uo-1;

//  P(e,i,ne,uo) {e==0, i==0, ne==0, uo==1}

            e++;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==1}

            ne = 0;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==1}

            uo = 0;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==0}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }
         else {

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 1<=i}

            if (!(i>=1&&e+ne+uo+i-1<1))

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, 2<=e+i, 1<=i}

               deadlock();

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, e+i<=1, 1<=i}

            i += e+ne+uo-1;

//  P(e,i,ne,uo) {ne==0, uo==0, 0<=e, e<=1, e<=i, i<=0}

            e = 1;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==0}

            ne = 0;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==0}

            uo = 0;

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==0}

            if (e>=2||uo+ne>=1&&e>=1)

//  P() {0==-1}

               checking_error();
         }

//  P(e,i,ne,uo) {e==1, i==0, ne==0, uo==0}

         deadlock();
      }
}
