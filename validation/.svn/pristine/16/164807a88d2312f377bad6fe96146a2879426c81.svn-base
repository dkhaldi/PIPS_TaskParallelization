//                        40960000*COMPLEXITY:UNKNOWN_RANGE0 + 25603274 (SUMMARY)
int main(int argc, char *argv[])
{
//                                                                    0 (STMT)
// (0,2)
   uint maxiter;
//                                                                    0 (STMT)
// (0,3)
   double r_min = -2;
//                                                                    0 (STMT)
// (0,4)
   double r_max = 2;
//                                                                    0 (STMT)
// (0,5)
   double i_min = -2;
//                                                                    0 (STMT)
// (0,6)
   double i_max = 2;
//                                                                    0 (STMT)
// (0,7)
   uint width = 800;
   /* dimensions of display window */
//                                                                    0 (STMT)
// (0,8)
   uint height = 800;
//                                                                    0 (STMT)
// (0,9)
   ulong min_color, max_color;
//                                                                    0 (STMT)
// (0,10)
   double scale_r, scale_i, scale_color;
//                                                                    0 (STMT)
// (0,11)
   uint col, col1, row, row1, k;
//                                                                    0 (STMT)
// (0,12)
   complex z, c, z1, c1;
//                                                                    0 (STMT)
// (0,13)
   double lengthsq, temp;
//                                                                    0 (STMT)
// (0,14)
   ulong couleur[800][800];
//                                                                 9.50 (TEST)
// (0,15)
   
   /* Check command-line arguments */
   if (argc<2||argc>2&&argc<5) {
//                                                                    3 (STMT)
// (0,17)
      fprintf(stderr, "usage:  %s maxiter [x0 y0 size]\n", argv[0]);
//                                                                    0 (STMT)
// (0,18)
      return 1;
   }
//                                                                    3 (STMT)
// (0,20)
   
   /* Process command-line arguments */
   maxiter = atoi(argv[1]);
//                                                                   10 (TEST)
// (0,21)
   if (argc>2) {
//                                                                    0 (STMT)
// (0,23)
      double x0 = atof(argv[2]);
//                                                                    0 (STMT)
// (0,24)
      double y0 = atof(argv[3]);
//                                                                    0 (STMT)
// (0,25)
      double size = atof(argv[4]);
//                                                                    4 (STMT)
// (0,26)
      r_min = x0-size;
//                                                                    4 (STMT)
// (0,27)
      r_max = x0+size;
//                                                                    4 (STMT)
// (0,28)
      i_min = y0-size;
//                                                                    4 (STMT)
// (0,29)
      i_max = y0+size;
   }
//                                                                    1 (STMT)
// (0,31)

   min_color = 0;
//                                                                    1 (STMT)
// (0,32)
   max_color = 16777215;
//                                                                    8 (STMT)
// (0,33)
   
   /* Calculate and draw points */
   
   /* Compute factors to scale computational region to window */
   scale_r = (double) (r_max-r_min)/((double) width);
//                                                                    8 (STMT)
// (0,34)
   scale_i = (double) (i_max-i_min)/((double) height);
//                                                                    9 (STMT)
// (0,35)
   
   /* Compute factor for color scaling */
   scale_color = (double) (max_color-min_color)/((double) (maxiter-1));
//     64*COMPLEXITY:UNKNOWN_RANGE0*height*width + 40*height*width + 4*height + 3 (DO)
// (0,36)

   for(row = 0; row < height; row += 1)
//                    64*COMPLEXITY:UNKNOWN_RANGE0*width + 40*width + 4 (DO)
// (0,37)
      for(col = 0; col < width; col += 1) {
//                                                                    6 (STMT)
// (0,39)

         z.r = z.i = 0;
//                                                                    9 (STMT)
// (0,40)
         c.r = r_min+(double) col*scale_r;
//                                                                   12 (STMT)
// (0,41)
         c.i = i_min+(double) (height-1-row)*scale_i;
//                                                                    1 (STMT)
// (0,42)
         k = 0;
//                                                                    1 (STMT)
// (0,43)
         lengthsq = 0;
//                                         64*COMPLEXITY:UNKNOWN_RANGE0 (WHILE)
// (0,44)
         do {
//                                                                   20 (STMT)
// (0,46)
            temp = z.r*z.r-z.i*z.i+c.r;
//                                                                   15 (STMT)
// (0,47)
            z.i = 2*z.r*z.i+c.i;
//                                                                    4 (STMT)
// (0,48)
            z.r = temp;
//                                                                   16 (STMT)
// (0,49)
            lengthsq = z.r*z.r+z.i*z.i;
//                                                                    2 (STMT)
// (0,50)
            ++k;
         }
         while (lengthsq<2*2&&k<maxiter);
//                                                                   10 (STMT)
// (0,51)
         couleur[row][col] = (k-1)*scale_color+min_color;
      }
//                                                                    2 (STMT)
// (0,52)
   /* Produce text output  */
   fprintf(stdout, "\n");
//                                                                   14 (STMT)
// (0,53)
   fprintf(stdout, "center = (%g, %g), size = %g\n", (r_max+r_min)/2, (i_max+i_min)/2, (r_max-r_min)/2);
//                                                                    3 (STMT)
// (0,54)
   fprintf(stdout, "maximum iterations = %d\n", maxiter);
//                                                                    2 (STMT)
// (0,55)
   fprintf(stdout, "\n");
//                                                                    0 (STMT)
// (0,56)

   return 0;
}
