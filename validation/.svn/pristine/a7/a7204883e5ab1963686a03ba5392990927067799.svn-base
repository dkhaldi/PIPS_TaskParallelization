
Proper effects

int main(void)
{
   pointer p1, p2, p3;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p1 _MALLOC_EFFECTS:_MALLOC_
   
   // could differentiate allocs based on call path?
   p1 = alloc_pointer(13);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p2 _MALLOC_EFFECTS:_MALLOC_
   p2 = alloc_pointer(17);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p3 _MALLOC_EFFECTS:_MALLOC_
   p3 = alloc_pointer(19);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p1 p2 p3
   
   // no pointer assigned! can keep all points-to
   pointer_add(p1, p2, p3);
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: stdout[0]
//             <    is read   >: p1 p2 p3 stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   
   // 36 17 19
   fprintf(stdout, "p1=%d p2=%d p3=%d\n", pointer_get(p1), pointer_get(p2), pointer_get(p3));
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p3
   
   // no pointer assigned! can keep all points-to
   pointer_set(p3, 23);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: p1 p2 p3
   
   // no pointer assigned! can keep all points-to
   pointer_add(p3, p2, p1);
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: stdout[0]
//             <    is read   >: p1 p2 p3 stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   
   // 36 17 53
   fprintf(stdout, "p1=%d p2=%d p3=%d\n", pointer_get(p1), pointer_get(p2), pointer_get(p3));
//             <    is read   >: p1 _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_

   pointer_free(p1);
//             <    is read   >: p2 _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   pointer_free(p2);
//             <    is read   >: p3 _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   pointer_free(p3);
   return 0;
}

Points-to


// Points To IN:
// stdout -> *NULL* , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , MAY


// Points To OUT: none

int main(void)
{

// Points To: none

   pointer p1, p2, p3;

// Points To:
// p1 -> undefined , EXACT
// p2 -> undefined , EXACT
// p3 -> undefined , EXACT

   
   // could differentiate allocs based on call path?
   p1 = alloc_pointer(13);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> undefined , EXACT
// p3 -> undefined , EXACT

   p2 = alloc_pointer(17);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> undefined , EXACT

   p3 = alloc_pointer(19);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY

   
   // no pointer assigned! can keep all points-to
   pointer_add(p1, p2, p3);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> *NULL* , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , MAY

   
   // 36 17 19
   fprintf(stdout, "p1=%d p2=%d p3=%d\n", pointer_get(p1), pointer_get(p2), pointer_get(p3));

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   
   // no pointer assigned! can keep all points-to
   pointer_set(p3, 23);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   
   // no pointer assigned! can keep all points-to
   pointer_add(p3, p2, p1);

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   
   // 36 17 53
   fprintf(stdout, "p1=%d p2=%d p3=%d\n", pointer_get(p1), pointer_get(p2), pointer_get(p3));

// Points To:
// p1 -> alloc_pointer:*HEAP*_l_14 , MAY
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT


   pointer_free(p1);

// Points To:
// p1 -> undefined , EXACT
// p2 -> alloc_pointer:*HEAP*_l_14 , MAY
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   pointer_free(p2);

// Points To:
// p1 -> undefined , EXACT
// p2 -> undefined , EXACT
// p3 -> alloc_pointer:*HEAP*_l_14 , MAY
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   pointer_free(p3);

// Points To:
// p1 -> undefined , EXACT
// p2 -> undefined , EXACT
// p3 -> undefined , EXACT
// stdout -> __IO_EFFECTS:IO_FILES[1] , EXACT

   return 0;
}
