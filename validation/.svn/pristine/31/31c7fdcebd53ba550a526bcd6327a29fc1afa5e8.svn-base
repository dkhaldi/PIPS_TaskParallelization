
Points-to


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i, a[10], *p;

// Points To:
// p -> undefined , EXACT


   p = &a[0];

// Points To:
// p -> a[0] , EXACT

   p[i] = i;

// Points To:
// p -> a[0] , EXACT


   return 0;
}

PROPER  EFFECTS

int main()
{
   int i, a[10], *p;
//             <    is written>: p

   p = &a[0];
//             <    is read   >: i p
//             <    is written>: a[i]
   p[i] = i;

   return 0;
}

Transformers with point-to


//  T(main) {main==0}

int main()
{

//  T() {}

   int i, a[10], *p;

//  T(p) {&a[0]==p}


   p = &a[0];

//  T() {&a[0]==p}

   p[i] = i;

//  T(main) {&a[0]==p, main==0}


   return 0;
}

Preconditions with point-to


//  P() {}

int main()
{

//  P() {}

   int i, a[10], *p;

//  P() {}


   p = &a[0];

//  P(p) {&a[0]==p}

   p[i] = i;

//  P(p) {&a[0]==p}


   return 0;
}

Warnings

TRANSFORMERS_INTER_FULL_WITH_POINTS_TO[main] (abstract_locations_max) property "ALIASING_ACROSS_TYPES" is assumed true for abstract locations.
