int main()
{
   int a[100];                                                          /*0002*/
   int i, j;                                                            /*0003*/
   
   // A do loop ! Should be parallel.
   for (j = 10;j>0;j = -4+j)                                            /*0006*/
      a[j] = 2;                                                         /*0007*/

   return 0;                                                            /*0009*/
}

After for to do loop conversion

int main()
{
   int a[100];                                                          /*0002*/
   int i, j;                                                            /*0003*/
   
   // A do loop ! Should be parallel.
   for(j = 10; j >= 1; j += -4)                                         /*0006*/
      a[j] = 2;                                                         /*0007*/

   return 0;                                                            /*0009*/
}

Proper effects for "main"

int main()
{
   int a[100];                                                          /*0002*/
   int i, j;                                                            /*0003*/
//             <    is written>: j
   
   // A do loop ! Should be parallel.
   for(j = 10; j >= 1; j += -4)                                         /*0006*/
//             <    is read   >: j
//             <    is written>: a[j]
      a[j] = 2;                                                         /*0007*/

   return 0;                                                            /*0009*/
}

Cumulated effects for "main"

int main()
{
   int a[100];                                                          /*0002*/
   int i, j;                                                            /*0003*/
//             <may be written>: a[*]
//             <    is read   >: j
//             <    is written>: j
   
   // A do loop ! Should be parallel.
   for(j = 10; j >= 1; j += -4)                                         /*0006*/
//             <may be written>: a[*]
//             <    is read   >: j
      a[j] = 2;                                                         /*0007*/

   return 0;                                                            /*0009*/
}

Transformers for "main"


//  T(main) {main==0}

int main()
{

//  T() {}

   int a[100];                                                          /*0002*/

//  T() {}

   int i, j;                                                            /*0003*/

//  T(j) {1<=j, j<=10}

   
   // A do loop ! Should be parallel.
   for(j = 10; j >= 1; j += -4)                                         /*0006*/

//  T() {1<=j, j<=10}

      a[j] = 2;                                                         /*0007*/

//  T(main) {main==0, j<=0, 0<=j+3}


   return 0;                                                            /*0009*/
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   int a[100];                                                          /*0002*/

//  P() {}

   int i, j;                                                            /*0003*/

//  P() {}

   
   // A do loop ! Should be parallel.
   for(j = 10; j >= 1; j += -4)                                         /*0006*/

//  P(j) {1<=j, j<=10}

      a[j] = 2;                                                         /*0007*/

//  P(j) {j<=0, 0<=j+3}


   return 0;                                                            /*0009*/
}
int main()
{
   int a[100];                                                          /*0002*/
   int i, j;                                                            /*0003*/
   
   // A do loop ! Should be parallel.
#pragma omp parallel for 
   for(j = 10; j >= 1; j += -4)                                         /*0006*/
      a[j] = 2;                                                         /*0007*/

   return 0;                                                            /*0009*/
}
