
Initial code

int foo(int c)
{
   int force;
   struct a of = {{c}};
pas_trop:
   for(force = 1; force <= 17; force += 2)
      of.the.jedi += force;
   return of.the.jedi;
}
struct a {
   struct b {int jedi;} the;
};
extern int foo(int c);

Code after outlining

int foo(int c)
{
   int force;
   struct a of = {{c}};
pas_trop:   kernel(&of);
   return of.the.jedi;
}
void kernel(struct a of_0[1])
{
   // Declared by Pass Outlining
   int force;
   // Declared as a patch variable by Pass Outlining
   struct a of;
   of = *of_0;
pas_trop:
   for(force = 1; force <= 17; force += 2)
      of.the.jedi += force;
   *of_0 = of;
}
struct a {
   struct b {int jedi;} the;
};
extern int foo(int c);
//PIPS generated variable
void kernel(struct a of_0[1]);
