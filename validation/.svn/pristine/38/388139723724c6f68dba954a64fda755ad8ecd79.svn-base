### initial


      FUNCTION GETIME (X)
C     REND LE TEMPS CPU INSTANTANE, EN SECONDES.
          EXTERNAL TIME
          INTEGER TIME
      GETIME = REAL(TIME())                                             0007
      END
C     Modifications:
C      - function TIME added

      PROGRAM ONDE24

C      ---------------------------------------------------------------
C            MODELISATION PAR EQUATION D'ONDES D'UN PHENOMENE
C                  DE PROPAGATION EN DIMENSION 2.
C
C      HYPOTHESES  :   - ON CONSIDERE UN DOMAINE CARRE .
C      ----------      - LA SURFACE EST LIBRE.
C                      - ON CONSIDERE DES CONDITIONS ABSORBANTES DU SECOND
C                        ORDRE SUR LES BORDS  (cf. these CHALINDAR).
C                      - LE MILIEU EST HETEROGENE.
C
C
C      UTILISATION D'UN SCHEMA AUX DIFFERENCES FINIES D'ORDRE (2,4)
C      (ORDRE 2 EN TEMPS ET 4 EN ESPACE) COMME METHODE DE RESOLUTION :
C
C             - SCHEMA D'ORDRE (2,4) POUR LE DOMAINE INTERIEUR.
C             - SCHEMA D'ORDRE (2,2) POUR LE BORD INTERIEUR DU DOMAINE.
C             - CONDITIONS PARAXIALES D'ORDRE 2 POUR LE BORD DU DOMAINE.
C
C      ---------------------------------------------------------------



C      DECLARATION DE CONSTANTES
C      -------------------------
C      NPMAX      : NOMBRE DE POINTS MAXIMUM DU MAILLAGE SPATIAL
C      NTMAX      : NOMBRE MAXIMUM DE PAS DE TEMPS
C      NBTRAC   : NOMBRE DE TRACES SISMIQUES
C      TMAX        : TEMPS DE PRISE EN COMPTE DE LA FONCTION SOURCE (S)

      INTEGER    NPMAX 
      INTEGER    NTMAX 
      INTEGER    NBTRAC
      INTEGER    TMAX   
      REAL*8     PI     

      PARAMETER      (NPMAX     = 809)
      PARAMETER      (NTMAX     = 4000)
      PARAMETER      (NBTRAC  = 50)
      PARAMETER      (TMAX       = 1.0)
      PARAMETER      (PI         = 3.141592653589)


C      DECLARATION DE TABLEAUX
C      -----------------------
C      U      :    SOLUTION DE LA MODELISATION PAR EQUATION D'ONDE D'UN
C                  PHENOMENE DE PROPAGATION. UTILISATION D'UN SCHEMA AUX
C                  DIFFERENCES FINIES COMME METHODE DE RESOLUTION.
C
C                  U(.,.,KM) REPRESENTE U(t)
C                  U(.,.,KP) REPRESENTE U(t-1) et U(t+1)
C
C
C
C      V      :    CHAMP DE VITESSE CARACTERISTIQUE DU MILIEU.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         1/12*((V(i,j)*DELTAT/H)**2)
C                    POUR LES POINTS INTERIEURS DU DOMAINE.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         (V(i,j)*DELTAT/H)**2
C                    POUR LES POINTS CONSTITUANT LE BORD INTERNE DU DOMAINE
C                  - DANS LE CAS DES POINTS CONSTITUANT LES FRONTIERES
C                    E-W-S, LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES POINTS FRONTIERES ET DES POINTS
C                    CONNEXES A LA FRONTIERE.
C                  - DANS LE CAS DES POINTS CONSTITUANT LES COINS INFERIEURS
C                    DU DOMAINE, ET LES DEUX POINTS FRONTIERES CONNEXES
C                    AUX COINS,  LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES 4 POINTS CONNEXES AU POINT CONCERNE.
C                  - LES COINS SUPERIEURS SONT CONSIDERES COMME PARTIE
C                    DE LA SURFACE LIBRE.
C
C    B        :    TABLEAUX DE 3 VECTEURS CONTENANT LES CONSTANTES LIEES
C                  AUX EQUATIONS ASSOCIEES AUX BORDS.
C                       B1  =  1 - (1/(V'*DELTAT + H)) * (2*H + (V'*DELTAT)**2/H)
C                       B2  =  2*H / (V'*DELTAT + H)
C                       B3  =  (V'*DELTAT)*(V'*DELTAT) / 2*H*(V'*DELTAT + H)
C                  AVEC V': VITESSE HARMONIQUE SUR DEUX POINTS.
C
C                  DANS LE CAS PARTICULIER DES 3 POINTS COMPOSANT
C                  CHAQUE COIN E-S ET S-W, LES TABLEAUX B1 ET B2 CONTIENNENT 
C                  RESPECTIVEMENT LES CONSTANTES :
C                      B1   = 2*V'*DELTAT / ( 4*V'*DELTAT + 3*H)
C                      B2   = 3*H / (4*V'*DELTAT + 3*H)
C                  AVEC V': VITESSE HARMONIQUE SUR QUATRE POINTS.
C                  
C                  CODAGE :  B(.,1,1) <-  B1 EAST
C                            B(.,1,2) <-  B1 SOUTH
C                            B(.,1,3) <-  B1 WEST
C
C
C    UB       :    TABLEAU DE VECTEURS INTERMEDIAIRES UTILISES POUR LE CALCUL 
C                  DES BORDS E-S-W ; LE CODAGE EST LE MEME QUE POUR 
C                  LES VECTEURS B.
C
C    UINT    :     VECTEUR INTERMEDIAIRE UTILISE LORS DU CALCUL DE
C                  LA SOLUTION AUX BORDS
C
C

      REAL*8    U     (NPMAX+1,NPMAX,2)
      REAL*8    V     (NPMAX+1,NPMAX)
 
      REAL*8    B     (NPMAX+1,3,3)
      REAL*8    UB    (NPMAX+1,3)
      REAL*8    UINT  (NPMAX)

      REAL*8    SISMO (NBTRAC,NTMAX)

C     DECLARATION DE SCALAIRES
C     ------------------------
C     NP       : NOMBRE DE POINT SELON LA DIMENSION X DU MAILLAGE SPATIAL
C     NT       : NOMBRE DE PAS DE TEMPS DE LA SIMULATION
C     DELTAT   : INTERVALLE DE TEMPS               (0.0005 S)
C     H        : INTERVALLE D'ESPACE               (1.5    M)
C     F        : FREQUENCE DE LA SOURCE            (30     HERTZ)
C     IS,JS    : COORDONNEES DE LA SOURCE            
C
C     KM,KP    : POINTEURS PERMETTANT DE PERMUTER LES PLANS ESPACE.
C     I,J,K,N  : INDICES DE BOUCLES
C     Wi       : VARIABLES DE TRAVAIL
C     G0       : INTENSITE DE LA SOURCE A L'INSTANT t
C     TINIT,
C     TFIN,
C     TMESUR   : COMPTEURS DE GESTION DU TEMPS
C     TiCPU    : COMPTEURS DE GESTION DU TEMPS CPU
C     TiELAP   : COMPTEURS DE GESTION DU TEMPS ELAPSED
C     NBOPi    : COMPTEURS DU NOMBRE D'OPERATIONS FLOTTANTES
C     MFLOPS   : NOMBRE DE MFLOPS MESURES
C     UMIN     : VALEUR MIN DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     UMAX     : VALEUR MAX DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     VMIN     : VALEUR MIN DE LA SOLUTION DU CHAMP DE VITESSE
C     VMAX     : VALEUR MAX DE LA SOLUTION DU CHAMP DE VITESSE
C     SISMIN   : VALEUR MIN DE LA SOLUTION DU SISMOGRAMME
C     SISMAX   : VALEUR MAX DE LA SOLUTION DU SISMOGRAMME
C
      INTEGER   NP
      INTEGER   NT
      REAL*8    DELTAT 
      REAL*8    H      
      REAL*8    F      
      INTEGER   IS,JS
      INTEGER   KM,KP
      INTEGER   I,J,K,N
      REAL*8    W
      REAL*8    C1,C2,C3

      REAL*8    G0
      REAL*8    TMESUR
      REAL*8    TINIT
      REAL*8    TFIN
      REAL*8    T1CPU
      REAL*8    T2CPU
      REAL*8    T3CPU
      REAL*8    NBOP1
      REAL*8    NBOP2
      REAL*8    MFLOPS
      REAL*8    UMIN, UMAX
      REAL*8    VMIN, VMAX
      REAL*8    SISMIN, SISMAX


C
C             CORPS DU PROGRAMME
C             ------------------

      CALL OPENFILE                                                     0171

C
C     ACQUISITION DES PARAMETRES DE LA MODELISATION
C     ---------------------------------------------

C     WRITE (6,'('' ENTRER LE NB DE POINTS DU MAILLAGE CARRE (NP) ? '',$)')
      READ (4, *) NP                                                    0178
C     WRITE (6,'('' ENTRER LE NB DE PAS DE TEMPS TOTAL (NT) ? '',$)')
      READ (4, *) NT                                                    0180
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN ESPACE (H) ? '',$)')
      READ (4, *) H                                                     0182
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN TEMPS (DELTAT) ? '',$)')
      READ (4, *) DELTAT                                                0184
C     WRITE (6,'('' ENTRER LA POSITION EN X DE LA SOURCE (JS) ? '',$)')
      READ (4, *) JS                                                    0186
C     WRITE (6,'('' ENTRER LA POSITION EN Z DE LA SOURCE (IS) ? '',$)')
      READ (4, *) IS                                                    0188
C     WRITE (6,'('' ENTRER LA FREQUENCE DE LA SOURCE (F) ? '',$)')
      READ (4, *) F                                                     0190




      WRITE (1, 1100)                                                   0195
      WRITE (1, 1110)                                                   0196
      WRITE (1, 1120)                                                   0197
      WRITE (1, 1130) NP, NP                                            0198
      WRITE (1, 1135) NT                                                0199
      WRITE (1, 1140) IS, JS                                            0200
      WRITE (1, 1171) H                                                 0201
      WRITE (1, 1170) DELTAT                                            0202
      WRITE (1, 1180) F                                                 0203

C////////////////BEGIN FUNCTION TIMER/////////////////
      CALL STIMER(W)                                                    0206
      TINIT = GETIME(W)                                                 0207
      TFIN = GETIME(W)                                                  0208
      TMESUR = TFIN-TINIT                                               0209
C////////////////END   FUNCTION TIMER/////////////////
C
C     INITIALISATION DES VARIABLES SCALAIRES
C     --------------------------------------
      KM = 1                                                            0214
      KP = 2                                                            0215
      G0 = 0                                                            0216


C     INITIALISATION DU CHAMP VITESSE
C     V(I,J)     = READ (Vi) (CAS D'UN MILIEU HETEROGENE)
C     -------------------------------------------------------

C////////////////BEGIN FUNCTION TIMER/////////////////
      TINIT = GETIME(W)                                                 0224
C////////////////END   FUNCTION TIMER/////////////////


      READ (3, *) NP                                                    0228
      READ (3, *) NP                                                    0229
      DO 21 I = 1, NP                                                   0230
         DO 22 J = 1, NP                                                0231
            READ (3, *) V(I,J)                                          0232
22          CONTINUE                                                    0233
21       CONTINUE                                                       0234


C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0238
      T3CPU = TFIN-TINIT                                                0239
C////////////////END   FUNCTION TIMER/////////////////

      VMAX = V(1,1)                                                     0242
      VMIN = V(1,1)                                                     0243
      DO 112 I = 1, NP                                                  0244
         DO 122 J = 1, NP                                               0245
            IF (V(I,J).LT.VMIN) VMIN = V(I,J)                           0246
            IF (V(I,J).GT.VMAX) VMAX = V(I,J)                           0249
122         CONTINUE                                                    0252
112      CONTINUE                                                       0253
      WRITE (1, 1051) VMIN, VMAX                                        0254


C////////////////BEGIN FUNCTION TIMER/////////////////
      TINIT = GETIME(W)                                                 0258
C////////////////END   FUNCTION TIMER/////////////////


C     INITIALISATION DE LA SOLUTION U
C     U(.,.,t=0) = U(.,.,t=1) = 0
C     ET DES ENREGISTREMENTS 
C     SISMO (T=1) = 0.0
C     ------------------------------

      DO 10 K = 1, 2                                                    0268
         DO 20 J = 1, NP                                                0269
            DO 30 I = 1, NP                                             0270
               U(I,J,K) = 0.0                                           0271
30             CONTINUE                                                 0272
20          CONTINUE                                                    0273
10       CONTINUE                                                       0274


      DO 84 I = 1, NBTRAC                                               0277
         SISMO(I,1) = 0.0                                               0278
84       CONTINUE                                                       0279




C     INITIALISATION DES CONSTANTES LIEES AUX COINS INFERIEURS
C            V(I,J)  <--  moyenne harmonique sur 4 points
C            B(I,.,.)<--  cf declarations
C     ET AUX BORDS E-S-W
C            V(I,J)  <--  moyenne harmonique sur 2 points
C            B(I,.,.)<--  cf declarations
C     --------------------------------------------------------


C     CAS DES TROIS POINTS DU COIN E-S
C     --------------------------------
      C1 = 4/(1/V(NP-1,NP)+1/V(NP-1,NP-1)+1/V(NP-2,NP)+1/V(NP-2,NP-1)   0295
     &)                                                                 0295
      W = C1*DELTAT                                                     0297
      B(NP-1,1,1) = 2*W/(4*W+3*H)                                       0298
      B(NP-1,1,2) = 3*H/(4*W+3*H)                                       0299

      C2 = 4/(1/V(NP,NP)+1/V(NP,NP-1)+1/V(NP-1,NP)+1/V(NP-1,NP-1))      0301
      W = C2*DELTAT                                                     0303
      B(NP,2,1) = 2*W/(4*W+3*H)                                         0304
      B(NP,2,2) = 3*H/(4*W+3*H)                                         0305

      C3 = 4/(1/V(NP,NP)+1/V(NP,NP-1)+1/V(NP-1,NP)+1/V(NP-1,NP-1))      0307
      W = C3*DELTAT                                                     0309
      B(NP-1,2,1) = 2*W/(4*W+3*H)                                       0310
      B(NP-1,2,2) = 3*H/(4*W+3*H)                                       0311

      V(NP-1,NP) = C1                                                   0313
      V(NP,NP) = C2                                                     0314
      V(NP,NP-1) = C3                                                   0315

C     CAS DES 3 POINTS DU COIN W-S
C     ----------------------------
      C1 = 4/(1/V(NP,2)+1/V(NP,3)+1/V(NP-1,2)+1/V(NP-1,3))              0319
      W = C1*DELTAT                                                     0321
      B(2,2,1) = 2*W/(4*W+3*H)                                          0322
      B(2,2,2) = 3*H/(4*W+3*H)                                          0323

      C2 = 4/(1/V(NP,1)+1/V(NP,2)+1/V(NP-1,1)+1/V(NP-1,2))              0325
      W = C2*DELTAT                                                     0327
      B(1,2,1) = 2*W/(4*W+3*H)                                          0328
      B(1,2,2) = 3*H/(4*W+3*H)                                          0329

      C3 = 4/(1/V(NP-1,1)+1/V(NP-1,2)+1/V(NP-2,1)+1/V(NP-2,2))          0331
      W = C3*DELTAT                                                     0333
      B(NP-1,3,1) = 2*W/(4*W+3*H)                                       0334
      B(NP-1,3,2) = 3*H/(4*W+3*H)                                       0335

      V(NP,2) = C1                                                      0337
      V(NP,1) = C2                                                      0338
      V(NP-1,1) = C3                                                    0339


C     CAS DES BORDS   E - S - W
C     -------------------------
      DO 41 I = 2, NP-2                                                 0344
         V(I,NP) = 2/(1/V(I,NP)+1/V(I,NP-1))                            0345
         W = V(I,NP)*DELTAT                                             0346
         B(I,1,1) = 1-1/(W+H)*(2*H+W*W/H)                               0347
         B(I,1,2) = 2*H/(W+H)                                           0348
         B(I,1,3) = W*W/(2*H*(W+H))                                     0349
41       CONTINUE                                                       0350

      DO 42 I = 3, NP-2                                                 0352
         V(NP,I) = 2/(1/V(NP,I)+1/V(NP-1,I))                            0353
         W = V(NP,I)*DELTAT                                             0354
         B(I,2,1) = 1-1/(W+H)*(2*H+W*W/H)                               0355
         B(I,2,2) = 2*H/(W+H)                                           0356
         B(I,2,3) = W*W/(2*H*(W+H))                                     0357
42       CONTINUE                                                       0358

      DO 43 I = 2, NP-2                                                 0360
         V(I,1) = 2/(1/V(I,1)+1/V(I,2))                                 0361
         W = V(I,1)*DELTAT                                              0362
         B(I,3,1) = 1-1/(W+H)*(2*H+W*W/H)                               0363
         B(I,3,2) = 2*H/(W+H)                                           0364
         B(I,3,3) = W*W/(2*H*(W+H))                                     0365
43       CONTINUE                                                       0366

C
C     INITIALISATION DES CONSTANTES LIEES AUX BORDS INTERNES
C     ------------------------------------------------------
      DO 51 I = 3, NP-1                                                 0371
         V(I,2) = (V(I,2)*DELTAT/H)**2                                  0372
51       CONTINUE                                                       0373

      DO 52 I = 3, NP-1                                                 0375
         V(I,NP-1) = (V(I,NP-1)*DELTAT/H)**2                            0376
52       CONTINUE                                                       0377

      DO 53 I = 3, NP-2                                                 0379
         V(NP-1,I) = (V(NP-1,I)*DELTAT/H)**2                            0380
53       CONTINUE                                                       0381


C     INITIALISATION DES CONSTANTES LIEES AU DOMAINE INTERIEUR
C            V(I,J) <--  1/12*((V(I,J)*DELTAT/H)**2)
C     --------------------------------------------------------
      DO 40 J = 3, NP-2                                                 0387
         DO 50 I = 3, NP-2                                              0388
            V(I,J) = (V(I,J)*DELTAT/H)**2/12                            0389
50          CONTINUE                                                    0390
40       CONTINUE                                                       0391


C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0395
      T1CPU = TFIN-TINIT-TMESUR                                         0396
      WRITE (1, 1015) TMESUR                                            0397
      WRITE (1, 1010) T1CPU                                             0398

      TINIT = GETIME(W)                                                 0400
C////////////////END   FUNCTION TIMER/////////////////

C     -----------------------------------------------------------
C     !     MODELISATION DE LA PROPAGATION DES ONDES            !
C     !               PAR EQUATION D'ONDE.                      !
C     !        RESOLUTION PAR DIFFERENCES FINIES.               !
C     -----------------------------------------------------------


C     ----------------------------
C     !     BOUCLE EN TEMPS      !
C     ----------------------------

      DO 70 N = 2, NT                                                   0414

C     PRISE EN COMPTE DE LA FONCTION SOURCE PENDANT UN TEMPS DE TMAX SEC.
C     Un = Un + SOURCE
C     ------------------------------------------------------------------
         W = F*(N*DELTAT-1.0/F)                                         0419
         IF (W**2.LT.TMAX) THEN                                         0420
            W = (W*PI)**2                                               0421
            G0 = (1.0-2.0*W)*EXP(-W)                                    0422
            U(IS,JS,KM) = U(IS,JS,KM)+G0*12*V(IS,JS)*H**2               0423
         ENDIF



C     --------------------------------------------------------
C     SAUVEGARDE DE LA FRANGE CONNEXE AUX BORDS POUR LE CALCUL
C     ULTERIEUR DE LA SOLUTION AUX BORDS
C     --------------------------------------------------------

         DO 71 I = 2, NP-1                                              0433
            UB(I,1) = U(I,NP-1,KP)                                      0434
            UB(I,2) = U(NP-1,I,KP)                                      0435
            UB(I,3) = U(I,2,KP)                                         0436
71          CONTINUE                                                    0437

C
C     ------------------------------------------------
C     SOLUTION SUR LE DOMAINE INTERIEUR
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 4 EN ESPACE
C     ------------------------------------------------

         DO 80 J = 3, NP-2                                              0445

C     levee des dependances pour forcer la vectorisation.
C     kp et km sont toujours different.
C DIR$ IVDEP

            DO 90 I = 3, NP-2                                           0451

               U(I,J,KP) = 2*U(I,J,KM)-U(I,J,KP)-V(I,J)*(60*U(I,J,KM)   0453
     &         -16*(U(I+1,J,KM)+U(I-1,J,KM)+U(I,J-1,KM)+U(I,J+1,KM))+   0453
     &         U(I+2,J,KM)+U(I-2,J,KM)+U(I,J-2,KM)+U(I,J+2,KM))         0453

90             CONTINUE                                                 0459
80          CONTINUE                                                    0460

C
C     ------------------------------------------------
C     SOLUTION SUR LES BORDS INTERIEURS
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 2 EN ESPACE
C     ------------------------------------------------

C DIR$ IVDEP
         DO 140 I = 3, NP-1                                             0469
            U(I,2,KP) = 2*U(I,2,KM)-U(I,2,KP)-V(I,2)*(4*U(I,2,KM)-(U(   0470
     &      I+1,2,KM)+U(I-1,2,KM)+U(I,1,KM)+U(I,3,KM)))                 0470
140         CONTINUE                                                    0474

C DIR$ IVDEP
         DO 141 I = 3, NP-1                                             0477
            U(I,NP-1,KP) = 2*U(I,NP-1,KM)-U(I,NP-1,KP)-V(I,NP-1)*(4*U   0478
     &      (I,NP-1,KM)-(U(I+1,NP-1,KM)+U(I-1,NP-1,KM)+U(I,NP-2,KM)+U   0478
     &      (I,NP,KM)))                                                 0478
141         CONTINUE                                                    0482


C DIR$ IVDEP
         DO 142 I = 3, NP-2                                             0486
            U(NP-1,I,KP) = 2*U(NP-1,I,KM)-U(NP-1,I,KP)-V(NP-1,I)*(4*U   0487
     &      (NP-1,I,KM)-(U(NP,I,KM)+U(NP-2,I,KM)+U(NP-1,I-1,KM)+U(NP-   0487
     &      1,I+1,KM)))                                                 0487
142         CONTINUE                                                    0491

C
C     --------------------------------------------------------
C     SOLUTION AU BORD EAST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 92 I = 3, NP-2                                              0498
            UINT(I) = B(I,1,1)*(U(I,NP,KP)+U(I,NP-1,KP))-UB(I,1)+B(I,   0499
     &      1,2)*(U(I,NP,KM)+U(I,NP-1,KM))+B(I,1,3)*(U(I+1,NP-1,KP)+U   0499
     &      (I+1,NP,KP)+U(I-1,NP-1,KP)+U(I-1,NP,KP))                    0499
92          CONTINUE                                                    0504

         DO 93 I = 3, NP-2                                              0506
            U(I,NP,KP) = UINT(I)                                        0507
93          CONTINUE                                                    0508

C
C     --------------------------------------------------------
C     SOLUTION AU BORD SOUTH. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 94 I = 3, NP-2                                              0515
            UINT(I) = B(I,2,1)*(U(NP,I,KP)+U(NP-1,I,KP))-UB(I,2)+B(I,   0516
     &      2,2)*(U(NP,I,KM)+U(NP-1,I,KM))+B(I,2,3)*(U(NP-1,I+1,KP)+U   0516
     &      (NP,I+1,KP)+U(NP-1,I-1,KP)+U(NP,I-1,KP))                    0516
94          CONTINUE                                                    0521

         DO 95 I = 3, NP-2                                              0523
            U(NP,I,KP) = UINT(I)                                        0524
95          CONTINUE                                                    0525

C
C     --------------------------------------------------------
C     SOLUTION AU BORD WEST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 96 I = 3, NP-2                                              0532
            UINT(I) = B(I,3,1)*(U(I,1,KP)+U(I,2,KP))-UB(I,3)+B(I,3,2)   0533
     &      *(U(I,1,KM)+U(I,2,KM))+B(I,3,3)*(U(I+1,2,KP)+U(I+1,1,KP)+   0533
     &      U(I-1,2,KP)+U(I-1,1,KP))                                    0533
96          CONTINUE                                                    0538

         DO 97 I = 3, NP-2                                              0540
            U(I,1,KP) = UINT(I)                                         0541
97          CONTINUE                                                    0542



C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP-1,NP,KP) ,  U(NP,NP-1,KP) ET U(NP-1,NP,KP)
C      -----------------------------------------------

         U(NP-1,NP,KP) = B(NP-1,1,1)*(U(NP-1,NP-1,KP)+U(NP-2,NP,KP))+   0551
     &   B(NP-1,1,2)*U(NP-1,NP,KM)                                      0551

         U(NP,NP-1,KP) = B(NP-1,2,1)*(U(NP,NP-2,KP)+U(NP-1,NP-1,KP))+   0554
     &   B(NP-1,2,2)*U(NP,NP-1,KM)                                      0554

         U(NP,NP,KP) = B(NP,2,1)*(U(NP,NP-1,KP)+U(NP-1,NP,KP))+B(NP,2   0557
     &   ,2)*U(NP,NP,KM)                                                0557


C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP,2,KP) ,  U(NP-1,1,KP) ET U(NP,1,KP)
C      -----------------------------------------------

         U(NP,2,KP) = B(2,2,1)*(U(NP,3,KP)+U(NP-1,2,KP))+B(2,2,2)*U(    0566
     &   NP,2,KM)                                                       0566

         U(NP-1,1,KP) = B(NP-1,3,1)*(U(NP-1,2,KP)+U(NP-2,1,KP))+B(NP-   0569
     &   1,3,2)*U(NP-1,1,KM)                                            0569

         U(NP,1,KP) = B(1,2,1)*(U(NP-1,1,KP)+U(NP,2,KP))+B(1,2,2)*U(    0572
     &   NP,1,KM)                                                       0572


C
C     ENREGISTREMENT DU SISMOGRAMME
C     -----------------------------
         DO 81 I = 1, NBTRAC                                            0579
            SISMO(I,N) = U(IS,NP-NBTRAC+I,KP)                           0580
81          CONTINUE                                                    0581


C     PERMUTATION A CHAQUE ITERATION DES PLANS ESPACE
C     -----------------------------------------------
C
         KM = KP                                                        0587
         KP = 3-KP                                                      0588

70       CONTINUE                                                       0590

C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0593
      T2CPU = TFIN-TINIT-TMESUR                                         0594
      WRITE (1, 1000) T2CPU                                             0595

      TINIT = GETIME(W)                                                 0597
C////////////////END   FUNCTION TIMER/////////////////

C
C     SORTIE FICHIER DU SISMOGRAMME
C     -----------------------------

      WRITE (2, *) NBTRAC                                               0604
      WRITE (2, *) NT                                                   0605
      DO 82 K = 1, NBTRAC                                               0606
         DO 83 J = 1, NT                                                0607
            WRITE (2, *) SISMO(K,J)                                     0608
83          CONTINUE                                                    0609
82       CONTINUE                                                       0610

C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0613
      T3CPU = T3CPU+TFIN-TINIT-TMESUR                                   0614
      WRITE (1, 1020) T3CPU                                             0615
      WRITE (1, 1030) T1CPU+T2CPU+T3CPU                                 0616
C////////////////END   FUNCTION TIMER/////////////////

C
C     CALCUL DU NOMBRE DE MFLOPS
C     --------------------------

C     INITIALISATIONS
C     ---------------
      NBOP1 = 114.0+(NP-3)*72.0+(NP-4)*(NP-4)*4.0                       0625

C     RESOLUTION
C     ----------
      NBOP2 = (NT-1)*((NP-4)*(NP-4)*14.0+(NP-3)*27.0+(NP-4)*33.0+26.0   0629
     &)                                                                 0629


      MFLOPS = NBOP2/(T2CPU*1.0E06)                                     0633
      WRITE (1, 1060) MFLOPS                                            0634

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU)*1.0E06)                     0636
      WRITE (1, 1065) MFLOPS                                            0637

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU+T3CPU)*1.0E06)               0639
      WRITE (1, 1070) MFLOPS                                            0641


C
C     CALCUL DE STATISTIQUES SUR LE RESULTAT
C     --------------------------------------
      UMAX = U(1,1,KM)                                                  0647
      UMIN = U(1,1,KM)                                                  0648
      DO 110 J = 1, NP                                                  0649
         DO 120 I = 1, NP                                               0650
            IF (U(I,J,KM).LT.UMIN) UMIN = U(I,J,KM)                     0651
            IF (U(I,J,KM).GT.UMAX) UMAX = U(I,J,KM)                     0654
120         CONTINUE                                                    0657
110      CONTINUE                                                       0658
      WRITE (1, 1050) UMIN, UMAX                                        0659


      SISMAX = SISMO(1,1)                                               0662
      SISMIN = SISMO(1,1)                                               0663
      DO 111 I = 1, NBTRAC                                              0664
         DO 121 J = 1, NT                                               0665
            IF (SISMO(I,J).LT.SISMIN) SISMIN = SISMO(I,J)               0666
            IF (SISMO(I,J).GT.SISMAX) SISMAX = SISMO(I,J)               0669
121         CONTINUE                                                    0672
111      CONTINUE                                                       0673
      WRITE (1, 1055) SISMIN, SISMAX                                    0674



      WRITE (1, 1200)                                                   0678

      CLOSE (1)                                                         0680
      CLOSE (2)                                                         0681
      CLOSE (3)                                                         0682
      CLOSE (4)                                                         0683

      STOP                                                              0685


C     DECLARATIONS DE FORMATS DE SORTIE
C     ---------------------------------

1100  FORMAT(1X,'DEBUT DU PROGRAMME'//)                                 0691

1120  FORMAT(1X,'MODELISATION PAR EQUATION D"ONDES',/,1X,'SCHEMA D"ORDRE
     & 4 EN ESPACE ET 2 EN TEMPS'//)                                    0693
1130  FORMAT(1X,'TAILLE DU MAILLAGE NPXNP       : ',I4,'  X',I4)        0695
1135  FORMAT(1X,'NOMBRE DE PAS DE TEMPS         : ',I4)                 0696
1140  FORMAT(1X,'POSITION DE LA SOURCE          : (',I3,',',I3,')')     0697
1171  FORMAT(1X,'PAS DE DISCR. EN ESPACE (H)    : ',E12.5)              0698
1170  FORMAT(1X,'PAS DE DISCR. EN TEMPS (DELTAT): ',E12.5)              0699
1180  FORMAT(1X,'FREQUENCE DE LA SOURCE (F)     : ',E12.5)              0700
1051  FORMAT(1X,'MIN DE V:',E11.5,3X,'MAX DE V:  ',E11.5//)             0701
1200  FORMAT(1X,/,1X,'FIN DU PROGRAMME')                                0702

1000  FORMAT(1X,'TEMPS CPU DE LA RESOLUTION     (RESOL) : ',E15.5)      0704
1010  FORMAT(1X,'TEMPS CPU DES INITIALISATIONS   (INIT) : ',E15.5)      0705
1020  FORMAT(1X,'TEMPS CPU DES ENTREES/SORTIES    (E/S) : ',E15.5)      0706
1030  FORMAT(1X,'TEMPS CPU TOTAL       (RESOL+INIT+E/S) : ',E15.5//)    0707
1015  FORMAT(1X,'TEMPS CPU DE L"APPEL AU TIMER          : ',E15.5)      0708
1050  FORMAT(1X,'MIN DE U     :',E15.5,3X,'MAX DE U     : ',E15.5)      0709
1055  FORMAT(1X,'MIN DE SISMO :',E15.5,3X,'MAX DE SISMO : ',E15.5//)    0710
1060  FORMAT(1X,'MFLOPS CPU PARTIE VECTORIELLE  (RESOL) : ',E15.5)      0711
1065  FORMAT(1X,'MFLOPS CPU RESOLUTION     (RESOL+INIT) : ',E15.5)      0712
1070  FORMAT(1X,'MFLOPS CPU GLOBAL     (RESOL+INIT+E/S) : ',E15.5//)    0713




C/////////////////////////////////////////////////////////////////////
C
C   PARTIE SPECIFIQUE A CHAQUE MACHINE ET A CHAQUE MODELISATION
C 
C            - FORMATS DES COMMENTAIRES
C            - OUVERTURE DE FICHIERS
C            - FONCTIONS DE GESTION DES TIMERS
C
C/////////////////////////////////////////////////////////////////////


1110  FORMAT(1X,'*********************************************',/,1X,'  
     &     RESOLUTION SUR SUN 4                  ',/,1X,'     DOUBLE PRE
     &CISION (64 bits)              ',/,1X,'         VERSION STANDART   
     &                 ',/,1X,'                                         
     &    ',/,1X,'*********************************************'//)     0729

      END

C
C     OUVERTURE DES FICHIERS
C     ----------------------

      SUBROUTINE OPENFILE

      OPEN (UNIT=4,FILE='MODELES/param2.dat')                           0008

      OPEN (UNIT=3,FILE='MODELES/modele2.dat')                          0010

      OPEN (UNIT=1,FILE='SORTIES/stat2')                                0012

      OPEN (UNIT=2,FILE='SORTIES/sismo2')                               0014

      END

C
C     GESTION DU TIMER
C     ----------------

      SUBROUTINE STIMER (X)
C     INITIALISE LE TIMER - INUTILE SUR DE NOMBREUSES MACHINES
      END

      INTEGER FUNCTION TIME
      TIME = 0.                                                         0003
      END
### type checked


      FUNCTION GETIME (X)
C     REND LE TEMPS CPU INSTANTANE, EN SECONDES.
          EXTERNAL TIME
          INTEGER TIME
      GETIME = REAL(TIME())                                             0007
      END
C     Modifications:
C      - function TIME added

      PROGRAM ONDE24

C      ---------------------------------------------------------------
C            MODELISATION PAR EQUATION D'ONDES D'UN PHENOMENE
C                  DE PROPAGATION EN DIMENSION 2.
C
C      HYPOTHESES  :   - ON CONSIDERE UN DOMAINE CARRE .
C      ----------      - LA SURFACE EST LIBRE.
C                      - ON CONSIDERE DES CONDITIONS ABSORBANTES DU SECOND
C                        ORDRE SUR LES BORDS  (cf. these CHALINDAR).
C                      - LE MILIEU EST HETEROGENE.
C
C
C      UTILISATION D'UN SCHEMA AUX DIFFERENCES FINIES D'ORDRE (2,4)
C      (ORDRE 2 EN TEMPS ET 4 EN ESPACE) COMME METHODE DE RESOLUTION :
C
C             - SCHEMA D'ORDRE (2,4) POUR LE DOMAINE INTERIEUR.
C             - SCHEMA D'ORDRE (2,2) POUR LE BORD INTERIEUR DU DOMAINE.
C             - CONDITIONS PARAXIALES D'ORDRE 2 POUR LE BORD DU DOMAINE.
C
C      ---------------------------------------------------------------



C      DECLARATION DE CONSTANTES
C      -------------------------
C      NPMAX      : NOMBRE DE POINTS MAXIMUM DU MAILLAGE SPATIAL
C      NTMAX      : NOMBRE MAXIMUM DE PAS DE TEMPS
C      NBTRAC   : NOMBRE DE TRACES SISMIQUES
C      TMAX        : TEMPS DE PRISE EN COMPTE DE LA FONCTION SOURCE (S)

      INTEGER    NPMAX 
      INTEGER    NTMAX 
      INTEGER    NBTRAC
      INTEGER    TMAX   
      REAL*8     PI     

      PARAMETER      (NPMAX     = 809)
      PARAMETER      (NTMAX     = 4000)
      PARAMETER      (NBTRAC  = 50)
      PARAMETER      (TMAX       = 1.0)
      PARAMETER      (PI         = 3.141592653589)


C      DECLARATION DE TABLEAUX
C      -----------------------
C      U      :    SOLUTION DE LA MODELISATION PAR EQUATION D'ONDE D'UN
C                  PHENOMENE DE PROPAGATION. UTILISATION D'UN SCHEMA AUX
C                  DIFFERENCES FINIES COMME METHODE DE RESOLUTION.
C
C                  U(.,.,KM) REPRESENTE U(t)
C                  U(.,.,KP) REPRESENTE U(t-1) et U(t+1)
C
C
C
C      V      :    CHAMP DE VITESSE CARACTERISTIQUE DU MILIEU.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         1/12*((V(i,j)*DELTAT/H)**2)
C                    POUR LES POINTS INTERIEURS DU DOMAINE.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         (V(i,j)*DELTAT/H)**2
C                    POUR LES POINTS CONSTITUANT LE BORD INTERNE DU DOMAINE
C                  - DANS LE CAS DES POINTS CONSTITUANT LES FRONTIERES
C                    E-W-S, LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES POINTS FRONTIERES ET DES POINTS
C                    CONNEXES A LA FRONTIERE.
C                  - DANS LE CAS DES POINTS CONSTITUANT LES COINS INFERIEURS
C                    DU DOMAINE, ET LES DEUX POINTS FRONTIERES CONNEXES
C                    AUX COINS,  LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES 4 POINTS CONNEXES AU POINT CONCERNE.
C                  - LES COINS SUPERIEURS SONT CONSIDERES COMME PARTIE
C                    DE LA SURFACE LIBRE.
C
C    B        :    TABLEAUX DE 3 VECTEURS CONTENANT LES CONSTANTES LIEES
C                  AUX EQUATIONS ASSOCIEES AUX BORDS.
C                       B1  =  1 - (1/(V'*DELTAT + H)) * (2*H + (V'*DELTAT)**2/H)
C                       B2  =  2*H / (V'*DELTAT + H)
C                       B3  =  (V'*DELTAT)*(V'*DELTAT) / 2*H*(V'*DELTAT + H)
C                  AVEC V': VITESSE HARMONIQUE SUR DEUX POINTS.
C
C                  DANS LE CAS PARTICULIER DES 3 POINTS COMPOSANT
C                  CHAQUE COIN E-S ET S-W, LES TABLEAUX B1 ET B2 CONTIENNENT 
C                  RESPECTIVEMENT LES CONSTANTES :
C                      B1   = 2*V'*DELTAT / ( 4*V'*DELTAT + 3*H)
C                      B2   = 3*H / (4*V'*DELTAT + 3*H)
C                  AVEC V': VITESSE HARMONIQUE SUR QUATRE POINTS.
C                  
C                  CODAGE :  B(.,1,1) <-  B1 EAST
C                            B(.,1,2) <-  B1 SOUTH
C                            B(.,1,3) <-  B1 WEST
C
C
C    UB       :    TABLEAU DE VECTEURS INTERMEDIAIRES UTILISES POUR LE CALCUL 
C                  DES BORDS E-S-W ; LE CODAGE EST LE MEME QUE POUR 
C                  LES VECTEURS B.
C
C    UINT    :     VECTEUR INTERMEDIAIRE UTILISE LORS DU CALCUL DE
C                  LA SOLUTION AUX BORDS
C
C

      REAL*8    U     (NPMAX+1,NPMAX,2)
      REAL*8    V     (NPMAX+1,NPMAX)
 
      REAL*8    B     (NPMAX+1,3,3)
      REAL*8    UB    (NPMAX+1,3)
      REAL*8    UINT  (NPMAX)

      REAL*8    SISMO (NBTRAC,NTMAX)

C     DECLARATION DE SCALAIRES
C     ------------------------
C     NP       : NOMBRE DE POINT SELON LA DIMENSION X DU MAILLAGE SPATIAL
C     NT       : NOMBRE DE PAS DE TEMPS DE LA SIMULATION
C     DELTAT   : INTERVALLE DE TEMPS               (0.0005 S)
C     H        : INTERVALLE D'ESPACE               (1.5    M)
C     F        : FREQUENCE DE LA SOURCE            (30     HERTZ)
C     IS,JS    : COORDONNEES DE LA SOURCE            
C
C     KM,KP    : POINTEURS PERMETTANT DE PERMUTER LES PLANS ESPACE.
C     I,J,K,N  : INDICES DE BOUCLES
C     Wi       : VARIABLES DE TRAVAIL
C     G0       : INTENSITE DE LA SOURCE A L'INSTANT t
C     TINIT,
C     TFIN,
C     TMESUR   : COMPTEURS DE GESTION DU TEMPS
C     TiCPU    : COMPTEURS DE GESTION DU TEMPS CPU
C     TiELAP   : COMPTEURS DE GESTION DU TEMPS ELAPSED
C     NBOPi    : COMPTEURS DU NOMBRE D'OPERATIONS FLOTTANTES
C     MFLOPS   : NOMBRE DE MFLOPS MESURES
C     UMIN     : VALEUR MIN DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     UMAX     : VALEUR MAX DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     VMIN     : VALEUR MIN DE LA SOLUTION DU CHAMP DE VITESSE
C     VMAX     : VALEUR MAX DE LA SOLUTION DU CHAMP DE VITESSE
C     SISMIN   : VALEUR MIN DE LA SOLUTION DU SISMOGRAMME
C     SISMAX   : VALEUR MAX DE LA SOLUTION DU SISMOGRAMME
C
      INTEGER   NP
      INTEGER   NT
      REAL*8    DELTAT 
      REAL*8    H      
      REAL*8    F      
      INTEGER   IS,JS
      INTEGER   KM,KP
      INTEGER   I,J,K,N
      REAL*8    W
      REAL*8    C1,C2,C3

      REAL*8    G0
      REAL*8    TMESUR
      REAL*8    TINIT
      REAL*8    TFIN
      REAL*8    T1CPU
      REAL*8    T2CPU
      REAL*8    T3CPU
      REAL*8    NBOP1
      REAL*8    NBOP2
      REAL*8    MFLOPS
      REAL*8    UMIN, UMAX
      REAL*8    VMIN, VMAX
      REAL*8    SISMIN, SISMAX


C
C             CORPS DU PROGRAMME
C             ------------------

      CALL OPENFILE                                                     0171

C
C     ACQUISITION DES PARAMETRES DE LA MODELISATION
C     ---------------------------------------------

C     WRITE (6,'('' ENTRER LE NB DE POINTS DU MAILLAGE CARRE (NP) ? '',$)')
      READ (4, *) NP                                                    0178
C     WRITE (6,'('' ENTRER LE NB DE PAS DE TEMPS TOTAL (NT) ? '',$)')
      READ (4, *) NT                                                    0180
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN ESPACE (H) ? '',$)')
      READ (4, *) H                                                     0182
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN TEMPS (DELTAT) ? '',$)')
      READ (4, *) DELTAT                                                0184
C     WRITE (6,'('' ENTRER LA POSITION EN X DE LA SOURCE (JS) ? '',$)')
      READ (4, *) JS                                                    0186
C     WRITE (6,'('' ENTRER LA POSITION EN Z DE LA SOURCE (IS) ? '',$)')
      READ (4, *) IS                                                    0188
C     WRITE (6,'('' ENTRER LA FREQUENCE DE LA SOURCE (F) ? '',$)')
      READ (4, *) F                                                     0190




      WRITE (1, 1100)                                                   0195
      WRITE (1, 1110)                                                   0196
      WRITE (1, 1120)                                                   0197
      WRITE (1, 1130) NP, NP                                            0198
      WRITE (1, 1135) NT                                                0199
      WRITE (1, 1140) IS, JS                                            0200
      WRITE (1, 1171) H                                                 0201
      WRITE (1, 1170) DELTAT                                            0202
      WRITE (1, 1180) F                                                 0203

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'STIMER', REAL*8 instead of REAL*4!
      CALL STIMER(W)                                                    0206
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0207
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0208
      TMESUR = TFIN-TINIT                                               0209
C////////////////END   FUNCTION TIMER/////////////////
C
C     INITIALISATION DES VARIABLES SCALAIRES
C     --------------------------------------
      KM = 1                                                            0214
      KP = 2                                                            0215
      G0 = 0.0D0                                                        0216


C     INITIALISATION DU CHAMP VITESSE
C     V(I,J)     = READ (Vi) (CAS D'UN MILIEU HETEROGENE)
C     -------------------------------------------------------

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0224
C////////////////END   FUNCTION TIMER/////////////////


      READ (3, *) NP                                                    0228
      READ (3, *) NP                                                    0229
      DO 21 I = 1, NP                                                   0230
         DO 22 J = 1, NP                                                0231
            READ (3, *) V(I,J)                                          0232
22          CONTINUE                                                    0233
21       CONTINUE                                                       0234


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0238
      T3CPU = TFIN-TINIT                                                0239
C////////////////END   FUNCTION TIMER/////////////////

      VMAX = V(1,1)                                                     0242
      VMIN = V(1,1)                                                     0243
      DO 112 I = 1, NP                                                  0244
         DO 122 J = 1, NP                                               0245
            IF (V(I,J).LT.VMIN) VMIN = V(I,J)                           0246
            IF (V(I,J).GT.VMAX) VMAX = V(I,J)                           0249
122         CONTINUE                                                    0252
112      CONTINUE                                                       0253
      WRITE (1, 1051) VMIN, VMAX                                        0254


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0258
C////////////////END   FUNCTION TIMER/////////////////


C     INITIALISATION DE LA SOLUTION U
C     U(.,.,t=0) = U(.,.,t=1) = 0
C     ET DES ENREGISTREMENTS 
C     SISMO (T=1) = 0.0
C     ------------------------------

      DO 10 K = 1, 2                                                    0268
         DO 20 J = 1, NP                                                0269
            DO 30 I = 1, NP                                             0270
               U(I,J,K) = 0.0D0                                         0271
30             CONTINUE                                                 0272
20          CONTINUE                                                    0273
10       CONTINUE                                                       0274


      DO 84 I = 1, NBTRAC                                               0277
         SISMO(I,1) = 0.0D0                                             0278
84       CONTINUE                                                       0279




C     INITIALISATION DES CONSTANTES LIEES AUX COINS INFERIEURS
C            V(I,J)  <--  moyenne harmonique sur 4 points
C            B(I,.,.)<--  cf declarations
C     ET AUX BORDS E-S-W
C            V(I,J)  <--  moyenne harmonique sur 2 points
C            B(I,.,.)<--  cf declarations
C     --------------------------------------------------------


C     CAS DES TROIS POINTS DU COIN E-S
C     --------------------------------
      C1 = 4.0D0/(1.0D0/V(NP-1,NP)+1.0D0/V(NP-1,NP-1)+1.0D0/V(NP-2,NP   0295
     &)+1.0D0/V(NP-2,NP-1))                                             0295
      W = C1*DELTAT                                                     0297
      B(NP-1,1,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0298
      B(NP-1,1,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0299

      C2 = 4.0D0/(1.0D0/V(NP,NP)+1.0D0/V(NP,NP-1)+1.0D0/V(NP-1,NP)+     0301
     &1.0D0/V(NP-1,NP-1))                                               0301
      W = C2*DELTAT                                                     0303
      B(NP,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                             0304
      B(NP,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                             0305

      C3 = 4.0D0/(1.0D0/V(NP,NP)+1.0D0/V(NP,NP-1)+1.0D0/V(NP-1,NP)+     0307
     &1.0D0/V(NP-1,NP-1))                                               0307
      W = C3*DELTAT                                                     0309
      B(NP-1,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0310
      B(NP-1,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0311

      V(NP-1,NP) = C1                                                   0313
      V(NP,NP) = C2                                                     0314
      V(NP,NP-1) = C3                                                   0315

C     CAS DES 3 POINTS DU COIN W-S
C     ----------------------------
      C1 = 4.0D0/(1.0D0/V(NP,2)+1.0D0/V(NP,3)+1.0D0/V(NP-1,2)+1.0D0/V   0319
     &(NP-1,3))                                                         0319
      W = C1*DELTAT                                                     0321
      B(2,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                              0322
      B(2,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                              0323

      C2 = 4.0D0/(1.0D0/V(NP,1)+1.0D0/V(NP,2)+1.0D0/V(NP-1,1)+1.0D0/V   0325
     &(NP-1,2))                                                         0325
      W = C2*DELTAT                                                     0327
      B(1,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                              0328
      B(1,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                              0329

      C3 = 4.0D0/(1.0D0/V(NP-1,1)+1.0D0/V(NP-1,2)+1.0D0/V(NP-2,1)+      0331
     &1.0D0/V(NP-2,2))                                                  0331
      W = C3*DELTAT                                                     0333
      B(NP-1,3,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0334
      B(NP-1,3,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0335

      V(NP,2) = C1                                                      0337
      V(NP,1) = C2                                                      0338
      V(NP-1,1) = C3                                                    0339


C     CAS DES BORDS   E - S - W
C     -------------------------
      DO 41 I = 2, NP-2                                                 0344
         V(I,NP) = 2.0D0/(1.0D0/V(I,NP)+1.0D0/V(I,NP-1))                0345
         W = V(I,NP)*DELTAT                                             0346
         B(I,1,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0347
         B(I,1,2) = 2.0D0*H/(W+H)                                       0348
         B(I,1,3) = W*W/(2.0D0*H*(W+H))                                 0349
41       CONTINUE                                                       0350

      DO 42 I = 3, NP-2                                                 0352
         V(NP,I) = 2.0D0/(1.0D0/V(NP,I)+1.0D0/V(NP-1,I))                0353
         W = V(NP,I)*DELTAT                                             0354
         B(I,2,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0355
         B(I,2,2) = 2.0D0*H/(W+H)                                       0356
         B(I,2,3) = W*W/(2.0D0*H*(W+H))                                 0357
42       CONTINUE                                                       0358

      DO 43 I = 2, NP-2                                                 0360
         V(I,1) = 2.0D0/(1.0D0/V(I,1)+1.0D0/V(I,2))                     0361
         W = V(I,1)*DELTAT                                              0362
         B(I,3,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0363
         B(I,3,2) = 2.0D0*H/(W+H)                                       0364
         B(I,3,3) = W*W/(2.0D0*H*(W+H))                                 0365
43       CONTINUE                                                       0366

C
C     INITIALISATION DES CONSTANTES LIEES AUX BORDS INTERNES
C     ------------------------------------------------------
      DO 51 I = 3, NP-1                                                 0371
         V(I,2) = (V(I,2)*DELTAT/H)**2                                  0372
51       CONTINUE                                                       0373

      DO 52 I = 3, NP-1                                                 0375
         V(I,NP-1) = (V(I,NP-1)*DELTAT/H)**2                            0376
52       CONTINUE                                                       0377

      DO 53 I = 3, NP-2                                                 0379
         V(NP-1,I) = (V(NP-1,I)*DELTAT/H)**2                            0380
53       CONTINUE                                                       0381


C     INITIALISATION DES CONSTANTES LIEES AU DOMAINE INTERIEUR
C            V(I,J) <--  1/12*((V(I,J)*DELTAT/H)**2)
C     --------------------------------------------------------
      DO 40 J = 3, NP-2                                                 0387
         DO 50 I = 3, NP-2                                              0388
            V(I,J) = (V(I,J)*DELTAT/H)**2/12.0D0                        0389
50          CONTINUE                                                    0390
40       CONTINUE                                                       0391


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0395
      T1CPU = TFIN-TINIT-TMESUR                                         0396
      WRITE (1, 1015) TMESUR                                            0397
      WRITE (1, 1010) T1CPU                                             0398

!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0400
C////////////////END   FUNCTION TIMER/////////////////

C     -----------------------------------------------------------
C     !     MODELISATION DE LA PROPAGATION DES ONDES            !
C     !               PAR EQUATION D'ONDE.                      !
C     !        RESOLUTION PAR DIFFERENCES FINIES.               !
C     -----------------------------------------------------------


C     ----------------------------
C     !     BOUCLE EN TEMPS      !
C     ----------------------------

      DO 70 N = 2, NT                                                   0414

C     PRISE EN COMPTE DE LA FONCTION SOURCE PENDANT UN TEMPS DE TMAX SEC.
C     Un = Un + SOURCE
C     ------------------------------------------------------------------
         W = F*(DBLE(N)*DELTAT-1.0D0/F)                                 0419
         IF (W**2.LT.DBLE(TMAX)) THEN                                   0420
            W = (W*PI)**2                                               0421
            G0 = (1.0D0-2.0D0*W)*DEXP(-W)                               0422
            U(IS,JS,KM) = U(IS,JS,KM)+G0*12.0D0*V(IS,JS)*H**2           0423
         ENDIF



C     --------------------------------------------------------
C     SAUVEGARDE DE LA FRANGE CONNEXE AUX BORDS POUR LE CALCUL
C     ULTERIEUR DE LA SOLUTION AUX BORDS
C     --------------------------------------------------------

         DO 71 I = 2, NP-1                                              0433
            UB(I,1) = U(I,NP-1,KP)                                      0434
            UB(I,2) = U(NP-1,I,KP)                                      0435
            UB(I,3) = U(I,2,KP)                                         0436
71          CONTINUE                                                    0437

C
C     ------------------------------------------------
C     SOLUTION SUR LE DOMAINE INTERIEUR
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 4 EN ESPACE
C     ------------------------------------------------

         DO 80 J = 3, NP-2                                              0445

C     levee des dependances pour forcer la vectorisation.
C     kp et km sont toujours different.
C DIR$ IVDEP

            DO 90 I = 3, NP-2                                           0451

               U(I,J,KP) = 2.0D0*U(I,J,KM)-U(I,J,KP)-V(I,J)*(60.0D0*U   0453
     &         (I,J,KM)-16.0D0*(U(I+1,J,KM)+U(I-1,J,KM)+U(I,J-1,KM)+U   0453
     &         (I,J+1,KM))+U(I+2,J,KM)+U(I-2,J,KM)+U(I,J-2,KM)+U(I,J+   0453
     &         2,KM))                                                   0453

90             CONTINUE                                                 0459
80          CONTINUE                                                    0460

C
C     ------------------------------------------------
C     SOLUTION SUR LES BORDS INTERIEURS
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 2 EN ESPACE
C     ------------------------------------------------

C DIR$ IVDEP
         DO 140 I = 3, NP-1                                             0469
            U(I,2,KP) = 2.0D0*U(I,2,KM)-U(I,2,KP)-V(I,2)*(4.0D0*U(I,2   0470
     &      ,KM)-(U(I+1,2,KM)+U(I-1,2,KM)+U(I,1,KM)+U(I,3,KM)))         0470
140         CONTINUE                                                    0474

C DIR$ IVDEP
         DO 141 I = 3, NP-1                                             0477
            U(I,NP-1,KP) = 2.0D0*U(I,NP-1,KM)-U(I,NP-1,KP)-V(I,NP-1)*   0478
     &      (4.0D0*U(I,NP-1,KM)-(U(I+1,NP-1,KM)+U(I-1,NP-1,KM)+U(I,NP   0478
     &      -2,KM)+U(I,NP,KM)))                                         0478
141         CONTINUE                                                    0482


C DIR$ IVDEP
         DO 142 I = 3, NP-2                                             0486
            U(NP-1,I,KP) = 2.0D0*U(NP-1,I,KM)-U(NP-1,I,KP)-V(NP-1,I)*   0487
     &      (4.0D0*U(NP-1,I,KM)-(U(NP,I,KM)+U(NP-2,I,KM)+U(NP-1,I-1,    0487
     &      KM)+U(NP-1,I+1,KM)))                                        0487
142         CONTINUE                                                    0491

C
C     --------------------------------------------------------
C     SOLUTION AU BORD EAST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 92 I = 3, NP-2                                              0498
            UINT(I) = B(I,1,1)*(U(I,NP,KP)+U(I,NP-1,KP))-UB(I,1)+B(I,   0499
     &      1,2)*(U(I,NP,KM)+U(I,NP-1,KM))+B(I,1,3)*(U(I+1,NP-1,KP)+U   0499
     &      (I+1,NP,KP)+U(I-1,NP-1,KP)+U(I-1,NP,KP))                    0499
92          CONTINUE                                                    0504

         DO 93 I = 3, NP-2                                              0506
            U(I,NP,KP) = UINT(I)                                        0507
93          CONTINUE                                                    0508

C
C     --------------------------------------------------------
C     SOLUTION AU BORD SOUTH. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 94 I = 3, NP-2                                              0515
            UINT(I) = B(I,2,1)*(U(NP,I,KP)+U(NP-1,I,KP))-UB(I,2)+B(I,   0516
     &      2,2)*(U(NP,I,KM)+U(NP-1,I,KM))+B(I,2,3)*(U(NP-1,I+1,KP)+U   0516
     &      (NP,I+1,KP)+U(NP-1,I-1,KP)+U(NP,I-1,KP))                    0516
94          CONTINUE                                                    0521

         DO 95 I = 3, NP-2                                              0523
            U(NP,I,KP) = UINT(I)                                        0524
95          CONTINUE                                                    0525

C
C     --------------------------------------------------------
C     SOLUTION AU BORD WEST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 96 I = 3, NP-2                                              0532
            UINT(I) = B(I,3,1)*(U(I,1,KP)+U(I,2,KP))-UB(I,3)+B(I,3,2)   0533
     &      *(U(I,1,KM)+U(I,2,KM))+B(I,3,3)*(U(I+1,2,KP)+U(I+1,1,KP)+   0533
     &      U(I-1,2,KP)+U(I-1,1,KP))                                    0533
96          CONTINUE                                                    0538

         DO 97 I = 3, NP-2                                              0540
            U(I,1,KP) = UINT(I)                                         0541
97          CONTINUE                                                    0542



C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP-1,NP,KP) ,  U(NP,NP-1,KP) ET U(NP-1,NP,KP)
C      -----------------------------------------------

         U(NP-1,NP,KP) = B(NP-1,1,1)*(U(NP-1,NP-1,KP)+U(NP-2,NP,KP))+   0551
     &   B(NP-1,1,2)*U(NP-1,NP,KM)                                      0551

         U(NP,NP-1,KP) = B(NP-1,2,1)*(U(NP,NP-2,KP)+U(NP-1,NP-1,KP))+   0554
     &   B(NP-1,2,2)*U(NP,NP-1,KM)                                      0554

         U(NP,NP,KP) = B(NP,2,1)*(U(NP,NP-1,KP)+U(NP-1,NP,KP))+B(NP,2   0557
     &   ,2)*U(NP,NP,KM)                                                0557


C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP,2,KP) ,  U(NP-1,1,KP) ET U(NP,1,KP)
C      -----------------------------------------------

         U(NP,2,KP) = B(2,2,1)*(U(NP,3,KP)+U(NP-1,2,KP))+B(2,2,2)*U(    0566
     &   NP,2,KM)                                                       0566

         U(NP-1,1,KP) = B(NP-1,3,1)*(U(NP-1,2,KP)+U(NP-2,1,KP))+B(NP-   0569
     &   1,3,2)*U(NP-1,1,KM)                                            0569

         U(NP,1,KP) = B(1,2,1)*(U(NP-1,1,KP)+U(NP,2,KP))+B(1,2,2)*U(    0572
     &   NP,1,KM)                                                       0572


C
C     ENREGISTREMENT DU SISMOGRAMME
C     -----------------------------
         DO 81 I = 1, NBTRAC                                            0579
            SISMO(I,N) = U(IS,NP-NBTRAC+I,KP)                           0580
81          CONTINUE                                                    0581


C     PERMUTATION A CHAQUE ITERATION DES PLANS ESPACE
C     -----------------------------------------------
C
         KM = KP                                                        0587
         KP = 3-KP                                                      0588

70       CONTINUE                                                       0590

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0593
      T2CPU = TFIN-TINIT-TMESUR                                         0594
      WRITE (1, 1000) T2CPU                                             0595

!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0597
C////////////////END   FUNCTION TIMER/////////////////

C
C     SORTIE FICHIER DU SISMOGRAMME
C     -----------------------------

      WRITE (2, *) NBTRAC                                               0604
      WRITE (2, *) NT                                                   0605
      DO 82 K = 1, NBTRAC                                               0606
         DO 83 J = 1, NT                                                0607
            WRITE (2, *) SISMO(K,J)                                     0608
83          CONTINUE                                                    0609
82       CONTINUE                                                       0610

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0613
      T3CPU = T3CPU+TFIN-TINIT-TMESUR                                   0614
      WRITE (1, 1020) T3CPU                                             0615
      WRITE (1, 1030) T1CPU+T2CPU+T3CPU                                 0616
C////////////////END   FUNCTION TIMER/////////////////

C
C     CALCUL DU NOMBRE DE MFLOPS
C     --------------------------

C     INITIALISATIONS
C     ---------------
      NBOP1 = DBLE(114.0+REAL(NP-3)*72.0+REAL((NP-4)*(NP-4))*4.0)       0625

C     RESOLUTION
C     ----------
      NBOP2 = DBLE(REAL(NT-1)*(REAL((NP-4)*(NP-4))*14.0+REAL(NP-3)*     0629
     &27.0+REAL(NP-4)*33.0+26.0))                                       0629


      MFLOPS = NBOP2/(T2CPU*1.0D06)                                     0633
      WRITE (1, 1060) MFLOPS                                            0634

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU)*1.0D06)                     0636
      WRITE (1, 1065) MFLOPS                                            0637

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU+T3CPU)*1.0D06)               0639
      WRITE (1, 1070) MFLOPS                                            0641


C
C     CALCUL DE STATISTIQUES SUR LE RESULTAT
C     --------------------------------------
      UMAX = U(1,1,KM)                                                  0647
      UMIN = U(1,1,KM)                                                  0648
      DO 110 J = 1, NP                                                  0649
         DO 120 I = 1, NP                                               0650
            IF (U(I,J,KM).LT.UMIN) UMIN = U(I,J,KM)                     0651
            IF (U(I,J,KM).GT.UMAX) UMAX = U(I,J,KM)                     0654
120         CONTINUE                                                    0657
110      CONTINUE                                                       0658
      WRITE (1, 1050) UMIN, UMAX                                        0659


      SISMAX = SISMO(1,1)                                               0662
      SISMIN = SISMO(1,1)                                               0663
      DO 111 I = 1, NBTRAC                                              0664
         DO 121 J = 1, NT                                               0665
            IF (SISMO(I,J).LT.SISMIN) SISMIN = SISMO(I,J)               0666
            IF (SISMO(I,J).GT.SISMAX) SISMAX = SISMO(I,J)               0669
121         CONTINUE                                                    0672
111      CONTINUE                                                       0673
      WRITE (1, 1055) SISMIN, SISMAX                                    0674



      WRITE (1, 1200)                                                   0678

      CLOSE (1)                                                         0680
      CLOSE (2)                                                         0681
      CLOSE (3)                                                         0682
      CLOSE (4)                                                         0683

      STOP                                                              0685


C     DECLARATIONS DE FORMATS DE SORTIE
C     ---------------------------------

1100  FORMAT(1X,'DEBUT DU PROGRAMME'//)                                 0691

1120  FORMAT(1X,'MODELISATION PAR EQUATION D"ONDES',/,1X,'SCHEMA D"ORDRE
     & 4 EN ESPACE ET 2 EN TEMPS'//)                                    0693
1130  FORMAT(1X,'TAILLE DU MAILLAGE NPXNP       : ',I4,'  X',I4)        0695
1135  FORMAT(1X,'NOMBRE DE PAS DE TEMPS         : ',I4)                 0696
1140  FORMAT(1X,'POSITION DE LA SOURCE          : (',I3,',',I3,')')     0697
1171  FORMAT(1X,'PAS DE DISCR. EN ESPACE (H)    : ',E12.5)              0698
1170  FORMAT(1X,'PAS DE DISCR. EN TEMPS (DELTAT): ',E12.5)              0699
1180  FORMAT(1X,'FREQUENCE DE LA SOURCE (F)     : ',E12.5)              0700
1051  FORMAT(1X,'MIN DE V:',E11.5,3X,'MAX DE V:  ',E11.5//)             0701
1200  FORMAT(1X,/,1X,'FIN DU PROGRAMME')                                0702

1000  FORMAT(1X,'TEMPS CPU DE LA RESOLUTION     (RESOL) : ',E15.5)      0704
1010  FORMAT(1X,'TEMPS CPU DES INITIALISATIONS   (INIT) : ',E15.5)      0705
1020  FORMAT(1X,'TEMPS CPU DES ENTREES/SORTIES    (E/S) : ',E15.5)      0706
1030  FORMAT(1X,'TEMPS CPU TOTAL       (RESOL+INIT+E/S) : ',E15.5//)    0707
1015  FORMAT(1X,'TEMPS CPU DE L"APPEL AU TIMER          : ',E15.5)      0708
1050  FORMAT(1X,'MIN DE U     :',E15.5,3X,'MAX DE U     : ',E15.5)      0709
1055  FORMAT(1X,'MIN DE SISMO :',E15.5,3X,'MAX DE SISMO : ',E15.5//)    0710
1060  FORMAT(1X,'MFLOPS CPU PARTIE VECTORIELLE  (RESOL) : ',E15.5)      0711
1065  FORMAT(1X,'MFLOPS CPU RESOLUTION     (RESOL+INIT) : ',E15.5)      0712
1070  FORMAT(1X,'MFLOPS CPU GLOBAL     (RESOL+INIT+E/S) : ',E15.5//)    0713




C/////////////////////////////////////////////////////////////////////
C
C   PARTIE SPECIFIQUE A CHAQUE MACHINE ET A CHAQUE MODELISATION
C 
C            - FORMATS DES COMMENTAIRES
C            - OUVERTURE DE FICHIERS
C            - FONCTIONS DE GESTION DES TIMERS
C
C/////////////////////////////////////////////////////////////////////


1110  FORMAT(1X,'*********************************************',/,1X,'  
     &     RESOLUTION SUR SUN 4                  ',/,1X,'     DOUBLE PRE
     &CISION (64 bits)              ',/,1X,'         VERSION STANDART   
     &                 ',/,1X,'                                         
     &    ',/,1X,'*********************************************'//)     0729

      END

C
C     OUVERTURE DES FICHIERS
C     ----------------------

      SUBROUTINE OPENFILE

      OPEN (UNIT=4,FILE='MODELES/param2.dat')                           0008

      OPEN (UNIT=3,FILE='MODELES/modele2.dat')                          0010

      OPEN (UNIT=1,FILE='SORTIES/stat2')                                0012

      OPEN (UNIT=2,FILE='SORTIES/sismo2')                               0014

      END

C
C     GESTION DU TIMER
C     ----------------

      SUBROUTINE STIMER (X)
C     INITIALISE LE TIMER - INUTILE SUR DE NOMBREUSES MACHINES
      END

      INTEGER FUNCTION TIME
      TIME = 0                                                          0003
      END
TYPE_CHECKER[GETIME] (put_summary) summary of 'GETIME': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[ONDE24] (put_summary) summary of 'ONDE24': 11 errors, 20 convertions., 113 simplifications
TYPE_CHECKER[OPENFILE] (put_summary) summary of 'OPENFILE': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[STIMER] (put_summary) summary of 'STIMER': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[TIME] (put_summary) summary of 'TIME': 0 errors, 0 convertions., 1 simplifications
