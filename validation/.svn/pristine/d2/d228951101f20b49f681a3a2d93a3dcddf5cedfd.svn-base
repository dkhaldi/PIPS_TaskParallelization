
Initial code

int main(int argc, char **argv)
{
   int i, n = 100;
   typedef int myarray[100];
   myarray x, y, t;

   for(i = 0; i <= n-1; i += 1)
      scanf("%d %d", &x[i], &y[i]);

   for(i = 0; i <= n-1; i += 1) {
      t[i] = x[i];
      x[i] = y[i];
      y[i] = t[i];
   }
   // Do not forget the printf nor the proper indexing of x and y, or
   // you will be surprized by crazy outputs... that are just as
   // correct or incorrect than your input code
   printf("%d %d", x[n-1], y[n-1]);
}

Code after scalarization

int main(int argc, char **argv)
{
   int i, n = 100;
   typedef int myarray[100];
   myarray x, y, t;

   for(i = 0; i <= n-1; i += 1)
      scanf("%d %d", &x[i], &y[i]);

   for(i = 0; i <= n-1; i += 1) {
      //PIPS generated variable
      register int t_0;
      t_0 = x[i];
      x[i] = y[i];
      y[i] = t_0;
   }
   // Do not forget the printf nor the proper indexing of x and y, or
   // you will be surprized by crazy outputs... that are just as
   // correct or incorrect than your input code
   printf("%d %d", x[n-1], y[n-1]);
}
