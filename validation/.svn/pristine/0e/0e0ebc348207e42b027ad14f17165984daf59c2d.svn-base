
Source code with proper effects

void complete01()
{
   // BEGIN BLOCK
   int i;                                                               /*0010*/
   {
      // BEGIN BLOCK
//             <    is written>: j
      int j = 0;                                                        /*0014*/
//             <    is read   >: i
//             <    is written>: i
      for (i = 0;i<10;i++)                                              /*0015*/
//             <    is read   >: j
//             <    is written>: j
         j++;                                                           /*0016*/
      // END BLOCK
   }
//             <    is read   >: i

   foo(i);                                                              /*0021*/
   // END BLOCK
}

Source code with cumulated effects

void complete01()
{
   // BEGIN BLOCK
   int i;                                                               /*0010*/
   {
//             <    is read   >: i
//             <    is written>: i
      // BEGIN BLOCK
//             <    is written>: j
      int j = 0;                                                        /*0014*/
//             <may be read   >: j
//             <may be written>: j
//             <    is read   >: i
//             <    is written>: i
      for (i = 0;i<10;i++)                                              /*0015*/
//             <    is read   >: j
//             <    is written>: j
         j++;                                                           /*0016*/
      // END BLOCK
   }
//             <    is read   >: i

   foo(i);                                                              /*0021*/
   // END BLOCK
}

Source code with transformers


//  T() {}

void complete01()
{

//  T() {}

   // BEGIN BLOCK

//  T() {}

   int i;                                                               /*0010*/
   {

//  T(i) {i==10}

      // BEGIN BLOCK

//  T(j) {j==0}

      int j = 0;                                                        /*0014*/

//  T(i,j) {i+j#init==j, 0<=i, i<=9}

      for (i = 0;i<10;i++)                                              /*0015*/

//  T(j) {j==j#init+1}

         j++;                                                           /*0016*/
      // END BLOCK
   }

//  T() {}


   foo(i);                                                              /*0021*/
   // END BLOCK
}

Source code with preconditions


//  P() {}

void complete01()
{

//  P() {}

   // BEGIN BLOCK

//  P() {}

   int i;                                                               /*0010*/
   {

//  P() {}

      // BEGIN BLOCK

//  P() {}

      int j = 0;                                                        /*0014*/

//  P(j) {j==0}

      for (i = 0;i<10;i++)                                              /*0015*/

//  P(i,j) {i==j, 0<=i, i<=9}

         j++;                                                           /*0016*/
      // END BLOCK
   }

//  P(i) {i==10}


   foo(i);                                                              /*0021*/
   // END BLOCK
}

Warnings

(activate_phase) Rule `C_PARSER' already active
PROGRAM_PRECONDITION[] (get_main_entity_name) No main function found, use "complete01" instead.
