setenv WS=loop03
delete $WS

setproperty ABORT_ON_USER_ERROR TRUE

create $WS $WS.c


echo Select some options to deal with the C Language:
echo Parse as C:
activate C_PARSER
echo Prettyprint the source as C, of course
setproperty PRETTYPRINT_LANGUAGE "C"

echo Do not display original number lines as comment:
setproperty PRETTYPRINT_STATEMENT_NUMBER FALSE

echo If possible, transform simple for-loops into do-loop Ã  la Fortran, simpler to analyze:
apply FOR_LOOP_TO_DO_LOOP[getimage]
echo Desugaring other for-loops into plain while-loops fot the time we improve semantics ameliorations in PIPS:
apply FOR_LOOP_TO_WHILE_LOOP[getimage]

echo Select the most precise analyses:
activate MUST_REGIONS
activate TRANSFORMERS_INTER_FULL
activate INTERPROCEDURAL_SUMMARY_PRECONDITION
activate PRECONDITIONS_INTER_FULL
activate REGION_CHAINS
echo Compute the intraprocedural preconditions at the same time as
echo   transformers and use them to improve the accuracy of expression
echo   and statement transformers:
setproperty SEMANTICS_COMPUTE_TRANSFORMERS_IN_CONTEXT TRUE
setproperty SEMANTICS_FIX_POINT_OPERATOR "derivative"

echo Try to restructure the code for more precision:
setproperty UNSPAGHETTIFY_TEST_RESTRUCTURING=TRUE
setproperty UNSPAGHETTIFY_RECURSIVE_DECOMPOSITION=TRUE


setproperty CONSTANT_PATH_EFFECTS FALSE

module getimage

echo
echo Transformers for "getimage" before privatization
echo

activate PRINT_CODE_TRANSFORMERS
display PRINTED_FILE
activate PRINT_CODE

echo
echo Preconditions for "getimage" before privatization
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE

echo
echo Privatize scalar variables on all the modules of the program:
echo

apply PRIVATIZE_MODULE[getimage]


setproperty PRETTYPRINT_ALL_PRIVATE_VARIABLES TRUE
setproperty PRETTYPRINT_BLOCKS TRUE


echo
echo Transformers for "getimage" after privatization
echo

activate PRINT_CODE_TRANSFORMERS
display PRINTED_FILE
activate PRINT_CODE

echo
echo Preconditions for "getimage" after privatization
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE
activate PRINT_CODE


setproperty PRETTYPRINT_ALL_PRIVATE_VARIABLES FALSE
setproperty PRETTYPRINT_BLOCKS FALSE

echo Ask for some statistics about the job to be done:

setproperty PARALLELIZATION_STATISTICS=TRUE

echo Ask for the parallelization of all the modules of the program with OpenMP output:

apply COARSE_GRAIN_PARALLELIZATION[getimage]
activate PRINT_CODE
display PRINTED_FILE[getimage]

echo Regenerate the sources from the PIPS transformed code:

apply UNSPLIT

close

echo
echo Warnings
echo

shell cat $WS.database/Warnings

#delete $WS

quit
