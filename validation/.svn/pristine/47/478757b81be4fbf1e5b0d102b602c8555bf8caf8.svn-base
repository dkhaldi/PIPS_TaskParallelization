!
! File HPFTEST54_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST54_parameters.h"
      INTEGER*4 TIME
      EXTERNAL TIME
      INTEGER*4 N
      PARAMETER (N = 500)
      INTEGER*4 TIMES
      PARAMETER (TIMES = 100)
      INTEGER ALPHA1, ALPHA2, ALPHA3, LALPHA1, LALPHA2, LALPHA3, PSI1
     &, PSI2, T LID, OLD, NEW, T1, T2, T3, T4, T5, I, K
      REAL*8 TEMP(1:N, 1:N, 1:2), X
      CALL HPFC INIT HOST
      PRINT *, 'HPFTEST54 RUNNING, THERMO'
c
c initialization
c
      PRINT *, 'INITIALIZING'
      T1 = TIME()
c
c
      PRINT *, 'RUNNING'
      T2 = TIME()
c
      NEW = 2
      DO K = 1, TIMES
         OLD = NEW
         NEW = 3-NEW
      ENDDO
c
c print results
c
      PRINT *, 'REDUCTION'
      T3 = TIME()
c
      X = HRED 1 HPFC REAL8 MAX()
c
      PRINT *, 'RESULTS:'
      T4 = TIME()
c
      PRINT *, 'MAX is ', X
10    FORMAT(F8.2,F8.2,F8.2,F8.2,F8.2)
! collecting distributed variable TEMP
      IF (1.LE.OLD.AND.OLD.LE.2) THEN
         PSI2 = 1
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = 2*PSI1+PSI2-2
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL8 BUFUPK
         DO ALPHA2 = 12, 60
            DO ALPHA1 = 2, 10
               ALPHA3 = OLD
               LALPHA1 = ALPHA1
               LALPHA2 = ALPHA2
               LALPHA3 = ALPHA3
               BUF INDEX = BUF INDEX+1
               TEMP(ALPHA1,ALPHA2,ALPHA3) = HPFC REAL8 BUFF(BUF INDEX
     &         )
            ENDDO
         ENDDO
      ENDIF
! end of collect
      DO I = 2, 10, 2
         WRITE (6, 10) TEMP(I,12,OLD), TEMP(I,24,OLD), TEMP(I,36,OLD)
     &   , TEMP(I,48,OLD), TEMP(I,60,OLD)
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      PRINT *, 'HPFTEST52 ENDED'
      T5 = TIME()
c
      PRINT *, 'Timing: init ', T2-T1, ' run ', T3-T2, ' red ', T4-T3
     &, ' IO ', T5-T4, ' total ', T5-T1
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST54_host.f
!
!
! File HPFTEST54_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST54
!
!
! initializing array TEMP, number 2
!
      NODIMA(2) = 3
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 500
      RANGEA(2, 1, 3) = 500
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 250
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 500
      RANGEA(2, 2, 3) = 500
!
      RANGEA(2, 2, 4) = 2
      RANGEA(2, 2, 5) = 250
      RANGEA(2, 2, 6) = 1
      RANGEA(2, 2, 7) = -1

      RANGEA(2, 3, 1) = 1
      RANGEA(2, 3, 2) = 2
      RANGEA(2, 3, 3) = 2
!
      RANGEA(2, 3, 4) = 0

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array NORTH, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 500
      RANGEA(1, 1, 3) = 500
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 250
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      ALIGN(1, 1, 1) = 0
      ALIGN(1, 1, 2) = 0
      ALIGN(1, 1, 3) = 1
      ALIGN(1, 2, 1) = 1
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for HPFTEST54_init.h
!
!
! File HPFTEST54_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST54_parameters.h"
      INTEGER*4 TIME
      EXTERNAL TIME
      INTEGER*4 N
      PARAMETER (N = 500)
      INTEGER*4 TIMES
      PARAMETER (TIMES = 100)
      INTEGER ALPHA1, ALPHA2, ALPHA3, LALPHA1, LALPHA2, LALPHA3, PSI1
     &, PSI2, I_10, I_11, I_12, I_13, I_14, I_15, I_16, I_17, I_18, 
     &I_19, I_20, I_21, I_22, I_23, I_24, I_25, I_26, I_27, I_28, 
     &I_29, I_30, I_31, I_4, I_5, I_6, I_7, I_8, I_9, OLD, NEW, T1, 
     &T2, T3, T4, T5, I, K
      REAL*8 TEMP(0:251, 0:251, 1:2), NORTH(1:250), X
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_29, I_30, I_31, 1, N, 1, 2)
      CALL HPFC LOOP BOUNDS(I_25, I_26, I_27, 2, N-1, 2, 1)
      CALL HPFC LOOP BOUNDS(I_21, I_22, I_23, 2, N-1, 2, 2)
      CALL HPFC LOOP BOUNDS(I_17, I_18, I_19, 2, N, 2, 1)
      CALL HPFC LOOP BOUNDS(I_13, I_14, I_15, 1, N, 2, 2)
      CALL HPFC LOOP BOUNDS(I_9, I_10, I_11, 1, N, 2, 2)
      CALL HPFC LOOP BOUNDS(I_5, I_6, I_7, 1, N, 1, 2)
      T1 = TIME()
c
      IF (MY POS(1,1).EQ.1) THEN
         DO I_4 = I_5, I_6
            NORTH(I_4) = 100.0
         ENDDO
      ENDIF
      DO K = 1, 2
         IF (MY POS(1,1).EQ.1) THEN
            DO I_8 = I_9, I_10
               TEMP(1,I_8,K) = NORTH(I_8)
            ENDDO
         ENDIF
         DO I_12 = I_13, I_14
            DO I_16 = I_17, I_18
               TEMP(I_16,I_12,K) = 10.0
            ENDDO
         ENDDO
      ENDDO
      T2 = TIME()
c
      NEW = 2
      DO K = 1, TIMES
         OLD = NEW
         NEW = 3-NEW
! P(1:2, 2) send TEMP(1:250, 1, X) to (-1)
         IF (MY POS(2,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC REAL8 PACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 1, 250, 1, 1, 1, 1, OLD, OLD, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1:2, 1) send TEMP(1:250, 250, X) to (+1)
         IF (MY POS(2,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC REAL8 PACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 1, 250, 1, 250, 250, 1, OLD, OLD, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(2, 1:2) send TEMP(1, 1:250, X) to (-2)
         IF (MY POS(1,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-2)
            CALL HPFC REAL8 PACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 1, 1, 1, 1, 250, 1, OLD, OLD, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1, 1:2) send TEMP(250, 1:250, X) to (+2)
         IF (MY POS(1,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(2)
            CALL HPFC REAL8 PACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 250, 250, 1, 1, 250, 1, OLD, OLD, 1)
            CALL HPFC SNDTO N
         ENDIF
! P(1:2, 1) receive TEMP(1:250, 251, X) from (+1)
         IF (MY POS(2,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(1)
            CALL HPFC RCVFR N
            CALL HPFC REAL8 UNPACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 1, 250, 1, 251, 251, 1, OLD, OLD, 1)
         ENDIF
! P(1:2, 2) receive TEMP(1:250, 0, X) from (-1)
         IF (MY POS(2,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-1)
            CALL HPFC RCVFR N
            CALL HPFC REAL8 UNPACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 1, 250, 1, 0, 0, 1, OLD, OLD, 1)
         ENDIF
! P(1, 1:2) receive TEMP(251, 1:250, X) from (+2)
         IF (MY POS(1,1).EQ.1) THEN
            CALL HPFC CMPNEIGHBOUR(2)
            CALL HPFC RCVFR N
            CALL HPFC REAL8 UNPACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 251, 251, 1, 1, 250, 1, OLD, OLD, 1)
         ENDIF
! P(2, 1:2) receive TEMP(0, 1:250, X) from (-2)
         IF (MY POS(1,1).EQ.2) THEN
            CALL HPFC CMPNEIGHBOUR(-2)
            CALL HPFC RCVFR N
            CALL HPFC REAL8 UNPACK 3(TEMP, HPFTEST54 TEMP LO1, 
     &      HPFTEST54 TEMP UP1, HPFTEST54 TEMP LO2, 
     &      HPFTEST54 TEMP UP2, HPFTEST54 TEMP LO3, 
     &      HPFTEST54 TEMP UP3, 0, 0, 1, 1, 250, 1, OLD, OLD, 1)
         ENDIF
         DO I_20 = I_21, I_22
            DO I_24 = I_25, I_26
               TEMP(I_24,I_20,NEW) = 0.25*(TEMP(I_24-1,I_20,OLD)+TEMP
     &         (I_24+1,I_20,OLD)+TEMP(I_24,I_20-1,OLD)+TEMP(I_24,I_20
     &         +1,OLD))
            ENDDO
         ENDDO
      ENDDO
      T3 = TIME()
c
      IF (MY POS(1,1).EQ.1) THEN
         DO I_28 = I_29, I_30
            NORTH(I_28) = TEMP(2,I_28,OLD)
         ENDDO
      ENDIF
      X = NRED 1 HPFC REAL8 MAX(NORTH, 1, HPFTEST54 NORTH LO1, 
     &HPFTEST54 NORTH UP1, 1, N)
      T4 = TIME()
! collecting distributed variable TEMP
      IF (1.LE.OLD.AND.OLD.LE.2) THEN
         PSI1 = MY POS(1,1)
         PSI2 = MY POS(2,1)
         IF (PSI2.EQ.1) THEN
            BUF INDEX = 0
            SEND NOT INITIALIZED = .TRUE.
            DO ALPHA2 = 12, 60
               DO ALPHA1 = 2, 10
                  ALPHA3 = OLD
                  LALPHA1 = ALPHA1
                  LALPHA2 = ALPHA2
                  LALPHA3 = ALPHA3
                  BUF INDEX = BUF INDEX+1
                  HPFC REAL8 BUFF(BUF INDEX) = TEMP(LALPHA1,LALPHA2,
     &            LALPHA3)
               ENDDO
            ENDDO
            CALL HPFC REAL8 BUFPCK
            CALL HPFC SND TO HOST
         ENDIF
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      T5 = TIME()
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST54_node.f
!
!
! File HPFTEST54_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST54
!
      integer 
     $    HPFTEST54 TEMP LO1,
     $    HPFTEST54 TEMP UP1
      parameter(HPFTEST54 TEMP LO1 = 0)
      parameter(HPFTEST54 TEMP UP1 = 251)
      integer 
     $    HPFTEST54 TEMP LO2,
     $    HPFTEST54 TEMP UP2
      parameter(HPFTEST54 TEMP LO2 = 0)
      parameter(HPFTEST54 TEMP UP2 = 251)
      integer 
     $    HPFTEST54 TEMP LO3,
     $    HPFTEST54 TEMP UP3
      parameter(HPFTEST54 TEMP LO3 = 1)
      parameter(HPFTEST54 TEMP UP3 = 2)
      integer 
     $    HPFTEST54 NORTH LO1,
     $    HPFTEST54 NORTH UP1
      parameter(HPFTEST54 NORTH LO1 = 1)
      parameter(HPFTEST54 NORTH UP1 = 250)
!
! That is all for HPFTEST54_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 500
      RANGET(1, 1, 3) = 500

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 500
      RANGET(1, 2, 3) = 500

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 250
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 250
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
