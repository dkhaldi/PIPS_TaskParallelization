void compute_loop(int a[100000], int b[100000], int c[100000])
{
   int i;
   for(i = 0; i <= 99999; i += 1)
      a[i] += b[i]+c[i];
}

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=99999}>

void compute_seq(int a[100000], int b[100000], int c[100000])
{
   int i;

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=99999}>

   for(i = 0; i <= 99999; i += 1)

//  <a[PHI1]-OUT-MAY-{PHI1==i, 0<=i, i<=99999}>

      a[i] += b[i]+c[i];
}
void loop()
{
   float i = 0;
   int a[100000], b[100000], c[100000];
   for(i = 0; i <= 0.2; i += 0.1)

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=99999}>

      compute_loop(a, b, c);
}
int main()
{
   loop();
   sequential();
}






/* The two following functions are identical, only the call site changes */
void compute_seq(int a[100000], int b[100000], int c[100000]);

void compute_loop(int a[100000], int b[100000], int c[100000]);


/* Here we simply call two time the "compute" function sequentially */
void sequential();


/* Here we call two time the "compute" function, but with a loop */
void loop();



int main();
void sequential()
{
   int a[100000], b[100000], c[100000];

//  <a[PHI1]-OUT-MAY-{0<=PHI1, PHI1<=99999}>

   compute_seq(a, b, c);
   compute_seq(a, b, c);
}
