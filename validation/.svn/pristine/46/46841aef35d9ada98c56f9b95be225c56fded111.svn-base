
C
C FPPPP BENCHMARK
C
C MODIFIED 8/21/89 BY MIKE GREENFIELD/DIGITAL
C CHANGED ALL G MATH FUNCTIONS TO IN LINE
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS,AON
      COMMON /IO/     IN,IOUT,IPUNCH
      COMMON /IOP/    IOP(50)
      COMMON /MOL/    NATOMS,ICHARG,MULTIP,NAE,NBE,NE,NBASIS,
     $                IAN(401),ATMCHG(400),C(1200)
      COMMON/B/EXX(1200),C1(1200),C2(1200),C3(1200),
     $         X(400),Y(400),Z(400),JAN(400),SHELLA(400),SHELLN(400),
     $         SHELLT(400),SHELLC(400),AOS(400),AON(400),NSHELL,MAXTYP
      DIMENSION C4(400),SHLADF(400)
      COMMON /COR/ CORE(40000)
      EQUIVALENCE(C4(1),C3(401)),(SHLADF(1),C3(801))
      DATA IBLANK/0/
 1000 FORMAT(' *** L702 STAND-ALONE TEST ***'/' NATOMS=',I2)
C
C     LOAD /IO/
C
      IN=5
      IOUT=6
      IPUNCH=7
C
C     LOAD /IOP/
C
      DO 5 I=1,50
    5 IOP(I)=0
C
C     LOAD /MOL/
C
      READ(5,*) NATOMS
      WRITE(IOUT,1000) NATOMS
      READ(5,*) ICHARG
      READ(5,*) MULTIP

      NE=6*NATOMS
      NAE=3*NATOMS
      NBE=NAE

C*DJS >>>>>
C
C     COMPUTE THE APPROXIMATE CUBE ROOT OF THE NUMBER OF ATOMS
C
      IBOXX=1
      DO 991 I=1,NATOMS
        IF (IBOXX*IBOXX*IBOXX.GT.NATOMS) GO TO 992
        IBOXX=IBOXX+1
 991  CONTINUE
 992  CONTINUE
C
C     MAKE THE X AND Y CELL DIMENSIONS DIFFERENT BY 1
C
      IBOXY=IBOXX
      IBOXX=IBOXY-1
C
C     SET UP (VERY CRUDE) RANDOM NUMBER GENERATOR
C
      READ(5,*) ISEED
      READ(5,*) IM
      READ(5,*) IA
      READ(5,*) IC
C
C     LOOP OVER ATOMS AND COMPUTE COORDINATES AS SITES ON AN ORTHORHOMBIC
C     LATTICE WITH A GAUSSIAN DEVIATION
C
C     6/22/95 - JWR for SPEC: Initialization of JRAN

      JRAN=0
      DO 10 I=1,NATOMS
      IAN(I)=6
      ATMCHG(I)=6.D0
      IX=(I-1)/(IBOXX*IBOXY)
      IY=(I-IX*IBOXX*IBOXY-1)/IBOXY
      IZ=I-(IX*IBOXX*IBOXY)-(IY*IBOXY)-1
      JRAN=MOD(JRAN*IA+IC,IM)
      DX=DBLE(JRAN)/DBLE(IM)-0.5D0
      JRAN=MOD(JRAN*IA+IC,IM)
      DY=DBLE(JRAN)/DBLE(IM)-0.5D0
      JRAN=MOD(JRAN*IA+IC,IM)
      DZ=DBLE(JRAN)/DBLE(IM)-0.5D0
      C(3*I-2)=1.7D0*IX+0.07D0*IY+0.01D0*DX
      C(3*I-1)=1.8D0*IY+0.03D0*IZ+0.01D0*DY
      C(3*I)  =1.9D0*IZ+0.01D0*IX+0.01D0*DZ
   10 CONTINUE
C
C     WRITE (IOUT,1010) (C(I),I=1,3*NATOMS)
C1010 FORMAT(3X,3F15.8)

C*DJS <<<<

C      NAT3=3*NATOMS
C      WRITE(IOUT,1010) (C(I),I=1,NAT3)
C 1010 FORMAT(3X,3F15.8)
C
C     LOAD /B/
C
      NSHELL=2*NATOMS
      READ(5,*) MAXTYP
      READ(5,*) NBASIS
      READ(5,*) NGAUS
      DO 20 I=1,NATOMS
      EXX(6*I-5)=64.D0
      EXX(6*I-4)=32.D0
      EXX(6*I-3)= 8.D0
      EXX(6*I-2)= 4.D0
      EXX(6*I-1)= 2.D0
      EXX(6*I)  = 1.D0
      C1(6*I-5)=0.3D0
      C1(6*I-4)=0.3D0
      C1(6*I-3)=0.3D0
      C1(6*I-2)=0.3D0
      C1(6*I-1)=0.3D0
      C1(6*I)  =0.3D0
      C2(6*I-5)=0.0D0
      C2(6*I-4)=0.0D0
      C2(6*I-3)=0.0D0
      C2(6*I-2)=0.3D0
      C2(6*I-1)=0.3D0
      C2(6*I)  =0.3D0
      X(2*I-1)=C(3*I-2)
      X(2*I)  =C(3*I-2)
      Y(2*I-1)=C(3*I-1)
      Y(2*I)  =C(3*I-1)
      Z(2*I-1)=C(3*I)
      Z(2*I)  =C(3*I)
      JAN(2*I-1)=I
      JAN(2*I)  =I
      SHELLA(2*I-1)=NGAUS
      SHELLA(2*I)  =NGAUS+3
      NGAUS=NGAUS+6
      SHELLN(2*I-1)=3
      SHELLN(2*I)=3
      SHELLT(2*I-1)=0
      SHELLT(2*I)=1
      SHELLC(2*I-1)=0
      SHELLC(2*I)=0
      AOS(2*I-1)=NBASIS+1
      AOS(2*I)  =NBASIS+2
      NBASIS=NBASIS+5
      AON(2*I-1)=IBLANK
      AON(2*I)  =IBLANK
   20 CONTINUE
      SHELLA(NSHELL+1)=NGAUS
      AOS(NSHELL+1)=NBASIS+1
C*DJS
C     WRITE(IOUT,*) (SHELLA(I),I=1,NSHELL)
C     WRITE(IOUT,*) (SHELLT(I),I=1,NSHELL)
C     WRITE(IOUT,*) (SHELLN(I),I=1,NSHELL)
C     WRITE(IOUT,*) (SHELLC(I),I=1,NSHELL)
C     WRITE(IOUT,*) (   AOS(I),I=1,NSHELL)
C     WRITE(IOUT,*) (   JAN(I),I=1,NSHELL)
C     WRITE(IOUT,*) (     X(I),I=1,NSHELL)
C     WRITE(IOUT,*) (     Y(I),I=1,NSHELL)
C     WRITE(IOUT,*) (     Z(I),I=1,NSHELL)
C     WRITE(IOUT,*) (EXX(3*I-2),EXX(3*I-1),EXX(3*I),I=1,NSHELL)
C     WRITE(IOUT,*) ( C1(3*I-2), C1(3*I-1), C1(3*I),I=1,NSHELL)
C     WRITE(IOUT,*) ( C2(3*I-2), C2(3*I-1), C2(3*I),I=1,NSHELL)
C*DJS
C
      CALL D2ESP(CORE)
      STOP
      END


