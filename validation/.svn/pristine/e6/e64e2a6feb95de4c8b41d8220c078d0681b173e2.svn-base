setenv WS=warning05
delete $WS
create $WS $WS.c 

setproperty ABORT_ON_USER_ERROR TRUE

setproperty MEMORY_EFFECTS_ONLY FALSE

setproperty PRETTYPRINT_SCALAR_REGIONS TRUE
#setproperty PRETTYPRINT_STATEMENT_NUMBER TRUE

# To obtain rapidly problems with zero-divide
setproperty SEMANTICS_COMPUTE_TRANSFORMERS_IN_CONTEXT TRUE
# To use the correct division analysis, this property must be set to false:
setproperty SEMANTICS_ASSUME_POSITIVE_REMAINDERS FALSE
# Note: the default division analysis does not exploit the
# precondition to evaluate the divisor

activate MUST_REGIONS

#echo
#echo Initial Code
#echo
#display PRINTED_FILE[$WS]

#echo
#echo PROPER effect for "$WS"
#echo
#activate PRINT_CODE_PROPER_EFFECTS
#display PRINTED_FILE[$WS]

#echo
#echo CUMULATED effect for "$WS"
#echo
#activate PRINT_CODE_CUMULATED_EFFECTS
#display PRINTED_FILE[$WS]

#echo
#echo IN effect for "$WS"
#echo
#activate PRINT_CODE_IN_EFFECTS
#display PRINTED_FILE[$WS]

#echo
#echo OUT effect for "$WS"
#echo
#activate PRINT_CODE_OUT_EFFECTS
#display PRINTED_FILE[$WS]

echo
echo TRANSFORMERS for "$WS"
echo
activate PRINT_CODE_TRANSFORMERS
display PRINTED_FILE[$WS]

echo
echo PRECONDITIONS for "$WS"
echo
activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[$WS]

echo
echo REGIONS for "$WS"
echo
activate PRINT_CODE_PROPER_REGIONS
display PRINTED_FILE[$WS]

echo
echo REGIONS for "$WS"
echo
activate PRINT_CODE_REGIONS
display PRINTED_FILE[$WS]

echo
echo IN regions for "$WS"
echo
activate PRINT_CODE_IN_REGIONS
display PRINTED_FILE[$WS]

echo
echo OUT regions for "$WS"
echo
activate PRINT_CODE_OUT_REGIONS
display PRINTED_FILE[$WS]

close
echo
echo Warnings: none expected
echo
shell cat $WS.database/Warnings

delete $WS
quit
