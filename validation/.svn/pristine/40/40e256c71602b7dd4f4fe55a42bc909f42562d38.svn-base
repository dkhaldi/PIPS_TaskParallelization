Compute the intraprocedural preconditions at the same time as
transformers and use them to improve the accuracy of expression
and statement transformers:

Transformers for "main"


//  T(main) {main==0}

int main()
{

//  T(i,j) {i==0, j==0}

   int i = 0, j = 0;
   //float x = 2.12;

//  T() {i==0, j==0}

   float b[10][10];

//  T(i,j) {i#init==0, j#init==0, 0<=i, i<=9}


   for(i = 0; i <= 9; i += 1)

//  T(j) {0<=i, i<=9, 0<=j, j<=9}

      for(j = 0; j <= 9; j += 1)

//  T() {0<=i, i<=9, 0<=j, j<=9}

         b[i][j] = 0.0;

//  T(main) {i==10, j==10, main==0}


   return 0;
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   int i = 0, j = 0;
   //float x = 2.12;

//  P(i,j) {i==0, j==0}

   float b[10][10];

//  P(i,j) {i==0, j==0}


   for(i = 0; i <= 9; i += 1)

//  P(i,j) {0<=i, i<=9}

      for(j = 0; j <= 9; j += 1)

//  P(i,j) {0<=i, i<=9, 0<=j, j<=9}

         b[i][j] = 0.0;

//  P(i,j) {i==10, j==10}


   return 0;
}

Transformers for "main" after privatization (i.e. when preconditions are available)


//  T(main) {main==0}

int main()
{

//  T(i,j) {i==0, j==0}

   int i = 0, j = 0;
   //float x = 2.12;

//  T() {i==0, j==0}

   float b[10][10];

//  T(i,j) {i#init==0, j#init==0, 0<=i, i<=9}


   for(i = 0; i <= 9; i += 1)

//  T(j) {0<=i, i<=9, 0<=j, j<=9}

      for(j = 0; j <= 9; j += 1)

//  T() {0<=i, i<=9, 0<=j, j<=9}

         b[i][j] = 0.0;

//  T(main) {i==10, j==10, main==0}


   return 0;
}
