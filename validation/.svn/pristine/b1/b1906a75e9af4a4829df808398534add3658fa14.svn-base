
Symbol table for main

main

Declarations for module "main" with type "() -> int"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "block_scope07!:*STATIC*" with type "area" with size 0
	Declared entity "main:*DYNAMIC*" with type "area" with size 18
	Declared entity "main:*HEAP*" with type "area" with size 0
	Declared entity "main:*STACK*" with type "area" with size 0
	Declared entity "main:*STATIC*" with type "area" with size 0
	Declared entity "main:0`1`i" with type "variable" "int"
	Declared entity "main:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "main:0`__func__" with type "variable" "char *"
	Declared entity "main:0`k" with type "variable" "int"
	Declared entity "main:main" with type "variable" "int"

* empty extern declaration list *


Layout for return variable:

	Variable "main:main"	size = 4

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	* empty area *


Layout for memory area "block_scope07!:*STATIC*" of size 0:
	* empty area *


Layout for memory area "main:*DYNAMIC*" of size 18:
	Variable "main:0`k"	offset = 10	size = 4
	Variable "main:0`1`i"	offset = 14	size = 4
	Variable "main:0`__func__"	offset = 0	size = 5
	Variable "main:0`__FUNCTION__"	offset = 5	size = 5


Layout for memory area "main:*HEAP*" of size 0:
	* empty area *


Layout for memory area "main:*STACK*" of size 0:
	* empty area *


Layout for memory area "main:*STATIC*" of size 0:
	* empty area *

End of declarations for module main


Parser output

extern int main();

int main()
{
   int k;
   if (1) {
      int i;
      i = 1;
   }
}

Controlizer output

int main()
{
   int k;
   if (1) {
      int i;
      i = 1;
   }
}

