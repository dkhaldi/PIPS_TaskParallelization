
Initial code

      PROGRAM FOO
      INTEGER*4 I, J, K
      REAL*4 F, G, H
      REAL*8 X, Y, Z
      I = 1                                                             0005
      J = 2                                                             0006
      K = 3                                                             0007
      F = 1                                                             0008
      G = 2                                                             0009
      H = 3                                                             0010
      X = 1                                                             0011
      Y = 2                                                             0012
      Z = 3                                                             0013
      I = MIN(I, J, K)                                                  0014
      I = MIN0(I, J, K)                                                 0015
      F = AMIN1(F, G, H)                                                0016
      X = DMIN1(X, Y, Z)                                                0017
      I = MIN1(F, G, H)                                                 0018
      F = AMIN0(I, J, K)                                                0019
      END
/* C pretty print for module FOO. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

int
main (int argc, char *argv[])
{
  int i;
  int j;
  int k;
  float f;
  float g;
  float h;
  double x;
  double y;
  double z;

  i = 1;
  j = 2;
  k = 3;
  f = 1;
  g = 2;
  h = 3;
  x = 1;
  y = 2;
  z = 3;
  i = crough_min (crough_min (i, j), k);
  i = crough_min (crough_min (i, j), k);
  f = crough_min (crough_min (f, g), h);
  x = crough_min (crough_min (x, y), z);
  i = crough_min (crough_min (f, g), h);
  f = crough_min (crough_min (i, j), k);
  return 0;
}
