
Source code with transformers


//  T() {}

void modulo14(void)
{

//  T(l) {l==1}

   int i, j, k, l = 1, mi, mj, mk;

//  T(l,mi,mj,mk) {l==1, l#init==1}

   if (3*i-2*j==-1&&l==1&&k==j+2&&l==1&&3*i-2*k==-5)

//  T(l,mi,mj,mk) {3i==2j-1, j==k-2, l==1, l#init==1}

      if (l==1&&i>=0&&j>=0&&k>=0) {

//  T(mi) {3i==2j-1, j==k-2, l==1, mi==1, 0<=i}

         mi = i%2;

//  T(mj) {3i==2j-1, j==k-2, l==1, mi==1, mj==2, 0<=i}

         mj = j%3;

//  T(mk) {3i==2j-1, j==k-2, l==1, mi==1, mj==2, mk==1, 0<=i}

         mk = k%3;

//  T(l) {3i==2j-1, j==k-2, l==1, l#init==1, mi==1, mj==2, mk==1,
//    0<=i}

         l = 1;
      }

//  T() {l==1}

   return;
}

//  P() {}

void modulo14(void)
{

//  P() {}

   int i, j, k, l = 1, mi, mj, mk;

//  P(l) {l==1}

   if (3*i-2*j==-1&&l==1&&k==j+2&&l==1&&3*i-2*k==-5)

//  P(l) {3i==2j-1, j==k-2, l==1}

      if (l==1&&i>=0&&j>=0&&k>=0) {

//  P(l) {3i==2j-1, j==k-2, l==1, 1<=j}

         mi = i%2;

//  P(l,mi) {3i==2j-1, j==k-2, l==1, mi==1, 1<=j}

         mj = j%3;

//  P(l,mi,mj) {3i==2j-1, j==k-2, l==1, mi==1, mj==2, 1<=j}

         mk = k%3;

//  P(l,mi,mj,mk) {3i==2j-1, j==k-2, l==1, mi==1, mj==2, mk==1, 1<=j}

         l = 1;
      }

//  P(l,mi,mj,mk) {l==1}

   return;
}
