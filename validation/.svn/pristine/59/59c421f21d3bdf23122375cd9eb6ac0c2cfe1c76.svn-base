
Proper effects

int main()
{
   int i;
//             <    is written>: j
   int j = 2;
//             <    is read   >: i
//             <    is written>: k
   int k = i;
//             <    is read   >: j
//             <    is written>: j l
   int l = j++;
//             <    is written>: m
   int m = 4;
//             <    is read   >: m
//             <    is written>: n
   int n = m;
//             <    is written>: i

   i = 5;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i j k l m n stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);
   return 0;
}

Cumulated effects 

//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
int main()
{
   int i;
//             <    is written>: j
   int j = 2;
//             <    is read   >: i
//             <    is written>: k
   int k = i;
//             <    is read   >: j
//             <    is written>: j l
   int l = j++;
//             <    is written>: m
   int m = 4;
//             <    is read   >: m
//             <    is written>: n
   int n = m;
//             <    is written>: i

   i = 5;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i j k l m n stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);
//             <    is read   >: __IO_EFFECTS:LUNS[1]
   return 0;
}

Transformers


//  T(main) {main==0}

int main()
{

//  T() {}

   int i;

//  T(j) {j==2}

   int j = 2;

//  T(k) {i==k}

   int k = i;

//  T(j,l) {j==j#init+1, j==l+1}

   int l = j++;

//  T(m) {m==4}

   int m = 4;

//  T(n) {m==n}

   int n = m;

//  T(i) {i==5}


   i = 5;

//  T() {}

   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);

//  T(main) {main==0}

   return 0;
}

Preconditions


//  P() {}

int main()
{

//  P() {}

   int i;

//  P() {}

   int j = 2;

//  P(j) {j==2}

   int k = i;

//  P(j,k) {i==k, j==2}

   int l = j++;

//  P(j,k,l) {i==k, j==3, l==2}

   int m = 4;

//  P(j,k,l,m) {i==k, j==3, l==2, m==4}

   int n = m;

//  P(j,k,l,m,n) {i==k, j==3, l==2, m==4, n==4}


   i = 5;

//  P(i,j,k,l,m,n) {i==5, j==3, l==2, m==4, n==4}

   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);

//  P(i,j,k,l,m,n) {i==5, j==3, l==2, m==4, n==4}

   return 0;
}
