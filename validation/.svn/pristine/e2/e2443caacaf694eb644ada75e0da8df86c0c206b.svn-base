
Points-to for "foo"

int foo(float (*b)[3])
{
   float c;
   (*b)[3] = 2.0;
   c = (*b)[3];
   b[1][3] = 2.0;
   c = b[1][3];
   (*b)[3]++;
   (*b)[3] += 5.0;
   b[1][3]++;
   b[1][3] += 5.0;

   return 1;
}

Proper effects for "foo"

int foo(float (*b)[3])
{
   float c;
//             <    is read   >: b
//             <    is written>: _b_1[0][3]
   (*b)[3] = 2.0;
//             <    is read   >: _b_1[0][3] b
//             <    is written>: c
   c = (*b)[3];
//             <    is read   >: b
//             <    is written>: _b_1[1][3]
   b[1][3] = 2.0;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: c
   c = b[1][3];
//             <    is read   >: _b_1[0][3] b
//             <    is written>: _b_1[0][3]
   (*b)[3]++;
//             <    is read   >: _b_1[0][3] b
//             <    is written>: _b_1[0][3]
   (*b)[3] += 5.0;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: _b_1[1][3]
   b[1][3]++;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: _b_1[1][3]
   b[1][3] += 5.0;

   return 1;
}

Cumulated effects for "foo"

//             <may be read   >: _b_1[*][3]
//             <may be written>: _b_1[*][3]
//             <    is read   >: b
int foo(float (*b)[3])
{
   float c;
//             <    is read   >: b
//             <    is written>: _b_1[0][3]
   (*b)[3] = 2.0;
//             <    is read   >: _b_1[0][3] b
//             <    is written>: c
   c = (*b)[3];
//             <    is read   >: b
//             <    is written>: _b_1[1][3]
   b[1][3] = 2.0;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: c
   c = b[1][3];
//             <    is read   >: _b_1[0][3] b
//             <    is written>: _b_1[0][3]
   (*b)[3]++;
//             <    is read   >: _b_1[0][3] b
//             <    is written>: _b_1[0][3]
   (*b)[3] += 5.0;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: _b_1[1][3]
   b[1][3]++;
//             <    is read   >: _b_1[1][3] b
//             <    is written>: _b_1[1][3]
   b[1][3] += 5.0;

   return 1;
}

Proper effects for "main"

int main()
{
   float a[5][3], ret;
//             <may be read   >: a[*][3]
//             <may be written>: a[*][3]
//             <    is written>: ret

   ret = foo(a);

   return 1;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
