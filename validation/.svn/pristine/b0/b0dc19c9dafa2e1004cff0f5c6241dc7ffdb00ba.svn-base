!
! File HPFTEST09_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST09_parameters.h"
      INTEGER I_5, I_3, I_1, J, K, L, M, N, I_0
      CALL HPFC INIT HOST
      K = 1
      CALL HPFC CMPOWNERS(1, K, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_1)
      J = I_1+1
      CALL HPFC CMPOWNERS(1, J, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_3)
      I_0 = I_3+2
      CALL HPFC CMPOWNERS(1, I_0, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_5)
      L = I_5+3
      M = J+K+L
      N = 0
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST09_host.f
!
!
! File HPFTEST09_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST09
!
!
! initializing array G, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 5
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for HPFTEST09_init.h
!
!
! File HPFTEST09_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST09_parameters.h"
      INTEGER I_2, I_4, I_6, I_5, I_3, I_1, J, K, L, M, N, I_0
      INTEGER G(1:5)
      CALL HPFC INIT NODE
      K = 1
      CALL HPFC CMPOWNERS(1, K, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         I_2 = MOD(K-1, 5)+1
         I_1 = G(I_2)
         CALL HPFC NSNDTO HA(HPFC INTEGER4, I_1)
      ELSE
         CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_1)
      ENDIF
      J = I_1+1
      CALL HPFC CMPOWNERS(1, J, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         I_4 = MOD(J-1, 5)+1
         I_3 = G(I_4)
         CALL HPFC NSNDTO HA(HPFC INTEGER4, I_3)
      ELSE
         CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_3)
      ENDIF
      I_0 = I_3+2
      CALL HPFC CMPOWNERS(1, I_0, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         I_6 = MOD(I_0-1, 5)+1
         I_5 = G(I_6)
         CALL HPFC NSNDTO HA(HPFC INTEGER4, I_5)
      ELSE
         CALL HPFC RCVFR HNBCAST S(HPFC INTEGER4, I_5)
      ENDIF
      L = I_5+3
      M = J+K+L
      N = 0
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST09_node.f
!
!
! File HPFTEST09_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST09
!
      integer 
     $    HPFTEST09 G LO1,
     $    HPFTEST09 G UP1
      parameter(HPFTEST09 G LO1 = 1)
      parameter(HPFTEST09 G UP1 = 5)
!
! That is all for HPFTEST09_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 2)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
