
Points-to for call22


// Points To IN:
// q[4] -> *NULL* , MAY
// q[4] -> _q_1[4][0] , MAY


// Points To OUT:
// q[4] -> _q_1[4][0] , EXACT

void call22(int *q[10])
{

// Points To:
// q[4] -> *NULL* , MAY
// q[4] -> _q_1[4][0] , MAY

   *q[4] = 3;
}

Proper effects with points-to for call22

void call22(int *q[10])
{
//             <    is read   >: q[4]
//             <    is written>: _q_1[4][0]
   *q[4] = 3;
}

Cumulated effects with points-to for call22

//             <    is read   >: q[4]
//             <    is written>: _q_1[4][0]
void call22(int *q[10])
{
//             <    is read   >: q[4]
//             <    is written>: _q_1[4][0]
   *q[4] = 3;
}

Points-to for "main"


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int a[10];

// Points To: none

   int *ap[10];

// Points To:
// ap[*] -> undefined , EXACT

   int i;

// Points To:
// ap[*] -> undefined , EXACT


   for(i = 0; i <= 9; i += 1)

// Points To:
// ap[*] -> undefined , MAY
// ap[*] -> a[*] , MAY

      ap[i] = &a[i];

// Points To:
// ap[*] -> undefined , MAY
// ap[*] -> a[*] , MAY


   call22(ap);

// Points To:
// ap[*] -> undefined , MAY
// ap[*] -> a[*] , MAY
// ap[4] -> a[*] , MAY

   return 0;
}

Proper effects with points-to for "main"

int main()
{
   int a[10];
   int *ap[10];
   int i;
//             <    is written>: i

   for(i = 0; i <= 9; i += 1)
//             <    is read   >: i
//             <    is written>: ap[i]
      ap[i] = &a[i];
//             <    is read   >: ap[4]
//             <    is written>: a[*]

   call22(ap);
   return 0;
}
