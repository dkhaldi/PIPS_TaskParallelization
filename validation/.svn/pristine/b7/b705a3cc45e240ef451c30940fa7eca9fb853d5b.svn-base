
Transformers for "main"


//  T(main) {main==0}

int main()
{

//  T(N) {N==100}

   int N = 100;

//  T() {}

   double A[100][100];

//  T() {}

   int i, j;

//  T(0`i,0`j) {1<=0`i, 0`i<=N}


   for(i = 1; i <= N; i += 1)

//  T(0`j) {1<=0`j, 0`j<=N}

      for(j = 1; j <= N; j += 1)

//  T() {}

         //int x0 = (i*j);
         //double x1 = ((double)N / 2);
         if (1) {

//  T() {}

            if (2*i*j<N)

//  T() {}

               if (1) {

//  T() {}

                  A[N-i-1][i+j-1] = 1.0;

//  T() {}

                  A[i-1][N-i-j-1] = 1.0;
               }

//  T() {}

            if (i==j)

//  T() {}

               A[i-1][j-1] = 1.0;
         }
   {

//  T() {}

      int i;

//  T(0`7`i) {0<=0`7`i, 0`7`i+1<=N}

      for(i = 0; i <= N-1; i += 1) {

//  T() {}

         int j;

//  T(0`7`8`j) {0<=0`7`8`j, 0`7`8`j+1<=N}

         for(j = 0; j <= N-1; j += 1)

//  T() {}

            printf("%f\n", A[i][j]);
      }
   }

//  T(main) {main==0}


   return 0;
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   int N = 100;

//  P(N) {N==100}

   double A[100][100];

//  P(N) {N==100}

   int i, j;

//  P(N) {N==100}


   for(i = 1; i <= N; i += 1)

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=100}

      for(j = 1; j <= N; j += 1)

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=100, 1<=0`j, 0`j<=100}

         //int x0 = (i*j);
         //double x1 = ((double)N / 2);
         if (1) {

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=100, 1<=0`j, 0`j<=100}

            if (2*i*j<N)

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=49, 1<=0`j, 0`j<=49}

               if (1) {

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=49, 1<=0`j, 0`j<=49}

                  A[N-i-1][i+j-1] = 1.0;

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=49, 1<=0`j, 0`j<=49}

                  A[i-1][N-i-j-1] = 1.0;
               }

//  P(0`i,0`j,N) {N==100, 1<=0`i, 0`i<=100, 1<=0`j, 0`j<=100}

            if (i==j)

//  P(0`i,0`j,N) {0`i==0`j, N==100, 1<=0`i, 0`i<=100}

               A[i-1][j-1] = 1.0;
         }
   {

//  P(0`i,0`j,N) {0`i==101, 0`j==101, N==100}

      int i;

//  P(0`i,0`j,N) {0`i==101, 0`j==101, N==100}

      for(i = 0; i <= N-1; i += 1) {

//  P(0`7`i,0`i,0`j,N) {0`i==101, 0`j==101, N==100, 0<=0`7`i,
//    0`7`i<=99}

         int j;

//  P(0`7`i,0`i,0`j,N) {0`i==101, 0`j==101, N==100, 0<=0`7`i,
//    0`7`i<=99}

         for(j = 0; j <= N-1; j += 1)

//  P(0`7`8`j,0`7`i,0`i,0`j,N) {0`i==101, 0`j==101, N==100,
//    0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}

            printf("%f\n", A[i][j]);
      }
   }

//  P(0`i,0`j,N) {0`i==101, 0`j==101, N==100}


   return 0;
}

Regions for "main"


//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1}>

int main()
{
   int N = 100;
   double A[100][100];
   int i, j;

//  <A[PHI1][PHI2]-W-MAY-{0<=PHI1, PHI1<=98PHI2, 99PHI2<=2PHI1+9603,
//    PHI2<=PHI1+97, 33PHI2<=PHI1+3201, 99PHI2<=PHI1+9702,
//    25PHI1<=49PHI2+2425, 98PHI1<=PHI2+9603, N==100}>


   for(i = 1; i <= N; i += 1)

//  <A[PHI1][PHI2]-W-MAY-{19212250`i<=1843560PHI1+79968PHI2+5569177,
//    1201010`i<=115248PHI1+4947PHI2+348098,
//    462560`i<=43806PHI1+1275PHI2+162581,
//    4851PHI2<=2376PHI1+25730`i+467974,
//    12500`i<=1152PHI1+51PHI2+5903, 1175<=1128PHI1+2352PHI2+11750`i,
//    121275PHI2<=594PHI1+18560`i+11761819,
//    9800PHI2+99490`i<=149PHI1+1950349, PHI2+170`i<=16PHI1+156866,
//    1<=PHI1+2PHI2+0`i, PHI1+0`i<=196PHI2+1, PHI1+2PHI2<=0`i+197,
//    16PHI1+170`i<=33PHI2+1568, 24PHI1+2375<=2352PHI2+23750`i,
//    24PHI1+250`i<=2352PHI2+25, 24PHI1+49PHI2<=250`i+4728,
//    24PHI1+99PHI2<=260`i+9577, 48PHI1+500`i<=51PHI2+4703,
//    48PHI1+PHI2<=490`i+4704, 48PHI1+99PHI2<=500`i+9553,
//    48PHI1+2499PHI2<=500`i+247153, 49PHI1+1490`i<=9504PHI2+149,
//    49PHI1+PHI2<=480`i+4803, 49PHI1+100PHI2<=510`i+9651,
//    99PHI1+198PHI2<=1010`i+19303, 149PHI1+98PHI2<=510`i+19353,
//    776PHI1+1617PHI2<=8250`i+156024,
//    1128PHI1+11750`i<=2499PHI2+229172,
//    1192PHI1+771910`i<=157633PHI2+3801142,
//    1192PHI1+780410`i<=156783PHI2+3724442,
//    1192PHI1+20420`i<=1683PHI2+155591,
//    1200PHI1+12500`i<=51PHI2+238751,
//    1200PHI1+2499PHI2<=12500`i+241201,
//    2328PHI1+24250`i<=4800PHI2+225769,
//    2352PHI1<=2499PHI2+1000`i+227897,
//    2352PHI1+99PHI2<=23510`i+468196,
//    2352PHI1+4851PHI2<=25000`i+468047,
//    2376PHI1<=99PHI2+22270`i+22574426,
//    2376PHI1+24260`i<=99PHI2+468023,
//    2376PHI1+4851PHI2<=72770`i+23049526,
//    2376PHI1+4851PHI2<=25240`i+468023,
//    3576PHI1+2401PHI2<=13240`i+466773,
//    3576PHI1+4851PHI2+11260`i<=946873,
//    37624PHI1+76799PHI2<=391750`i+7486376,
//    39584PHI1+82467PHI2<=412500`i+7958049,
//    114072PHI1+1188250`i<=239853PHI2+11058028,
//    116472PHI1+1187750`i<=242403PHI2+11290628,
//    117552PHI1+1224500`i<=2499PHI2+23635247,
//    50510`i<=4851PHI1+24851, 0`i<=PHI1+1, 3PHI1+0`i<=397,
//    48PHI1<=0`i+4703, 99PHI1<=0`i+9701, 2328PHI1<=23750`i+225769,
//    2376PHI1<=23270`i+230521, 38424PHI1<=383750`i+7490377,
//    49<=48PHI2+490`i, 250`i<=24PHI2+116449,
//    2301PHI2+24500`i<=472799, 4851PHI2<=50480`i+465499,
//    4851PHI2<=500`i+475249, N==100, 1<=0`i}>

      for(j = 1; j <= N; j += 1)

//  <A[PHI1][PHI2]-W-MAY-{25010`i<=2352PHI1+51PHI2+510`j+7103,
//    4851PHI2+48990`i<=48PHI1+49490`j+470497,
//    24PHI1+23520`j<=2352PHI2+23270`i+25,
//    24PHI1+23760`i+25<=2352PHI2+24010`j,
//    24PHI1+23760`i<=2352PHI2+23510`j+25,
//    48PHI1+510`j<=51PHI2+0`i+4703, 48PHI1+990`i<=51PHI2+490`j+4703,
//    48PHI1+49PHI2<=0`i+490`j+4703, 48PHI1+99PHI2+0`j<=510`i+9553,
//    48PHI1+99PHI2+490`i<=990`j+9553, PHI1+PHI2<=0`j+98, 0`i<=PHI1+1,
//    240`i+25<=24PHI1+490`j, 1490`j<=51PHI2+510`i+4751,
//    490`j<=48PHI2+480`i+1, 24PHI2+250`i<=250`j+2376,
//    99PHI2+990`j<=1010`i+9601, N==100, 1<=0`i, 50<=0`i+490`j}>

         //int x0 = (i*j);
         //double x1 = ((double)N / 2);
         if (1) {

//  <A[PHI1][PHI2]-W-MAY-{4803<=48PHI1+49PHI2+0`i+490`j,
//    PHI2+490`i+0`j<=48PHI1+147, 48PHI1+490`i+0`j<=PHI2+4753,
//    48PHI1+49PHI2<=0`i+490`j+4703, 0`j+1<=PHI2+0`i, 0`i+1<=PHI2+0`j,
//    PHI2+0`j<=0`i+97, PHI2+0`i<=0`j+97, N==100, 1<=0`i, 0`j<=49}>

            if (2*i*j<N)

//  <A[PHI1][PHI2]-W-MAY-{4803<=48PHI1+49PHI2+0`i+490`j,
//    PHI2+490`i+0`j<=48PHI1+147, 48PHI1+490`i+0`j<=PHI2+4753,
//    48PHI1+49PHI2<=0`i+490`j+4703, 0`j+1<=PHI2+0`i, 0`i+1<=PHI2+0`j,
//    PHI2+0`j<=0`i+97, PHI2+0`i<=0`j+97, N==100, 1<=0`i, 0`j<=49}>

               if (1) {

//  <A[PHI1][PHI2]-W-EXACT-{PHI1+0`i==99, 0`i+0`j==PHI2+1, N==100,
//    1<=0`i, 0`i<=49, 1<=0`j, 0`j<=49}>

                  A[N-i-1][i+j-1] = 1.0;

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==0`i-1, PHI2+0`i+0`j==99, N==100,
//    1<=0`i, 0`i<=49, 1<=0`j, 0`j<=49}>

                  A[i-1][N-i-j-1] = 1.0;
               }

//  <A[PHI1][PHI2]-W-MAY-{PHI1==0`i-1, PHI2==0`j-1, N==100, 0`i==0`j,
//    1<=0`i, 0`i<=100}>

            if (i==j)

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==0`i-1, PHI2==0`j-1, N==100,
//    0`i==0`j, 1<=0`i, 0`i<=100}>

               A[i-1][j-1] = 1.0;
         }
   {
      int i;

//  <A[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=99, 0<=PHI2, PHI2<=99,
//    N==100, 0`i==101, 0`j==101}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101}>

      for(i = 0; i <= N-1; i += 1) {
         int j;

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==0`7`i, 0<=PHI2, PHI2<=99, N==100,
//    0`i==101, 0`j==101, 0<=0`7`i, 0`7`i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101, 0<=0`7`i, 0`7`i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101, 0<=0`7`i, 0`7`i<=99}>

         for(j = 0; j <= N-1; j += 1)

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==0`7`i, PHI2==0`7`8`j, N==100,
//    0`i==101, 0`j==101, 0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i,
//    0`7`i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101, 0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1, N==100, 0`i==101,
//    0`j==101, 0<=0`7`8`j, 0`7`8`j<=99, 0<=0`7`i, 0`7`i<=99}>

            printf("%f\n", A[i][j]);
      }
   }

//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>


   return 0;
}
