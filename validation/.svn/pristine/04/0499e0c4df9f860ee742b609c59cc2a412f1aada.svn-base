
POINTS TO


// Points To IN:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// dat -> *NULL* , MAY
// dat -> _dat_1[0] , MAY
// vct -> *NULL* , MAY
// vct -> _vct_4[0] , MAY


// Points To OUT:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

void flgr2d_set_data_vector_fgUINT16(FLGR_Data2D *dat, int row, int col, FLGR_Vector *vct)
{

// Points To:
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// vct -> *NULL* , MAY
// vct -> _vct_4[0] , MAY

   fgUINT16 *array_s = (fgUINT16 *) vct->array;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_s -> *NULL* , MAY
// array_s -> _vct_4_3__4[0][0] , MAY
// dat -> *NULL* , MAY
// dat -> _dat_1[0] , MAY
// vct -> _vct_4[0] , EXACT

   fgUINT16 *array_d = (fgUINT16 *) (dat->array)[row];

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

   int I_0 = vct->spp;
   {

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      register fgUINT16 val;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      register int i;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      register int k;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      unsigned short _return0;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      i = col*I_0;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

      for(k = 0; k <= I_0-1; k += 1) {

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

         _return0 = array_s[k];

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

         val = _return0;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> *NULL* , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

         array_d[i] = val;

// Points To:
// _dat_1[0].array -> *NULL* , MAY
// _dat_1[0].array -> _dat_1_1__1[0][0] , MAY
// _dat_1_1__1[0][*] -> *NULL* , MAY
// _dat_1_1__1[0][*] -> _dat_1_1__1_1[0][*][0] , MAY
// _vct_4[0].array -> *NULL* , MAY
// _vct_4[0].array -> _vct_4_3__4[0][0] , MAY
// array_d -> _dat_1_1__1_1[0][*][0] , MAY
// array_s -> _vct_4_3__4[0][0] , EXACT
// dat -> _dat_1[0] , EXACT
// vct -> _vct_4[0] , EXACT

         i++;
      }
   }
}
