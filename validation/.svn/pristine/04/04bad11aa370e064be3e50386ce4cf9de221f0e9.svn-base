void sven04(int n, double x[n+1])
{
   int i, j, k;
   //double t;
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         for(k = 0; k <= n-1; k += 1) {
            x[n] = f(i, j, k);
            x[i] = g(x[i], f(i, j, k));
         }
   for(i = 0; i <= n-1; i += 1)
      printf("%f ", x[i]);
   return;
}
void sven04(int n, double x[n+1])
{
   int i, j, k;
   //double t;
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         for(k = 0; k <= n-1; k += 1)
            x[n] = f(i, j, k);
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         for(k = 0; k <= n-1; k += 1)
            x[i] = g(x[i], f(i, j, k));
   for(i = 0; i <= n-1; i += 1)
      printf("%f ", x[i]);
   return;
}

 **************** Effective Dependence Graph ****************

	33 --> 33 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY> at levels  1
	33 --> 33 with conflicts
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT> at levels  1
	33 --> 33 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY> at levels  1
	33 --> 33 with conflicts
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT> at levels  1
	33 --> 33 with conflicts
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY> at levels  1
	33 --> 33 with conflicts
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT> at levels  1
	30 --> 30 with conflicts
		from <x[i]-W-EXACT> to <x[i]-W-EXACT> at levels  2 3
	30 --> 30 with conflicts
		from <x[i]-W-EXACT> to <x[i]-R-EXACT> at levels  2 3
	30 --> 30 with conflicts
		from <x[i]-R-EXACT> to <x[i]-W-EXACT> at levels  2 3
	28 --> 28 with conflicts
		from <k-W-EXACT> to <k-W-EXACT> at levels  1 2
	27 --> 27 with conflicts
		from <j-W-EXACT> to <j-W-EXACT> at levels  1
	29 --> 29 with conflicts
		from <x[n]-W-EXACT> to <x[n]-W-EXACT> at levels  1 2 3
	28 --> 28 with conflicts
		from <k-W-EXACT> to <k-W-EXACT> at levels  1 2
	27 --> 27 with conflicts
		from <j-W-EXACT> to <j-W-EXACT> at levels  1

****************** End of Dependence Graph ******************
void sven04(int n, double x[n+1])
{
   int i, j, k;
   //double t;
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         for(k = 0; k <= n-1; k += 1)
            x[n] = f(i, j, k);
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         for(k = 0; k <= n-1; k += 1)
            x[i] = g(x[i], f(i, j, k));
   for(i = 0; i <= n-1; i += 1)
      printf("%f ", x[i]);
   return;
}
