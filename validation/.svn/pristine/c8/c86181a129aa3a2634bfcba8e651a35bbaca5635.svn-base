!
! File HPFTEST26_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST26_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, T LID, I
      INTEGER J(1:10)
      CALL HPFC INIT HOST
      PRINT *, 'hpftest26 running'
! collecting distributed variable J
      DO PSI1 = 1, 5
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC INTEGER4 BUFUPK
         DO ALPHA1 = 2*PSI1-1, MIN(10, 2*PSI1)
            LALPHA1 = ALPHA1-2*PSI1+2
            BUF INDEX = BUF INDEX+1
            J(ALPHA1) = HPFC INTEGER4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      DO I = 1, 10
         PRINT *, 'j(', I, ') = ', J(I)
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      PRINT *, 'hpftest26 ended'
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST26_host.f
!
!
! File HPFTEST26_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST26
!
!
! initializing array J, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 10
      RANGEA(2, 1, 3) = 10
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 2
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
!
! initializing array K, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 3
      RANGEA(1, 1, 3) = 3
!
      RANGEA(1, 1, 4) = 0

      ALIGN(1, 1, 1) = INTFLAG
!
! That is all for HPFTEST26_init.h
!
!
! File HPFTEST26_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST26_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, I_1, I_2, I_3, I_4, I, I_0
      INTEGER J(1:2), K(1:3)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_2, I_3, I_4, 1, 10, 2, 1)
      DO I = 1, 3
         CALL HPFC CMPCOMPUTER(1, I, 0, 0, 0, 0, 0, 0)
         IF (HPFC COMPUTERP()) THEN
            K(I) = I
            CALL HPFC CMPOWNERS(1, I, 0, 0, 0, 0, 0, 0)
            CALL HPFC SNDTO OOS(HPFC INTEGER4, K(I))
         ELSE
            CALL HPFC CMPOWNERS(1, I, 0, 0, 0, 0, 0, 0)
            IF (HPFC OWNERP()) THEN
               CALL HPFC RCVFR C(HPFC INTEGER4, K(I))
            ENDIF
         ENDIF
      ENDDO
      I = I_4
      DO I_1 = I_2, I_3
         I = I+1
         I_0 = MOD(I, 3)+1
         J(I_1) = K(I_0)+10*I
      ENDDO
! collecting distributed variable J
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO ALPHA1 = 2*PSI1-1, MIN(10, 2*PSI1)
         LALPHA1 = ALPHA1-2*PSI1+2
         BUF INDEX = BUF INDEX+1
         HPFC INTEGER4 BUFF(BUF INDEX) = J(LALPHA1)
      ENDDO
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST26_node.f
!
!
! File HPFTEST26_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST26
!
      integer 
     $    HPFTEST26 J LO1,
     $    HPFTEST26 J UP1
      parameter(HPFTEST26 J LO1 = 1)
      parameter(HPFTEST26 J UP1 = 2)
      integer 
     $    HPFTEST26 K LO1,
     $    HPFTEST26 K UP1
      parameter(HPFTEST26 K LO1 = 1)
      parameter(HPFTEST26 K UP1 = 3)
!
! That is all for HPFTEST26_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 2
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 5
      RANGEP(1, 1, 3) = 5
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 5)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
