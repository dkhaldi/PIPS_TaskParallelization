
PROPER EFFECTS

void assign07()
{
   int ***p;
   int **q;
   int *r;
   int i;
//             <    is written>: r

   r = &i;
//             <    is written>: p
   //q = &r;
   p = &q;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b1
//             <    is read   >: p
   **p = r;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0 
//                               *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b1
//             <    is read   >: p
   ***p = 0;
   return;
}
void foo()
{
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*_b0 
//                               *ANY_MODULE*:*ANYWHERE*_b1
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b1
   assign07();
   return;
}

PROPER POINTER EFFECTS

void foo()
{
   assign07();
   return;
}

POINTS TO


// Points To IN: none


// Points To OUT:
// *ANY_MODULE*:*ANYWHERE*_b0 -> undefined , MAY

void assign07()
{

// Points To: none

   int ***p;

// Points To:
// p -> undefined , EXACT

   int **q;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT

   int *r;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT
// r -> undefined , EXACT

   int i;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT
// r -> undefined , EXACT


   r = &i;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT
// r -> i , EXACT

   //q = &r;
   p = &q;

// Points To:
// p -> q , EXACT
// q -> undefined , EXACT
// r -> i , EXACT

   **p = r;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b0 -> i , MAY
// p -> q , EXACT
// q -> undefined , EXACT
// r -> i , EXACT

   ***p = 0;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b0 -> i , MAY
// p -> q , EXACT
// q -> undefined , EXACT
// r -> i , EXACT

   return;
}

// Points To IN: none


// Points To OUT:
// *ANY_MODULE*:*ANYWHERE*_b0 -> undefined , MAY

void foo()
{

// Points To: none

   assign07();

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b0 -> undefined , MAY

   return;
}
