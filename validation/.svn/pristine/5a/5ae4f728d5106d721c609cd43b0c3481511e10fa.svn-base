
TRANSFORMERS


//  T() {}

void sas_alias02(int m)
{

//  T(x,y) {m==x, m==y}

   int x = m, y = m;

//  T(x,y) {m==x#init, m==y#init, 2<=m, x<=m, x+2y<=3m, 2<=x}

   while (x>=2)

//  T(x,y) {x==x#init-2, 2<=m, 0<=x, y<=y#init+1}

      if (1) {

//  T(x,y) {x==x#init-1, x+y#init==y, 2<=m, 1<=x}

         x--, y += x;

//  T(y) {2<=m, 1<=x, x<=y, x<=y#init, y<=y#init}

         while (y>=x&&alea()>=0.)

//  T(y) {y==y#init-1, 2<=m, 1<=x, x<=y+1}

            y--;

//  T(x,y) {x==x#init-1, x+y==y#init, 2<=m, 0<=x}

         x--, y -= x;
      }
}

PRECONDITIONS


//  P() {}

void sas_alias02(int m)
{

//  P() {}

   int x = m, y = m;

//  P(x,y) {m==x, m==y}

   while (x>=2)

//  P(x,y) {x<=m, x+2y<=3m, 2<=x}

      if (1) {

//  P(x,y) {x<=m, x+2y<=3m, 2<=x}

         x--, y += x;

//  P(x,y) {2<=m, x+1<=m, 2y+1<=3m+x, 1<=x}

         while (y>=x&&alea()>=0.)

//  P(x,y) {x+1<=m, 2y+1<=3m+x, 1<=x, x<=y}

            y--;

//  P(x,y) {x+1<=m, 2y+1<=3m+x, 1<=x}

         x--, y -= x;
      }
}
