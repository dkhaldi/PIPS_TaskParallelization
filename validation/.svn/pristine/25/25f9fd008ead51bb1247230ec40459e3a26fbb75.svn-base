
Transformers for "while04"


//  T(while04) {2n==while04+1, 2<=n}

int while04(int n)
{

//  T(while04) {2n==while04+1, 2<=n}

   // BEGIN BLOCK

//  T() {}

   int i, j;

//  T(i) {i==0}


   i = 0;

//  T(j) {i==0, j==1}

   j = 1;

//  T() {i==0, j==1, 2<=n}


   if (n<=1)

//  T() {0==-1}

      exit(1);
   {

//  T(i,j) {i==j-1, i==n-1, i#init==0, j#init==1, 1<=i}

      // BEGIN BLOCK

//  T() {i==0, j==1, 2<=n}

      int k;

//  T(i,j) {i==j-1, i#init==0, j#init==1, 0<=i, i+2<=n, 2<=n}


      while (i<n-1&&j<n) {

//  T(i,j) {i==i#init+1, j==j#init+1, i+1<=n, j<=n, 2<=n}

         // BEGIN BLOCK

//  T(i) {i==i#init+1, i+1<=n, j+1<=n, 2<=n}

         i++;

//  T(j) {j==j#init+1, i+1<=n, j<=n, 2<=n}

         j++;
         // END BLOCK
      }
      // END BLOCK
   }

//  T(while04) {i==j-1, i==n-1, 2i==while04-1, 1<=i}

   return i+j;
   // END BLOCK
}

Preconditions for "while04"


//  P() {}

int while04(int n)
{

//  P() {}

   // BEGIN BLOCK

//  P() {}

   int i, j;

//  P() {}


   i = 0;

//  P(i) {i==0}

   j = 1;

//  P(i,j) {i==0, j==1}


   if (n<=1)

//  P(i,j) {i==0, j==1, n<=1}

      exit(1);
   {

//  P(i,j) {i==0, j==1, 2<=n}

      // BEGIN BLOCK

//  P(i,j) {i==0, j==1, 2<=n}

      int k;

//  P(i,j) {i==0, j==1, 2<=n}


      while (i<n-1&&j<n) {

//  P(i,j) {i==j-1, 0<=i, i+2<=n}

         // BEGIN BLOCK

//  P(i,j) {i==j-1, 0<=i, i+2<=n}

         i++;

//  P(i,j) {i==j, 1<=i, i+1<=n, 2<=n}

         j++;
         // END BLOCK
      }
      // END BLOCK
   }

//  P(i,j) {i==j-1, i==n-1, 1<=i}

   return i+j;
   // END BLOCK
}

Partial evaluation: bug because the while loop precondition
only is used to evaluate the loop condition

int while04(int n)
{
   // BEGIN BLOCK
   int i, j;

   i = 0;
   j = 1;

   if (n<=1)
      exit(1);
   {
      // BEGIN BLOCK
      int k;

      while (i<n-1&&j<n) {
         // BEGIN BLOCK
         i++;
         j++;
         // END BLOCK
      }
      // END BLOCK
   }
   return i+j;
   // END BLOCK
}
