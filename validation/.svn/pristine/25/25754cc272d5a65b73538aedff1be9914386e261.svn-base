void foo_i2_d2(int _u_b_n0, int _u_b_n1, int _u_b[_u_b_n0][_u_b_n1], int _u_a_n0, int _u_a_n1, double _u_a[_u_a_n0][_u_a_n1])
{
   __lv1 = 0+1;
   double _Complex _u_titi[1][3];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 2; __lv2 += 1) {
      //PIPS generated variable
      register double _tmpCT0_0;
      _tmpCT0_0 = (double) 1.0;
      _u_titi[0][__lv2] = (double _Complex) _tmpCT0_0;
   }
   __lv1 = 0+1;
   double _Complex _tmpxx0 = 3+4*1.0iF;
   _u_titi[0][1-1] = _tmpxx0;
   scilab_rt_disp_z2_(1, 3, _u_titi);
   _u_b_n0==_u_a_n0&&_u_b_n1==_u_a_n1?(void) 0:__assert_fail("_u_b_n0 == _u_a_n0 && _u_b_n1 == _u_a_n1", ".t292.tmp/t292.c", 29, __func__);
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= _u_a_n0-1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= _u_a_n1-1; __lv2 += 1)
         cos(_u_b[__lv1][__lv2]);
   }
}
int main(int argc, char *argv[])
{
   scilab_rt_init(argc, argv, 0);
   
   /*  t292.sce _ pragma within function */
   int _u_a[1][3];
   _u_a[0][0] = 1;
   _u_a[0][1] = 2;
   _u_a[0][2] = 3;
   double _u_c[1][3];
   foo_i2_d2(1, 3, _u_a, 1, 3, _u_c);

   scilab_rt_terminate();
}
