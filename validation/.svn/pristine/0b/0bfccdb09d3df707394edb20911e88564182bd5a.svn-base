setenv WKS kernel_load_store02
setenv TMP $WKS.tmp
delete $WKS

shell cp $WKS.c $TMP.c
# Instrument the source for include tracking:
shell sed -i -r -e 's,#include\s+<([^>]+)>,//pips_begin <\1>\n#include<\1>\n//pips_end <\1>,g' $TMP.c

setproperty ABORT_ON_USER_ERROR TRUE

create $WKS $TMP.c

# Cannot be removed here because PIPS may check the input source code
# due to resource INPUT_FILE
#shell rm $TMP.c

setproperty FOR_TO_DO_LOOP_IN_CONTROLIZER TRUE
module give

activate MUST_REGIONS
activate TRANSFORMERS_INTER_FULL
activate INTERPROCEDURAL_SUMMARY_PRECONDITION
activate PRECONDITIONS_INTER_FULL

apply PRIVATIZE_MODULE

apply COARSE_GRAIN_PARALLELIZATION

apply GPU_IFY

display PRINTED_FILE[%ALLFUNC]

apply UNSPLIT[%ALL]

# Recover crudely the headers:
shell sed -i -r -e 's,//pips_begin <([^>]+)>,#include <\1>\n//pips_begin <\1>,g' $WKS.database/Src/$TMP.c
shell grep '//pips_begin' $WKS.database/Src/$TMP.c | sed -e 's,//pips_begin ,,g' | while read include ; do sed -i -r -e "/\/\/pips_begin $include/,/\/\/pips_end $include/ d" $WKS.database/Src/$TMP.c ; done
echo [after unsplit and recovering]
shell cat $WKS.database/Src/$TMP.c
close
delete $WKS
shell rm $TMP.c
quit
