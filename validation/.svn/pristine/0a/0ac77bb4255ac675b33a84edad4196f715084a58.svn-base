// OMP style
int main()
{
   float a[10][10][10][10][10];                                         /*0004*/
   int i, j, k, l, m;                                                   /*0005*/
   float x = 2.12;                                                      /*0006*/
   float z = 0.0;                                                       /*0007*/
   float y = 2.0;                                                       /*0008*/

#pragma omp parallel for private(i,j)
   for(i = 0; i <= 9; i += 1)                                           /*0010*/
#pragma omp parallel for private(j,k)
      for(j = 0; j <= 9; j += 1)                                        /*0011*/
#pragma omp parallel for private(k,l,z)
         for(k = 0; k <= 9; k += 1) {                                   /*0012*/
            z = k*2.0;                                                  /*0013*/
#pragma omp parallel for private(l,m)
            for(l = 0; l <= 9; l += 1)                                  /*0014*/
#pragma omp parallel for private(m,y)
               for(m = 0; m <= 9; m += 1) {                             /*0015*/
                  y = 3.5+x+z;                                          /*0016*/
                  a[i][j][k][l][m] = x*y;                               /*0017*/
               }
         }
   
   // use the value of the array to prevent pips doing optimization on unused
   // values
#pragma omp parallel for private(j)
   for(i = 0; i <= 9; i += 1)                                           /*0026*/
#pragma omp parallel for private(k)
      for(j = 0; j <= 9; j += 1)                                        /*0027*/
#pragma omp parallel for private(k,z)
         for(k = 0; k <= 9; k += 1)                                     /*0028*/
            z = k*2.0;                                                  /*0029*/
#pragma omp for private(i,j,k,l,m)
   for(i = 0; i <= 9; i += 1)                                           /*0026*/
#pragma omp for private(j,k,l,m)
      for(j = 0; j <= 9; j += 1)                                        /*0027*/
#pragma omp for private(k,l,m)
         for(k = 0; k <= 9; k += 1)                                     /*0028*/
#pragma omp for private(l,m)
            for(l = 0; l <= 9; l += 1)                                  /*0030*/
#pragma omp for private(m)
               for(m = 0; m <= 9; m += 1)                               /*0031*/
                  fprintf(stdout, "%f", a[i][j][k][l][m]);              /*0032*/

   return 0;                                                            /*0039*/
}
