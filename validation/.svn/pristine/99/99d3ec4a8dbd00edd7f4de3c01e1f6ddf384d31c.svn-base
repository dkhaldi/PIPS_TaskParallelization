# Check improper privatization of variable "fp", probably due to
# interprocedural effects on "fp" due to intrinsics fgtec()

delete while01

setproprety ABORT_ON_USER_ERROR TRUE

create while01 while01.c

echo Select some options to deal with the C Language:
echo Parse as C:

activate C_PARSER

echo Prettyprint the source as C, of course

setproperty PRETTYPRINT_LANGUAGE "C"

echo Do not display original number lines as comment:

setproperty PRETTYPRINT_STATEMENT_NUMBER FALSE

echo If possible, transform simple for-loops into do-loop à la Fortran, simpler to analyze:
setproperty FOR_TO_DO_LOOP_IN_CONTROLIZER   TRUE

echo Desugaring other for-loops into plain while-loops fot the time we improve semantics ameliorations in PIPS:
setproperty FOR_TO_WHILE_LOOP_IN_CONTROLIZER   TRUE

echo Select the most precise analyses:

activate MUST_REGIONS
activate TRANSFORMERS_INTER_FULL
activate INTERPROCEDURAL_SUMMARY_PRECONDITION
activate PRECONDITIONS_INTER_FULL
activate REGION_CHAINS

echo Compute the intraprocedural preconditions at the same time as
echo   transformers and use them to improve the accuracy of expression
echo   and statement transformers:

setproperty SEMANTICS_COMPUTE_TRANSFORMERS_IN_CONTEXT TRUE
setproperty SEMANTICS_FIX_POINT_OPERATOR "derivative"

echo Try to restructure the code for more precision:

setproperty UNSPAGHETTIFY_TEST_RESTRUCTURING TRUE
setproperty UNSPAGHETTIFY_RECURSIVE_DECOMPOSITION TRUE

echo Check the proper effects

activate PRINT_CODE_PROPER_EFFECTS
display PRINTED_FILE[while01]

activate PRINT_CODE

echo Privatize scalar variables
apply PRIVATIZE_MODULE[while01]

echo Ask for some statistics about the job to be done:

setproperty PARALLELIZATION_STATISTICS=TRUE
echo Ask for the parallelization of "while01"
activate RICE_ALL_DEPENDENCE
apply COARSE_GRAIN_PARALLELIZATION[while01]
display PRINTED_FILE[while01]

close
quit
