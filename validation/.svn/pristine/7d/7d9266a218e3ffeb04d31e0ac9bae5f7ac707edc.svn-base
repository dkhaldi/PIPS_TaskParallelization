
Initial code

      PROGRAM HYBRIDCOMP03
      INTEGER I
      INTEGER J
      INTEGER N
      INTEGER A
      N = 5                                                             0006
      A = 0                                                             0007
      DO 10 I = 1, N                                                    0008
         DO J = 1, N                                                    0009
            A = I*J                                                     0010
         ENDDO
10       CONTINUE                                                       0012
      PRINT *, A                                                        0013
      END

Code after outlining

      PROGRAM HYBRIDCOMP03
      INTEGER I
      INTEGER J
      INTEGER N
      INTEGER A
      N = 5                                                             0006
      A = 0                                                             0007
      CALL TOTO(A, N)                                                   0008
      PRINT *, A                                                        0013
      END
/* C pretty print for module TOTO. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

void
toto_ (int *a_p4a_copy, int *n_p4a_copy)
{
  int j;
  int i;
  int a = *a_p4a_copy;
  int n = *n_p4a_copy;

  for (i = 1; i <= n; i++)
    {
      for (j = 1; j <= n; j++)
	{
	  a = (i * j);
	}
      continue;
    }
  *a_p4a_copy = a;
  return;
}

unsplit


compiles pgm from fortran files and executes

          25

compiles pgm from fortran and C files and executes

          25
