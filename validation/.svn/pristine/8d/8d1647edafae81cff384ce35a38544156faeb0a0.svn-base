
//  T(main) {main==0}

int main()
{

//  T(ii,jj,x0) {}

   int ii, jj, x0;

//  T() {}

   double x1;


//  T(N) {N==100}

   int N = 100;

//  T() {}

   double A[100][100];

//  T(ii,jj,x0) {ii<=N, 1<=ii}


   for(ii = 1; ii <= N; ii += 1)

//  T(jj,x0) {jj<=N, 1<=jj}

      for(jj = 1; jj <= N; jj += 1) {

//  T(x0) {}

         x0 = ii*jj;

//  T() {}

         x1 = (double) N/2;

//  T() {}

         if (x0<x1) {

//  T() {}

            A[N-ii-1][ii+jj-1] = 1.0;

//  T() {}

            A[ii-1][N-ii-jj-1] = 1.0;
         }

//  T() {}

         if (ii==jj)

//  T() {}

            A[ii-1][jj-1] = 1.0;
      }
   {

//  T(i) {}

      int i;

//  T(i) {i+1<=N, 0<=i}

      for(i = 0; i <= N-1; i += 1) {

//  T(j) {}

         int j;

//  T(j) {j+1<=N, 0<=j}

         for(j = 0; j <= N-1; j += 1)

//  T() {}

            printf("%f\n", A[i][j]);
      }
   }

//  T(main) {main==0}

   return 0;
}

//  P() {}

int main()
{

//  P() {}

   int ii, jj, x0;

//  P(ii,jj,x0) {}

   double x1;


//  P(ii,jj,x0) {}

   int N = 100;

//  P(N,ii,jj,x0) {N==100}

   double A[100][100];

//  P(N,ii,jj,x0) {N==100}


   for(ii = 1; ii <= N; ii += 1)

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100}

      for(jj = 1; jj <= N; jj += 1) {

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

         x0 = ii*jj;

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

         x1 = (double) N/2;

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

         if (x0<x1) {

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

            A[N-ii-1][ii+jj-1] = 1.0;

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

            A[ii-1][N-ii-jj-1] = 1.0;
         }

//  P(N,ii,jj,x0) {N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}

         if (ii==jj)

//  P(N,ii,jj,x0) {N==100, ii==jj, 1<=ii, ii<=100}

            A[ii-1][jj-1] = 1.0;
      }
   {

//  P(N,ii,jj,x0) {N==100, ii==101, jj==101}

      int i;

//  P(N,i,ii,jj,x0) {N==100, ii==101, jj==101}

      for(i = 0; i <= N-1; i += 1) {

//  P(N,i,ii,jj,x0) {N==100, ii==101, jj==101, 0<=i, i<=99}

         int j;

//  P(N,i,ii,j,jj,x0) {N==100, ii==101, jj==101, 0<=i, i<=99}

         for(j = 0; j <= N-1; j += 1)

//  P(N,i,ii,j,jj,x0) {N==100, ii==101, jj==101, 0<=i, i<=99, 0<=j,
//    j<=99}

            printf("%f\n", A[i][j]);
      }
   }

//  P(N,ii,jj,x0) {N==100, ii==101, jj==101}

   return 0;
}

//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1}>

int main()
{
   int ii, jj, x0;
   double x1;

   int N = 100;
   double A[100][100];

//  <A[PHI1][PHI2]-W-MAY-{PHI1<=99, 0<=301PHI1+2PHI2+101,
//    0<=102PHI1+PHI2+2, 98PHI2<=3PHI1+19505, 0<=PHI1+PHI2+2,
//    PHI1+PHI2<=198, 3PHI1+PHI2<=396, N==100}>


   for(ii = 1; ii <= N; ii += 1)

//  <A[PHI1][PHI2]-W-MAY-{PHI1+PHI2<=198,
//    460249ii<=975549PHI1+475300PHI2+1410849,
//    460249ii<=955149PHI1+494900PHI2+1450049,
//    19109ii<=29007PHI1+19404PHI2+999011,
//    14849ii<=19899PHI1+9900PHI2+514799,
//    490000PHI2<=10149PHI1+500149ii+47990349,
//    10199ii<=10101PHI1+100PHI2+1020001,
//    4949ii<=5049PHI1+4950PHI2+494999,
//    0<=489PHI1+9898PHI2+9409ii+10387, 101ii<=201PHI1+100PHI2+301,
//    99ii<=199PHI1+100PHI2+299, 0<=105PHI1+9506PHI2+10201ii+8811,
//    49PHI2<=51PHI1+100ii+4653, 98PHI2<=3PHI1+101ii+9405,
//    49PHI2<=PHI1+50ii+4752, PHI1<=98PHI2+99ii+97,
//    3PHI1<=98PHI2+101ii+95, 48PHI1+49PHI2<=ii+9603,
//    51PHI1<=49PHI2+100ii+4849, 51PHI1+50PHI2+ii<=10099,
//    99PHI1<=9702PHI2+295ii+960203,
//    5049PHI1<=485100PHI2+252499ii+24245051,
//    10197PHI1<=19404PHI2+20095ii+959807,
//    504951PHI1<=4900PHI2+500149ii+48980149, 1<=99PHI1+ii,
//    97ii<=99PHI1+9799, 0<=91PHI1+183ii+8371, 0<=85PHI1+43ii+3952,
//    0<=2PHI1+ii+94, 0<=PHI1+2ii+93, ii<=PHI1+101, PHI1<=ii+97,
//    99PHI1<=101ii+9601, 99PHI1<=ii+9701, N==100, 1<=ii, ii<=100}>

      for(jj = 1; jj <= N; jj += 1) {
         x0 = ii*jj;
         x1 = (double) N/2;

//  <A[PHI1][PHI2]-W-MAY-{ii+4899<=51PHI1+50PHI2+50jj,
//    49PHI2+49jj<=51PHI1+100ii+4702, 4803<=48PHI1+49PHI2+ii+49jj,
//    2ii+jj<=3PHI1+PHI2+104, 3PHI1+PHI2+2ii+jj<=496,
//    48PHI1+49PHI2<=ii+49jj+4703, 51PHI1+49jj<=49PHI2+100ii+4898,
//    51PHI1+50PHI2+ii<=50jj+4999, 1<=99PHI1+ii, 99PHI1<=ii+9701,
//    N==100, 1<=ii, ii<=100, 1<=jj, jj<=100}>

         if (x0<x1) {

//  <A[PHI1][PHI2]-W-EXACT-{PHI1+ii==99, ii+jj==PHI2+1, N==100, 1<=ii,
//    ii<=100, 1<=jj, jj<=100}>

            A[N-ii-1][ii+jj-1] = 1.0;

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==ii-1, PHI2+ii+jj==99, N==100, 1<=ii,
//    ii<=100, 1<=jj, jj<=100}>

            A[ii-1][N-ii-jj-1] = 1.0;
         }

//  <A[PHI1][PHI2]-W-MAY-{PHI1==ii-1, PHI2==jj-1, N==100, ii==jj,
//    1<=ii, ii<=100}>

         if (ii==jj)

//  <A[PHI1][PHI2]-W-EXACT-{PHI1==ii-1, PHI2==jj-1, N==100, ii==jj,
//    1<=ii, ii<=100}>

            A[ii-1][jj-1] = 1.0;
      }
   {
      int i;

//  <A[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1<=99, 0<=PHI2, PHI2<=99,
//    N==100, ii==101, jj==101}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1}>

      for(i = 0; i <= N-1; i += 1) {
         int j;

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==i, 0<=PHI2, PHI2<=99, N==100,
//    ii==101, jj==101, 0<=i, i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1}>

         for(j = 0; j <= N-1; j += 1)

//  <A[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j, N==100, ii==101,
//    jj==101, 0<=j, j<=99, 0<=i, i<=99}>
//  <stdout-R-EXACT-{}>
//  <stdout[PHI1]-R-MAY-{PHI1==0}>
//  <stdout[PHI1]-W-MAY-{PHI1==0}>
//  <__IO_EFFECTS:LUNS[PHI1]-R-EXACT-{PHI1==1}>
//  <__IO_EFFECTS:LUNS[PHI1]-W-EXACT-{PHI1==1}>

            printf("%f\n", A[i][j]);
      }
   }
   return 0;
}
