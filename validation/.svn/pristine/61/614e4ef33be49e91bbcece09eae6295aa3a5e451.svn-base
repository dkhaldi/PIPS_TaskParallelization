
Proper effects

int main()
{
   typedef struct my_struct {
      int i;
      int *p;
   } my_str;
   my_str *m, *n;
   int j;
//             <    is written>: j
   j = 2;
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: m _MALLOC_EFFECTS:_MALLOC_
   m = (my_str *) malloc(sizeof(my_str));
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: m
   m->i = 1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*_b0
//             <    is read   >: m
   m->p = &j;
//             <    is read   >: m
//             <    is written>: n
   n = m;

   return 0;
}

Points-to


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   typedef struct my_struct {
      int i;
      int *p;
   } my_str;

// Points To: none

   my_str *m, *n;

// Points To:
// m -> undefined , EXACT
// n -> undefined , EXACT

   int j;

// Points To:
// m -> undefined , EXACT
// n -> undefined , EXACT

   j = 2;

// Points To:
// m -> undefined , EXACT
// n -> undefined , EXACT

   m = (my_str *) malloc(sizeof(my_str));

// Points To:
// *HEAP*_l_11.p -> undefined , EXACT
// m -> *HEAP*_l_11 , MAY
// n -> undefined , EXACT

   m->i = 1;

// Points To:
// *HEAP*_l_11.p -> undefined , EXACT
// m -> *HEAP*_l_11 , MAY
// n -> undefined , EXACT

   m->p = &j;

// Points To:
// *HEAP*_l_11.p -> j , MAY
// m -> *HEAP*_l_11 , MAY
// n -> undefined , EXACT

   n = m;

// Points To:
// *HEAP*_l_11.p -> j , MAY
// m -> *HEAP*_l_11 , MAY
// n -> *HEAP*_l_11 , MAY


   return 0;
}
