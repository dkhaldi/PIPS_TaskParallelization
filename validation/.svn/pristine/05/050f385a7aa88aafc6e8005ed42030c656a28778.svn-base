int main(int argc, char **argv)
{
//		< is static > FALSE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   int i, j;
//		< is static > FALSE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   int n = 4000;
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Initialize array. */
   init_array();
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Start timer. */
   
#pragma scop
#pragma live-out x1, x2
   for(i = 0; i <= n-1; i += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      for(j = 0; j <= n-1; j += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            0 <= 0`j <= n-1
//		<   tests   >
         x1[i] = x1[i]+A[i][j]*y_1[j];
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   for(i = 0; i <= n-1; i += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//		<   tests   >
      for(j = 0; j <= n-1; j += 1)
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   > 0 <= 0`i <= n-1
//                            0 <= 0`j <= n-1
//		<   tests   >
         x2[i] = x2[i]+A[j][i]*y_2[j];
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >
   
   /* Stop and print timer. */
#pragma endscop
   ;
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >

   print_array(argc, argv);
//		< is static > TRUE
//		< parameter > 0`n, 0`j, 0`i, argc, 
//		<   loops   >
//		<   tests   >

   return 0;
}
