just check parsing
towns run(towns t, data_t xmin, data_t ymin, data_t xmax, data_t ymax, data_t step, data_t range)
{
   size_t i, j;
   size_t k;
   size_t rangex = (xmax-xmin)/step, rangey = (ymax-ymin)/step;
   int nb = 1+rangex*rangey;
   towns tout = {nb, malloc(sizeof(town)*nb)};
   fprintf(stderr, "begin computation ...\n");
   fprintf(stderr, "xrange: ""%lf %lf %lf\n", xmin, xmax, rangex);
   fprintf(stderr, "yrange: ""%lf %lf %lf\n", ymin, ymax, rangey);

   for(i = 0; i < rangex; i += 1)
      for(j = 0; j < rangey; j += 1) {
         ((tout.data)[i*rangey+j])[0] = (xmin+step*i)*180/3.14159265358979323846;
         ((tout.data)[i*rangey+j])[1] = (ymin+step*j)*180/3.14159265358979323846;
         ((tout.data)[i*rangey+j])[2] = 0.;
         for(k = 0; k < t.nb-1+1; k += 1) {
            data_t tmp = 6368.*acos(cos(xmin+step*i)*cos(((t.data)[k])[0])*cos(ymin+step*j-((t.data)[k])[1])+sin(xmin+step*i)*sin(((t.data)[k])[0]));
            if (tmp<range)
               ((tout.data)[i*rangey+j])[2] += ((t.data)[k])[2]/(1+tmp);
         }
      }
   fprintf(stderr, "end computation ...\n");
   return tout;
}
