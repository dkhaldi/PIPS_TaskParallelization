
Init Code

int main()
{
   int i;                                                               /*0002*/
   int a[10];                                                           /*0003*/
   int r;                                                               /*0004*/
   i = 0;                                                               /*0007*/
   i++;                                                                 /*0008*/
#pragma distributed on_cluster=0
   {
      a[i] = 42;                                                        /*0012*/
      i++;                                                              /*0013*/
   }
#pragma distributed on_cluster=1
   {
      i--;                                                              /*0017*/
      r = a[i]+i-1;                                                     /*0018*/
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

TASK_MAPPING

int main()
{
   int i;                                                               /*0002*/
   int a[10];                                                           /*0003*/
   int r;                                                               /*0004*/
   i = 0;                                                               /*0007*/
   i++;                                                                 /*0008*/
#pragma distributed on_cluster=0
   {
      a[i] = 42;                                                        /*0012*/
      i++;                                                              /*0013*/
   }
#pragma distributed on_cluster=1
   {
      i--;                                                              /*0017*/
      r = a[i]+i-1;                                                     /*0018*/
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

VARIABLE_REPLICATION

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   int i;                                                               /*0002*/
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   int a[10];                                                           /*0003*/
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;                                                               /*0004*/
   i = 0;                                                               /*0007*/
   i++;                                                                 /*0008*/
#pragma distributed on_cluster=0
   {
      a[i] = 42;                                                        /*0012*/
      i++;                                                              /*0013*/
   }
#pragma distributed on_cluster=1
   {
      i--;                                                              /*0017*/
      r = a[i]+i-1;                                                     /*0018*/
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

COPY_VALUE_OF_WRITE

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   int i;                                                               /*0002*/
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   int a[10];                                                           /*0003*/
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;                                                               /*0004*/
   i = 0;                                                               /*0007*/
   __i_3 = i;
   i = 0;                                                               /*0007*/
   __i_2 = i;
   i = 0;                                                               /*0007*/
   __i_1 = i;
   i = 0;                                                               /*0007*/
   __i_0 = i;
   i++;                                                                 /*0008*/
   __i_3 = i;
   i++;                                                                 /*0008*/
   __i_2 = i;
   i++;                                                                 /*0008*/
   __i_1 = i;
   i++;                                                                 /*0008*/
   __i_0 = i;
#pragma distributed on_cluster=0
   {
      a[i] = 42;                                                        /*0012*/
      __a_0[i] = a[i];
      __a_1[i] = a[i];
      __a_2[i] = a[i];
      __a_3[i] = a[i];
      i++;                                                              /*0013*/
      __i_0 = i;
      __i_1 = i;
      __i_2 = i;
      __i_3 = i;
   }
#pragma distributed on_cluster=1
   {
      i--;                                                              /*0017*/
      __i_0 = i;
      __i_1 = i;
      __i_2 = i;
      __i_3 = i;
      r = a[i]+i-1;                                                     /*0018*/
      __r_0 = r;
      __r_1 = r;
      __r_2 = r;
      __r_3 = r;
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

ELIMINATE_ORIGINAL_VARIABLES

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   int i;                                                               /*0002*/
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   int a[10];                                                           /*0003*/
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;                                                               /*0004*/
   __i_3 = 0;                                                           /*0007*/
   __i_3 = __i_3;
   __i_2 = 0;                                                           /*0007*/
   __i_2 = __i_2;
   __i_1 = 0;                                                           /*0007*/
   __i_1 = __i_1;
   __i_0 = 0;                                                           /*0007*/
   __i_0 = __i_0;
   __i_3++;                                                             /*0008*/
   __i_3 = __i_3;
   __i_2++;                                                             /*0008*/
   __i_2 = __i_2;
   __i_1++;                                                             /*0008*/
   __i_1 = __i_1;
   __i_0++;                                                             /*0008*/
   __i_0 = __i_0;
#pragma distributed on_cluster=0
   {
      __a_0[__i_0] = 42;                                                /*0012*/
      __a_0[__i_0] = __a_0[__i_0];
      __a_1[__i_0] = __a_0[__i_0];
      __a_2[__i_0] = __a_0[__i_0];
      __a_3[__i_0] = __a_0[__i_0];
      __i_0++;                                                          /*0013*/
      __i_0 = __i_0;
      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
   }
#pragma distributed on_cluster=1
   {
      __i_1--;                                                          /*0017*/
      __i_0 = __i_1;
      __i_1 = __i_1;
      __i_2 = __i_1;
      __i_3 = __i_1;
      __r_1 = __a_1[__i_1]+__i_1-1;                                     /*0018*/
      __r_0 = __r_1;
      __r_1 = __r_1;
      __r_2 = __r_1;
      __r_3 = __r_1;
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

CLEAN_DECLARATIONS

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;                                                               /*0004*/
   __i_3 = 0;                                                           /*0007*/
   __i_3 = __i_3;
   __i_2 = 0;                                                           /*0007*/
   __i_2 = __i_2;
   __i_1 = 0;                                                           /*0007*/
   __i_1 = __i_1;
   __i_0 = 0;                                                           /*0007*/
   __i_0 = __i_0;
   __i_3++;                                                             /*0008*/
   __i_3 = __i_3;
   __i_2++;                                                             /*0008*/
   __i_2 = __i_2;
   __i_1++;                                                             /*0008*/
   __i_1 = __i_1;
   __i_0++;                                                             /*0008*/
   __i_0 = __i_0;
#pragma distributed on_cluster=0
   {
      __a_0[__i_0] = 42;                                                /*0012*/
      __a_0[__i_0] = __a_0[__i_0];
      __a_1[__i_0] = __a_0[__i_0];
      __a_2[__i_0] = __a_0[__i_0];
      __a_3[__i_0] = __a_0[__i_0];
      __i_0++;                                                          /*0013*/
      __i_0 = __i_0;
      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
   }
#pragma distributed on_cluster=1
   {
      __i_1--;                                                          /*0017*/
      __i_0 = __i_1;
      __i_1 = __i_1;
      __i_2 = __i_1;
      __i_3 = __i_1;
      __r_1 = __a_1[__i_1]+__i_1-1;                                     /*0018*/
      __r_0 = __r_1;
      __r_1 = __r_1;
      __r_2 = __r_1;
      __r_3 = __r_1;
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}

IDENTITY_ELIMINATION

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;                                                               /*0004*/
   __i_3 = 0;                                                           /*0007*/

   __i_2 = 0;                                                           /*0007*/

   __i_1 = 0;                                                           /*0007*/

   __i_0 = 0;                                                           /*0007*/

   __i_3++;                                                             /*0008*/

   __i_2++;                                                             /*0008*/

   __i_1++;                                                             /*0008*/

   __i_0++;                                                             /*0008*/

#pragma distributed on_cluster=0
   {
      __a_0[__i_0] = 42;                                                /*0012*/

      __a_1[__i_0] = __a_0[__i_0];
      __a_2[__i_0] = __a_0[__i_0];
      __a_3[__i_0] = __a_0[__i_0];
      __i_0++;                                                          /*0013*/

      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
   }
#pragma distributed on_cluster=1
   {
      __i_1--;                                                          /*0017*/
      __i_0 = __i_1;

      __i_2 = __i_1;
      __i_3 = __i_1;
      __r_1 = __a_1[__i_1]+__i_1-1;                                     /*0018*/
      __r_0 = __r_1;

      __r_2 = __r_1;
      __r_3 = __r_1;
   }
   
   //i=1, a[1]=42, r=42
   return r;                                                            /*0022*/
}


Final Code

int main()
{
   // Generated by Pass VARIABLE_REPLICATION
   int __i_0, __i_1, __i_2, __i_3;
   // Generated by Pass VARIABLE_REPLICATION
   int __a_0[10], __a_1[10], __a_2[10], __a_3[10];
   // Generated by Pass VARIABLE_REPLICATION
   int __r_0, __r_1, __r_2, __r_3;
   int r;
   __i_3 = 0;

   __i_2 = 0;

   __i_1 = 0;

   __i_0 = 0;

   __i_3++;

   __i_2++;

   __i_1++;

   __i_0++;

#pragma distributed on_cluster=0
   {
      __a_0[__i_0] = 42;

      __a_1[__i_0] = __a_0[__i_0];
      __a_2[__i_0] = __a_0[__i_0];
      __a_3[__i_0] = __a_0[__i_0];
      __i_0++;

      __i_1 = __i_0;
      __i_2 = __i_0;
      __i_3 = __i_0;
   }
#pragma distributed on_cluster=1
   {
      __i_1--;
      __i_0 = __i_1;

      __i_2 = __i_1;
      __i_3 = __i_1;
      __r_1 = __a_1[__i_1]+__i_1-1;
      __r_0 = __r_1;

      __r_2 = __r_1;
      __r_3 = __r_1;
   }
   
   //i=1, a[1]=42, r=42
   return r;
}
