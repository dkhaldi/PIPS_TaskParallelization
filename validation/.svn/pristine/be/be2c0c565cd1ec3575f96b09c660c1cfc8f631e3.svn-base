!
! File CST_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CST_parameters.h"
      INTEGER L
      CALL HPFC INIT HOST

!!hpf$ independent(j,i)
!      do j=1,n
!         do i=1,n
!            a(i,j) = 0.
!         end do
!      end do


      READ *, L
! updating shared variable L
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = L
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update


      CALL HPFC HOST END
      END
!
! That is all for CST_host.f
!
!
! File CST_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for CST
!
!
! initializing array A, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 5
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 10
      RANGEA(1, 2, 3) = 10
!
      RANGEA(1, 2, 4) = 2
      RANGEA(1, 2, 5) = 5
      RANGEA(1, 2, 6) = 1
      RANGEA(1, 2, 7) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 2
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for CST_init.h
!
!
! File CST_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CST_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER I_1, I_2, I_3, I_4, I_5, I_6, I_7, I_8, L
      REAL*4 A(1:5, 1:5)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_6, I_7, I_8, 1, N, 1, 1)

!!hpf$ independent(j,i)
!      do j=1,n
!         do i=1,n
!            a(i,j) = 0.
!         end do
!      end do


! updating shared variable L
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      L = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update

      CALL HPFC LOOP BOUNDS(I_2, I_3, I_4, L, L, 1, 2)
      DO I_1 = I_2, I_3
         DO I_5 = I_6, I_7
            A(I_5,I_1) = 1.
         ENDDO
      ENDDO

      CALL HPFC NODE END
      END
!
! That is all for CST_node.f
!
!
! File CST_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for CST
!
      integer 
     $    CST A LO1,
     $    CST A UP1
      parameter(CST A LO1 = 1)
      parameter(CST A UP1 = 5)
      integer 
     $    CST A LO2,
     $    CST A UP2
      parameter(CST A LO2 = 1)
      parameter(CST A UP2 = 5)
!
! That is all for CST_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template A, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 10
      RANGET(1, 2, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 1)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
