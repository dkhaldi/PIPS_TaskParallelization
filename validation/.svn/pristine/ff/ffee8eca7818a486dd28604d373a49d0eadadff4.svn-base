!
! File HPFTEST31_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST31_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, T LID, I
      REAL*4 B(1:10, 1:10)
      CALL HPFC INIT HOST
      PRINT *, 'hpftest31 running'
! collecting distributed variable B
      DO PSI1 = 1, 2
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO ALPHA1 = MAX(2, 5*PSI1-4), MIN(10, 5*PSI1)
            ALPHA2 = 1
            LALPHA1 = ALPHA1-5*PSI1+5
            LALPHA2 = 1
            BUF INDEX = BUF INDEX+1
            B(ALPHA1,ALPHA2) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      DO I = 2, 10
         PRINT *, 'b(', I, ',1)=', B(I,1)
      ENDDO
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      PRINT *, 'hpftest31 ended'
      CALL HPFC HOST END
      END
!
! That is all for HPFTEST31_host.f
!
!
! File HPFTEST31_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for HPFTEST31
!
!
! initializing array A, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 10
      RANGEA(2, 1, 3) = 10
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 5
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 10
      RANGEA(2, 2, 3) = 10
!
      RANGEA(2, 2, 4) = 0

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! initializing array B, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 5
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 10
      RANGEA(1, 2, 3) = 10
!
      RANGEA(1, 2, 4) = 0

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 2
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for HPFTEST31_init.h
!
!
! File HPFTEST31_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "HPFTEST31_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, I_1, I_2, I_3, 
     &I_4, I_5, I_6, I_7, I_8, I, J
      REAL*4 A(0:5, 1:10), B(1:5, 1:10)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_6, I_7, I_8, 2, 10, 1, 1)
      CALL HPFC LOOP BOUNDS(I_2, I_3, I_4, 1, 10, 2, 1)
      I = I_4
      DO I_1 = I_2, I_3
         I = I+1
         DO J = 1, 10
            A(I_1,J) = (I-1)*10+J-1
         ENDDO
      ENDDO
! P(1) send A(5, 1:10) to (+1)
      IF (MY POS(1,1).EQ.1) THEN
         CALL HPFC CMPNEIGHBOUR(1)
         CALL HPFC REAL4 PACK 2(A, HPFTEST31 A LO1, HPFTEST31 A UP1, 
     &   HPFTEST31 A LO2, HPFTEST31 A UP2, 5, 5, 1, 1, 10, 1)
         CALL HPFC SNDTO N
      ENDIF
! P(2) receive A(0, 1:10) from (-1)
      IF (MY POS(1,1).EQ.2) THEN
         CALL HPFC CMPNEIGHBOUR(-1)
         CALL HPFC RCVFR N
         CALL HPFC REAL4 UNPACK 2(A, HPFTEST31 A LO1, HPFTEST31 A UP1
     &   , HPFTEST31 A LO2, HPFTEST31 A UP2, 0, 0, 1, 1, 10, 1)
      ENDIF
      DO I_5 = I_6, I_7
         DO J = 1, 10
            B(I_5,J) = A(I_5-1,J)
         ENDDO
      ENDDO
! collecting distributed variable B
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO ALPHA1 = MAX(2, 5*PSI1-4), MIN(10, 5*PSI1)
         ALPHA2 = 1
         LALPHA1 = ALPHA1-5*PSI1+5
         LALPHA2 = 1
         BUF INDEX = BUF INDEX+1
         HPFC REAL4 BUFF(BUF INDEX) = B(LALPHA1,LALPHA2)
      ENDDO
      CALL HPFC REAL4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      CALL HPFC NODE END
      END
!
! That is all for HPFTEST31_node.f
!
!
! File HPFTEST31_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for HPFTEST31
!
      integer 
     $    HPFTEST31 A LO1,
     $    HPFTEST31 A UP1
      parameter(HPFTEST31 A LO1 = 0)
      parameter(HPFTEST31 A UP1 = 5)
      integer 
     $    HPFTEST31 A LO2,
     $    HPFTEST31 A UP2
      parameter(HPFTEST31 A LO2 = 1)
      parameter(HPFTEST31 A UP2 = 10)
      integer 
     $    HPFTEST31 B LO1,
     $    HPFTEST31 B UP1
      parameter(HPFTEST31 B LO1 = 1)
      parameter(HPFTEST31 B UP1 = 5)
      integer 
     $    HPFTEST31 B LO2,
     $    HPFTEST31 B UP2
      parameter(HPFTEST31 B LO2 = 1)
      parameter(HPFTEST31 B UP2 = 10)
!
! That is all for HPFTEST31_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 10
      RANGET(1, 2, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 1)
      parameter(REALNBOFPROCESSORS = 1)
      parameter(REALMAXSIZEOFPROCS = 2)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
