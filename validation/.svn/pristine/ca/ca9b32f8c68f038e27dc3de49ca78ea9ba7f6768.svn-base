
PRINT_CODE_SIMPLE_POINTER_VALUES


// IN Pointer values: none


// OUT Pointer values: none

int main()
{

// Pointer values: none

   int a[2], b, *p;

// Pointer values:
// p == *ANY_MODULE*:*UNDEFINED* (exact);

   a[0] = 0;

// Pointer values:
// p == *ANY_MODULE*:*UNDEFINED* (exact);

   a[1] = 1;

// Pointer values:
// p == *ANY_MODULE*:*UNDEFINED* (exact);

   if (a[0]>a[1]) {

// Pointer values:
// p == *ANY_MODULE*:*UNDEFINED* (exact);

      p = a;

// Pointer values:
// p == a (exact);

      b = 0;
   }
   else {

// Pointer values:
// p == *ANY_MODULE*:*UNDEFINED* (exact);

      p = a+1;

// Pointer values:
// p == &a[1] (exact);

      b = 1;
   }

// Pointer values:
// p == a (may);
// p == &a[1] (may);

   b = p[0];

// Pointer values:
// p == a (may);
// p == &a[1] (may);

   return b;
}

PROPER_EFFECTS_WITH_POINTER_VALUES

int main()
{
   int a[2], b, *p;
//             <    is written>: a[0]
   a[0] = 0;
//             <    is written>: a[1]
   a[1] = 1;
//             <    is read   >: a[0] a[1]
   if (a[0]>a[1]) {
//             <    is written>: p
      p = a;
//             <    is written>: b
      b = 0;
   }
   else {
//             <    is written>: p
      p = a+1;
//             <    is written>: b
      b = 1;
   }
//             <may be read   >: a[0] a[1]
//             <    is read   >: p
//             <    is written>: b
   b = p[0];
//             <    is read   >: b
   return b;
}

MUST_REGIONS_WITH_POINTER_VALUES

int main()
{
   int a[2], b, *p;

//  <a[PHI1]-W-EXACT-{PHI1==0}>

   a[0] = 0;

//  <a[PHI1]-W-EXACT-{PHI1==1}>

   a[1] = 1;

//  <a[PHI1]-R-EXACT-{PHI1==1}>
//  <a[PHI1]-R-EXACT-{PHI1==0}>

   if (a[0]>a[1]) {

//  <p-W-EXACT-{}>

      p = a;

//  <b-W-EXACT-{}>

      b = 0;
   }
   else {

//  <p-W-EXACT-{}>

      p = a+1;

//  <b-W-EXACT-{}>

      b = 1;
   }

//  <a[PHI1]-R-MAY-{PHI1==1, 0<=b, b<=1}>
//  <a[PHI1]-R-MAY-{PHI1==0, 0<=b, b<=1}>
//  <b-W-EXACT-{}>
//  <p-R-EXACT-{}>

   b = p[0];

//  <b-R-EXACT-{}>

   return b;
}

PRINT_CODE_REGIONS

int main()
{
   int a[2], b, *p;

//  <a[PHI1]-W-EXACT-{PHI1==0}>

   a[0] = 0;

//  <a[PHI1]-W-EXACT-{PHI1==1}>

   a[1] = 1;

//  <a[PHI1]-R-EXACT-{0<=PHI1, PHI1<=1}>
//  <b-W-EXACT-{}>
//  <p-W-EXACT-{}>

   if (a[0]>a[1]) {

//  <p-W-EXACT-{}>

      p = a;

//  <b-W-EXACT-{}>

      b = 0;
   }
   else {

//  <p-W-EXACT-{}>

      p = a+1;

//  <b-W-EXACT-{}>

      b = 1;
   }

//  <a[PHI1]-R-MAY-{0<=PHI1, PHI1<=1, 0<=b, b<=1}>
//  <b-W-EXACT-{}>
//  <p-R-EXACT-{}>

   b = p[0];

//  <b-R-EXACT-{}>

   return b;
}
