      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      IF (NOTA) THEN                                                    0045
         NROWA = M                                                      0046
         NCOLA = K                                                      0047
      ELSE
         NROWA = K                                                      0049
         NCOLA = M                                                      0050
      ENDIF
      IF (NOTB) THEN                                                    0052
         NROWB = K                                                      0053
      ELSE
         NROWB = N                                                      0055
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0061
     &TRANSB, 'T')) THEN                                                0061
         INFO = 2                                                       0068
      ELSEIF (M.LT.0) THEN                                              0061
         INFO = 3                                                       0070
      ELSEIF (N.LT.0) THEN                                              0061
         INFO = 4                                                       0072
      ELSEIF (K.LT.0) THEN                                              0061
         INFO = 5                                                       0074
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0061
         INFO = 8                                                       0076
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0061
         INFO = 10                                                      0078
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0061
         INFO = 13                                                      0080
      ENDIF
      IF (INFO.NE.0) GOTO 99999                                         0082
*
*     Quick return if possible.
*
      IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA.EQ.    0089
     &ONE) RETURN                                                       0089
*
*     And if  alpha.eq.zero.
*
      IF (ALPHA.EQ.ZERO) GOTO 99998                                     0095
*
*     Start the operations.
*
      IF (NOTB) THEN                                                    0114
         IF (NOTA) THEN                                                 0115
*
*           Form  C := alpha*A*B + beta*C.
*
            DO 90 J = 1, N                                              0119
               IF (BETA.EQ.ZERO) THEN                                   0120
                  DO 50 I = 1, M                                        0121
                     C(I,J) = ZERO                                      0122
50                   CONTINUE                                           0123
               ELSEIF (BETA.NE.ONE) THEN                                0120
                  DO 60 I = 1, M                                        0125
                     C(I,J) = BETA*C(I,J)                               0126
60                   CONTINUE                                           0127
               ENDIF
               DO 80 L = 1, K                                           0129
                  IF (B(L,J).NE.ZERO) THEN                              0130
                     TEMP = ALPHA*B(L,J)                                0131
                     DO 70 I = 1, M                                     0132
                        C(I,J) = C(I,J)+TEMP*A(I,L)                     0133
70                      CONTINUE                                        0134
                  ENDIF
80                CONTINUE                                              0136
90             CONTINUE                                                 0137
         ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
            DO 120 J = 1, N                                             0142
               DO 110 I = 1, M                                          0143
                  TEMP = ZERO                                           0144
                  DO 100 L = 1, K                                       0145
                     TEMP = TEMP+A(L,I)*B(L,J)                          0146
100                  CONTINUE                                           0147
                  IF (BETA.EQ.ZERO) THEN                                0148
                     C(I,J) = ALPHA*TEMP                                0149
                  ELSE
                     C(I,J) = ALPHA*TEMP+BETA*C(I,J)                    0151
                  ENDIF
110               CONTINUE                                              0153
120            CONTINUE                                                 0154
         ENDIF
      ELSEIF (NOTA) THEN                                                0114
*
*           Form  C := alpha*A*B' + beta*C
*
         DO 170 J = 1, N                                                0161
            IF (BETA.EQ.ZERO) THEN                                      0162
               DO 130 I = 1, M                                          0163
                  C(I,J) = ZERO                                         0164
130               CONTINUE                                              0165
            ELSEIF (BETA.NE.ONE) THEN                                   0162
               DO 140 I = 1, M                                          0167
                  C(I,J) = BETA*C(I,J)                                  0168
140               CONTINUE                                              0169
            ENDIF
            DO 160 L = 1, K                                             0171
               IF (B(J,L).NE.ZERO) THEN                                 0172
                  TEMP = ALPHA*B(J,L)                                   0173
                  DO 150 I = 1, M                                       0174
                     C(I,J) = C(I,J)+TEMP*A(I,L)                        0175
150                  CONTINUE                                           0176
               ENDIF
160            CONTINUE                                                 0178
170         CONTINUE                                                    0179
      ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
         DO 200 J = 1, N                                                0184
            DO 190 I = 1, M                                             0185
               TEMP = ZERO                                              0186
               DO 180 L = 1, K                                          0187
                  TEMP = TEMP+A(L,I)*B(J,L)                             0188
180               CONTINUE                                              0189
               IF (BETA.EQ.ZERO) THEN                                   0190
                  C(I,J) = ALPHA*TEMP                                   0191
               ELSE
                  C(I,J) = ALPHA*TEMP+BETA*C(I,J)                       0193
               ENDIF
190            CONTINUE                                                 0195
200         CONTINUE                                                    0196
      ENDIF
*
      RETURN
99998 CONTINUE
      IF (BETA.EQ.ZERO) THEN                                            0096
         DO 20 J = 1, N                                                 0097
            DO 10 I = 1, M                                              0098
               C(I,J) = ZERO                                            0099
10             CONTINUE                                                 0100
20          CONTINUE                                                    0101
      ELSE
         DO 40 J = 1, N                                                 0103
            DO 30 I = 1, M                                              0104
               C(I,J) = BETA*C(I,J)                                     0105
30             CONTINUE                                                 0106
40          CONTINUE                                                    0107
      ENDIF
      RETURN
99999 CONTINUE
*         CALL XERBLA( 'SGEMM ', INFO )
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      IF (NOTA) THEN                                                    0045
         NROWA = M                                                      0046
         NCOLA = K                                                      0047
      ELSE
         NROWA = K                                                      0049
         NCOLA = M                                                      0050
      ENDIF
      IF (NOTB) THEN                                                    0052
         NROWB = K                                                      0053
      ELSE
         NROWB = N                                                      0055
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0061
     &TRANSB, 'T')) THEN                                                0061
         INFO = 2                                                       0068
      ELSEIF (M.LT.0) THEN                                              0061
         INFO = 3                                                       0070
      ELSEIF (N.LT.0) THEN                                              0061
         INFO = 4                                                       0072
      ELSEIF (K.LT.0) THEN                                              0061
         INFO = 5                                                       0074
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0061
         INFO = 8                                                       0076
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0061
         INFO = 10                                                      0078
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0061
         INFO = 13                                                      0080
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           IF (BETA.EQ.ZERO) THEN                       0148
                              C(I,J) = ALPHA*TEMP                       0149
                           ELSE
                              C(I,J) = ALPHA*TEMP+BETA*C(I,J)           0151
                           ENDIF
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        IF (BETA.EQ.ZERO) THEN                          0190
                           C(I,J) = ALPHA*TEMP                          0191
                        ELSE
                           C(I,J) = ALPHA*TEMP+BETA*C(I,J)              0193
                        ENDIF
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      IF (NOTA) THEN                                                    0045
         NROWA = M                                                      0046
         NCOLA = K                                                      0047
      ELSE
         NROWA = K                                                      0049
         NCOLA = M                                                      0050
      ENDIF
      IF (NOTB) THEN                                                    0052
         NROWB = K                                                      0053
      ELSE
         NROWB = N                                                      0055
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0061
     &TRANSB, 'T')) THEN                                                0061
         INFO = 2                                                       0068
      ELSEIF (M.LT.0) THEN                                              0061
         INFO = 3                                                       0070
      ELSEIF (N.LT.0) THEN                                              0061
         INFO = 4                                                       0072
      ELSEIF (K.LT.0) THEN                                              0061
         INFO = 5                                                       0074
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0061
         INFO = 8                                                       0076
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0061
         INFO = 10                                                      0078
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0061
         INFO = 13                                                      0080
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           IF (BETA.EQ.ZERO) THEN                       0148
                              C(I,J) = ALPHA*TEMP                       0149
                           ELSE
                              C(I,J) = ALPHA*TEMP+BETA*C(I,J)           0151
                           ENDIF
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        IF (BETA.EQ.ZERO) THEN                          0190
                           C(I,J) = ALPHA*TEMP                          0191
                        ELSE
                           C(I,J) = ALPHA*TEMP+BETA*C(I,J)              0193
                        ENDIF
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
!$PIPS IF_TO_CONVERT
      IF (NOTA) THEN
         NROWA = M                                                      0046
         NCOLA = K                                                      0047
      ENDIF
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTA) THEN
         NROWA = K                                                      0049
         NCOLA = M                                                      0050
      ENDIF
!$PIPS IF_TO_CONVERT
      IF (NOTB) NROWB = K
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTB) NROWB = N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
!$PIPS IF_TO_CONVERT
         IF (L_6) INFO = 2
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6) L_5 = M.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.L_5) INFO = 3
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5) L_4 = N.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.L_4)) INFO = 4
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND..NOT.L_4)) L_3 = K.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.L_3))) INFO = 5
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND..NOT.L_3))) L_2
     &    = LDA.LT.MAX(1, NROWA)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.
     &   L_2)))) INFO = 8
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.
     &   .NOT.L_2)))) L_1 = LDB.LT.MAX(1, NROWB)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND.L_1))))) INFO = 10
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND..NOT.L_1))))) L_0 = LDC.LT.MAX(1, M)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND.(.NOT.L_1.AND.L_0)))))) INFO = 13
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           L_7 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                           IF (L_7) C(I,J) = ALPHA*TEMP
!$PIPS IF_TO_CONVERT
                           IF (.NOT.L_7) C(I,J) = ALPHA*TEMP+BETA*C(I
     &                     ,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        L_8 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                        IF (L_8) C(I,J) = ALPHA*TEMP
!$PIPS IF_TO_CONVERT
                        IF (.NOT.L_8) C(I,J) = ALPHA*TEMP+BETA*C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
!$PIPS IF_TO_CONVERT
      IF (NOTA) THEN
         NROWA = M                                                      0046
         NCOLA = K                                                      0047
      ENDIF
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTA) THEN
         NROWA = K                                                      0049
         NCOLA = M                                                      0050
      ENDIF
!$PIPS IF_TO_CONVERT
      IF (NOTB) NROWB = K
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTB) NROWB = N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
!$PIPS IF_TO_CONVERT
         IF (L_6) INFO = 2
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6) L_5 = M.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.L_5) INFO = 3
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5) L_4 = N.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.L_4)) INFO = 4
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND..NOT.L_4)) L_3 = K.LT.0
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.L_3))) INFO = 5
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND..NOT.L_3))) L_2
     &    = LDA.LT.MAX(1, NROWA)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.
     &   L_2)))) INFO = 8
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.
     &   .NOT.L_2)))) L_1 = LDB.LT.MAX(1, NROWB)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND.L_1))))) INFO = 10
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND..NOT.L_1))))) L_0 = LDC.LT.MAX(1, M)
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3.AND.(
     &   .NOT.L_2.AND.(.NOT.L_1.AND.L_0)))))) INFO = 13
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           L_7 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                           IF (L_7) C(I,J) = ALPHA*TEMP
!$PIPS IF_TO_CONVERT
                           IF (.NOT.L_7) C(I,J) = ALPHA*TEMP+BETA*C(I
     &                     ,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        L_8 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                        IF (L_8) C(I,J) = ALPHA*TEMP
!$PIPS IF_TO_CONVERT
                        IF (.NOT.L_8) C(I,J) = ALPHA*TEMP+BETA*C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:
     &SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, L_5
     &, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:NROWA
      NCOLA = NOTA?K:NCOLA
      NROWA = .NOT.NOTA?K:NROWA
      NCOLA = .NOT.NOTA?M:NCOLA
      NROWB = NOTB?K:NROWB
      NROWB = .NOT.NOTB?N:NROWB
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_5 = .NOT.L_6?L_50:L_5
         INFO = .NOT.L_6.AND.L_5?3:INFO
         L_40 = N.LT.0
         L_4 = .NOT.L_6.AND..NOT.L_5?L_40:L_4
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.L_4)?4:INFO
         L_30 = K.LT.0
         L_3 = .NOT.L_6.AND.(.NOT.L_5.AND..NOT.L_4)?L_30:L_3
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.L_3))?5:INFO
         L_20 = LDA.LT.MAX(1, NROWA)
         L_2 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND..NOT.L_3))?
     &   L_20:L_2
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.L_2)))?8:INFO
         L_10 = LDB.LT.MAX(1, NROWB)
         L_1 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND..NOT.L_2)))?L_10:L_1
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND.L_1))))?10:INFO
         L_00 = LDC.LT.MAX(1, M)
         L_0 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND..NOT.L_1))))?L_00:L_0
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND.(.NOT.L_1.AND.L_0)))))?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           C1 = ALPHA*TEMP+BETA*C(I,J)
                           C(I,J) = .NOT.L_7?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        C3 = ALPHA*TEMP+BETA*C(I,J)
                        C(I,J) = .NOT.L_8?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NROWA, NROWB
      REAL*4 C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:
     &SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, L_5
     &, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_5 = .NOT.L_6?L_50:L_5
         INFO = .NOT.L_6.AND.L_5?3:INFO
         L_40 = N.LT.0
         L_4 = .NOT.L_6.AND..NOT.L_5?L_40:L_4
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.L_4)?4:INFO
         L_30 = K.LT.0
         L_3 = .NOT.L_6.AND.(.NOT.L_5.AND..NOT.L_4)?L_30:L_3
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.L_3))?5:INFO
         L_20 = LDA.LT.MAX(1, NROWA)
         L_2 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND..NOT.L_3))?
     &   L_20:L_2
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.L_2)))?8:INFO
         L_10 = LDB.LT.MAX(1, NROWB)
         L_1 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND..NOT.L_2)))?L_10:L_1
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND.L_1))))?10:INFO
         L_00 = LDC.LT.MAX(1, M)
         L_0 = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND..NOT.L_1))))?L_00:L_0
         INFO = .NOT.L_6.AND.(.NOT.L_5.AND.(.NOT.L_4.AND.(.NOT.L_3
     &   .AND.(.NOT.L_2.AND.(.NOT.L_1.AND.L_0)))))?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              TEMP = TEMP+A(L,I)*B(L,J)                 0146
100                           CONTINUE                                  0147
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           C1 = ALPHA*TEMP+BETA*C(I,J)
                           C(I,J) = .NOT.L_7?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           TEMP = TEMP+A(L,I)*B(J,L)                    0188
180                        CONTINUE                                     0189
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        C3 = ALPHA*TEMP+BETA*C(I,J)
                        C(I,J) = .NOT.L_8?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, 
     &NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     DO 10 I = 1, M                                     0098
                        C(I,J) = ZERO                                   0099
10                      CONTINUE                                        0100
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     DO 30 I = 1, M                                     0104
                        C(I,J) = BETA*C(I,J)                            0105
30                      CONTINUE                                        0106
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           DO 50 I = 1, M                               0121
                              C(I,J) = ZERO                             0122
50                            CONTINUE                                  0123
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           DO 60 I = 1, M                               0125
                              C(I,J) = BETA*C(I,J)                      0126
60                            CONTINUE                                  0127
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              DO 70 I = 1, M                            0132
                                 F_0 = TEMP*A(I,L)
                                 C(I,J) = C(I,J)+F_0                    0133
70                               CONTINUE                               0134
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           DO 100 L = 1, K                              0145
                              F_1 = A(L,I)*B(L,J)
                              TEMP = TEMP+F_1                           0146
100                           CONTINUE                                  0147
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        DO 130 I = 1, M                                 0163
                           C(I,J) = ZERO                                0164
130                        CONTINUE                                     0165
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        DO 140 I = 1, M                                 0167
                           C(I,J) = BETA*C(I,J)                         0168
140                        CONTINUE                                     0169
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           DO 150 I = 1, M                              0174
                              F_4 = TEMP*A(I,L)
                              C(I,J) = C(I,J)+F_4                       0175
150                           CONTINUE                                  0176
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        DO 180 L = 1, K                                 0187
                           F_5 = A(L,I)*B(J,L)
                           TEMP = TEMP+F_5                              0188
180                        CONTINUE                                     0189
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(LU_IND0+1,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
                        C(LU_IND0+1,J) = ZERO
                        C(LU_IND0+2,J) = ZERO
                        C(LU_IND0+3,J) = ZERO
                        C(LU_IND0+4,J) = ZERO
99998                   CONTINUE
                     I = MAX0(LU_NUB0, 0)+1
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
                     I = MAX0(LU_NUB1, 0)+1
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(LU_IND2+1,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
                              C(LU_IND2+1,J) = ZERO
                              C(LU_IND2+2,J) = ZERO
                              C(LU_IND2+3,J) = ZERO
                              C(LU_IND2+4,J) = ZERO
99994                         CONTINUE
                           I = MAX0(LU_NUB2, 0)+1
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                           I = MAX0(LU_NUB3, 0)+1
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+2,L)
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+3,L)
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+4,L)
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_0
99990                            CONTINUE
                              I = MAX0(LU_NUB4, 0)+1
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              TEMP = TEMP+F_1
99989                         CONTINUE
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
                              TEMP = TEMP+F_1
99988                         CONTINUE
                           L = MAX0(LU_NUB5, 0)+1
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(LU_IND6+1,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
                           C(LU_IND6+1,J) = ZERO
                           C(LU_IND6+2,J) = ZERO
                           C(LU_IND6+3,J) = ZERO
                           C(LU_IND6+4,J) = ZERO
99986                      CONTINUE
                        I = MAX0(LU_NUB6, 0)+1
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                        I = MAX0(LU_NUB7, 0)+1
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
                              F_4 = TEMP*A(LU_IND8+2,L)
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_4
                              F_4 = TEMP*A(LU_IND8+3,L)
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_4
                              F_4 = TEMP*A(LU_IND8+4,L)
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_4
99982                         CONTINUE
                           I = MAX0(LU_NUB8, 0)+1
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           TEMP = TEMP+F_5
99981                      CONTINUE
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
                           TEMP = TEMP+F_5
99980                      CONTINUE
                        L = MAX0(LU_NUB9, 0)+1
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(1+LU_IND0,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
                        C(1+LU_IND0,J) = ZERO
                        C(2+LU_IND0,J) = ZERO
                        C(3+LU_IND0,J) = ZERO
                        C(4+LU_IND0,J) = ZERO
99998                   CONTINUE
                     I = 1+MAX0(LU_NUB0, 0)
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
                        C(2+LU_IND1,J) = BETA*C(2+LU_IND1,J)
                        C(3+LU_IND1,J) = BETA*C(3+LU_IND1,J)
                        C(4+LU_IND1,J) = BETA*C(4+LU_IND1,J)
99996                   CONTINUE
                     I = 1+MAX0(LU_NUB1, 0)
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(1+LU_IND2,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
                              C(1+LU_IND2,J) = ZERO
                              C(2+LU_IND2,J) = ZERO
                              C(3+LU_IND2,J) = ZERO
                              C(4+LU_IND2,J) = ZERO
99994                         CONTINUE
                           I = 1+MAX0(LU_NUB2, 0)
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
                              C(2+LU_IND3,J) = BETA*C(2+LU_IND3,J)
                              C(3+LU_IND3,J) = BETA*C(3+LU_IND3,J)
                              C(4+LU_IND3,J) = BETA*C(4+LU_IND3,J)
99992                         CONTINUE
                           I = 1+MAX0(LU_NUB3, 0)
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
                                 F_0 = TEMP*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_0
                                 F_0 = TEMP*A(2+LU_IND4,L)
                                 C(2+LU_IND4,J) = C(2+LU_IND4,J)+F_0
                                 F_0 = TEMP*A(3+LU_IND4,L)
                                 C(3+LU_IND4,J) = C(3+LU_IND4,J)+F_0
                                 F_0 = TEMP*A(4+LU_IND4,L)
                                 C(4+LU_IND4,J) = C(4+LU_IND4,J)+F_0
99990                            CONTINUE
                              I = 1+MAX0(LU_NUB4, 0)
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(1+LU_IND5,I)*B(1+LU_IND5,J)
                              TEMP = TEMP+F_1
99989                         CONTINUE
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
                              F_1 = A(1+LU_IND5,I)*B(1+LU_IND5,J)
                              TEMP = TEMP+F_1
                              F_1 = A(2+LU_IND5,I)*B(2+LU_IND5,J)
                              TEMP = TEMP+F_1
                              F_1 = A(3+LU_IND5,I)*B(3+LU_IND5,J)
                              TEMP = TEMP+F_1
                              F_1 = A(4+LU_IND5,I)*B(4+LU_IND5,J)
                              TEMP = TEMP+F_1
99988                         CONTINUE
                           L = 1+MAX0(LU_NUB5, 0)
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(1+LU_IND6,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
                           C(1+LU_IND6,J) = ZERO
                           C(2+LU_IND6,J) = ZERO
                           C(3+LU_IND6,J) = ZERO
                           C(4+LU_IND6,J) = ZERO
99986                      CONTINUE
                        I = 1+MAX0(LU_NUB6, 0)
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
                           C(2+LU_IND7,J) = BETA*C(2+LU_IND7,J)
                           C(3+LU_IND7,J) = BETA*C(3+LU_IND7,J)
                           C(4+LU_IND7,J) = BETA*C(4+LU_IND7,J)
99984                      CONTINUE
                        I = 1+MAX0(LU_NUB7, 0)
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
                              F_4 = TEMP*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_4
                              F_4 = TEMP*A(2+LU_IND8,L)
                              C(2+LU_IND8,J) = C(2+LU_IND8,J)+F_4
                              F_4 = TEMP*A(3+LU_IND8,L)
                              C(3+LU_IND8,J) = C(3+LU_IND8,J)+F_4
                              F_4 = TEMP*A(4+LU_IND8,L)
                              C(4+LU_IND8,J) = C(4+LU_IND8,J)+F_4
99982                         CONTINUE
                           I = 1+MAX0(LU_NUB8, 0)
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(1+LU_IND9,I)*B(J,1+LU_IND9)
                           TEMP = TEMP+F_5
99981                      CONTINUE
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
                           F_5 = A(1+LU_IND9,I)*B(J,1+LU_IND9)
                           TEMP = TEMP+F_5
                           F_5 = A(2+LU_IND9,I)*B(J,2+LU_IND9)
                           TEMP = TEMP+F_5
                           F_5 = A(3+LU_IND9,I)*B(J,3+LU_IND9)
                           TEMP = TEMP+F_5
                           F_5 = A(4+LU_IND9,I)*B(J,4+LU_IND9)
                           TEMP = TEMP+F_5
99980                      CONTINUE
                        L = 1+MAX0(LU_NUB9, 0)
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0034
      ZERO = 0.0E+0                                                     0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0043
      NOTB = LSAME(TRANSB, 'N')                                         0044
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0060
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0061
     &, 'T')) THEN                                                      0061
         INFO = 1                                                       0064
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0089
     &   .EQ.ONE) THEN                                                  0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0095
               IF (BETA.EQ.ZERO) THEN                                   0096
                  DO 20 J = 1, N                                        0097
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(LU_IND0+1,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
                        C(LU_IND0+1,J) = ZERO
                        C(LU_IND0+2,J) = ZERO
                        C(LU_IND0+3,J) = ZERO
                        C(LU_IND0+4,J) = ZERO
99998                   CONTINUE
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J = 1, N                                        0103
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0114
                  IF (NOTA) THEN                                        0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0119
                        IF (BETA.EQ.ZERO) THEN                          0120
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(LU_IND2+1,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
                              C(LU_IND2+1,J) = ZERO
                              C(LU_IND2+2,J) = ZERO
                              C(LU_IND2+3,J) = ZERO
                              C(LU_IND2+4,J) = ZERO
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE) THEN                       0120
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J).NE.ZERO) THEN                     0130
                              TEMP = ALPHA*B(L,J)                       0131
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+2,L)
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+3,L)
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_0
                                 F_0 = TEMP*A(LU_IND4+4,L)
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_0
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0142
                        DO 110 I = 1, M                                 0143
                           TEMP = ZERO                                  0144
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              TEMP = TEMP+F_1
99989                         CONTINUE
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
                              TEMP = TEMP+F_1
                              F_1 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
                              TEMP = TEMP+F_1
99988                         CONTINUE
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA) THEN                                       0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0161
                     IF (BETA.EQ.ZERO) THEN                             0162
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(LU_IND6+1,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
                           C(LU_IND6+1,J) = ZERO
                           C(LU_IND6+2,J) = ZERO
                           C(LU_IND6+3,J) = ZERO
                           C(LU_IND6+4,J) = ZERO
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE) THEN                          0162
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J,L).NE.ZERO) THEN                        0172
                           TEMP = ALPHA*B(J,L)                          0173
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
                              F_4 = TEMP*A(LU_IND8+2,L)
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_4
                              F_4 = TEMP*A(LU_IND8+3,L)
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_4
                              F_4 = TEMP*A(LU_IND8+4,L)
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_4
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0184
                     DO 190 I = 1, M                                    0185
                        TEMP = ZERO                                     0186
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           TEMP = TEMP+F_5
99981                      CONTINUE
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
                           TEMP = TEMP+F_5
                           F_5 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
                           TEMP = TEMP+F_5
99980                      CONTINUE
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      INTEGER*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWB0, NROWA0, J5, J4, J3, J2, J1, J0, INFO1, INFO0, 
     &I_00, I_10, I_20, LU_IND00, LU_IND10, LU_IND20, LU_IND30, 
     &LU_IND40, LU_IND50, LU_IND60, LU_IND70, LU_IND80, LU_IND90, 
     &LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, LU_IND7, 
     &LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, LU_IB5, 
     &LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, LU_NUB3, 
     &LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, LU_IND0, 
     &LU_IB0, LU_NUB0, M, N, K, LDA, LDB, LDC, I, L
      REAL*4 ZERO0, ONE0, TEMP1, TEMP0, F_03, F_02, F_01, F_00, F_13
     &, F_12, F_11, F_10, F_43, F_42, F_41, F_40, F_53, F_52, F_51, 
     &F_50, F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP
      LOGICAL NOTB0, NOTA0, L_611, L_500, L_400, L_300, L_200, L_100
     &, L_000, L_911, L_110, L_120, L_130, L_140, L_150, L_160, L_170
     &, L_180, L_190, L_210, L_220, L_230, L_240, L_250, L_260, L_270
     &, L_280, L_290, L_310, L_320, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_390, L_410, L_420, L_430, L_440, L_450, L_460, L_470
     &, L_480, L_490, L_510, L_520, L_530, L_540, L_550, L_560, L_570
     &, L_580, L_590, L_600, L_610, L_620, L_630, L_640, L_650, L_660
     &, L_670, L_680, L_690, L_700, L_710, L_720, L_730, L_740, L_750
     &, L_760, L_770, L_780, L_790, L_800, L_810, L_820, L_830, L_840
     &, L_850, L_860, L_870, L_880, L_890, L_900, L_910, L_920, L_930
     &, L_940, L_950, L_960, L_970, L_99, L_98, L_8, L_7, L_5, L_4, 
     &L_3, L_2, L_1, L_0
      CHARACTER TRANSA, TRANSB
      ONE0 = 1.0E+0                                                     0034
      ZERO0 = 0.0E+0                                                    0035
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0043
      NOTB0 = LSAME(TRANSB, 'N')                                        0044
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO0 = 0                                                         0060
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0061
     &TRANSA, 'T')) THEN                                                0061
         INFO1 = 1                                                      0064
         INFO0 = INFO1
      ELSE
         L_911 = .NOT.NOTB0
         L_110 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_110
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO0 = L_611?2:INFO0
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_5 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_5
         INFO0 = L_180?3:INFO0
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_210 = .NOT.L_5
         L_220 = L_190.AND.L_210
         L_4 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_5
         L_250 = L_240.AND.L_4
         L_260 = L_230.AND.L_250
         INFO0 = L_260?4:INFO0
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_5
         L_290 = .NOT.L_4
         L_310 = L_280.AND.L_290
         L_320 = L_270.AND.L_310
         L_3 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_5
         L_350 = .NOT.L_4
         L_360 = L_350.AND.L_3
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO0 = L_380?5:INFO0
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_5
         L_420 = .NOT.L_4
         L_430 = .NOT.L_3
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_2 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_5
         L_490 = .NOT.L_4
         L_510 = .NOT.L_3
         L_520 = L_510.AND.L_2
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO0 = L_550?8:INFO0
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_5
         L_580 = .NOT.L_4
         L_590 = .NOT.L_3
         L_600 = .NOT.L_2
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_1 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_5
         L_670 = .NOT.L_4
         L_680 = .NOT.L_3
         L_690 = .NOT.L_2
         L_700 = L_690.AND.L_1
         L_710 = L_680.AND.L_700
         L_720 = L_670.AND.L_710
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO0 = L_740?10:INFO0
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_5
         L_770 = .NOT.L_4
         L_780 = .NOT.L_3
         L_790 = .NOT.L_2
         L_800 = .NOT.L_1
         L_810 = L_790.AND.L_800
         L_820 = L_780.AND.L_810
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_0 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_5
         L_880 = .NOT.L_4
         L_890 = .NOT.L_3
         L_900 = .NOT.L_2
         L_910 = .NOT.L_1
         L_920 = L_910.AND.L_0
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO0
      ENDIF
      IF (INFO0.NE.0) THEN                                              0082
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0089
     &   .EQ.ONE0) THEN                                                 0089
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0095
               IF (BETA.EQ.ZERO0) THEN                                  0096
                  DO 20 J0 = 1, N                                       0097
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND00 = 0, LU_IB0-1
                        C(LU_IND00+1,J0) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
                        C(LU_IND0+1,J0) = ZERO0
                        C(LU_IND0+2,J0) = ZERO0
                        C(LU_IND0+3,J0) = ZERO0
                        C(LU_IND0+4,J0) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0101
               ELSE
                  DO 40 J1 = 1, N                                       0103
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND10 = 0, LU_IB1-1
                        C(LU_IND10+1,J1) = BETA*C(LU_IND10+1,J1)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
                        C(LU_IND1+1,J1) = BETA*C(LU_IND1+1,J1)
                        C(LU_IND1+2,J1) = BETA*C(LU_IND1+2,J1)
                        C(LU_IND1+3,J1) = BETA*C(LU_IND1+3,J1)
                        C(LU_IND1+4,J1) = BETA*C(LU_IND1+4,J1)
99996                   CONTINUE
40                   CONTINUE                                           0107
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0114
                  IF (NOTA0) THEN                                       0115
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J2 = 1, N                                    0119
                        IF (BETA.EQ.ZERO0) THEN                         0120
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND20 = 0, LU_IB2-1
                              C(LU_IND20+1,J2) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
                              C(LU_IND2+1,J2) = ZERO0
                              C(LU_IND2+2,J2) = ZERO0
                              C(LU_IND2+3,J2) = ZERO0
                              C(LU_IND2+4,J2) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0120
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND30 = 0, LU_IB3-1
                              C(LU_IND30+1,J2) = BETA*C(LU_IND30+1,J2
     &                        )
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
                              C(LU_IND3+1,J2) = BETA*C(LU_IND3+1,J2)
                              C(LU_IND3+2,J2) = BETA*C(LU_IND3+2,J2)
                              C(LU_IND3+3,J2) = BETA*C(LU_IND3+3,J2)
                              C(LU_IND3+4,J2) = BETA*C(LU_IND3+4,J2)
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0129
                           IF (B(L,J2).NE.ZERO0) THEN                   0130
                              TEMP = ALPHA*B(L,J2)                      0131
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND40 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND40+1,L)
                                 C(LU_IND40+1,J2) = C(LU_IND40+1,J2)+
     &                           F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
                                 F_00 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J2) = C(LU_IND4+1,J2)+
     &                           F_00
                                 F_01 = TEMP*A(LU_IND4+2,L)
                                 C(LU_IND4+2,J2) = C(LU_IND4+2,J2)+
     &                           F_01
                                 F_02 = TEMP*A(LU_IND4+3,L)
                                 C(LU_IND4+3,J2) = C(LU_IND4+3,J2)+
     &                           F_02
                                 F_03 = TEMP*A(LU_IND4+4,L)
                                 C(LU_IND4+4,J2) = C(LU_IND4+4,J2)+
     &                           F_03
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0136
90                      CONTINUE                                        0137
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J3 = 1, N                                   0142
                        DO 110 I = 1, M                                 0143
                           TEMP0 = ZERO0                                0144
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           DO 99989 LU_IND50 = 0, LU_IB5-1
                              F_1 = A(LU_IND50+1,I)*B(LU_IND50+1,J3)
                              TEMP0 = TEMP0+F_1
99989                         CONTINUE
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
                              F_10 = A(LU_IND5+1,I)*B(LU_IND5+1,J3)
                              TEMP0 = TEMP0+F_10
                              F_11 = A(LU_IND5+2,I)*B(LU_IND5+2,J3)
                              TEMP0 = TEMP0+F_11
                              F_12 = A(LU_IND5+3,I)*B(LU_IND5+3,J3)
                              TEMP0 = TEMP0+F_12
                              F_13 = A(LU_IND5+4,I)*B(LU_IND5+4,J3)
                              TEMP0 = TEMP0+F_13
99988                         CONTINUE
                           L_7 = BETA.EQ.ZERO0
                           C0 = ALPHA*TEMP0
                           C(I,J3) = L_7?C0:C(I,J3)
                           F_2 = ALPHA*TEMP0
                           F_3 = BETA*C(I,J3)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J3) = L_98?C1:C(I,J3)
110                        CONTINUE                                     0153
120                     CONTINUE                                        0154
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0114
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J4 = 1, N                                      0161
                     IF (BETA.EQ.ZERO0) THEN                            0162
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND60 = 0, LU_IB6-1
                           C(LU_IND60+1,J4) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
                           C(LU_IND6+1,J4) = ZERO0
                           C(LU_IND6+2,J4) = ZERO0
                           C(LU_IND6+3,J4) = ZERO0
                           C(LU_IND6+4,J4) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0162
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND70 = 0, LU_IB7-1
                           C(LU_IND70+1,J4) = BETA*C(LU_IND70+1,J4)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
                           C(LU_IND7+1,J4) = BETA*C(LU_IND7+1,J4)
                           C(LU_IND7+2,J4) = BETA*C(LU_IND7+2,J4)
                           C(LU_IND7+3,J4) = BETA*C(LU_IND7+3,J4)
                           C(LU_IND7+4,J4) = BETA*C(LU_IND7+4,J4)
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0171
                        IF (B(J4,L).NE.ZERO0) THEN                      0172
                           TEMP = ALPHA*B(J4,L)                         0173
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND80 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND80+1,L)
                              C(LU_IND80+1,J4) = C(LU_IND80+1,J4)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
                              F_40 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J4) = C(LU_IND8+1,J4)+F_40
                              F_41 = TEMP*A(LU_IND8+2,L)
                              C(LU_IND8+2,J4) = C(LU_IND8+2,J4)+F_41
                              F_42 = TEMP*A(LU_IND8+3,L)
                              C(LU_IND8+3,J4) = C(LU_IND8+3,J4)+F_42
                              F_43 = TEMP*A(LU_IND8+4,L)
                              C(LU_IND8+4,J4) = C(LU_IND8+4,J4)+F_43
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0178
170                  CONTINUE                                           0179
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J5 = 1, N                                      0184
                     DO 190 I = 1, M                                    0185
                        TEMP1 = ZERO0                                   0186
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        DO 99981 LU_IND90 = 0, LU_IB9-1
                           F_5 = A(LU_IND90+1,I)*B(J5,LU_IND90+1)
                           TEMP1 = TEMP1+F_5
99981                      CONTINUE
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
                           F_50 = A(LU_IND9+1,I)*B(J5,LU_IND9+1)
                           TEMP1 = TEMP1+F_50
                           F_51 = A(LU_IND9+2,I)*B(J5,LU_IND9+2)
                           TEMP1 = TEMP1+F_51
                           F_52 = A(LU_IND9+3,I)*B(J5,LU_IND9+3)
                           TEMP1 = TEMP1+F_52
                           F_53 = A(LU_IND9+4,I)*B(J5,LU_IND9+4)
                           TEMP1 = TEMP1+F_53
99980                      CONTINUE
                        L_8 = BETA.EQ.ZERO0
                        C2 = ALPHA*TEMP1
                        C(I,J5) = L_8?C2:C(I,J5)
                        F_6 = ALPHA*TEMP1
                        F_7 = BETA*C(I,J5)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J5) = L_99?C3:C(I,J5)
190                     CONTINUE                                        0195
200                  CONTINUE                                           0196
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
      END
nsucc = 2 
Result = if (info != 0) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}

Result before = if (info != 0) {
 goto ;
}

Result after = if (info != 0) {
 goto ;
}

nsucc = 2 
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

Result before = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

Result after = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

nsucc = 2 
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

Result before = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

Result after = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

nsucc = 1 
nsucc = 1 
nsucc = 1 
nsucc = 0 
/* C pretty print for module SGEMM. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

void
sgemm (char *transa_p4a_copy, char *transb_p4a_copy, int *m_p4a_copy,
       int *n_p4a_copy, int *k_p4a_copy, float *alpha_p4a_copy,
       float a[10][10], int *lda_p4a_copy, float b[10][10], int *ldb_p4a_copy,
       float *beta_p4a_copy, float c[10][10], int *ldc_p4a_copy)
{
  static const int size = 10;
  a4sf pdata3;
  v4sf vec210;
  v4sf vec200;
  v4sf vec190;
  v4sf vec170;
  v4sf vec160;
  v4sf vec150;
  v4sf vec140;
  v4sf vec130;
  v4sf vec120;
  a4sf pdata1;
  v4sf vec110;
  v4sf vec100;
  v4sf vec90;
  v4sf vec70;
  v4sf vec60;
  v4sf vec50;
  v4sf vec40;
  v4sf vec30;
  v4sf vec20;
  v4sf vec10;
  v4sf vec00;
  float zero0;
  float one0;
  float temp1;
  float temp0;
  int nrowb0;
  int nrowa0;
  int j5;
  int j4;
  int j3;
  int j2;
  int j1;
  int j0;
  int info1;
  int info0;
  int notb0;
  int nota0;
  int l_611;
  int l_500;
  int l_400;
  int l_300;
  int l_200;
  int l_100;
  int l_000;
  int l_911;
  int l_110;
  int l_120;
  int l_130;
  int l_140;
  int l_150;
  int l_160;
  int l_170;
  int l_180;
  int l_190;
  int l_210;
  int l_220;
  int l_230;
  int l_240;
  int l_250;
  int l_260;
  int l_270;
  int l_280;
  int l_290;
  int l_310;
  int l_320;
  int l_330;
  int l_340;
  int l_350;
  int l_360;
  int l_370;
  int l_380;
  int i_00;
  int l_390;
  int l_410;
  int l_420;
  int l_430;
  int l_440;
  int l_450;
  int l_460;
  int l_470;
  int l_480;
  int l_490;
  int l_510;
  int l_520;
  int l_530;
  int l_540;
  int l_550;
  int i_10;
  int l_560;
  int l_570;
  int l_580;
  int l_590;
  int l_600;
  int l_610;
  int l_620;
  int l_630;
  int l_640;
  int l_650;
  int l_660;
  int l_670;
  int l_680;
  int l_690;
  int l_700;
  int l_710;
  int l_720;
  int l_730;
  int l_740;
  int i_20;
  int l_750;
  int l_760;
  int l_770;
  int l_780;
  int l_790;
  int l_800;
  int l_810;
  int l_820;
  int l_830;
  int l_840;
  int l_850;
  int l_860;
  int l_870;
  int l_880;
  int l_890;
  int l_900;
  int l_910;
  int l_920;
  int l_930;
  int l_940;
  int l_950;
  int l_960;
  int l_970;
  int lu_ind00;
  int lu_ind10;
  int lu_ind20;
  int lu_ind30;
  int lu_ind40;
  int lu_ind50;
  int lu_ind60;
  int lu_ind70;
  int lu_ind80;
  int lu_ind90;
  int lu_ind9;
  int lu_ib9;
  int lu_nub9;
  int lu_ind8;
  int lu_ib8;
  int lu_nub8;
  int lu_ind7;
  int lu_ib7;
  int lu_nub7;
  int lu_ind6;
  int lu_ib6;
  int lu_nub6;
  int lu_ind5;
  int lu_ib5;
  int lu_nub5;
  int lu_ind4;
  int lu_ib4;
  int lu_nub4;
  int lu_ind3;
  int lu_ib3;
  int lu_nub3;
  int lu_ind2;
  int lu_ib2;
  int lu_nub2;
  int lu_ind1;
  int lu_ib1;
  int lu_nub1;
  int lu_ind0;
  int lu_ib0;
  int lu_nub0;
  int l_99;
  float f_7;
  float f_6;
  float f_5;
  float f_4;
  int l_98;
  float f_3;
  float f_2;
  float f_1;
  float f_0;
  float c3;
  float c2;
  float c1;
  float c0;
  int l_8;
  int l_7;
  int l_5;
  int l_4;
  int l_3;
  int l_2;
  int l_1;
  int l_0;
  int i;
  int l;
  float temp;
  char transa = *transa_p4a_copy;
  char transb = *transb_p4a_copy;
  int m = *m_p4a_copy;
  int n = *n_p4a_copy;
  int k = *k_p4a_copy;
  float alpha = *alpha_p4a_copy;
  int lda = *lda_p4a_copy;
  int ldb = *ldb_p4a_copy;
  float beta = *beta_p4a_copy;
  int ldc = *ldc_p4a_copy;

  one0 = 1.0e+0;
  zero0 = 0.0e+0;
  nota0 = lsame (&transa, 'n');
  notb0 = lsame (&transb, 'n');
  info0 = 0;
  nrowa0 = __c - conditional__ (&nota0, &m, &k);
  nrowb0 = __c - conditional__ (&notb0, &k, &n);
  if ((!nota0 && !lsame (&transa, 'c')) && !lsame (&transa, 't'))
    {
      info1 = 1;
      info0 = info1;
    }
  else
    {
      l_911 = !notb0;
      l_110 = lsame (&transb, 'c');
      l_140 = lsame (&transb, 't');
      l_500 = (m < 0);
      l_400 = (n < 0);
      l_300 = (k < 0);
      i_00 = crough_max (1, &nrowa0);
      i_10 = crough_max (1, &nrowb0);
      i_20 = crough_max (1, &m);
      l_120 = !l_110;
      l_150 = !l_140;
      l_200 = (lda < i_00);
      l_100 = (ldb < i_10);
      l_000 = (ldc < i_20);
      l_130 = (l_911 && l_120);
      l_611 = (l_130 && l_150);
      info0 = __c - conditional__ (&l_611, 2, &info0);
      l_160 = !l_611;
      l_170 = !l_611;
      l_190 = !l_611;
      l_230 = !l_611;
      l_270 = !l_611;
      l_330 = !l_611;
      l_390 = !l_611;
      l_470 = !l_611;
      l_560 = !l_611;
      l_650 = !l_611;
      l_750 = !l_611;
      l_860 = !l_611;
      l_5 = __c - conditional__ (&l_160, &l_500, &l_5);
      l_180 = (l_170 && l_5);
      l_210 = !l_5;
      l_240 = !l_5;
      l_280 = !l_5;
      l_340 = !l_5;
      l_410 = !l_5;
      l_480 = !l_5;
      l_570 = !l_5;
      l_660 = !l_5;
      l_760 = !l_5;
      l_870 = !l_5;
      info0 = __c - conditional__ (&l_180, 3, &info0);
      l_220 = (l_190 && l_210);
      l_4 = __c - conditional__ (&l_220, &l_400, &l_4);
      l_250 = (l_240 && l_4);
      l_290 = !l_4;
      l_350 = !l_4;
      l_420 = !l_4;
      l_490 = !l_4;
      l_580 = !l_4;
      l_670 = !l_4;
      l_770 = !l_4;
      l_880 = !l_4;
      l_260 = (l_230 && l_250);
      l_310 = (l_280 && l_290);
      info0 = __c - conditional__ (&l_260, 4, &info0);
      l_320 = (l_270 && l_310);
      l_3 = __c - conditional__ (&l_320, &l_300, &l_3);
      l_360 = (l_350 && l_3);
      l_430 = !l_3;
      l_510 = !l_3;
      l_590 = !l_3;
      l_680 = !l_3;
      l_780 = !l_3;
      l_890 = !l_3;
      l_370 = (l_340 && l_360);
      l_440 = (l_420 && l_430);
      l_380 = (l_330 && l_370);
      l_450 = (l_410 && l_440);
      info0 = __c - conditional__ (&l_380, 5, &info0);
      l_460 = (l_390 && l_450);
      l_2 = __c - conditional__ (&l_460, &l_200, &l_2);
      l_520 = (l_510 && l_2);
      l_600 = !l_2;
      l_690 = !l_2;
      l_790 = !l_2;
      l_900 = !l_2;
      l_530 = (l_490 && l_520);
      l_610 = (l_590 && l_600);
      l_540 = (l_480 && l_530);
      l_620 = (l_580 && l_610);
      l_550 = (l_470 && l_540);
      l_630 = (l_570 && l_620);
      info0 = __c - conditional__ (&l_550, 8, &info0);
      l_640 = (l_560 && l_630);
      l_1 = __c - conditional__ (&l_640, &l_100, &l_1);
      l_700 = (l_690 && l_1);
      l_800 = !l_1;
      l_910 = !l_1;
      l_710 = (l_680 && l_700);
      l_810 = (l_790 && l_800);
      l_720 = (l_670 && l_710);
      l_820 = (l_780 && l_810);
      l_730 = (l_660 && l_720);
      l_830 = (l_770 && l_820);
      l_740 = (l_650 && l_730);
      l_840 = (l_760 && l_830);
      info0 = __c - conditional__ (&l_740, 10, &info0);
      l_850 = (l_750 && l_840);
      l_0 = __c - conditional__ (&l_850, &l_000, &l_0);
      l_920 = (l_910 && l_0);
      l_930 = (l_900 && l_920);
      l_940 = (l_890 && l_930);
      l_950 = (l_880 && l_940);
      l_960 = (l_870 && l_950);
      l_970 = (l_860 && l_960);
      info0 = __c - conditional__ (&l_970, 13, &info0);
    }
  if (info0 != 0)
    {
      ;
    }
  else
    {
      if (((m == 0) || (n == 0))
	  || (((alpha == zero0) || (k == 0)) && (beta == one0)))
	{
	  ;
	}
      else
	{
	  if (alpha == zero0)
	    {
	      if (beta == zero0)
		{
		  for (j0 = 1; j0 <= n; j0++)
		    {
		      lu_nub0 = m;
		      lu_ib0 = (lu_nub0 % 4);
		      for (lu_ind00 = 0; lu_ind00 <= lu_ib0 - 1; lu_ind00++)
			{
			  c[j0 - 1][(1 + lu_ind00) - 1] = zero0;
			  continue;
			}
		      for (lu_ind0 = lu_ib0; lu_ind0 <= lu_nub0 - 1;
			   lu_ind0 += 4)
			{
			  c[j0 - 1][(1 + lu_ind0) - 1] = zero0;
			  c[j0 - 1][(2 + lu_ind0) - 1] = zero0;
			  c[j0 - 1][(3 + lu_ind0) - 1] = zero0;
			  c[j0 - 1][(4 + lu_ind0) - 1] = zero0;
			  continue;
			}
		      continue;
		    }
		}
	      else
		{
		  for (j1 = 1; j1 <= n; j1++)
		    {
		      lu_nub1 = m;
		      lu_ib1 = (lu_nub1 % 4);
		      for (lu_ind10 = 0; lu_ind10 <= lu_ib1 - 1; lu_ind10++)
			{
			  c[j1 - 1][(1 + lu_ind10) - 1] =
			    (beta * c[j1 - 1][(1 + lu_ind10) - 1]);
			  continue;
			}
		      for (lu_ind1 = lu_ib1; lu_ind1 <= lu_nub1 - 1;
			   lu_ind1 += 4)
			{
			  simd_load_v4sf (vec00,
					  c[j1 - 1][(1 + lu_ind1) - 1]);
			  simd_mulps (vec00, vec10, vec00);
			  continue;
			  simd_store_v4sf (vec00,
					   c[j1 - 1][(1 + lu_ind1) - 1]);
			}
		      continue;
		    }
		}
	    }
	  else
	    {
	      if (notb0)
		{
		  if (nota0)
		    {
		      for (j2 = 1; j2 <= n; j2++)
			{
			  if (beta == zero0)
			    {
			      lu_nub2 = m;
			      lu_ib2 = (lu_nub2 % 4);
			      for (lu_ind20 = 0; lu_ind20 <= lu_ib2 - 1;
				   lu_ind20++)
				{
				  c[j2 - 1][(1 + lu_ind20) - 1] = zero0;
				  continue;
				}
			      for (lu_ind2 = lu_ib2; lu_ind2 <= lu_nub2 - 1;
				   lu_ind2 += 4)
				{
				  c[j2 - 1][(1 + lu_ind2) - 1] = zero0;
				  c[j2 - 1][(2 + lu_ind2) - 1] = zero0;
				  c[j2 - 1][(3 + lu_ind2) - 1] = zero0;
				  c[j2 - 1][(4 + lu_ind2) - 1] = zero0;
				  continue;
				}
			    }
			  else
			    {
			      if (beta != one0)
				{
				  lu_nub3 = m;
				  lu_ib3 = (lu_nub3 % 4);
				  for (lu_ind30 = 0; lu_ind30 <= lu_ib3 - 1;
				       lu_ind30++)
				    {
				      c[j2 - 1][(1 + lu_ind30) - 1] =
					(beta *
					 c[j2 - 1][(1 + lu_ind30) - 1]);
				      continue;
				    }
				  for (lu_ind3 = lu_ib3;
				       lu_ind3 <= lu_nub3 - 1; lu_ind3 += 4)
				    {
				      simd_load_v4sf (vec20,
						      c[j2 -
							1][(1 + lu_ind3) -
							   1]);
				      simd_mulps (vec20, vec30, vec20);
				      continue;
				      simd_store_v4sf (vec20,
						       c[j2 -
							 1][(1 + lu_ind3) -
							    1]);
				    }
				}
			      else
				{
				  ;
				}
			    }
			  for (l = 1; l <= k; l++)
			    {
			      if (b[j2 - 1][l - 1] != zero0)
				{
				  temp = (alpha * b[j2 - 1][l - 1]);
				  lu_nub4 = m;
				  lu_ib4 = (lu_nub4 % 4);
				  for (lu_ind40 = 0; lu_ind40 <= lu_ib4 - 1;
				       lu_ind40++)
				    {
				      f_0 =
					(temp * a[l - 1][(1 + lu_ind40) - 1]);
				      c[j2 - 1][(1 + lu_ind40) - 1] =
					(c[j2 - 1][(1 + lu_ind40) - 1] + f_0);
				      continue;
				    }
				  for (lu_ind4 = lu_ib4;
				       lu_ind4 <= lu_nub4 - 1; lu_ind4 += 4)
				    {
				      simd_load_v4sf (vec70,
						      c[j2 -
							1][(1 + lu_ind4) -
							   1]);
				      simd_load_v4sf (vec60,
						      a[l - 1][(1 + lu_ind4) -
							       1]);
				      simd_mulps (vec40, vec50, vec60);
				      simd_addps (vec70, vec70, vec40);
				      continue;
				      simd_store_v4sf (vec70,
						       c[j2 -
							 1][(1 + lu_ind4) -
							    1]);
				    }
				}
			      else
				{
				  ;
				}
			      continue;
			    }
			  continue;
			}
		    }
		  else
		    {
		      for (j3 = 1; j3 <= n; j3++)
			{
			  for (i = 1; i <= m; i++)
			    {
			      temp0 = zero0;
			      lu_nub5 = k;
			      lu_ib5 = (lu_nub5 % 4);
			      for (lu_ind50 = 0; lu_ind50 <= lu_ib5 - 1;
				   lu_ind50++)
				{
				  f_1 =
				    (a[i - 1][(1 + lu_ind50) - 1] *
				     b[j3 - 1][(1 + lu_ind50) - 1]);
				  temp0 = (temp0 + f_1);
				  continue;
				}
			      for (lu_ind5 = lu_ib5; lu_ind5 <= lu_nub5 - 1;
				   lu_ind5 += 4)
				{
				  simd_load_v4sf (vec100,
						  a[i - 1][(1 + lu_ind5) -
							   1]);
				  simd_load_v4sf (vec110,
						  b[j3 - 1][(1 + lu_ind5) -
							    1]);
				  simd_mulps (vec90, vec100, vec110);
				  simd_store_v4sf (vec90, pdata1[0]);
				  temp0 = (temp0 + pdata1[0]);
				  temp0 = (temp0 + pdata1[1]);
				  temp0 = (temp0 + pdata1[2]);
				  temp0 = (temp0 + pdata1[3]);
				  continue;
				}
			      l_7 = (beta == zero0);
			      c0 = (alpha * temp0);
			      f_2 = (alpha * temp0);
			      c[j3 - 1][i - 1] =
				__c - conditional__ (&l_7, &c0,
						     c[j3 - 1][i - 1]);
			      l_98 = !l_7;
			      f_3 = (beta * c[j3 - 1][i - 1]);
			      c1 = (f_2 + f_3);
			      c[j3 - 1][i - 1] =
				__c - conditional__ (&l_98, &c1,
						     c[j3 - 1][i - 1]);
			      continue;
			    }
			  continue;
			}
		    }
		}
	      else
		{
		  if (nota0)
		    {
		      for (j4 = 1; j4 <= n; j4++)
			{
			  if (beta == zero0)
			    {
			      lu_nub6 = m;
			      lu_ib6 = (lu_nub6 % 4);
			      for (lu_ind60 = 0; lu_ind60 <= lu_ib6 - 1;
				   lu_ind60++)
				{
				  c[j4 - 1][(1 + lu_ind60) - 1] = zero0;
				  continue;
				}
			      for (lu_ind6 = lu_ib6; lu_ind6 <= lu_nub6 - 1;
				   lu_ind6 += 4)
				{
				  c[j4 - 1][(1 + lu_ind6) - 1] = zero0;
				  c[j4 - 1][(2 + lu_ind6) - 1] = zero0;
				  c[j4 - 1][(3 + lu_ind6) - 1] = zero0;
				  c[j4 - 1][(4 + lu_ind6) - 1] = zero0;
				  continue;
				}
			    }
			  else
			    {
			      if (beta != one0)
				{
				  lu_nub7 = m;
				  lu_ib7 = (lu_nub7 % 4);
				  for (lu_ind70 = 0; lu_ind70 <= lu_ib7 - 1;
				       lu_ind70++)
				    {
				      c[j4 - 1][(1 + lu_ind70) - 1] =
					(beta *
					 c[j4 - 1][(1 + lu_ind70) - 1]);
				      continue;
				    }
				  for (lu_ind7 = lu_ib7;
				       lu_ind7 <= lu_nub7 - 1; lu_ind7 += 4)
				    {
				      simd_load_v4sf (vec120,
						      c[j4 -
							1][(1 + lu_ind7) -
							   1]);
				      simd_mulps (vec120, vec130, vec120);
				      continue;
				      simd_store_v4sf (vec120,
						       c[j4 -
							 1][(1 + lu_ind7) -
							    1]);
				    }
				}
			      else
				{
				  ;
				}
			    }
			  for (l = 1; l <= k; l++)
			    {
			      if (b[l - 1][j4 - 1] != zero0)
				{
				  temp = (alpha * b[l - 1][j4 - 1]);
				  lu_nub8 = m;
				  lu_ib8 = (lu_nub8 % 4);
				  for (lu_ind80 = 0; lu_ind80 <= lu_ib8 - 1;
				       lu_ind80++)
				    {
				      f_4 =
					(temp * a[l - 1][(1 + lu_ind80) - 1]);
				      c[j4 - 1][(1 + lu_ind80) - 1] =
					(c[j4 - 1][(1 + lu_ind80) - 1] + f_4);
				      continue;
				    }
				  for (lu_ind8 = lu_ib8;
				       lu_ind8 <= lu_nub8 - 1; lu_ind8 += 4)
				    {
				      simd_load_v4sf (vec170,
						      c[j4 -
							1][(1 + lu_ind8) -
							   1]);
				      simd_load_v4sf (vec160,
						      a[l - 1][(1 + lu_ind8) -
							       1]);
				      simd_mulps (vec140, vec150, vec160);
				      simd_addps (vec170, vec170, vec140);
				      continue;
				      simd_store_v4sf (vec170,
						       c[j4 -
							 1][(1 + lu_ind8) -
							    1]);
				    }
				}
			      else
				{
				  ;
				}
			      continue;
			    }
			  continue;
			}
		    }
		  else
		    {
		      for (j5 = 1; j5 <= n; j5++)
			{
			  for (i = 1; i <= m; i++)
			    {
			      temp1 = zero0;
			      lu_nub9 = k;
			      lu_ib9 = (lu_nub9 % 4);
			      for (lu_ind90 = 0; lu_ind90 <= lu_ib9 - 1;
				   lu_ind90++)
				{
				  f_5 =
				    (a[i - 1][(1 + lu_ind90) - 1] *
				     b[(1 + lu_ind90) - 1][j5 - 1]);
				  temp1 = (temp1 + f_5);
				  continue;
				}
			      for (lu_ind9 = lu_ib9; lu_ind9 <= lu_nub9 - 1;
				   lu_ind9 += 4)
				{
				  simd_load_v4sf (vec200,
						  a[i - 1][(1 + lu_ind9) -
							   1]);
				  simd_load_generic_v4sf (vec210,
							  b[(1 + lu_ind9) -
							    1][j5 - 1],
							  b[(2 + lu_ind9) -
							    1][j5 - 1],
							  b[(3 + lu_ind9) -
							    1][j5 - 1],
							  b[(4 + lu_ind9) -
							    1][j5 - 1]);
				  simd_mulps (vec190, vec200, vec210);
				  simd_store_v4sf (vec190, pdata3[0]);
				  temp1 = (temp1 + pdata3[0]);
				  temp1 = (temp1 + pdata3[1]);
				  temp1 = (temp1 + pdata3[2]);
				  temp1 = (temp1 + pdata3[3]);
				  continue;
				}
			      l_8 = (beta == zero0);
			      c2 = (alpha * temp1);
			      f_6 = (alpha * temp1);
			      c[j5 - 1][i - 1] =
				__c - conditional__ (&l_8, &c2,
						     c[j5 - 1][i - 1]);
			      l_99 = !l_8;
			      f_7 = (beta * c[j5 - 1][i - 1]);
			      c3 = (f_6 + f_7);
			      c[j5 - 1][i - 1] =
				__c - conditional__ (&l_99, &c3,
						     c[j5 - 1][i - 1]);
			      continue;
			    }
			  continue;
			}
		    }
		}
	      ;
	    }
	}
    }
}

