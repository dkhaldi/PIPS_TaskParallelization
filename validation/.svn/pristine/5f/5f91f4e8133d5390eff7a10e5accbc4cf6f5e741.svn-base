!
! File DESCRIPTIVE_3_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "DESCRIPTIVE_3_parameters.h"
      CALL HPFC INIT HOST
      CALL INIT_HOST
      CALL ITER_HOST
      CALL PRNT_HOST(2)
      CALL HPFC HOST END
      END
!
! That is all for DESCRIPTIVE_3_host.f
!
!
! File DESCRIPTIVE_3_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for DESCRIPTIVE_3
!
!
! initializing array A, number 4
!
      NODIMA(4) = 2
      ATOT(4) = 4

      MSTATUS(4) = 4
      LIVEMAPPING(4) = .TRUE.

      RANGEA(4, 1, 1) = 1
      RANGEA(4, 1, 2) = 20
      RANGEA(4, 1, 3) = 20
!
      RANGEA(4, 1, 4) = 2
      RANGEA(4, 1, 5) = 5
      RANGEA(4, 1, 6) = 1
      RANGEA(4, 1, 7) = -1

      RANGEA(4, 2, 1) = 1
      RANGEA(4, 2, 2) = 2
      RANGEA(4, 2, 3) = 2
!
      RANGEA(4, 2, 4) = 0

      ALIGN(4, 1, 1) = 1
      ALIGN(4, 1, 2) = 1
      ALIGN(4, 1, 3) = 0
      ALIGN(4, 2, 1) = 2
      ALIGN(4, 2, 2) = 1
      ALIGN(4, 2, 3) = 0
!
! That is all for DESCRIPTIVE_3_init.h
!
!
! File DESCRIPTIVE_3_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "DESCRIPTIVE_3_parameters.h"
      INTEGER A(0:6, 1:2)
      CALL HPFC INIT NODE
! all livenesss for A
      LIVE MAPPING(4) = .FALSE.
! begin remappings
      MSTATUS(4) = 4
! liveness management
! end of liveness management
! end remappings
      CALL INIT_NODE(A, DESCRIPTIVE_3 A LO1, DESCRIPTIVE_3 A UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
! begin remappings
      MSTATUS(4) = 4
! liveness management
! end of liveness management
! end remappings
      CALL ITER_NODE(A, DESCRIPTIVE_3 A LO1, DESCRIPTIVE_3 A UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
! begin remappings
      MSTATUS(4) = 4
! liveness management
! end of liveness management
! end remappings
      CALL PRNT_NODE(A, 2, DESCRIPTIVE_3 A LO1, DESCRIPTIVE_3 A UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
      CALL HPFC NODE END
      END
!
! That is all for DESCRIPTIVE_3_node.f
!
!
! File DESCRIPTIVE_3_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for DESCRIPTIVE_3
!
      integer 
     $    DESCRIPTIVE_3 A LO1,
     $    DESCRIPTIVE_3 A UP1
      parameter(DESCRIPTIVE_3 A LO1 = 0)
      parameter(DESCRIPTIVE_3 A UP1 = 6)
      integer 
     $    DESCRIPTIVE_3 A LO2,
     $    DESCRIPTIVE_3 A UP2
      parameter(DESCRIPTIVE_3 A LO2 = 1)
      parameter(DESCRIPTIVE_3 A UP2 = 2)
!
! That is all for DESCRIPTIVE_3_parameters.h
!
!
! File INIT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      END
!
! That is all for INIT_host.f
!
!
! File INIT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for INIT
!
!
! initializing array A, number 3
!
      NODIMA(3) = 2
      ATOT(3) = 3

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 20
      RANGEA(3, 1, 3) = 20
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 5
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      RANGEA(3, 2, 1) = 1
      RANGEA(3, 2, 2) = 2
      RANGEA(3, 2, 3) = 2
!
      RANGEA(3, 2, 4) = 0

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
      ALIGN(3, 2, 1) = 2
      ALIGN(3, 2, 2) = 1
      ALIGN(3, 2, 3) = 0
!
! That is all for INIT_init.h
!
!
! File INIT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE INIT_NODE(A, INIT A LO1, INIT A UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "INIT_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER I_0, I_1, I_2, I_3, INIT A UP1, INIT A LO1, I
      INTEGER A(INIT A LO1:INIT A UP1, 1:2)
      CALL HPFC LOOP BOUNDS(I_1, I_2, I_3, 1, N, 3, 1)
      I = I_3
      DO I_0 = I_1, I_2
         I = I+1
         A(I_0,1) = I
         A(I_0,2) = 0
      ENDDO
      END
!
! That is all for INIT_node.f
!
!
! File INIT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for INIT
!
      integer 
     $    INIT A LO2,
     $    INIT A UP2
      parameter(INIT A LO2 = 1)
      parameter(INIT A UP2 = 2)
!
! That is all for INIT_parameters.h
!
!
! File ITER_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE ITER_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "ITER_parameters.h"
      END
!
! That is all for ITER_host.f
!
!
! File ITER_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for ITER
!
!
! initializing array A, number 2
!
      NODIMA(2) = 2
      ATOT(2) = 2

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 20
      RANGEA(2, 1, 3) = 20
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 5
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      RANGEA(2, 2, 1) = 1
      RANGEA(2, 2, 2) = 2
      RANGEA(2, 2, 3) = 2
!
      RANGEA(2, 2, 4) = 0

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
      ALIGN(2, 2, 1) = 2
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
!
! That is all for ITER_init.h
!
!
! File ITER_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE ITER_NODE(A, ITER A LO1, ITER A UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "ITER_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER I_2, I_3, I_4, I_5, ITER A UP1, ITER A LO1
      INTEGER A(ITER A LO1:ITER A UP1, 1:2)
      CALL HPFC LOOP BOUNDS(I_3, I_4, I_5, 2, N-1, 2, 1)
! P(2:4) send A(1, 1) to (-1)
      IF (MY POS(1,2).GE.2) THEN
         CALL HPFC CMPNEIGHBOUR(-1)
         CALL HPFC INTEGER4 PACK 2(A, ITER A LO1, ITER A UP1, 
     &   ITER A LO2, ITER A UP2, 1, 1, 1, 1, 1, 1)
         CALL HPFC SNDTO N
      ENDIF
! P(1:3) send A(5, 1) to (+1)
      IF (MY POS(1,2).LE.3) THEN
         CALL HPFC CMPNEIGHBOUR(1)
         CALL HPFC INTEGER4 PACK 2(A, ITER A LO1, ITER A UP1, 
     &   ITER A LO2, ITER A UP2, 5, 5, 1, 1, 1, 1)
         CALL HPFC SNDTO N
      ENDIF
! P(1:3) receive A(6, 1) from (+1)
      IF (MY POS(1,2).LE.3) THEN
         CALL HPFC CMPNEIGHBOUR(1)
         CALL HPFC RCVFR N
         CALL HPFC INTEGER4 UNPACK 2(A, ITER A LO1, ITER A UP1, 
     &   ITER A LO2, ITER A UP2, 6, 6, 1, 1, 1, 1)
      ENDIF
! P(2:4) receive A(0, 1) from (-1)
      IF (MY POS(1,2).GE.2) THEN
         CALL HPFC CMPNEIGHBOUR(-1)
         CALL HPFC RCVFR N
         CALL HPFC INTEGER4 UNPACK 2(A, ITER A LO1, ITER A UP1, 
     &   ITER A LO2, ITER A UP2, 0, 0, 1, 1, 1, 1)
      ENDIF
      DO I_2 = I_3, I_4
         A(I_2,2) = A(I_2-1,1)+A(I_2,1)+A(I_2+1,1)
      ENDDO
      END
!
! That is all for ITER_node.f
!
!
! File ITER_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for ITER
!
      integer 
     $    ITER A LO2,
     $    ITER A UP2
      parameter(ITER A LO2 = 1)
      parameter(ITER A UP2 = 2)
!
! That is all for ITER_parameters.h
!
!
! File PRNT_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE PRNT_HOST(SIDE)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRNT_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER*4 N
      PARAMETER (N = 20)
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, T LID, SIDE, I
      INTEGER A(1:N, 1:2)
! collecting distributed variable A
      IF (1.LE.SIDE.AND.SIDE.LE.2) THEN
         DO PSI1 = 1, 4
            BUF INDEX = 0
            RECEIVED NOT PERFORMED = .FALSE.
            SIZE OF RECEIVED BUFFER = 0
            T LID = PSI1
            CALL HPFC RCV FROM NODE(T LID)
            CALL HPFC INTEGER4 BUFUPK
            DO ALPHA1 = 5*PSI1-4, MIN(20, 5*PSI1)
               ALPHA2 = SIDE
               LALPHA1 = ALPHA1-5*PSI1+5
               LALPHA2 = ALPHA2
               BUF INDEX = BUF INDEX+1
               A(ALPHA1,ALPHA2) = HPFC INTEGER4 BUFF(BUF INDEX)
            ENDDO
         ENDDO
      ENDIF
! end of collect
      PRINT *, (A(I,SIDE), I = 1, N)
! updating shared variable I
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      BUF INDEX = BUF INDEX+1
      HPFC INTEGER4 BUFF(BUF INDEX) = I
      CALL HPFC INTEGER4 BUFPCK
      CALL HPFC HCAST
! end of update
      END
!
! That is all for PRNT_host.f
!
!
! File PRNT_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for PRNT
!
!
! initializing array A, number 1
!
      NODIMA(1) = 2
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 20
      RANGEA(1, 1, 3) = 20
!
      RANGEA(1, 1, 4) = 2
      RANGEA(1, 1, 5) = 5
      RANGEA(1, 1, 6) = 1
      RANGEA(1, 1, 7) = -1

      RANGEA(1, 2, 1) = 1
      RANGEA(1, 2, 2) = 2
      RANGEA(1, 2, 3) = 2
!
      RANGEA(1, 2, 4) = 0

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = 2
      ALIGN(1, 2, 2) = 1
      ALIGN(1, 2, 3) = 0
!
! That is all for PRNT_init.h
!
!
! File PRNT_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE PRNT_NODE(A, SIDE, PRNT A LO1, PRNT A UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "PRNT_parameters.h"
      INTEGER ALPHA1, ALPHA2, LALPHA1, LALPHA2, PSI1, PRNT A UP1, 
     &PRNT A LO1, SIDE, I
      INTEGER A(PRNT A LO1:PRNT A UP1, 1:2)
! collecting distributed variable A
      IF (1.LE.SIDE.AND.SIDE.LE.2) THEN
         PSI1 = MY POS(1,1)
         BUF INDEX = 0
         SEND NOT INITIALIZED = .TRUE.
         DO ALPHA1 = 5*PSI1-4, MIN(20, 5*PSI1)
            ALPHA2 = SIDE
            LALPHA1 = ALPHA1-5*PSI1+5
            LALPHA2 = ALPHA2
            BUF INDEX = BUF INDEX+1
            HPFC INTEGER4 BUFF(BUF INDEX) = A(LALPHA1,LALPHA2)
         ENDDO
         CALL HPFC INTEGER4 BUFPCK
         CALL HPFC SND TO HOST
      ENDIF
! end of collect
! updating shared variable I
      BUF INDEX = 0
      RECEIVED NOT PERFORMED = .FALSE.
      SIZE OF RECEIVED BUFFER = 0
      CALL HPFC NCAST
      CALL HPFC INTEGER4 BUFUPK
      BUF INDEX = BUF INDEX+1
      I = HPFC INTEGER4 BUFF(BUF INDEX)
! end of update
      END
!
! That is all for PRNT_node.f
!
!
! File PRNT_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for PRNT
!
      integer 
     $    PRNT A LO2,
     $    PRNT A UP2
      parameter(PRNT A LO2 = 1)
      parameter(PRNT A UP2 = 2)
!
! That is all for PRNT_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template A, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 20
      RANGET(1, 1, 3) = 20

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 2
      RANGET(1, 2, 3) = 2

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
!
! initializing template A, number 2
!
      NODIMT(2) = 2
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 20
      RANGET(2, 1, 3) = 20

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 2
      RANGET(2, 2, 3) = 2

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 5
!
! initializing template A, number 3
!
      NODIMT(3) = 2
      TTOP(3) = 3

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 20
      RANGET(3, 1, 3) = 20

      RANGET(3, 2, 1) = 1
      RANGET(3, 2, 2) = 2
      RANGET(3, 2, 3) = 2

      DIST(3, 1, 1) = 1
      DIST(3, 1, 2) = 5
!
! initializing template A, number 4
!
      NODIMT(4) = 2
      TTOP(4) = 4

      RANGET(4, 1, 1) = 1
      RANGET(4, 1, 2) = 20
      RANGET(4, 1, 3) = 20

      RANGET(4, 2, 1) = 1
      RANGET(4, 2, 2) = 2
      RANGET(4, 2, 3) = 2

      DIST(4, 1, 1) = 1
      DIST(4, 1, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 4
      RANGEP(1, 1, 3) = 4
!
! initializing processors P, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 4
      RANGEP(2, 1, 3) = 4
!
! initializing processors P, number 3
!
      NODIMP(3) = 1

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 4
      RANGEP(3, 1, 3) = 4
!
! initializing processors P, number 4
!
      NODIMP(4) = 1

      RANGEP(4, 1, 1) = 1
      RANGEP(4, 1, 2) = 4
      RANGEP(4, 1, 3) = 4
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 4)
      parameter(REALNBOFTEMPLATES = 4)
      parameter(REALNBOFPROCESSORS = 4)
      parameter(REALMAXSIZEOFPROCS = 4)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
