
Source code with transformers


//  T() {}

void modulo13(void)
{

//  T() {}

   int i, j, k, mi, mj;

//  T(k,mi,mj) {}

   if (5*i-4*j==-1) {

//  T(k,mi,mj) {5i==4j-1, k==0, 5mi==4mj-1, 0<=mi+1, mi<=3}

      if (i>=0&&j>=0) {

//  T(mi) {5i==4j-1, mi==3, 0<=i}

         mi = i%4;

//  T(mj) {5i==4j-1, mi==3, mj==4, 0<=i}

         mj = j%5;

//  T(k) {5i==4j-1, k==0, mi==3, mj==4, 0<=i}

         k = 0;
      }
      else if (i>=0&&j<0) {

//  T() {0==-1}

         mi = i%4;

//  T() {0==-1}

         mj = j%5;

//  T() {0==-1}

         k = 0;
      }
      else if (i<0&&j>=0) {

//  T() {0==-1}

         mi = i%4;

//  T() {0==-1}

         mj = j%5;

//  T() {0==-1}

         k = 0;
      }
      else {

//  T(mi) {5i==4j-1, mi==-1, j+1<=0}

         mi = i%4;

//  T(mj) {5i==4j-1, mi==-1, mj==-1, j+1<=0}

         mj = j%5;

//  T(k) {5i==4j-1, k==0, mi==-1, mj==-1, j+1<=0}

         k = 0;
      }

//  T(k) {5i==4j-1, k==0, k#init==0, 5mi==4mj-1, 0<=mi+1, mi<=3}

      k = 0;
   }

//  T() {}

   return;
}

//  P() {}

void modulo13(void)
{

//  P() {}

   int i, j, k, mi, mj;

//  P() {}

   if (5*i-4*j==-1) {

//  P() {5i==4j-1}

      if (i>=0&&j>=0) {

//  P() {5i==4j-1, 1<=j}

         mi = i%4;

//  P(mi) {5i==4j-1, mi==3, 1<=j}

         mj = j%5;

//  P(mi,mj) {5i==4j-1, mi==3, mj==4, 1<=j}

         k = 0;
      }
      else if (i>=0&&j<0) {

//  P() {0==-1}

         mi = i%4;

//  P() {0==-1}

         mj = j%5;

//  P() {0==-1}

         k = 0;
      }
      else if (i<0&&j>=0) {

//  P() {0==-1}

         mi = i%4;

//  P() {0==-1}

         mj = j%5;

//  P() {0==-1}

         k = 0;
      }
      else {

//  P() {5i==4j-1, i+1<=0}

         mi = i%4;

//  P(mi) {5i==4j-1, mi==-1, i+1<=0}

         mj = j%5;

//  P(mi,mj) {5i==4j-1, mi==-1, mj==-1, i+1<=0}

         k = 0;
      }

//  P(k,mi,mj) {5i==4j-1, k==0, 5mi==4mj-1, 0<=mj+1, mj<=4}

      k = 0;
   }

//  P(k,mi,mj) {}

   return;
}
