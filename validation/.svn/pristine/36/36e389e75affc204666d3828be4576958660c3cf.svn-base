
Initial code

void flatten_code15(int foo)
{
// (0,1)
   // BEGIN BLOCK
// (0,2)
   int i = (int) foo_0;                                                 /*0016*/
// (0,3)

   foo_0 += foo;                                                        /*0018*/
// (0,4)

   for(i = i; i <= 6; i += 1) {                                         /*0020*/
// (0,5)
      // BEGIN BLOCK
// (0,6)
      static int foo = 0;                                               /*0021*/
// (0,7)
      foo++;                                                            /*0022*/
// (0,8)
      fprintf(stdout, "foo=%d\n", foo);                                 /*0023*/
      // END BLOCK
   }
// (0,9)
   fprintf(stdout, "foo_0=%f\n", foo_0);                                /*0025*/
   // END BLOCK
}

Code after code flattening

void flatten_code15(int foo)
{
// (0,1)
   // BEGIN BLOCK
// (0,2)
   int i = (int) foo_0;                                                 /*0016*/
   //PIPS generated variable
// (0,3)
   static int foo_1 = 0;
// (0,4)

   foo_0 += foo;                                                        /*0018*/
// (0,5)

   for(i = i; i <= 6; i += 1) {                                         /*0020*/
// (0,6)
      // BEGIN BLOCK
// (0,7)
      foo_1++;                                                          /*0022*/
// (0,8)
      fprintf(stdout, "foo=%d\n", foo_1);                               /*0023*/
      // END BLOCK
   }
// (0,9)
   fprintf(stdout, "foo_0=%f\n", foo_0);                                /*0025*/
   // END BLOCK
}

Unsplit and compile resulting code

#
# compile run compare both flatten_code15
#
