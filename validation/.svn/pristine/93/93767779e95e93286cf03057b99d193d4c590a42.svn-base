!
! File FORMALREMAPPEDNOTUSED_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "FORMALREMAPPEDNOTUSED_parameters.h"
      CALL HPFC INIT HOST

      CALL NOREMAP_HOST
      CALL HPFC HOST END
      END
!
! That is all for FORMALREMAPPEDNOTUSED_host.f
!
!
! File FORMALREMAPPEDNOTUSED_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for FORMALREMAPPEDNOTUSED
!
!
! initializing array SOL, number 4
!
      NODIMA(4) = 1
      ATOT(4) = 3

      MSTATUS(4) = 4
      LIVEMAPPING(4) = .TRUE.

      RANGEA(4, 1, 1) = 1
      RANGEA(4, 1, 2) = 10
      RANGEA(4, 1, 3) = 10
!
      RANGEA(4, 1, 4) = 2
      RANGEA(4, 1, 5) = 5
      RANGEA(4, 1, 6) = 1
      RANGEA(4, 1, 7) = -1

      ALIGN(4, 1, 1) = 1
      ALIGN(4, 1, 2) = 1
      ALIGN(4, 1, 3) = 0
!
! That is all for FORMALREMAPPEDNOTUSED_init.h
!
!
! File FORMALREMAPPEDNOTUSED_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "FORMALREMAPPEDNOTUSED_parameters.h"
      INTEGER I_0
      REAL*4 SOL(1:5)
      CALL HPFC INIT NODE
! all livenesss for SOL
      LIVE MAPPING(4) = .FALSE.
! direct remapping for SOL
      LIVE MAPPING(4) = .TRUE.
      MSTATUS(4) = 4

      CALL HPFC CMPCOMPUTER(4, 1, 0, 0, 0, 0, 0, 0)
      IF (HPFC COMPUTERP()) THEN
         I_0 = MOD(1-1, 5)+1
         SOL(I_0) = 1
      ENDIF
! begin remappings
      MSTATUS(4) = 4
! liveness management
! end of liveness management
! end remappings
      CALL NOREMAP_NODE(SOL, FORMALREMAPPEDNOTUSED SOL LO1, 
     &FORMALREMAPPEDNOTUSED SOL UP1)
! begin remappings
! liveness management
! end of liveness management
! end remappings
      CALL HPFC NODE END
      END
!
! That is all for FORMALREMAPPEDNOTUSED_node.f
!
!
! File FORMALREMAPPEDNOTUSED_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for FORMALREMAPPEDNOTUSED
!
      integer 
     $    FORMALREMAPPEDNOTUSED SOL LO1,
     $    FORMALREMAPPEDNOTUSED SOL UP1
      parameter(FORMALREMAPPEDNOTUSED SOL LO1 = 1)
      parameter(FORMALREMAPPEDNOTUSED SOL UP1 = 5)
!
! That is all for FORMALREMAPPEDNOTUSED_parameters.h
!
!
! File NOREMAP_SOL_1_3_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(3).EQ.1) THEN
         IF (.NOT.LIVE MAPPING(3)) THEN
! send part
! remapping SOL[3]: SOL_1[1] -> SOL[3]
            PSI1 = MY POS(1,1)
            IF (MY LID.LE.2) THEN
               PSIp1 = PSI1
               T LID = PSIp1
               IF (MY LID.NE.T LID.AND..NOT.HPFC TWIN P(1, T LID)
     &         ) THEN
! - lazy sending
                  BUF INDEX = 0
                  SEND NOT INITIALIZED = .TRUE.
                  DO LALPHA1 = 5*PSIp1-4, 5*PSIp1
                     LALPHAp1 = LALPHA1-5*PSIp1+5
                     BUF INDEX = BUF INDEX+1
                     HPFC REAL4 BUFF(BUF INDEX) = SOL_1(LALPHA1)
                     IF (BUF INDEX.EQ.HPFC REAL4 BUFF SIZE) THEN
                        CALL HPFC REAL4 BUFPCK
                        CALL HPFC REMAPBRD 0(1, T LID)
                        BUF INDEX = 0
                        SEND NOT INITIALIZED = .TRUE.
                     ENDIF
                  ENDDO
                  IF (BUF INDEX.NE.0) THEN
                     CALL HPFC REAL4 BUFPCK
                     CALL HPFC REMAPBRD 0(1, T LID)
                  ENDIF
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,2)
            IF (MY LID.LE.2) THEN
               PSI1 = PSIp1
               T LID = PSI1
               IF (MY LID.NE.T LID.AND..NOT.HPFC TWIN P(1, T LID)
     &         ) THEN
! - lazy receiving
                  BUF INDEX = 0
                  RECEIVED NOT PERFORMED = .TRUE.
                  SIZE OF RECEIVED BUFFER = 0
                  DO LALPHA1 = 5*PSIp1-4, 5*PSIp1
                     LALPHAp1 = LALPHA1-5*PSIp1+5
                     IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER) THEN
                        RECEIVED NOT PERFORMED = .TRUE.
                        CALL HPFC REAL4 BUFUPK(T LID)
                        BUF INDEX = 0
                     ENDIF
                     BUF INDEX = BUF INDEX+1
                     SOL(LALPHAp1) = HPFC REAL4 BUFF(BUF INDEX)
                  ENDDO
               ELSE
! - lazy copying
                  DO LALPHA1 = 5*PSIp1-4, 5*PSIp1
                     LALPHAp1 = LALPHA1-5*PSIp1+5
                     SOL(LALPHAp1) = SOL_1(LALPHA1)
                  ENDDO
               ENDIF
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(3) = .TRUE.
         MSTATUS(3) = 3
      ENDIF
!
! That is all for NOREMAP_SOL_1_3_node.h
!
!
! File NOREMAP_SOL_3_1_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(3).EQ.3) THEN
         IF (.NOT.LIVE MAPPING(1)) THEN
! send part
! remapping SOL[3]: SOL[3] -> SOL_1[1]
            PSI1 = MY POS(1,2)
            IF (MY LID.LE.2) THEN
               T LID = 1
! - lazy broadcasting
               BUF INDEX = 0
               SEND NOT INITIALIZED = .TRUE.
               DO LALPHA1 = 1, 5
                  LALPHAp1 = LALPHA1+5*PSI1-5
                  BUF INDEX = BUF INDEX+1
                  HPFC REAL4 BUFF(BUF INDEX) = SOL(LALPHA1)
                  IF (BUF INDEX.EQ.HPFC REAL4 BUFF SIZE) THEN
                     CALL HPFC REAL4 BUFPCK
                     CALL HPFC BROADCAST 1(T LID, 2, 1)
                     BUF INDEX = 0
                     SEND NOT INITIALIZED = .TRUE.
                  ENDIF
               ENDDO
               IF (BUF INDEX.NE.0) THEN
                  CALL HPFC REAL4 BUFPCK
                  CALL HPFC BROADCAST 1(T LID, 2, 1)
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            IF (MY LID.LE.2) THEN
               DO PSI1 = 1, 2
                  T LID = PSI1
                  IF (MY LID.NE.T LID) THEN
! - lazy receiving
                     BUF INDEX = 0
                     RECEIVED NOT PERFORMED = .TRUE.
                     SIZE OF RECEIVED BUFFER = 0
                     DO LALPHA1 = 1, 5
                        LALPHAp1 = LALPHA1+5*PSI1-5
                        IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER
     &                  ) THEN
                           RECEIVED NOT PERFORMED = .TRUE.
                           CALL HPFC REAL4 BUFUPK(T LID)
                           BUF INDEX = 0
                        ENDIF
                        BUF INDEX = BUF INDEX+1
                        SOL_1(LALPHAp1) = HPFC REAL4 BUFF(BUF INDEX)
                     ENDDO
                  ELSE
! - lazy copying
                     DO LALPHA1 = 1, 5
                        LALPHAp1 = LALPHA1+5*PSI1-5
                        SOL_1(LALPHAp1) = SOL(LALPHA1)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(1) = .TRUE.
         MSTATUS(3) = 1
      ENDIF
!
! That is all for NOREMAP_SOL_3_1_node.h
!
!
! File NOREMAP_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NOREMAP_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "NOREMAP_parameters.h"

      CALL REMAP_HOST
      END
!
! That is all for NOREMAP_host.f
!
!
! File NOREMAP_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for NOREMAP
!
!
! initializing array SOL, number 3
!
      NODIMA(3) = 1
      ATOT(3) = 2

      MSTATUS(3) = 3
      LIVEMAPPING(3) = .TRUE.

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 10
      RANGEA(3, 1, 3) = 10
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 5
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
!
! initializing array SOL_1, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 10
      RANGEA(1, 1, 3) = 10
!
      RANGEA(1, 1, 4) = 0

      ALIGN(1, 1, 1) = INTFLAG
!
! That is all for NOREMAP_init.h
!
!
! File NOREMAP_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NOREMAP_NODE(SOL, NOREMAP SOL LO1, NOREMAP SOL UP1)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "NOREMAP_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 10)
      INTEGER I_2, NOREMAP SOL UP1, NOREMAP SOL LO1, PSIp1, LALPHA1, 
     &LALPHAp1, T LID, PSI1
      REAL*4 SOL(NOREMAP SOL LO1:NOREMAP SOL UP1), SOL_1(1:N)
! all livenesss for SOL
      LIVE MAPPING(3) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for SOL
      LIVE MAPPING(3) = .TRUE.
      MSTATUS(3) = 3

! begin remappings
      include 'NOREMAP_SOL_3_1_node.h'
! liveness management
! end of liveness management
! end remappings
      CALL REMAP_NODE(SOL_1)
! begin remappings
      include 'NOREMAP_SOL_1_3_node.h'
! liveness management
! clean live set for SOL
      LIVE MAPPING(1) = .FALSE.
! end of liveness management
! end remappings
      CALL HPFC CMPCOMPUTER(3, 1, 0, 0, 0, 0, 0, 0)
      IF (HPFC COMPUTERP()) THEN
         I_2 = MOD(1-1, 5)+1
         SOL(I_2) = 2
      ENDIF
      END
!
! That is all for NOREMAP_node.f
!
!
! File NOREMAP_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for NOREMAP
!
      integer 
     $    NOREMAP SOL_1 LO1,
     $    NOREMAP SOL_1 UP1
      parameter(NOREMAP SOL_1 LO1 = 1)
      parameter(NOREMAP SOL_1 UP1 = 10)
!
! That is all for NOREMAP_parameters.h
!
!
! File REMAP_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE REMAP_HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "REMAP_parameters.h"
      REAL*4 F_1, F_0, S

      CALL HPFC CMPOWNERS(2, 2, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR S(HPFC REAL4, F_0)
      CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR S(HPFC REAL4, F_1)
      S = F_1+F_0
      END
!
! That is all for REMAP_host.f
!
!
! File REMAP_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for REMAP
!
!
! initializing array SOL, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 1

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 10
      RANGEA(2, 1, 3) = 10
!
      RANGEA(2, 1, 4) = 0

      ALIGN(2, 1, 1) = INTFLAG
!
! That is all for REMAP_init.h
!
!
! File REMAP_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE REMAP_NODE(SOL)
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "REMAP_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 10)
      REAL*4 F_1, F_0, SOL(1:N), S

      CALL HPFC CMPOWNERS(2, 2, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         F_0 = SOL(2)
         IF (HPFC SENDERP()) THEN
            CALL HPFC SNDTO HNO(HPFC REAL4, F_0)
         ENDIF
      ELSE
         CALL HPFC RCVFR S(HPFC REAL4, F_0)
      ENDIF
      CALL HPFC CMPOWNERS(2, 1, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         F_1 = SOL(1)
         IF (HPFC SENDERP()) THEN
            CALL HPFC SNDTO HNO(HPFC REAL4, F_1)
         ENDIF
      ELSE
         CALL HPFC RCVFR S(HPFC REAL4, F_1)
      ENDIF
      S = F_1+F_0
      END
!
! That is all for REMAP_node.f
!
!
! File REMAP_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for REMAP
!
      integer 
     $    REMAP SOL LO1,
     $    REMAP SOL UP1
      parameter(REMAP SOL LO1 = 1)
      parameter(REMAP SOL UP1 = 10)
!
! That is all for REMAP_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 10
      RANGET(1, 1, 3) = 10

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = 5
!
! initializing template T, number 2
!
      NODIMT(2) = 1
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 10
      RANGET(2, 1, 3) = 10

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 5
!
! initializing template T, number 3
!
      NODIMT(3) = 1
      TTOP(3) = 3

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 10
      RANGET(3, 1, 3) = 10

      DIST(3, 1, 1) = 1
      DIST(3, 1, 2) = 5
!
! Processors Initializations
!
!
! initializing processors P, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 2
      RANGEP(1, 1, 3) = 2
!
! initializing processors P, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 2
      RANGEP(2, 1, 3) = 2
!
! initializing processors P, number 3
!
      NODIMP(3) = 1

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 2
      RANGEP(3, 1, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 4)
      parameter(REALNBOFTEMPLATES = 3)
      parameter(REALNBOFPROCESSORS = 3)
      parameter(REALMAXSIZEOFPROCS = 2)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
