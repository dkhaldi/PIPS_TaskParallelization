
PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int n0, n, m, s, i;

//  P(i,m,n,n0,s) {}

   n0 = rand();

//  P(i,m,n,n0,s) {0<=n0}

   m = rand();

//  P(i,m,n,n0,s) {0<=m, 0<=n0}

   n = n0;

//  P(i,m,n,n0,s) {n==n0, 0<=m, 0<=n}

   if (!(n>0&&m>0))

//  P(i,m,n,n0,s) {n==n0, 0<=m, 0<=n}

      deadlock();

//  P(i,m,n,n0,s) {n==n0, 1<=m, 1<=n}

   s = 1;

//  P(i,m,n,n0,s) {n==n0, s==1, 1<=m, 1<=n}

   i = 0;

//  P(i,m,n,n0,s) {i==0, n==n0, s==1, 1<=m, 1<=n}

   while (flip())

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

      if (flip()) {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(n>0&&m>0&&s==1))

//  P(i,m,n,n0,s) {i+n==n0, 1<=i, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0,
//    1<=s, s<=2}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==1, 1<=m, n+1<=m+n0, 1<=n, n<=n0, 1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 1<=m, n+2<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         m--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==1, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==1, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         s = 2;

//  P(i,m,n,n0,s) {i+n==n0, s==2, 0<=m, n+1<=m+n0, 0<=n, n+1<=n0,
//    1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
      else if (flip()) {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(n>0&&s==2))

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+1<=m+n0, 1<=n, n+1<=n0, 1<=n0}

         n--;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, n+2<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         m++;

//  P(i,m,n,n0,s) {i+n==n0-1, s==2, n+3<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         i++;

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+3<=m+n0, 0<=n, n+2<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(i,m,n,n0,s) {i+n==n0, n+1<=m+n0, 0<=n, n+s<=n0+1, 1<=n0, 1<=s,
//    s<=2}

         if (!(s==2))

//  P(i,m,n,n0,s) {i+n==n0, s==1, n+1<=m+n0, 0<=n, n<=n0, 1<=n0}

            deadlock();

//  P(i,m,n,n0,s) {i+n==n0, s==2, n+1<=m+n0, 0<=n, n+1<=n0, 1<=n0}

         s = 1;

//  P(i,m,n,n0,s) {i+n==n0, s==1, n+1<=m+n0, 0<=n, n+1<=n0, 1<=n0}

         if (!(i<=n0))

//  P() {0==-1}

            checking_error();
      }
}
