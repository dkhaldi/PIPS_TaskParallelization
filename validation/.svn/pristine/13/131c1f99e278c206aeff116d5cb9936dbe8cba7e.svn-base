
Parsed code for "call06"

void call06(int r, int m, int *x)
{
   int j;

   for (j = 0;j<m;j++)
      x[j] = 10*r+j;
}

Code for "call06"

void call06(int r, int m, int *x)
{
   int j;

   for(j = 0; j <= m-1; j += 1)
      x[j] = 10*r+j;
}

Proper effects for "call06"

void call06(int r, int m, int *x)
{
   int j;
//             <    is read   >: m
//             <    is written>: j

   for(j = 0; j <= m-1; j += 1)
//             <    is read   >: j m r x
//             <    is written>: x[j]
      x[j] = 10*r+j;
}

Cumulated effects for "call06"

//             <may be read   >: r x
//             <may be written>: x[*]
//             <    is read   >: m
void call06(int r, int m, int *x)
{
   int j;
//             <may be read   >: j r x
//             <may be written>: x[*]
//             <    is read   >: m
//             <    is written>: j

   for(j = 0; j <= m-1; j += 1)
//             <may be written>: x[*]
//             <    is read   >: j m r x
      x[j] = 10*r+j;
}

Proper effects for "main"

int main()
{
//             <    is written>: d1
   int d1 = 4;
//             <    is written>: d2
   int d2 = 4;
//             <    is read   >: d1 d2
   int y[d1][d2];
   int i, j;
//             <    is read   >: d1
//             <    is written>: i

   for(i = 0; i <= d1-1; i += 1)
//             <may be written>: y[i][*]
//             <    is read   >: d1 d2 i
      call06(i, d2, &y[i][0]);
}

Cumulated effects for "main"

int main()
{
//             <    is written>: d1
   int d1 = 4;
//             <    is written>: d2
   int d2 = 4;
//             <    is read   >: d1 d2
   int y[d1][d2];
   int i, j;
//             <may be read   >: d2 i
//             <may be written>: y[*][*]
//             <    is read   >: d1
//             <    is written>: i

   for(i = 0; i <= d1-1; i += 1)
//             <may be written>: y[*][*]
//             <    is read   >: d1 d2 i
      call06(i, d2, &y[i][0]);
}

Regions for "call06"


//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x-R-EXACT-{}>
//  <x[PHI1]-W-EXACT-{0<=PHI1, PHI1+1<=m}>

void call06(int r, int m, int *x)
{
   int j;

//  <j-R-EXACT-{}>
//  <j-W-EXACT-{}>
//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x-R-EXACT-{}>
//  <x[PHI1]-W-EXACT-{0<=PHI1, PHI1+1<=m}>


   for(j = 0; j <= m-1; j += 1)

//  <j-R-EXACT-{}>
//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x-R-EXACT-{}>
//  <x[PHI1]-W-EXACT-{PHI1==j, 0<=j, j+1<=m}>

      x[j] = 10*r+j;
}

Regions for "main"

int main()
{

//  <d1-W-EXACT-{}>

   int d1 = 4;

//  <d2-W-EXACT-{}>

   int d2 = 4;

//  <d1-R-EXACT-{}>
//  <d2-R-EXACT-{}>

   int y[d1][d2];
   int i, j;

//  <d1-R-EXACT-{}>
//  <d2-R-EXACT-{}>
//  <i-R-EXACT-{}>
//  <i-W-EXACT-{}>
//  <y[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=3, 0<=PHI2, PHI2<=3, d1==4,
//    d2==4}>


   for(i = 0; i <= d1-1; i += 1)

//  <d1-R-EXACT-{}>
//  <d2-R-EXACT-{}>
//  <i-R-EXACT-{}>
//  <y[PHI1][PHI2]-W-EXACT-{PHI1==i, 0<=PHI2, PHI2<=3, d1==4, d2==4,
//    0<=i, i<=3}>

      call06(i, d2, &y[i][0]);
}
