
TRANSFORMERS


//  T() {}

void ts_singlestate(void)
{

//  T() {}

   int x, y;

//  T(x,y) {x==0, y==0}

   x = y = 0;

//  T() {x==0, y==0}

   if (!(y<=x&&y<=1))

//  T() {0==-1}

      checking_error();

//  T(x,y) {x#init+y<=x+y#init, y<=x, 0<=y, y<=1, y#init<=y}

   while (rand_b())

//  T(x,y) {x==x#init+1, 1<=x, y<=1, y#init<=y, y<=y#init+1}

      if (rand_b()) {

//  T() {0<=x}

         if (!(x>=0))

//  T() {0==-1}

            deadlock();

//  T(x) {x==x#init+1, 1<=x}

         x++;

//  T() {1<=x, y<=1}

         if (!(y<=x&&y<=1))

//  T() {0==-1}

            checking_error();
      }
      else {

//  T() {x==0}

         if (!(x==0))

//  T() {0==-1}

            deadlock();

//  T(x) {x==1, x#init==0}

         x++;

//  T(y) {x==1, y==y#init+1}

         y++;

//  T() {x==1, y<=1}

         if (!(y<=x&&y<=1))

//  T() {0==-1}

            checking_error();
      }
}

//  T() {}

void ts_restructured(void)
{

//  T() {}

   int x, y;

//  T(x,y) {x==0, y==0}

   x = y = 0;

//  T() {x==0, y==0}

   if (!(y<=x&&y<=1))

//  T() {0==-1}

      checking_error();

//  T(x,y) {x==1, x#init==0, y#init==0, 0<=y, y<=1}

   if (rand_b()) {

//  T() {x==0, y==0}

      if (!(x>=0))

//  T() {0==-1}

         deadlock();

//  T(x) {x==1, x#init==0, y==0}

      x++;

//  T() {x==1, y==0}

      if (!(y<=x&&y<=1))

//  T() {0==-1}

         checking_error();
   }
   else {

//  T() {x==0, y==0}

      if (!(x==0))

//  T() {0==-1}

         deadlock();

//  T(x) {x==1, x#init==0, y==0}

      x++;

//  T(y) {x==1, y==1, y#init==0}

      y++;

//  T() {x==1, y==1}

      if (!(y<=x&&y<=1))

//  T() {0==-1}

         checking_error();
   }

//  T(x) {1<=x, x#init<=x, 0<=y, y<=1}

   while (rand_b()) {

//  T() {0<=x, 0<=y, y<=1}

      if (!(x>=0))

//  T() {0==-1}

         deadlock();

//  T(x) {x==x#init+1, 1<=x, 0<=y, y<=1}

      x++;

//  T() {1<=x, 0<=y, y<=1}

      if (!(y<=x&&y<=1))

//  T() {0==-1}

         checking_error();
   }
}

PRECONDITIONS


//  P() {}

void ts_singlestate(void)
{

//  P() {}

   int x, y;

//  P() {}

   x = y = 0;

//  P(x,y) {x==0, y==0}

   if (!(y<=x&&y<=1))

//  P() {0==-1}

      checking_error();

//  P(x,y) {x==0, y==0}

   while (rand_b())

//  P(x,y) {y<=x, 0<=y, y<=1}

      if (rand_b()) {

//  P(x,y) {y<=x, 0<=y, y<=1}

         if (!(x>=0))

//  P() {0==-1}

            deadlock();

//  P(x,y) {0<=x, y<=x, 0<=y, y<=1}

         x++;

//  P(x,y) {1<=x, y+1<=x, 0<=y, y<=1}

         if (!(y<=x&&y<=1))

//  P() {0==-1}

            checking_error();
      }
      else {

//  P(x,y) {y<=x, 0<=y, y<=1}

         if (!(x==0))

//  P(x,y) {1<=x, 0<=y, y<=1}

            deadlock();

//  P(x,y) {x==0, y==0}

         x++;

//  P(x,y) {x==1, y==0}

         y++;

//  P(x,y) {x==1, y==1}

         if (!(y<=x&&y<=1))

//  P() {0==-1}

            checking_error();
      }
}

//  P() {}

void ts_restructured(void)
{

//  P() {}

   int x, y;

//  P() {}

   x = y = 0;

//  P(x,y) {x==0, y==0}

   if (!(y<=x&&y<=1))

//  P() {0==-1}

      checking_error();

//  P(x,y) {x==0, y==0}

   if (rand_b()) {

//  P(x,y) {x==0, y==0}

      if (!(x>=0))

//  P() {0==-1}

         deadlock();

//  P(x,y) {x==0, y==0}

      x++;

//  P(x,y) {x==1, y==0}

      if (!(y<=x&&y<=1))

//  P() {0==-1}

         checking_error();
   }
   else {

//  P(x,y) {x==0, y==0}

      if (!(x==0))

//  P() {0==-1}

         deadlock();

//  P(x,y) {x==0, y==0}

      x++;

//  P(x,y) {x==1, y==0}

      y++;

//  P(x,y) {x==1, y==1}

      if (!(y<=x&&y<=1))

//  P() {0==-1}

         checking_error();
   }

//  P(x,y) {x==1, 0<=y, y<=1}

   while (rand_b()) {

//  P(x,y) {1<=x, 0<=y, y<=1}

      if (!(x>=0))

//  P() {0==-1}

         deadlock();

//  P(x,y) {1<=x, 0<=y, y<=1}

      x++;

//  P(x,y) {2<=x, 0<=y, y<=1}

      if (!(y<=x&&y<=1))

//  P() {0==-1}

         checking_error();
   }
}
