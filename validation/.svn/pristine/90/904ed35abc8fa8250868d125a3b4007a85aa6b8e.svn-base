raw file
int main()
{
   float a[4] = {0, 1, 2, 3};
   float b[4] = {3, 2, 1, 0};
   int i;
   /* this should be a first pack */
   a[0] = b[0]+a[0];
   a[1] = b[1]+a[1];
   a[2] = b[2]+a[2];
   a[3] = b[3]+a[3];
   /* this should be a second pack */
   a[0] = b[0]+a[0];
   a[1] = a[1]+b[1];
   a[2] = b[2]+a[2];
   a[3] = b[3]+a[3];
}
after vectorization without commutativity
int main()
{
   float a[4] = {0, 1, 2, 3};
   float b[4] = {3, 2, 1, 0};
   int i;
   {
      //PIPS:SAC generated v4sf vector(s)
      v4sf vec00, vec10, vec20, vec30;
      SIMD_LOAD_V4SF(vec00, &a[0]);
      SIMD_LOAD_V4SF(vec10, &b[0]);
      SIMD_ADDPS(vec00, vec10, vec00);
      SIMD_STORE_V4SF(vec00, &a[0]);
      SIMD_LOAD_GENERIC_V4SF(vec20, a[0], a[2], a[3], b[1]);
      SIMD_LOAD_GENERIC_V4SF(vec30, b[0], b[2], b[3], a[1]);
      SIMD_ADDPS(vec20, vec30, vec20);
      SIMD_STORE_GENERIC_V4SF(vec20, &a[0], &a[2], &a[3], &a[1]);
   }
}
after vectorization with commutativity
int main()
{
   float a[4] = {0, 1, 2, 3};
   float b[4] = {3, 2, 1, 0};
   int i;
   {
      //PIPS:SAC generated v4sf vector(s)
      v4sf vec40, vec50, vec60, vec70;
      SIMD_LOAD_V4SF(vec50, &b[0]);
      SIMD_LOAD_V4SF(vec40, &a[0]);
      SIMD_ADDPS(vec40, vec40, vec50);
      SIMD_STORE_V4SF(vec40, &a[0]);
      SIMD_ADDPS(vec60, vec40, vec50);
      SIMD_STORE_V4SF(vec60, &a[0]);
   }
}

