!
! File REPLICATION_A_2_1_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(3).EQ.2) THEN
         IF (.NOT.LIVE MAPPING(1)) THEN
! send part
! remapping A[3]: A_1[2] -> A_2[1]
            PSI1 = MY POS(1,2)
            PSI2 = MY POS(2,2)
            PSI3 = MY POS(3,2)
            IF (MY LID.LE.8) THEN
               DO TMP3 = 0, (-PSI1-2*PSI3+7)/4
                  PSIp1 = PSI1+2*PSI3+4*TMP3-2
                  T LID = 2*PSIp1-1
! - lazy broadcasting
                  BUF INDEX = 0
                  SEND NOT INITIALIZED = .TRUE.
                  DO LALPHAp1 = 10*PSI2-9, 10*PSI2
                     LALPHA1 = 5*LALPHAp1-50*PSI2+PSIp1+45
                     BUF INDEX = BUF INDEX+1
                     HPFC INTEGER4 BUFF(BUF INDEX) = A_1(LALPHA1)
                     IF (BUF INDEX.EQ.HPFC INTEGER4 BUFF SIZE) THEN
                        CALL HPFC INTEGER4 BUFPCK
                        CALL HPFC BROADCAST 1(T LID, 2, 1)
                        BUF INDEX = 0
                        SEND NOT INITIALIZED = .TRUE.
                     ENDIF
                  ENDDO
                  IF (BUF INDEX.NE.0) THEN
                     CALL HPFC INTEGER4 BUFPCK
                     CALL HPFC BROADCAST 1(T LID, 2, 1)
                  ENDIF
               ENDDO
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            PSIp2 = MY POS(2,1)
            IF (MY LID.LE.10) THEN
               DO PSI1 = 1, 2
                  DO PSI2 = 1, 2
                     DO PSI3 = 1, 2
                        DO TMP3 = (-PSI1-2*PSI3+PSIp1+5)/4, 
     &                  HPFC DIVIDE(-PSI1-2*PSI3+PSIp1+2, 4)
                           T LID = 4*PSI1+2*PSI2+PSI3-6
                           IF (MY LID.NE.T LID) THEN
! - lazy receiving
                              BUF INDEX = 0
                              RECEIVED NOT PERFORMED = .TRUE.
                              SIZE OF RECEIVED BUFFER = 0
                              DO LALPHAp1 = 10*PSI2-9, 10*PSI2
                                 LALPHA1 = 5*LALPHAp1-50*PSI2+PSIp1+
     &                           45
                                 IF (BUF INDEX.EQ.
     &                           SIZE OF RECEIVED BUFFER) THEN
                                    RECEIVED NOT PERFORMED = .TRUE.
                                    CALL HPFC INTEGER4 BUFUPK(T LID)
                                    BUF INDEX = 0
                                 ENDIF
                                 BUF INDEX = BUF INDEX+1
                                 A_2(LALPHAp1) = HPFC INTEGER4 BUFF(
     &                           BUF INDEX)
                              ENDDO
                           ELSE
! - lazy copying
                              DO LALPHAp1 = 10*PSI2-9, 10*PSI2
                                 LALPHA1 = 5*LALPHAp1-50*PSI2+PSIp1+
     &                           45
                                 A_2(LALPHAp1) = A_1(LALPHA1)
                              ENDDO
                           ENDIF
                        ENDDO
                     ENDDO
                  ENDDO
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(1) = .TRUE.
         MSTATUS(3) = 1
      ENDIF
!
! That is all for REPLICATION_A_2_1_node.h
!
!
! File REPLICATION_A_3_2_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(3).EQ.3) THEN
         IF (.NOT.LIVE MAPPING(2)) THEN
! send part
! remapping A[3]: A[3] -> A_1[2]
            PSI1 = MY POS(1,3)
            IF (MY LID.LE.10) THEN
               PSIp2 = (PSI1+4)/5
               T LID = 2*PSIp2-1
! - lazy broadcasting
               BUF INDEX = 0
               SEND NOT INITIALIZED = .TRUE.
               DO LALPHA1 = 1, 10
                  LALPHAp1 = LALPHA1+10*PSI1-50*PSIp2+40
                  BUF INDEX = BUF INDEX+1
                  HPFC INTEGER4 BUFF(BUF INDEX) = A(LALPHA1)
                  IF (BUF INDEX.EQ.HPFC INTEGER4 BUFF SIZE) THEN
                     CALL HPFC INTEGER4 BUFPCK
                     CALL HPFC BROADCAST 2(T LID, 2, 4, 2, 1)
                     BUF INDEX = 0
                     SEND NOT INITIALIZED = .TRUE.
                  ENDIF
               ENDDO
               IF (BUF INDEX.NE.0) THEN
                  CALL HPFC INTEGER4 BUFPCK
                  CALL HPFC BROADCAST 2(T LID, 2, 4, 2, 1)
               ENDIF
            ENDIF
! receive part
            PSIp1 = MY POS(1,2)
            PSIp2 = MY POS(2,2)
            PSIp3 = MY POS(3,2)
            IF (MY LID.LE.8) THEN
               DO PSI1 = 5*PSIp2-4, 5*PSIp2
                  T LID = PSI1
                  IF (MY LID.NE.T LID) THEN
! - lazy receiving
                     BUF INDEX = 0
                     RECEIVED NOT PERFORMED = .TRUE.
                     SIZE OF RECEIVED BUFFER = 0
                     DO LALPHA1 = 1, 10
                        LALPHAp1 = LALPHA1+10*PSI1-50*PSIp2+40
                        IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER
     &                  ) THEN
                           RECEIVED NOT PERFORMED = .TRUE.
                           CALL HPFC INTEGER4 BUFUPK(T LID)
                           BUF INDEX = 0
                        ENDIF
                        BUF INDEX = BUF INDEX+1
                        A_1(LALPHAp1) = HPFC INTEGER4 BUFF(BUF INDEX)
                     ENDDO
                  ELSE
! - lazy copying
                     DO LALPHA1 = 1, 10
                        LALPHAp1 = LALPHA1+10*PSI1-50*PSIp2+40
                        A_1(LALPHAp1) = A(LALPHA1)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(2) = .TRUE.
         MSTATUS(3) = 2
      ENDIF
!
! That is all for REPLICATION_A_3_2_node.h
!
!
! File REPLICATION_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "REPLICATION_parameters.h"
      INTEGER I_8, I_6, B
      CALL HPFC INIT HOST
      CALL HPFC CMPOWNERS(2, 7, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR S(HPFC INTEGER4, I_6)
      B = I_6
      CALL HPFC CMPOWNERS(1, 7, 0, 0, 0, 0, 0, 0)
      CALL HPFC RCVFR S(HPFC INTEGER4, I_8)
      B = B+I_8
      CALL HPFC HOST END
      END
!
! That is all for REPLICATION_host.f
!
!
! File REPLICATION_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for REPLICATION
!
!
! initializing array A, number 3
!
      NODIMA(3) = 1
      ATOT(3) = 3

      MSTATUS(3) = 3
      LIVEMAPPING(3) = .TRUE.

      RANGEA(3, 1, 1) = 1
      RANGEA(3, 1, 2) = 100
      RANGEA(3, 1, 3) = 100
!
      RANGEA(3, 1, 4) = 2
      RANGEA(3, 1, 5) = 10
      RANGEA(3, 1, 6) = 1
      RANGEA(3, 1, 7) = -1

      ALIGN(3, 1, 1) = 1
      ALIGN(3, 1, 2) = 1
      ALIGN(3, 1, 3) = 0
!
! initializing array A_1, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 2

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 100
      RANGEA(2, 1, 3) = 100
!
      RANGEA(2, 1, 4) = 2
      RANGEA(2, 1, 5) = 50
      RANGEA(2, 1, 6) = 1
      RANGEA(2, 1, 7) = -1

      ALIGN(2, 1, 1) = INTFLAG
      ALIGN(2, 2, 1) = 1
      ALIGN(2, 2, 2) = 1
      ALIGN(2, 2, 3) = 0
      ALIGN(2, 3, 1) = INTFLAG
!
! initializing array A_2, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 100
      RANGEA(1, 1, 3) = 100
!
      RANGEA(1, 1, 4) = 3
      RANGEA(1, 1, 5) = 1
      RANGEA(1, 1, 6) = 5
      RANGEA(1, 1, 7) = 0
      RANGEA(1, 1, 8) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
      ALIGN(1, 2, 1) = INTFLAG
!
! That is all for REPLICATION_init.h
!
!
! File REPLICATION_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "REPLICATION_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 100)
      INTEGER I_2, I_3, I_4, I_5, I_7, I_9, I_8, I_6, I, B, PSIp3, 
     &PSIp1, LALPHA1, LALPHAp1, T LID, PSIp2, PSI1, TMP3, PSI3, PSI2
      INTEGER A(1:10), A_1(1:50), A_2(1:20)
      CALL HPFC INIT NODE
      CALL HPFC LOOP BOUNDS(I_3, I_4, I_5, 1, N, 3, 1)
! all livenesss for A
      LIVE MAPPING(3) = .FALSE.
      LIVE MAPPING(2) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for A
      LIVE MAPPING(3) = .TRUE.
      MSTATUS(3) = 3
      I = I_5
      DO I_2 = I_3, I_4
         I = I+1
         A(I_2) = N-I+1
      ENDDO
! begin remappings
      include 'REPLICATION_A_3_2_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(3) = .FALSE.
! end of liveness management
! end remappings
      CALL HPFC CMPOWNERS(2, 7, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         I_7 = MOD(7-1, 50)+1
         I_6 = A_1(I_7)
         IF (HPFC SENDERP()) THEN
            CALL HPFC SNDTO HNO(HPFC INTEGER4, I_6)
         ENDIF
      ELSE
         CALL HPFC RCVFR S(HPFC INTEGER4, I_6)
      ENDIF
      B = I_6
! begin remappings
      include 'REPLICATION_A_2_1_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(3) = .FALSE.
      LIVE MAPPING(2) = .FALSE.
! end of liveness management
! end remappings
      CALL HPFC CMPOWNERS(1, 7, 0, 0, 0, 0, 0, 0)
      IF (HPFC OWNERP()) THEN
         I_9 = HPFC LOCALINDGAMMA(1, 1, 7)
         I_8 = A_2(I_9)
         IF (HPFC SENDERP()) THEN
            CALL HPFC SNDTO HNO(HPFC INTEGER4, I_8)
         ENDIF
      ELSE
         CALL HPFC RCVFR S(HPFC INTEGER4, I_8)
      ENDIF
      B = B+I_8
      CALL HPFC NODE END
      END
!
! That is all for REPLICATION_node.f
!
!
! File REPLICATION_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for REPLICATION
!
      integer 
     $    REPLICATION A LO1,
     $    REPLICATION A UP1
      parameter(REPLICATION A LO1 = 1)
      parameter(REPLICATION A UP1 = 10)
      integer 
     $    REPLICATION A_1 LO1,
     $    REPLICATION A_1 UP1
      parameter(REPLICATION A_1 LO1 = 1)
      parameter(REPLICATION A_1 UP1 = 50)
      integer 
     $    REPLICATION A_2 LO1,
     $    REPLICATION A_2 UP1
      parameter(REPLICATION A_2 LO1 = 1)
      parameter(REPLICATION A_2 UP1 = 20)
!
! That is all for REPLICATION_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T2, number 1
!
      NODIMT(1) = 2
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 100
      RANGET(1, 1, 3) = 100

      RANGET(1, 2, 1) = 1
      RANGET(1, 2, 2) = 100
      RANGET(1, 2, 3) = 100

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = -1
      DIST(1, 2, 1) = 2
      DIST(1, 2, 2) = 50
!
! initializing template T1, number 2
!
      NODIMT(2) = 3
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 100
      RANGET(2, 1, 3) = 100

      RANGET(2, 2, 1) = 1
      RANGET(2, 2, 2) = 100
      RANGET(2, 2, 3) = 100

      RANGET(2, 3, 1) = 1
      RANGET(2, 3, 2) = 100
      RANGET(2, 3, 3) = 100

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = 50
      DIST(2, 2, 1) = 2
      DIST(2, 2, 2) = 50
      DIST(2, 3, 1) = 3
      DIST(2, 3, 2) = 50
!
! initializing template T0, number 3
!
      NODIMT(3) = 1
      TTOP(3) = 3

      RANGET(3, 1, 1) = 1
      RANGET(3, 1, 2) = 100
      RANGET(3, 1, 3) = 100

      DIST(3, 1, 1) = 1
      DIST(3, 1, 2) = 10
!
! Processors Initializations
!
!
! initializing processors P2, number 1
!
      NODIMP(1) = 2

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 5
      RANGEP(1, 1, 3) = 5

      RANGEP(1, 2, 1) = 1
      RANGEP(1, 2, 2) = 2
      RANGEP(1, 2, 3) = 2
!
! initializing processors P1, number 2
!
      NODIMP(2) = 3

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 2
      RANGEP(2, 1, 3) = 2

      RANGEP(2, 2, 1) = 1
      RANGEP(2, 2, 2) = 2
      RANGEP(2, 2, 3) = 2

      RANGEP(2, 3, 1) = 1
      RANGEP(2, 3, 2) = 2
      RANGEP(2, 3, 3) = 2
!
! initializing processors P0, number 3
!
      NODIMP(3) = 1

      RANGEP(3, 1, 1) = 1
      RANGEP(3, 1, 2) = 10
      RANGEP(3, 1, 3) = 10
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 3)
      parameter(REALNBOFTEMPLATES = 3)
      parameter(REALNBOFPROCESSORS = 3)
      parameter(REALMAXSIZEOFPROCS = 10)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
