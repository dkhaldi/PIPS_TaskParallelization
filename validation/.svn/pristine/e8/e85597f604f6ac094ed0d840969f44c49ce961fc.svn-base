
Points-to for "list_next"


// Points To IN:
// _nl_1.next -> *NULL* , MAY
// _nl_1.next -> _nl_1_2__1 , MAY
// nil -> *NULL* , EXACT
// nl -> *NULL* , MAY
// nl -> _nl_1 , MAY


// Points To OUT:
// _nl_1.next -> *NULL* , MAY
// _nl_1.next -> _nl_1_2__1 , MAY
// list_next -> *NULL* , MAY
// list_next -> _nl_1_2__1 , MAY
// nil -> *NULL* , EXACT
// nl -> *NULL* , MAY
// nl -> _nl_1 , MAY

list list_next(list nl)
{

// Points To: none

   list n;

// Points To:
// _nl_1.next -> *NULL* , MAY
// _nl_1.next -> _nl_1_2__1 , MAY
// n -> undefined , EXACT
// nil -> *NULL* , EXACT
// nl -> *NULL* , MAY
// nl -> _nl_1 , MAY

   if (nl==nil)

// Points To:
// n -> undefined , EXACT
// nil -> *NULL* , EXACT
// nl -> *NULL* , EXACT

      n = nil;
   else

// Points To:
// _nl_1.next -> *NULL* , MAY
// _nl_1.next -> _nl_1_2__1 , MAY
// n -> undefined , EXACT
// nil -> *NULL* , EXACT
// nl -> _nl_1 , EXACT

      n = nl->next;

// Points To:
// _nl_1.next -> *NULL* , MAY
// _nl_1.next -> _nl_1_2__1 , MAY
// n -> *NULL* , MAY
// n -> _nl_1_2__1 , MAY
// nil -> *NULL* , EXACT
// nl -> *NULL* , MAY
// nl -> _nl_1 , MAY

   return n;
}

Points-to for "list_len"


// Points To IN:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT


// Points To OUT:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT

int list_len(list ll)
{

// Points To: none

   int n = 0;

// Points To:
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY

   list c = ll;

// Points To:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// c -> *NULL* , MAY
// c -> _ll_1 , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT

   //while (c!=nil)
   if (c!=nil) {

// Points To:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// c -> _ll_1 , EXACT
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT

      // we know that c!=nil...
      c = list_next(c);

// Points To:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1 , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT

      n++;
   }

// Points To:
// _ll_1.next -> *NULL* , MAY
// _ll_1.next -> _ll_1_2__1 , MAY
// c -> *NULL* , MAY
// c -> _ll_1_2__1 , MAY
// ll -> *NULL* , MAY
// ll -> _ll_1 , MAY
// nil -> *NULL* , EXACT

   return n;
}
