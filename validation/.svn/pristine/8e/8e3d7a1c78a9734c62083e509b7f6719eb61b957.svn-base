
Check that parameters are well evaluated
----------------------------------------

Preconditions when using Fortran parameters


C  P() {}

      PROGRAM FABIEN
      IMPLICIT INTEGER(A-Z)

c     Problem with expression normalization

      INTEGER N, M, I
      PARAMETER(N=101, M=24, L1=MIN(N,M), L2=MAX(N,M), L3=M**2, 
     &     L4=MOD(N,M), L5=N/M)

C  P() {}


c     Alternative to PARAMETER (partial evaluation)
csecond      n = 101
csecond      m = 24
csecond      l1 = min(n,m)
csecond      l2=max(n,m)
csecond      l3=m**2
csecond      l4=mod(n,m)
csecond      l5=n/m

c     Check that parameters are properly evaluated (eval.c)

      J1 = L1                                                           0021

C  P(J1) {J1==24}

      J2 = L2                                                           0022

C  P(J1,J2) {J1==24, J2==101}

      J3 = L3                                                           0023

C  P(J1,J2,J3) {J1==24, J2==101, J3==576}

      J4 = L4                                                           0024

C  P(J1,J2,J3,J4) {J1==24, J2==101, J3==576, J4==5}

      J5 = L5                                                           0025

C  P(J1,J2,J3,J4,J5) {J1==24, J2==101, J3==576, J4==5, J5==4}

      PRINT *, J1, J2, J3, J4, J5                                       0026

C  P(J1,J2,J3,J4,J5) {J1==24, J2==101, J3==576, J4==5, J5==4}


c     Check expression normalization or partial evaluation

      I1 = MIN(N, M)                                                    0030

C  P(I1,J1,J2,J3,J4,J5) {I1==24, J1==24, J2==101, J3==576, J4==5,
C    J5==4}

      I1 = MIN0(N, M)                                                   0031

C  P(I1,J1,J2,J3,J4,J5) {I1==24, J1==24, J2==101, J3==576, J4==5,
C    J5==4}

      I2 = MAX(N, M)                                                    0032

C  P(I1,I2,J1,J2,J3,J4,J5) {I1==24, I2==101, J1==24, J2==101, J3==576,
C    J4==5, J5==4}

      I2 = MAX0(N, M)                                                   0033

C  P(I1,I2,J1,J2,J3,J4,J5) {I1==24, I2==101, J1==24, J2==101, J3==576,
C    J4==5, J5==4}

      I3 = M**2                                                         0034

C  P(I1,I2,I3,J1,J2,J3,J4,J5) {I1==24, I2==101, I3==576, J1==24,
C    J2==101, J3==576, J4==5, J5==4}

      I4 = MOD(N, M)                                                    0035

C  P(I1,I2,I3,I4,J1,J2,J3,J4,J5) {I1==24, I2==101, I3==576, I4==5,
C    J1==24, J2==101, J3==576, J4==5, J5==4}

      I5 = N/M                                                          0036

C  P(I1,I2,I3,I4,I5,J1,J2,J3,J4,J5) {I1==24, I2==101, I3==576, I4==5,
C    I5==4, J1==24, J2==101, J3==576, J4==5, J5==4}

      PRINT *, I1, I2, I3, I4, I5                                       0037

      END

Code after partial evaluation elimination when using Fortran parameters

      PROGRAM FABIEN
      IMPLICIT INTEGER(A-Z)

c     Problem with expression normalization

      INTEGER N, M, I
      PARAMETER(N=101, M=24, L1=MIN(N,M), L2=MAX(N,M), L3=M**2, 
     &     L4=MOD(N,M), L5=N/M)

c     Alternative to PARAMETER (partial evaluation)
csecond      n = 101
csecond      m = 24
csecond      l1 = min(n,m)
csecond      l2=max(n,m)
csecond      l3=m**2
csecond      l4=mod(n,m)
csecond      l5=n/m

c     Check that parameters are properly evaluated (eval.c)

      J1 = 24                                                           0021
      J2 = 101                                                          0022
      J3 = 576                                                          0023
      J4 = 5                                                            0024
      J5 = 4                                                            0025
      PRINT *, 24, 101, 576, 5, 4                                       0026

c     Check expression normalization or partial evaluation

      I1 = 24                                                           0030
      I1 = 24                                                           0031
      I2 = 101                                                          0032
      I2 = 101                                                          0033
      I3 = 576                                                          0034
      I4 = 5                                                            0035
      I5 = 4                                                            0036
      PRINT *, 24, 101, 576, 5, 4                                       0037

      END

Check that variables are well evaluated
----------------------------------------

Preconditions when using Fortran variables


C  P() {}

      PROGRAM FABIEN
      IMPLICIT INTEGER(A-Z)

c     Problem with expression normalization

      INTEGER N, M, I

C  P() {}

cfirst      parameter(n=101, m=24, l1=min(n,m), l2=max(n,m), l3=m**2, 
cfirst     &     l4=mod(n,m), l5=n/m)

c     Alternative to PARAMETER (partial evaluation)
      N = 101                                                           0011

C  P(N) {N==101}

      M = 24                                                            0012

C  P(M,N) {M==24, N==101}

      L1 = MIN(N, M)                                                    0013

C  P(L1,M,N) {M==24, N==101, L1<=24}

      L2 = MAX(N, M)                                                    0014

C  P(L1,L2,M,N) {M==24, N==101, L1<=24, 101<=L2}

      L3 = M**2                                                         0015

C  P(L1,L2,L3,M,N) {M==24, N==101, L1<=24, 101<=L2, 24<=L3}

      L4 = MOD(N, M)                                                    0016

C  P(L1,L2,L3,L4,M,N) {M==24, N==101, L1<=24, 101<=L2, 24<=L3}

      L5 = N/M                                                          0017

C  P(L1,L2,L3,L4,L5,M,N) {M==24, N==101, L1<=24, 101<=L2, 24<=L3}


c     Check that parameters are properly evaluated (eval.c)

      J1 = L1                                                           0021

C  P(J1,L1,L2,L3,L4,L5,M,N) {J1==L1, M==24, N==101, J1<=24, 101<=L2,
C    24<=L3}

      J2 = L2                                                           0022

C  P(J1,J2,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, M==24, N==101, J1<=24,
C    101<=J2, 24<=L3}

      J3 = L3                                                           0023

C  P(J1,J2,J3,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3, M==24,
C    N==101, J1<=24, 101<=J2, 24<=J3}

      J4 = L4                                                           0024

C  P(J1,J2,J3,J4,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3, J4==L4,
C    M==24, N==101, J1<=24, 101<=J2, 24<=J3}

      J5 = L5                                                           0025

C  P(J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, J1<=24, 101<=J2, 24<=J3}

      PRINT *, J1, J2, J3, J4, J5                                       0026

C  P(J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, J1<=24, 101<=J2, 24<=J3}


c     Check expression normalization or partial evaluation

      I1 = MIN(N, M)                                                    0030

C  P(I1,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, I1<=24, J1<=24, 101<=J2, 24<=J3}

      I1 = MIN0(N, M)                                                   0031

C  P(I1,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, I1<=24, J1<=24, 101<=J2, 24<=J3}

      I2 = MAX(N, M)                                                    0032

C  P(I1,I2,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, I1<=24, 101<=I2, J1<=24, 101<=J2,
C    24<=J3}

      I2 = MAX0(N, M)                                                   0033

C  P(I1,I2,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2, J3==L3,
C    J4==L4, J5==L5, M==24, N==101, I1<=24, 101<=I2, J1<=24, 101<=J2,
C    24<=J3}

      I3 = M**2                                                         0034

C  P(I1,I2,I3,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2,
C    J3==L3, J4==L4, J5==L5, M==24, N==101, I1<=24, 101<=I2, 24<=I3,
C    J1<=24, 101<=J2, 24<=J3}

      I4 = MOD(N, M)                                                    0035

C  P(I1,I2,I3,I4,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1, J2==L2,
C    J3==L3, J4==L4, J5==L5, M==24, N==101, I1<=24, 101<=I2, 24<=I3,
C    J1<=24, 101<=J2, 24<=J3}

      I5 = N/M                                                          0036

C  P(I1,I2,I3,I4,I5,J1,J2,J3,J4,J5,L1,L2,L3,L4,L5,M,N) {J1==L1,
C    J2==L2, J3==L3, J4==L4, J5==L5, M==24, N==101, I1<=24, 101<=I2,
C    24<=I3, J1<=24, 101<=J2, 24<=J3}

      PRINT *, I1, I2, I3, I4, I5                                       0037

      END

Code after partial evaluation when using Fortran variables

      PROGRAM FABIEN
      IMPLICIT INTEGER(A-Z)

c     Problem with expression normalization

      INTEGER N, M, I
cfirst      parameter(n=101, m=24, l1=min(n,m), l2=max(n,m), l3=m**2, 
cfirst     &     l4=mod(n,m), l5=n/m)

c     Alternative to PARAMETER (partial evaluation)
      N = 101                                                           0011
      M = 24                                                            0012
      L1 = 24                                                           0013
      L2 = 101                                                          0014
      L3 = 576                                                          0015
      L4 = 5                                                            0016
      L5 = 4                                                            0017

c     Check that parameters are properly evaluated (eval.c)

      J1 = 24                                                           0021
      J2 = 101                                                          0022
      J3 = 576                                                          0023
      J4 = 5                                                            0024
      J5 = 4                                                            0025
      PRINT *, 24, 101, 576, 5, 4                                       0026

c     Check expression normalization or partial evaluation

      I1 = 24                                                           0030
      I1 = 24                                                           0031
      I2 = 101                                                          0032
      I2 = 101                                                          0033
      I3 = 576                                                          0034
      I4 = 5                                                            0035
      I5 = 4                                                            0036
      PRINT *, 24, 101, 576, 5, 4                                       0037

      END
