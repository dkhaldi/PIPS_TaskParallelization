# Use inlining before points-to information is computed
#

setenv WS=pointer_inter_assign01
delete $WS

setproperty ABORT_ON_USER_ERROR TRUE
setproperty POINTS_TO_STRICT_POINTER_TYPES TRUE

# Not compatible with the current points-to implementation and CP lattice
# setproperty POINTS_TO_NULL_POINTER_INITIALIZATION FALSE

setproperty ABSTRACT_HEAP_LOCATIONS "context-sensitive"

create $WS $WS.c

activate PROPER_EFFECTS_WITH_POINTS_TO
activate CUMULATED_EFFECTS_WITH_POINTS_TO
#activate INTERPROCEDURAL_POINTS_TO_ANALYSIS

echo
echo Inlining of "pointer_assign01" into "main"
echo
apply INLINING[pointer_assign01]
# activate PRINT_CODE
display PRINTED_FILE[main]

echo
echo Points-to for "pointer_assign01"
echo

activate PRINT_CODE_POINTS_TO_LIST
display PRINTED_FILE[pointer_assign01]


echo
echo Points-to for "main"
echo
# activate INTERPROCEDURAL_POINTS_TO_ANALYSIS
# activate PRINT_CODE_POINTS_TO_LIST
display PRINTED_FILE[main]

echo 
echo Proper effects with points-to for "main"
echo

activate PRINT_CODE_PROPER_EFFECTS
display PRINTED_FILE[main]

echo 
echo Cumulated effects with points-to for "main"
echo

activate PRINT_CODE_CUMULATED_EFFECTS
display PRINTED_FILE[main]

close
shell cat $WS.database/Warnings
delete $WS
quit
