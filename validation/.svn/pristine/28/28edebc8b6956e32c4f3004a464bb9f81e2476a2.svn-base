
Cumulated effects for "main"

//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1] 
//                               static02:0`i
//             <    is written>: __IO_EFFECTS:LUNS[1] static02:0`i
int main()
{
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1] 
//                               static02:0`i
//             <    is written>: __IO_EFFECTS:LUNS[1] static02:0`i
   // BEGIN BLOCK
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1] 
//                               static02:0`i
//             <    is written>: __IO_EFFECTS:LUNS[1] static02:0`i
   static02();
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1] 
//                               static02:0`i
//             <    is written>: __IO_EFFECTS:LUNS[1] static02:0`i
   static02();
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1] 
//                               static02:0`i
//             <    is written>: __IO_EFFECTS:LUNS[1] static02:0`i
   static02();
   // END BLOCK
}

Transformers for "static02"


//  T(i) {i==i#init+1}

void static02()
{

//  T(i) {i==i#init+1}

   // BEGIN BLOCK

//  T() {}

   static int i = 0.;

//  T(i) {i==i#init+1}


   i++;

//  T() {}

   printf("%d\n", i);
   // END BLOCK
}

Transformers for "main"


//  T(static02:0`i) {static02:0`i==static02:0`i#init+3}

int main()
{

//  T(static02:0`i) {static02:0`i==static02:0`i#init+3}

   // BEGIN BLOCK

//  T(static02:0`i) {static02:0`i==static02:0`i#init+1}

   static02();

//  T(static02:0`i) {static02:0`i==static02:0`i#init+1}

   static02();

//  T(static02:0`i) {static02:0`i==static02:0`i#init+1}

   static02();
   // END BLOCK
}

Preconditions for "main"


//  P() {}

int main()
{

//  P() {}

   // BEGIN BLOCK

//  P() {}

   static02();

//  P(static02:0`i) {static02:0`i==static02:0`i#init+1}

   static02();

//  P(static02:0`i) {static02:0`i==static02:0`i#init+2}

   static02();
   // END BLOCK
}
