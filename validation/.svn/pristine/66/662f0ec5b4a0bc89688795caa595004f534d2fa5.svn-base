
Points-to for ""


// Points To IN:
// msg -> *NULL* , MAY
// msg -> _msg_1[0] , MAY


// Points To OUT: unreachable

void msg_error(char *msg)
{

// Points To:
// msg -> *NULL* , MAY
// msg -> _msg_1[0] , MAY

   printf("%s", msg);

// Points To:
// msg -> *NULL* , MAY
// msg -> _msg_1[0] , MAY

   exit(1);
}

Proper effects with points-to for "msg_error"

void msg_error(char *msg)
{
//             <may be read   >: _msg_1[*] stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: msg stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s", msg);
   exit(1);
}

Cumulated effects with points-to for "msg_error"

//             <may be read   >: _msg_1[*] stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: msg stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
void msg_error(char *msg)
{
//             <may be read   >: _msg_1[*] stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: msg stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s", msg);
   exit(1);
}

Points-to for "main"


// Points To IN: none


// Points To OUT: unreachable

int main()
{

// Points To: none

   char *msg1 = "hello";

// Points To:
// msg1 -> "hello" , EXACT

   char *msg2 = msg1;

// Points To:
// msg1 -> "hello" , EXACT
// msg2 -> "hello" , EXACT

   msg_error(msg2);

// Points To: unreachable


   return 0;
}

Proper effects with points-to for "main"

int main()
{
//             <    is written>: msg1
   char *msg1 = "hello";
//             <    is read   >: msg1
//             <    is written>: msg2
   char *msg2 = msg1;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: msg2 stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   msg_error(msg2);

   return 0;
}

Cumulated effects with points-to for "main"

//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
int main()
{
//             <    is written>: msg1
   char *msg1 = "hello";
//             <    is read   >: msg1
//             <    is written>: msg2
   char *msg2 = msg1;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: msg2 stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   msg_error(msg2);
//             <    is read   >: __IO_EFFECTS:LUNS[1]

   return 0;
}

Warnings and errors

