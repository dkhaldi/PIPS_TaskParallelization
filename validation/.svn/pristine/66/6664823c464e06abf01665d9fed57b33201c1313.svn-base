!
! File CYCLIC_REMAP_A_2_1_node.h
! This file has been automatically generated by the HPF compiler
!
      IF (MSTATUS(2).EQ.2) THEN
         IF (.NOT.LIVE MAPPING(1)) THEN
! send part
! remapping A[2]: A[2] -> A_1[1]
            PSI1 = MY POS(1,2)
            IF (MY LID.LE.2) THEN
               DO PSIp1 = 1, 3
                  T LID = PSIp1
                  IF (MY LID.NE.T LID) THEN
! - lazy sending
                     BUF INDEX = 0
                     SEND NOT INITIALIZED = .TRUE.
                     DO I_1 = (-PSI1+PSIp1+2)/3, (-PSI1+PSIp1+29)/3
                        LALPHAp1 = PSI1-PSIp1+2*I_1+1
                        LALPHA1 = PSI1-PSIp1+3*I_1+1
                        BUF INDEX = BUF INDEX+1
                        HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1)
                        IF (BUF INDEX.EQ.HPFC REAL4 BUFF SIZE) THEN
                           CALL HPFC REAL4 BUFPCK
                           CALL HPFC BROADCAST 0(T LID)
                           BUF INDEX = 0
                           SEND NOT INITIALIZED = .TRUE.
                        ENDIF
                     ENDDO
                     IF (BUF INDEX.NE.0) THEN
                        CALL HPFC REAL4 BUFPCK
                        CALL HPFC BROADCAST 0(T LID)
                     ENDIF
                  ENDIF
               ENDDO
            ENDIF
! receive part
            PSIp1 = MY POS(1,1)
            IF (MY LID.LE.3) THEN
               DO PSI1 = 1, 2
                  T LID = PSI1
                  IF (MY LID.NE.T LID) THEN
! - lazy receiving
                     BUF INDEX = 0
                     RECEIVED NOT PERFORMED = .TRUE.
                     SIZE OF RECEIVED BUFFER = 0
                     DO I_1 = (-PSI1+PSIp1+2)/3, (-PSI1+PSIp1+29)/3
                        LALPHAp1 = PSI1-PSIp1+2*I_1+1
                        LALPHA1 = PSI1-PSIp1+3*I_1+1
                        IF (BUF INDEX.EQ.SIZE OF RECEIVED BUFFER
     &                  ) THEN
                           RECEIVED NOT PERFORMED = .TRUE.
                           CALL HPFC REAL4 BUFUPK(T LID)
                           BUF INDEX = 0
                        ENDIF
                        BUF INDEX = BUF INDEX+1
                        A_1(LALPHAp1) = HPFC REAL4 BUFF(BUF INDEX)
                     ENDDO
                  ELSE
! - lazy copying
                     DO I_1 = (-PSI1+PSIp1+2)/3, (-PSI1+PSIp1+29)/3
                        LALPHAp1 = PSI1-PSIp1+2*I_1+1
                        LALPHA1 = PSI1-PSIp1+3*I_1+1
                        A_1(LALPHAp1) = A(LALPHA1)
                     ENDDO
                  ENDIF
               ENDDO
            ENDIF
! end of remapping
         ENDIF
         LIVE MAPPING(1) = .TRUE.
         MSTATUS(2) = 1
      ENDIF
!
! That is all for CYCLIC_REMAP_A_2_1_node.h
!
!
! File CYCLIC_REMAP_host.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE HOST
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CYCLIC_REMAP_parameters.h"
      INTEGER*4 N
      PARAMETER (N = 60)
      INTEGER ALPHA1, LALPHA1, PSI1, T LID
      REAL*4 A(1:N)
      CALL HPFC INIT HOST
! collecting distributed variable A
      DO PSI1 = 1, 2
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO LALPHA1 = (-PSI1+25)/2, 11
            ALPHA1 = 22
            BUF INDEX = BUF INDEX+1
            A(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      PRINT *, A(22)
! collecting distributed variable A_1
      DO PSI1 = 1, 3
         BUF INDEX = 0
         RECEIVED NOT PERFORMED = .FALSE.
         SIZE OF RECEIVED BUFFER = 0
         T LID = PSI1
         CALL HPFC RCV FROM NODE(T LID)
         CALL HPFC REAL4 BUFUPK
         DO LALPHA1 = (-PSI1+38)/3, 11
            ALPHA1 = 33
            BUF INDEX = BUF INDEX+1
            A(ALPHA1) = HPFC REAL4 BUFF(BUF INDEX)
         ENDDO
      ENDDO
! end of collect
      PRINT *, A(33)
      CALL HPFC HOST END
      END
!
! That is all for CYCLIC_REMAP_host.f
!
!
! File CYCLIC_REMAP_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Arrays Initializations for CYCLIC_REMAP
!
!
! initializing array A, number 2
!
      NODIMA(2) = 1
      ATOT(2) = 2

      MSTATUS(2) = 2
      LIVEMAPPING(2) = .TRUE.

      RANGEA(2, 1, 1) = 1
      RANGEA(2, 1, 2) = 60
      RANGEA(2, 1, 3) = 60
!
      RANGEA(2, 1, 4) = 3
      RANGEA(2, 1, 5) = 1
      RANGEA(2, 1, 6) = 2
      RANGEA(2, 1, 7) = 0
      RANGEA(2, 1, 8) = -1

      ALIGN(2, 1, 1) = 1
      ALIGN(2, 1, 2) = 1
      ALIGN(2, 1, 3) = 0
!
! initializing array A_1, number 1
!
      NODIMA(1) = 1
      ATOT(1) = 1

      RANGEA(1, 1, 1) = 1
      RANGEA(1, 1, 2) = 60
      RANGEA(1, 1, 3) = 60
!
      RANGEA(1, 1, 4) = 3
      RANGEA(1, 1, 5) = 1
      RANGEA(1, 1, 6) = 3
      RANGEA(1, 1, 7) = 0
      RANGEA(1, 1, 8) = -1

      ALIGN(1, 1, 1) = 1
      ALIGN(1, 1, 2) = 1
      ALIGN(1, 1, 3) = 0
!
! That is all for CYCLIC_REMAP_init.h
!
!
! File CYCLIC_REMAP_node.f
! This file has been automatically generated by the HPF compiler
!
      SUBROUTINE NODE
      implicit none
      include "global_parameters.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      include "CYCLIC_REMAP_parameters.h"
      INTEGER ALPHA1, LALPHA1, PSI1, I_1, LALPHAp1, PSIp1, T LID
      REAL*4 A(1:30), A_1(1:20)
      CALL HPFC INIT NODE
! all livenesss for A
      LIVE MAPPING(2) = .FALSE.
      LIVE MAPPING(1) = .FALSE.
! direct remapping for A
      LIVE MAPPING(2) = .TRUE.
      MSTATUS(2) = 2
! collecting distributed variable A
      PSI1 = MY POS(1,2)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO LALPHA1 = (-PSI1+25)/2, 11
         ALPHA1 = 22
         BUF INDEX = BUF INDEX+1
         HPFC REAL4 BUFF(BUF INDEX) = A(LALPHA1)
      ENDDO
      CALL HPFC REAL4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
! begin remappings
      include 'CYCLIC_REMAP_A_2_1_node.h'
! liveness management
! clean live set for A
      LIVE MAPPING(2) = .FALSE.
! end of liveness management
! end remappings
! collecting distributed variable A_1
      PSI1 = MY POS(1,1)
      BUF INDEX = 0
      SEND NOT INITIALIZED = .TRUE.
      DO LALPHA1 = (-PSI1+38)/3, 11
         ALPHA1 = 33
         BUF INDEX = BUF INDEX+1
         HPFC REAL4 BUFF(BUF INDEX) = A_1(LALPHA1)
      ENDDO
      CALL HPFC REAL4 BUFPCK
      CALL HPFC SND TO HOST
! end of collect
      CALL HPFC NODE END
      END
!
! That is all for CYCLIC_REMAP_node.f
!
!
! File CYCLIC_REMAP_parameters.h
! This file has been automatically generated by the HPF compiler
!
!
! parameters generated for CYCLIC_REMAP
!
      integer 
     $    CYCLIC_REMAP A LO1,
     $    CYCLIC_REMAP A UP1
      parameter(CYCLIC_REMAP A LO1 = 1)
      parameter(CYCLIC_REMAP A UP1 = 30)
      integer 
     $    CYCLIC_REMAP A_1 LO1,
     $    CYCLIC_REMAP A_1 UP1
      parameter(CYCLIC_REMAP A_1 LO1 = 1)
      parameter(CYCLIC_REMAP A_1 UP1 = 20)
!
! That is all for CYCLIC_REMAP_parameters.h
!
!
! File global_init.h
! This file has been automatically generated by the HPF compiler
!
!
! Templates Initializations
!
!
! initializing template T_1, number 1
!
      NODIMT(1) = 1
      TTOP(1) = 1

      RANGET(1, 1, 1) = 1
      RANGET(1, 1, 2) = 60
      RANGET(1, 1, 3) = 60

      DIST(1, 1, 1) = 1
      DIST(1, 1, 2) = -1
!
! initializing template T, number 2
!
      NODIMT(2) = 1
      TTOP(2) = 2

      RANGET(2, 1, 1) = 1
      RANGET(2, 1, 2) = 60
      RANGET(2, 1, 3) = 60

      DIST(2, 1, 1) = 1
      DIST(2, 1, 2) = -1
!
! Processors Initializations
!
!
! initializing processors P3, number 1
!
      NODIMP(1) = 1

      RANGEP(1, 1, 1) = 1
      RANGEP(1, 1, 2) = 3
      RANGEP(1, 1, 3) = 3
!
! initializing processors P2, number 2
!
      NODIMP(2) = 1

      RANGEP(2, 1, 1) = 1
      RANGEP(2, 1, 2) = 2
      RANGEP(2, 1, 3) = 2
!
! That is all for global_init.h
!
!
! File global_parameters.h
! This file has been automatically generated by the HPF compiler
!
      integer
     $     REALNBOFARRAYS,
     $     REALNBOFTEMPLATES,
     $     REALNBOFPROCESSORS,
     $     REALMAXSIZEOFPROCS,
     $     REALMAXSIZEOFBUFFER

!
! parameters
!
      parameter(REALNBOFARRAYS = 2)
      parameter(REALNBOFTEMPLATES = 2)
      parameter(REALNBOFPROCESSORS = 2)
      parameter(REALMAXSIZEOFPROCS = 3)
      parameter(REALMAXSIZEOFBUFFER = 1000000)
!
! That is all for global_parameters.h
!
