
Initial code

      PROGRAM HYBRIDCOMP11
      INTEGER I
      INTEGER J
      INTEGER*4 A(5, 5)
      DO 10 I = 1, 5
         DO J = 1, 5
            A(I,J) = I*1147483648
         ENDDO
10       CONTINUE
      PRINT *, A
      END

Code after outlining

      PROGRAM HYBRIDCOMP11
      INTEGER I
      INTEGER J
      INTEGER*4 A(5, 5)
      CALL TOTO(A)
      PRINT *, A
      END
/* C pretty print for module TOTO. */
//needed include to compile the C output
#include "math.h"
#include "stdlib.h"
#include "complex.h"

// The macros to support some fortran intrinsics
// and complex declaration
#define crough_max(a,b) (((a)>(b))?(a):(b))
#define crough_min(a,b) (((a)<(b))?(a):(b))
#define crough_powi(a,b) ((a)^(b))
#define init_complex(a,b) (a + b*I)

void
toto_ (int a[5][5])
{
  int j;
  int i;

  for (i = 1; i <= 5; i++)
    {
      for (j = 1; j <= 5; j++)
	{
	  a[j - 1][i - 1] = (i * 1147483648);
	}
      continue;
    }
  return;
}

unsplit


compiles pgm from fortran files and executes

  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944

compiles pgm from fortran and C files and executes

  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944  1147483648 -2000000000  -852516352   294967296  1442450944
