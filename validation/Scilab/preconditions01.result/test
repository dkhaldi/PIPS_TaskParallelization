
Source code for "d0d0d0d0d0d0d0mandelbrotd2"

void d0d0d0d0d0d0d0mandelbrotd2(float xstart, float xstep, int Xsize, float ystart, float ystep, int Ysize, float nmax, float results[100][100])
{
   /*
   ** -----------------------------
   ** --- Variable Declaration. ---
   ** -----------------------------
   */
   
   int __resultsSize[2];
   int i;
   
   
   int j;
   
   
   
   
   __resultsSize[0] = 100;
   __resultsSize[1] = 100;
   
   
   /*
   ** ---------------------------------
   ** --- End Variable Declaration. ---
   ** ---------------------------------
   */
   /*
   ** ---------------
   ** --- C code. ---
   ** ---------------
   */
   
   /*SCI2C: ##################################################################
        SCI2C: 
        SCI2C: ##################################################################*/
   
   /*SCI2C: ##################################################################
        SCI2C:   for i=1:xsize
        SCI2C: ##################################################################*/
   
   for(i = 0; i <= 100-1; i += 1)
      /*SCI2C: ##################################################################
              SCI2C:     for j=1:ysize
              SCI2C: ##################################################################*/
      for(j = 0; j <= 100-1; j += 1) {
         float __temp1;

         float x0;

         float __temp2;

         float y0;

         float k = 0;

         float x;

         float y;

         float __temp3;

         float __temp4;

         float __temp5;

         float __temp6;

         float __temp7;

         float __temp8;

         float __temp9;

         float __temp10;

         float __temp11;

         float xtemp;

         float __temp12;

         float __temp13;

         float __temp14;

         float __temp15;

         float __temp16;

         float __temp17;

         float __temp18;

         float __temp19;

         float __temp20;

         float __temp21;

         float __temp22;

         float __temp23;
         
         /*SCI2C: ##################################################################
                    SCI2C:       x0 = xstart+i*xstep;
                    SCI2C: ##################################################################*/
         __temp1 = i*xstep;
         x0 = xstart+__temp1;
         
         /*SCI2C: ##################################################################
                    SCI2C:       y0 = ystart+j*ystep;
                    SCI2C: ##################################################################*/
         __temp2 = j*ystep;
         y0 = ystart+__temp2;
         
         /*SCI2C: ##################################################################
                    SCI2C:       k = 0;
                    SCI2C: ##################################################################*/
         k = 0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       x = x0;
                    SCI2C: ##################################################################*/
         x = x0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       y = y0;
                    SCI2C: ##################################################################*/
         y = y0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       while( (x*x+y*y) < 4 & k< nmax)
                    SCI2C: ##################################################################*/
         
         __temp3 = x*x;
         __temp4 = y*y;
         __temp5 = __temp3+__temp4;
         __temp6 = (double) (__temp5<4);
         __temp7 = (double) (k<nmax);
         __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         while (__temp8) {
            /*SCI2C: ##################################################################
                          SCI2C:         xtemp = x*x - y*y + x0;
                          SCI2C: ##################################################################*/
            __temp9 = x*x;
            __temp10 = y*y;
            __temp11 = __temp9-__temp10;
            xtemp = __temp11+x0;
            
            /*SCI2C: ##################################################################
                          SCI2C:         y = 2*x*y + y0;
                          SCI2C: ##################################################################*/
            __temp12 = 2*x;
            __temp13 = __temp12*y;
            y = __temp13+y0;
            
            /*SCI2C: ##################################################################
                          SCI2C:         x = xtemp;
                          SCI2C: ##################################################################*/
            x = xtemp;
            
            /*SCI2C: ##################################################################
                          SCI2C:         k = k+1;
                          SCI2C: ##################################################################*/
            k = k+1;
            
            /*SCI2C: ##################################################################
                          SCI2C:       end
                          SCI2C: ##################################################################*/
            
            
            __temp3 = x*x;
            __temp4 = y*y;
            __temp5 = __temp3+__temp4;
            __temp6 = (double) (__temp5<4);
            __temp7 = (double) (k<nmax);
            __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         }
         
         /*SCI2C: ##################################################################
                    SCI2C:       results(i,j) = k + 1 - (log(log((sqrt(x*x + y*y)))))/(log(2.0));
                    SCI2C: ##################################################################*/
         __temp14 = k+1;
         __temp15 = x*x;
         __temp16 = y*y;
         __temp17 = __temp15+__temp16;
         __temp18 = sqrt(__temp17);
         __temp19 = log(__temp18);
         __temp20 = log(__temp19);
         __temp21 = log(2.0);
         __temp22 = __temp20/__temp21;
         __temp23 = __temp14-__temp22;
         results[i][j] = __temp23;
      }
}

Transformers for "d0d0d0d0d0d0d0mandelbrotd2"


//  T() {}

void d0d0d0d0d0d0d0mandelbrotd2(float xstart, float xstep, int Xsize, float ystart, float ystep, int Ysize, float nmax, float results[100][100])
{
   /*
   ** -----------------------------
   ** --- Variable Declaration. ---
   ** -----------------------------
   */
   

//  T() {}

   int __resultsSize[2];

//  T() {}

   int i;
   
   

//  T() {}

   int j;

//  T() {}

   
   
   
   
   __resultsSize[0] = 100;

//  T() {}

   __resultsSize[1] = 100;

//  T(i,j) {0<=i, i<=99}

   
   
   /*
   ** ---------------------------------
   ** --- End Variable Declaration. ---
   ** ---------------------------------
   */
   /*
   ** ---------------
   ** --- C code. ---
   ** ---------------
   */
   
   /*SCI2C: ##################################################################
        SCI2C: 
        SCI2C: ##################################################################*/
   
   /*SCI2C: ##################################################################
        SCI2C:   for i=1:xsize
        SCI2C: ##################################################################*/
   
   for(i = 0; i <= 100-1; i += 1)

//  T(j) {0<=i, i<=99, 0<=j, j<=99}

      /*SCI2C: ##################################################################
              SCI2C:     for j=1:ysize
              SCI2C: ##################################################################*/
      for(j = 0; j <= 100-1; j += 1) {

//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp1;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float x0;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp2;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float y0;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float k = 0;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float x;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float y;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp3;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp4;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp5;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp6;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp7;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp8;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp9;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp10;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp11;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float xtemp;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp12;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp13;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp14;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp15;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp16;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp17;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp18;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp19;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp20;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp21;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp22;


//  T() {0<=i, i<=99, 0<=j, j<=99}

         float __temp23;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x0 = xstart+i*xstep;
                    SCI2C: ##################################################################*/
         __temp1 = i*xstep;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         x0 = xstart+__temp1;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y0 = ystart+j*ystep;
                    SCI2C: ##################################################################*/
         __temp2 = j*ystep;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         y0 = ystart+__temp2;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       k = 0;
                    SCI2C: ##################################################################*/
         k = 0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x = x0;
                    SCI2C: ##################################################################*/
         x = x0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y = y0;
                    SCI2C: ##################################################################*/
         y = y0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       while( (x*x+y*y) < 4 & k< nmax)
                    SCI2C: ##################################################################*/
         
         __temp3 = x*x;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp4 = y*y;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp5 = __temp3+__temp4;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp6 = (double) (__temp5<4);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp7 = (double) (k<nmax);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         while (__temp8) {

//  T() {0<=i, i<=99, 0<=j, j<=99}

            /*SCI2C: ##################################################################
                          SCI2C:         xtemp = x*x - y*y + x0;
                          SCI2C: ##################################################################*/
            __temp9 = x*x;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp10 = y*y;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp11 = __temp9-__temp10;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            xtemp = __temp11+x0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         y = 2*x*y + y0;
                          SCI2C: ##################################################################*/
            __temp12 = 2*x;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp13 = __temp12*y;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            y = __temp13+y0;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         x = xtemp;
                          SCI2C: ##################################################################*/
            x = xtemp;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         k = k+1;
                          SCI2C: ##################################################################*/
            k = k+1;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:       end
                          SCI2C: ##################################################################*/
            
            
            __temp3 = x*x;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp4 = y*y;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp5 = __temp3+__temp4;

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp6 = (double) (__temp5<4);

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp7 = (double) (k<nmax);

//  T() {0<=i, i<=99, 0<=j, j<=99}

            __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         }

//  T() {0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       results(i,j) = k + 1 - (log(log((sqrt(x*x + y*y)))))/(log(2.0));
                    SCI2C: ##################################################################*/
         __temp14 = k+1;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp15 = x*x;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp16 = y*y;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp17 = __temp15+__temp16;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp18 = sqrt(__temp17);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp19 = log(__temp18);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp20 = log(__temp19);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp21 = log(2.0);

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp22 = __temp20/__temp21;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         __temp23 = __temp14-__temp22;

//  T() {0<=i, i<=99, 0<=j, j<=99}

         results[i][j] = __temp23;
      }
}

Preconditions for "d0d0d0d0d0d0d0mandelbrotd2"


//  P() {Xsize==100, Ysize==100}

void d0d0d0d0d0d0d0mandelbrotd2(float xstart, float xstep, int Xsize, float ystart, float ystep, int Ysize, float nmax, float results[100][100])
{
   /*
   ** -----------------------------
   ** --- Variable Declaration. ---
   ** -----------------------------
   */
   

//  P() {Xsize==100, Ysize==100}

   int __resultsSize[2];

//  P() {Xsize==100, Ysize==100}

   int i;
   
   

//  P() {Xsize==100, Ysize==100}

   int j;

//  P() {Xsize==100, Ysize==100}

   
   
   
   
   __resultsSize[0] = 100;

//  P() {Xsize==100, Ysize==100}

   __resultsSize[1] = 100;

//  P() {Xsize==100, Ysize==100}

   
   
   /*
   ** ---------------------------------
   ** --- End Variable Declaration. ---
   ** ---------------------------------
   */
   /*
   ** ---------------
   ** --- C code. ---
   ** ---------------
   */
   
   /*SCI2C: ##################################################################
        SCI2C: 
        SCI2C: ##################################################################*/
   
   /*SCI2C: ##################################################################
        SCI2C:   for i=1:xsize
        SCI2C: ##################################################################*/
   
   for(i = 0; i <= 100-1; i += 1)

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99}

      /*SCI2C: ##################################################################
              SCI2C:     for j=1:ysize
              SCI2C: ##################################################################*/
      for(j = 0; j <= 100-1; j += 1) {

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp1;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float x0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp2;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float y0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float k = 0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float x;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float y;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp3;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp4;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp5;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp6;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp7;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp8;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp9;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp10;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp11;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float xtemp;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp12;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp13;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp14;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp15;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp16;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp17;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp18;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp19;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp20;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp21;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp22;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp23;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x0 = xstart+i*xstep;
                    SCI2C: ##################################################################*/
         __temp1 = i*xstep;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         x0 = xstart+__temp1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y0 = ystart+j*ystep;
                    SCI2C: ##################################################################*/
         __temp2 = j*ystep;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         y0 = ystart+__temp2;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       k = 0;
                    SCI2C: ##################################################################*/
         k = 0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x = x0;
                    SCI2C: ##################################################################*/
         x = x0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y = y0;
                    SCI2C: ##################################################################*/
         y = y0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       while( (x*x+y*y) < 4 & k< nmax)
                    SCI2C: ##################################################################*/
         
         __temp3 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp4 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp5 = __temp3+__temp4;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp6 = (double) (__temp5<4);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp7 = (double) (k<nmax);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         while (__temp8) {

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            /*SCI2C: ##################################################################
                          SCI2C:         xtemp = x*x - y*y + x0;
                          SCI2C: ##################################################################*/
            __temp9 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp10 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp11 = __temp9-__temp10;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            xtemp = __temp11+x0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         y = 2*x*y + y0;
                          SCI2C: ##################################################################*/
            __temp12 = 2*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp13 = __temp12*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            y = __temp13+y0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         x = xtemp;
                          SCI2C: ##################################################################*/
            x = xtemp;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         k = k+1;
                          SCI2C: ##################################################################*/
            k = k+1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:       end
                          SCI2C: ##################################################################*/
            
            
            __temp3 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp4 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp5 = __temp3+__temp4;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp6 = (double) (__temp5<4);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp7 = (double) (k<nmax);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         }

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       results(i,j) = k + 1 - (log(log((sqrt(x*x + y*y)))))/(log(2.0));
                    SCI2C: ##################################################################*/
         __temp14 = k+1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp15 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp16 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp17 = __temp15+__temp16;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp18 = sqrt(__temp17);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp19 = log(__temp18);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp20 = log(__temp19);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp21 = log(2.0);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp22 = __temp20/__temp21;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp23 = __temp14-__temp22;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         results[i][j] = __temp23;
      }
}

Parallel code for "d0d0d0d0d0d0d0mandelbrotd2"

void d0d0d0d0d0d0d0mandelbrotd2(float xstart, float xstep, int Xsize, float ystart, float ystep, int Ysize, float nmax, float results[100][100])
{
   /*
   ** -----------------------------
   ** --- Variable Declaration. ---
   ** -----------------------------
   */
   
   int __resultsSize[2];
   int i;
   
   
   int j;
   
   
   
   
   __resultsSize[0] = 100;
   __resultsSize[1] = 100;
   
   
   /*
   ** ---------------------------------
   ** --- End Variable Declaration. ---
   ** ---------------------------------
   */
   /*
   ** ---------------
   ** --- C code. ---
   ** ---------------
   */
   
   /*SCI2C: ##################################################################
        SCI2C: 
        SCI2C: ##################################################################*/
   
   /*SCI2C: ##################################################################
        SCI2C:   for i=1:xsize
        SCI2C: ##################################################################*/
   
   forall(i = 0; i <= 100-1; i += 1)
      /*SCI2C: ##################################################################
              SCI2C:     for j=1:ysize
              SCI2C: ##################################################################*/
      forall(j = 0; j <= 100-1; j += 1) {
         float __temp1;

         float x0;

         float __temp2;

         float y0;

         float k = 0;

         float x;

         float y;

         float __temp3;

         float __temp4;

         float __temp5;

         float __temp6;

         float __temp7;

         float __temp8;

         float __temp9;

         float __temp10;

         float __temp11;

         float xtemp;

         float __temp12;

         float __temp13;

         float __temp14;

         float __temp15;

         float __temp16;

         float __temp17;

         float __temp18;

         float __temp19;

         float __temp20;

         float __temp21;

         float __temp22;

         float __temp23;
         
         /*SCI2C: ##################################################################
                    SCI2C:       x0 = xstart+i*xstep;
                    SCI2C: ##################################################################*/
         __temp1 = i*xstep;
         x0 = xstart+__temp1;
         
         /*SCI2C: ##################################################################
                    SCI2C:       y0 = ystart+j*ystep;
                    SCI2C: ##################################################################*/
         __temp2 = j*ystep;
         y0 = ystart+__temp2;
         
         /*SCI2C: ##################################################################
                    SCI2C:       k = 0;
                    SCI2C: ##################################################################*/
         k = 0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       x = x0;
                    SCI2C: ##################################################################*/
         x = x0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       y = y0;
                    SCI2C: ##################################################################*/
         y = y0;
         
         /*SCI2C: ##################################################################
                    SCI2C:       while( (x*x+y*y) < 4 & k< nmax)
                    SCI2C: ##################################################################*/
         
         __temp3 = x*x;
         __temp4 = y*y;
         __temp5 = __temp3+__temp4;
         __temp6 = (double) (__temp5<4);
         __temp7 = (double) (k<nmax);
         __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         while (__temp8) {
            /*SCI2C: ##################################################################
                          SCI2C:         xtemp = x*x - y*y + x0;
                          SCI2C: ##################################################################*/
            __temp9 = x*x;
            __temp10 = y*y;
            __temp11 = __temp9-__temp10;
            xtemp = __temp11+x0;
            
            /*SCI2C: ##################################################################
                          SCI2C:         y = 2*x*y + y0;
                          SCI2C: ##################################################################*/
            __temp12 = 2*x;
            __temp13 = __temp12*y;
            y = __temp13+y0;
            
            /*SCI2C: ##################################################################
                          SCI2C:         x = xtemp;
                          SCI2C: ##################################################################*/
            x = xtemp;
            
            /*SCI2C: ##################################################################
                          SCI2C:         k = k+1;
                          SCI2C: ##################################################################*/
            k = k+1;
            
            /*SCI2C: ##################################################################
                          SCI2C:       end
                          SCI2C: ##################################################################*/
            
            
            __temp3 = x*x;
            __temp4 = y*y;
            __temp5 = __temp3+__temp4;
            __temp6 = (double) (__temp5<4);
            __temp7 = (double) (k<nmax);
            __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         }
         
         /*SCI2C: ##################################################################
                    SCI2C:       results(i,j) = k + 1 - (log(log((sqrt(x*x + y*y)))))/(log(2.0));
                    SCI2C: ##################################################################*/
         __temp14 = k+1;
         __temp15 = x*x;
         __temp16 = y*y;
         __temp17 = __temp15+__temp16;
         __temp18 = sqrt(__temp17);
         __temp19 = log(__temp18);
         __temp20 = log(__temp19);
         __temp21 = log(2.0);
         __temp22 = __temp20/__temp21;
         __temp23 = __temp14-__temp22;
         results[i][j] = __temp23;
      }
}

//  P() {Xsize==100, Ysize==100}

void d0d0d0d0d0d0d0mandelbrotd2(float xstart, float xstep, int Xsize, float ystart, float ystep, int Ysize, float nmax, float results[100][100])
{
   /*
   ** -----------------------------
   ** --- Variable Declaration. ---
   ** -----------------------------
   */
   

//  P() {Xsize==100, Ysize==100}

   int __resultsSize[2];

//  P() {Xsize==100, Ysize==100}

   int i;
   
   

//  P() {Xsize==100, Ysize==100}

   int j;

//  P() {Xsize==100, Ysize==100}

   
   
   
   
   __resultsSize[0] = 100;

//  P() {Xsize==100, Ysize==100}

   __resultsSize[1] = 100;

//  P() {Xsize==100, Ysize==100}

   
   
   /*
   ** ---------------------------------
   ** --- End Variable Declaration. ---
   ** ---------------------------------
   */
   /*
   ** ---------------
   ** --- C code. ---
   ** ---------------
   */
   
   /*SCI2C: ##################################################################
        SCI2C: 
        SCI2C: ##################################################################*/
   
   /*SCI2C: ##################################################################
        SCI2C:   for i=1:xsize
        SCI2C: ##################################################################*/
   
   for(i = 0; i <= 100-1; i += 1)

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99}

      /*SCI2C: ##################################################################
              SCI2C:     for j=1:ysize
              SCI2C: ##################################################################*/
      for(j = 0; j <= 100-1; j += 1) {

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp1;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float x0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp2;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float y0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float k = 0;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float x;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float y;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp3;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp4;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp5;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp6;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp7;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp8;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp9;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp10;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp11;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float xtemp;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp12;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp13;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp14;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp15;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp16;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp17;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp18;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp19;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp20;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp21;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp22;


//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         float __temp23;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x0 = xstart+i*xstep;
                    SCI2C: ##################################################################*/
         __temp1 = i*xstep;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         x0 = xstart+__temp1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y0 = ystart+j*ystep;
                    SCI2C: ##################################################################*/
         __temp2 = j*ystep;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         y0 = ystart+__temp2;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       k = 0;
                    SCI2C: ##################################################################*/
         k = 0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       x = x0;
                    SCI2C: ##################################################################*/
         x = x0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       y = y0;
                    SCI2C: ##################################################################*/
         y = y0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       while( (x*x+y*y) < 4 & k< nmax)
                    SCI2C: ##################################################################*/
         
         __temp3 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp4 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp5 = __temp3+__temp4;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp6 = (double) (__temp5<4);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp7 = (double) (k<nmax);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         while (__temp8) {

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            /*SCI2C: ##################################################################
                          SCI2C:         xtemp = x*x - y*y + x0;
                          SCI2C: ##################################################################*/
            __temp9 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp10 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp11 = __temp9-__temp10;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            xtemp = __temp11+x0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         y = 2*x*y + y0;
                          SCI2C: ##################################################################*/
            __temp12 = 2*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp13 = __temp12*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            y = __temp13+y0;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         x = xtemp;
                          SCI2C: ##################################################################*/
            x = xtemp;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:         k = k+1;
                          SCI2C: ##################################################################*/
            k = k+1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            
            /*SCI2C: ##################################################################
                          SCI2C:       end
                          SCI2C: ##################################################################*/
            
            
            __temp3 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp4 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp5 = __temp3+__temp4;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp6 = (double) (__temp5<4);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp7 = (double) (k<nmax);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

            __temp8 = __temp6!=0.0&&__temp7!=0.0?1.0:0.0;
         }

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         
         /*SCI2C: ##################################################################
                    SCI2C:       results(i,j) = k + 1 - (log(log((sqrt(x*x + y*y)))))/(log(2.0));
                    SCI2C: ##################################################################*/
         __temp14 = k+1;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp15 = x*x;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp16 = y*y;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp17 = __temp15+__temp16;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp18 = sqrt(__temp17);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp19 = log(__temp18);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp20 = log(__temp19);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp21 = log(2.0);

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp22 = __temp20/__temp21;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         __temp23 = __temp14-__temp22;

//  P(i,j) {Xsize==100, Ysize==100, 0<=i, i<=99, 0<=j, j<=99}

         results[i][j] = __temp23;
      }
}
