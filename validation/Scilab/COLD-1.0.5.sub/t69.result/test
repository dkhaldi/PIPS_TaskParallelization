int main(int argc, char *argv[])
{
   //PIPS generated variable
   int j, i_0, i_1;
   scilab_rt_init(argc, argv, 0);
   
   /*  t69.sce: testing power function */
   int _u_a[1][3];
   _u_a[0][0] = 1;
   _u_a[0][1] = 2;
   _u_a[0][2] = 3;
   /* b = a^2 */
   int _u_c[1][3];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 2; __lv2 += 1)
      _u_c[0][__lv2] = pow(_u_a[0][__lv2], 3);
   __lv1 = 0+1;
   scilab_rt_display_s0i2_("c", 1, 3, _u_c);
   int _u_d[3][3];
   _u_d[0][0] = 1;
   _u_d[0][1] = 2;
   _u_d[0][2] = 3;
   _u_d[1][0] = 3;
   _u_d[1][1] = 2;
   _u_d[1][2] = 1;
   _u_d[2][0] = 1;
   _u_d[2][1] = 2;
   _u_d[2][2] = 3;
   int _u_e[3][3];
   int _u_f[1][3];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 2; __lv2 += 1)
      _u_f[0][__lv2] = pow(2, _u_a[0][__lv2]);
   double _u_g[1][3];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 2; __lv2 += 1)
      _u_g[0][__lv2] = pow(2., _u_a[0][__lv2]);
   int _u_h[1][3];
   _u_h[0][0] = 4;
   _u_h[0][1] = 5;
   _u_h[0][2] = 6;
   int _u_i[3][3];
   _u_i[0][0] = 4;
   _u_i[0][1] = 5;
   _u_i[0][2] = 6;
   _u_i[1][0] = 4;
   _u_i[1][1] = 5;
   _u_i[1][2] = 6;
   _u_i[2][0] = 4;
   _u_i[2][1] = 5;
   _u_i[2][2] = 6;
   /* j = a^h */
   int _u_k[1][3];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 2; __lv2 += 1)
      _u_k[0][__lv2] = pow(_u_a[0][__lv2], _u_h[0][__lv2]);
   /* l = d^i */
   int _u_m[3][3];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 2; __lv2 += 1) {
         //PIPS generated variable
         register int _u_d_0 = _u_d[__lv1][__lv2];
         _u_e[__lv1][__lv2] = pow(_u_d_0, 3);
         _u_m[__lv1][__lv2] = pow(_u_d_0, _u_i[__lv1][__lv2]);
      }
   }
   scilab_rt_display_s0i2_("e", 3, 3, _u_e);
   __lv1 = 0+1;
   scilab_rt_display_s0i2_("f", 1, 3, _u_f);
   __lv1 = 0+1;
   scilab_rt_display_s0d2_("g", 1, 3, _u_g);
   __lv1 = 0+1;
   scilab_rt_display_s0i2_("k", 1, 3, _u_k);
   scilab_rt_display_s0i2_("m", 3, 3, _u_m);
   double _u_n[3][2][3];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 1; __lv2 += 1) {
         //PIPS generated variable
         int __lv3;
         for(__lv3 = 0; __lv3 <= 2; __lv3 += 1)
            _u_n[__lv1][__lv2][__lv3] = (double) 1.0;
      }
   }

#pragma omp parallel for
   for(j = 0; j <= 1; j += 1) {
      //PIPS generated variable
      int k_0;
      for(k_0 = 0; k_0 <= 2; k_0 += 1)
         _u_n[1][j][k_0] = 1;
   }

#pragma omp parallel for
   for(i_0 = 0; i_0 <= 2; i_0 += 1) {
      //PIPS generated variable
      int k_1;
      for(k_1 = 0; k_1 <= 2; k_1 += 1)
         _u_n[i_0][1][k_1] = 2;
   }

#pragma omp parallel for
   for(i_1 = 0; i_1 <= 2; i_1 += 1)
      _u_n[i_1][1][2] = 3;
   double _u_o[3][2][3];
   double _u_p[3][2][3];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 1; __lv2 += 1) {
         //PIPS generated variable
         int __lv3;
         for(__lv3 = 0; __lv3 <= 2; __lv3 += 1) {
            //PIPS generated variable
            register double _u_n_0 = _u_n[__lv1][__lv2][__lv3];
            _u_o[__lv1][__lv2][__lv3] = pow(_u_n_0, 2);
            _u_p[__lv1][__lv2][__lv3] = pow(_u_n_0, _u_n_0);
         }
      }
   }
   scilab_rt_display_s0d3_("o", 3, 2, 3, _u_o);
   scilab_rt_display_s0d3_("p", 3, 2, 3, _u_p);
   /* q = d^d */
   /* r = a^h */
   
   scilab_rt_terminate();
}
