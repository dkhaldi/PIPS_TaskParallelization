void foo1_d2i0_d2(int _u_x_n0, int _u_x_n1, double _u_x[_u_x_n0][_u_x_n1], int _u_n, int _u_y_n0, int _u_y_n1, double _u_y[_u_y_n0][_u_y_n1])
{
   (int) _u_n==_u_y_n0&&(int) 1==_u_y_n1?(void) 0:__assert_fail("(int)_u_n == _u_y_n0 && (int)1 == _u_y_n1", ".t197.tmp/t197.c", 21, __func__);
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= _u_y_n0-1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= _u_y_n1-1; __lv2 += 1)
         (double) 1.0;
   }
}
void foo2_i0_(int _u_n)
{
   int _tmpxx0 = 3*_u_n;
   int _u_m = _tmpxx0+2;
   double _u_x[_u_m][1];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= _u_m-1; __lv1 += 1)
      (double) 0.0;
   for(__lv1 = 0; __lv1 <= _u_m-1; __lv1 += 1)
      __lv2 = 0+1;
   double _u_y[_u_m][1];
   foo1_d2i0_d2(_u_m, 1, _u_x, _u_m, _u_m, 1, _u_y);
   scilab_rt_disp_d2_(_u_m, 1, _u_y);
}
int main(int argc, char *argv[])
{
   scilab_rt_init(argc, argv, 0);
   
   /*  t197.sce: dynamic array allocation */
   foo2_i0_(3);
   foo2_i0_(1);

   scilab_rt_terminate();
}
