int foo_i0_(int _u_b)
{
   int _u_a = _u_b+1;
   return _u_a;
}
int main(int argc, char *argv[])
{
   scilab_rt_init(argc, argv, 0);
   
   /* Testing x = x*x, x = x + y, n = foo(n), etc */
   double _u_x[3][3];
   _u_x[0][0] = 1;
   _u_x[0][1] = 2;
   _u_x[0][2] = 3;
   _u_x[1][0] = 4;
   _u_x[1][1] = 5;
   _u_x[1][2] = 6;
   _u_x[2][0] = 7;
   _u_x[2][1] = 8;
   _u_x[2][2] = 9;
   scilab_rt_display_s0d2_("x", 3, 3, _u_x);
   double _u_y[3][3];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 2; __lv2 += 1) {
         //PIPS generated variable
         register double _tmpxx0_0;
         _u_y[__lv1][__lv2] = (double) 1.0;
         _tmpxx0_0 = _u_x[__lv1][__lv2]+_u_y[__lv1][__lv2];
         _u_x[__lv1][__lv2] = _tmpxx0_0;
      }
   }
   scilab_rt_display_s0d2_("y", 3, 3, _u_y);
   scilab_rt_display_s0d2_("x", 3, 3, _u_x);
   double _tmpxx1[3][3];
   scilab_rt_mul_d2d2_d2(3, 3, _u_x, 3, 3, _u_x, 3, 3, _tmpxx1);
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 2; __lv2 += 1)
         _u_x[__lv1][__lv2] = _tmpxx1[__lv1][__lv2];
   }
   scilab_rt_display_s0d2_("x", 3, 3, _u_x);
   int _u_n = 5;
   scilab_rt_display_s0i0_("n", _u_n);
   _u_n = foo_i0_(_u_n);
   scilab_rt_display_s0i0_("n", _u_n);

   scilab_rt_terminate();
}
