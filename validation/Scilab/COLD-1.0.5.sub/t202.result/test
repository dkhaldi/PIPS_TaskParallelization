void foo_i0_d2(int _u_N, int _u_H_n0, int _u_H_n1, double _u_H[_u_H_n0][_u_H_n1])
{
   //PIPS generated variable
   int _u_j_0, _u_j_1;
   (int) _u_N==_u_H_n0&&(int) _u_N==_u_H_n1?(void) 0:__assert_fail("(int)_u_N == _u_H_n0 && (int)_u_N == _u_H_n1", ".t202.tmp/t202.c", 21, __func__);
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= _u_H_n0-1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= _u_H_n1-1; __lv2 += 1)
         _u_H[__lv1][__lv2] = (double) 0.0;
   }
#pragma omp parallel for
   for(_u_j_0 = 2; _u_j_0 <= _u_N-1; _u_j_0 += 1)
      _u_H[_u_j_0-1][_u_j_0-1] = _u_j_0;
   int _tmpxx1 = 3*_u_N;
   _u_H[_u_N-1][_u_N-1] = _tmpxx1;
   int _tmpxx2 = 3*_u_N;
   _u_H[0][0] = _tmpxx2;
#pragma omp parallel for
   for(_u_j_1 = 2; _u_j_1 <= _u_N; _u_j_1 += 1) {
      //PIPS generated variable
      int _tmpxx3, _tmpxx4;
      _tmpxx3 = -2;
      _u_H[_u_j_1-1-1][_u_j_1-1] = _tmpxx3;
      _tmpxx4 = -2;
      _u_H[_u_j_1-1][_u_j_1-1-1] = _tmpxx4;
   }
}
int main(int argc, char *argv[])
{
   scilab_rt_init(argc, argv, 0);
   
   /*  t202.sce: RT spec, gsort */
   scilab_rt_lines_d0_(0);
   double _u_H[10][10];
   foo_i0_d2(10, 10, 10, _u_H);
   double _u_Y[10][10];
   double _u_D[10][10];
   scilab_rt_spec_d2_d2d2(10, 10, _u_H, 10, 10, _u_Y, 10, 10, _u_D);
   double _tmpxx0[10][1];
   scilab_rt_diag_d2_d2(10, 10, _u_D, 10, 1, _tmpxx0);
   double _u_lambda1[10][1];
   int _u_key1[10][1];
   scilab_rt_gsort_d2s0s0_d2i2(10, 1, _tmpxx0, "g", "i", 10, 1, _u_lambda1, 10, 1, _u_key1);
   scilab_rt_disp_d2_(10, 1, _u_lambda1);
   scilab_rt_disp_i2_(10, 1, _u_key1);

   scilab_rt_terminate();
}
