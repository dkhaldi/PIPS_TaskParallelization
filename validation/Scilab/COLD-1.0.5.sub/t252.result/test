int main(int argc, char *argv[])
{
   scilab_rt_init(argc, argv, 0);
   
   /*  t252.sce: multiplication with complex */
   double _Complex _tmpxx0 = 1*1.0iF;
   double _Complex _tmpxx1 = 2*1.0iF;
   double _Complex _u_a[1][2];
   _u_a[0][0] = 1+_tmpxx0;
   _u_a[0][1] = 2+_tmpxx1;
   scilab_rt_display_s0z2_("a", 1, 2, _u_a);
   double _Complex _tmp0[1][2];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 1; __lv2 += 1)
      _tmp0[0][__lv2] = _u_a[0][__lv2]*(double _Complex) 10;
   __lv1 = 0+1;
   scilab_rt_display_s0z2_("ans", 1, 2, _tmp0);
   __lv1 = 0+1;
   double _Complex _tmpxx3 = 2*1.0iF;
   double _Complex _tmp1[1][2];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 1; __lv2 += 1) {
      //PIPS generated variable
      register double _Complex _tmpxx2_0;
      _tmpxx2_0 = _u_a[0][__lv2]*(double _Complex) 10;
      _tmp1[0][__lv2] = _tmpxx2_0+_tmpxx3;
   }
   __lv1 = 0+1;
   scilab_rt_display_s0z2_("ans", 1, 2, _tmp1);
   double _Complex _tmp2[1][2];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 1; __lv2 += 1)
      _tmp2[0][__lv2] = 1.0iF*_u_a[0][__lv2];
   __lv1 = 0+1;
   scilab_rt_display_s0z2_("ans", 1, 2, _tmp2);
   int _tmpxx4[3][3];
   _tmpxx4[0][0] = 1;
   _tmpxx4[0][1] = 2;
   _tmpxx4[0][2] = 3;
   _tmpxx4[1][0] = 4;
   _tmpxx4[1][1] = 5;
   _tmpxx4[1][2] = 6;
   _tmpxx4[2][0] = 7;
   _tmpxx4[2][1] = 8;
   _tmpxx4[2][2] = 9;
   double _Complex _tmp3[3][3];
   double _Complex _tmpxx5 = 1*1.0iF;
   double _Complex _tmpxx6 = 2*1.0iF;
   double _Complex _tmpxx7[1][2];
   _tmpxx7[0][0] = 1+_tmpxx5;
   _tmpxx7[0][1] = 2+_tmpxx6;
   double _Complex _tmp4[1][2];
#pragma omp parallel for
   for(__lv2 = 0; __lv2 <= 1; __lv2 += 1)
      _tmp4[0][__lv2] = _tmpxx7[0][__lv2]*(double _Complex) 100;
   int _tmpxx8[3][3];
   _tmpxx8[0][0] = 1;
   _tmpxx8[0][1] = 2;
   _tmpxx8[0][2] = 3;
   _tmpxx8[1][0] = 4;
   _tmpxx8[1][1] = 5;
   _tmpxx8[1][2] = 6;
   _tmpxx8[2][0] = 7;
   _tmpxx8[2][1] = 8;
   _tmpxx8[2][2] = 9;
   double _Complex _tmpxx10 = 200*1.0iF;
   double _Complex _tmp5[3][3];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 2; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 2; __lv2 += 1) {
         //PIPS generated variable
         register int _tmpxx9_0;
         _tmp3[__lv1][__lv2] = (double _Complex) _tmpxx4[__lv1][__lv2]*1.0iF;
         _tmpxx9_0 = _tmpxx8[__lv1][__lv2]*100;
         _tmp5[__lv1][__lv2] = (double _Complex) _tmpxx9_0+_tmpxx10;
      }
   }
   scilab_rt_display_s0z2_("ans", 3, 3, _tmp3);
   __lv1 = 0+1;
   scilab_rt_display_s0z2_("ans", 1, 2, _tmp4);
   scilab_rt_display_s0z2_("ans", 3, 3, _tmp5);
   double _Complex _tmpxx11 = 2.1*1.0iF;
   double _Complex _tmpxx12 = 4.2*1.0iF;
   double _Complex _tmpxx13 = 6.3*1.0iF;
   double _Complex _tmpxx14 = 8.4*1.0iF;
   double _Complex _tmpxx15 = 1*1.0iF;
   double _Complex _tmpxx16 = 2*1.0iF;
   double _Complex _tmpxx17 = 3*1.0iF;
   double _Complex _tmpxx18 = 4*1.0iF;
   double _Complex _tmpxx19[2][2];
   _tmpxx19[0][0] = 1.1+_tmpxx11;
   _tmpxx19[0][1] = 3.2+_tmpxx12;
   _tmpxx19[1][0] = 5.3+_tmpxx13;
   _tmpxx19[1][1] = 7.4+_tmpxx14;
   double _Complex _tmpxx20[2][2];
   _tmpxx20[0][0] = 1+_tmpxx15;
   _tmpxx20[0][1] = 2+_tmpxx16;
   _tmpxx20[1][0] = 3+_tmpxx17;
   _tmpxx20[1][1] = 4+_tmpxx18;
   double _Complex _tmp6[2][2];
   scilab_rt_mul_z2z2_z2(2, 2, _tmpxx19, 2, 2, _tmpxx20, 2, 2, _tmp6);
   scilab_rt_display_s0z2_("ans", 2, 2, _tmp6);
   double _Complex _u_x[2][4];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 3; __lv2 += 1) {
         //PIPS generated variable
         register double _tmpxx21_0;
         _tmpxx21_0 = (double) 1.0;
         _u_x[__lv1][__lv2] = (double _Complex) _tmpxx21_0*1.0iF;
      }
   }
   double _Complex _u_y[4][5];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 3; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 4; __lv2 += 1) {
         //PIPS generated variable
         register double _tmpxx22_0;
         _tmpxx22_0 = (double) 1.0;
         _u_y[__lv1][__lv2] = (double _Complex) _tmpxx22_0*1.0iF;
      }
   }
   double _Complex _tmpxx23 = 3*1.0iF;
   double _Complex _tmpxx24[2][5];
   scilab_rt_mul_z2z2_z2(2, 4, _u_x, 4, 5, _u_y, 2, 5, _tmpxx24);
   double _Complex _tmpxx25 = 2+_tmpxx23;
   double _Complex _u_z[2][5];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 4; __lv2 += 1)
         _u_z[__lv1][__lv2] = _tmpxx24[__lv1][__lv2]*_tmpxx25;
   }
   scilab_rt_display_s0z2_("z", 2, 5, _u_z);
   double _Complex _tmpxx27 = 2*1.0iF;
   double _Complex _u_c[2][2][2];
   double _Complex _tmpxx28 = 4*1.0iF;
   double _Complex _tmpxx29 = 3+_tmpxx28;
   double _Complex _u_d[2][2][2];
   double _Complex _tmpxx31 = 4*1.0iF;
   double _Complex _u_e[2][2][2];
#pragma omp parallel for
   for(__lv1 = 0; __lv1 <= 1; __lv1 += 1) {
      //PIPS generated variable
      int __lv2;
      for(__lv2 = 0; __lv2 <= 1; __lv2 += 1) {
         //PIPS generated variable
         int __lv3;
         for(__lv3 = 0; __lv3 <= 1; __lv3 += 1) {
            //PIPS generated variable
            register double _u_b_0;
            //PIPS generated variable
            register double _Complex _tmpxx33_0, _tmpxx32_0, _tmpxx30_0;
            //PIPS generated variable
            register double _tmpxx26_0;
            _u_b_0 = (double) 1.0;
            _tmpxx26_0 = _u_b_0+(double) 1;
            _u_c[__lv1][__lv2][__lv3] = (double _Complex) _tmpxx26_0+_tmpxx27;
            _tmpxx30_0 = _tmpxx29*(double _Complex) _u_b_0;
            _u_d[__lv1][__lv2][__lv3] = _tmpxx30_0*1.0iF;
            _tmpxx32_0 = _tmpxx31*(double _Complex) _u_b_0;
            _tmpxx33_0 = _tmpxx32_0*1.0iF;
            _u_e[__lv1][__lv2][__lv3] = (double _Complex) 3+_tmpxx33_0;
         }
      }
   }
   scilab_rt_display_s0z3_("c", 2, 2, 2, _u_c);
   scilab_rt_display_s0z3_("d", 2, 2, 2, _u_d);
   scilab_rt_display_s0z3_("e", 2, 2, 2, _u_e);

   scilab_rt_terminate();
}
