delete partial_eval01
setproperty ABORT_ON_USER_ERROR TRUE
create partial_eval01 partial_eval01.c

setproperty CONSTANT_PATH_EFFECTS TRUE

echo
echo Initial code
echo

display PRINTED_FILE[duck]

echo
echo Initial code with proper effects for "main"
echo

activate PRINT_CODE_PROPER_EFFECTS
display PRINTED_FILE[main]
activate PRINT_CODE

echo
echo Initial code with proper effects for "duck"
echo

activate PRINT_CODE_PROPER_EFFECTS
display PRINTED_FILE[duck]
activate PRINT_CODE

echo
echo Initial code with cumulated effects for "main"
echo

activate PRINT_CODE_CUMULATED_EFFECTS
display PRINTED_FILE[main]
activate PRINT_CODE

echo
echo Initial code with cumulated effects for "duck"
echo

activate PRINT_CODE_CUMULATED_EFFECTS
display PRINTED_FILE[duck]
activate PRINT_CODE
quit
echo
echo Initial code with preconditions for "main"
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[main]
activate PRINT_CODE

echo
echo Initial code with preconditions for "duck"
echo

activate PRINT_CODE_PRECONDITIONS
display PRINTED_FILE[duck]
activate PRINT_CODE
quit
echo
echo Code after array conversion
echo

setproperty LINEARIZE_ARRAY_USE_POINTERS TRUE
apply LINEARIZE_ARRAY[duck]
display PRINTED_FILE[duck]

echo
echo Code after partial eval
echo

apply PARTIAL_EVAL[duck]
display PRINTED_FILE[duck]

echo
echo Unsplit resulting code
echo

apply UNSPLIT
shell cc partial_eval01.c -o partial_eval
shell cc partial_eval01.database/Src/partial_eval01.c  -o partial_eval01.database/Src/partial_eval
shell if test `./partial_eval01.database/Src/partial_eval` = `./partial_eval`; then echo "ok"; else echo "ko" ; fi
shell rm -rf partial_eval01.database/Src/partial_eval partial_eval

close
delete partial_eval01
quit

