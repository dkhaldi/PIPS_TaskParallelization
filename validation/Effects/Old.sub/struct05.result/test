
Parsed printed file for "struct05"

int struct05()
{
   struct two {
      int first;
      int second;
   } x[10];
   int i = 0;

   for (i = 0;i<10;i++)
      if (1)
         x[i].first = x[i].second;
      else
         x[i].second = x[i].first;
}

Proper effetcs for "struct05"

int struct05()
{
   struct two {
      int first;
      int second;
   } x[10];
//             <    is written>: i
   int i = 0;
//             <    is written>: i

   for(i = 0; i <= 9; i += 1)
      if (1)
//             <    is read   >: i x[i].second
//             <    is written>: x[i].first
         x[i].first = x[i].second;
      else
//             <    is read   >: i x[i].first
//             <    is written>: x[i].second
         x[i].second = x[i].first;
}

Cumulated effetcs for "struct05"

int struct05()
{
   struct two {
      int first;
      int second;
   } x[10];
//             <    is written>: i
   int i = 0;
//             <may be read   >: x[*].first x[*].second
//             <may be written>: x[*].first x[*].second
//             <    is read   >: i
//             <    is written>: i

   for(i = 0; i <= 9; i += 1)
//             <may be read   >: x[*].first x[*].second
//             <may be written>: x[*].first x[*].second
//             <    is read   >: i
      if (1)
//             <may be read   >: x[*].second
//             <may be written>: x[*].first
//             <    is read   >: i
         x[i].first = x[i].second;
      else
//             <may be read   >: x[*].first
//             <may be written>: x[*].second
//             <    is read   >: i
         x[i].second = x[i].first;
}

Transformers for "main"


//  T() {}

int struct05()
{

//  T() {}

   struct two {
      int first;
      int second;
   } x[10];

//  T(i) {i==0}

   int i = 0;

//  T(i) {i#init==0, 0<=i, i<=9}


   for(i = 0; i <= 9; i += 1)

//  T() {0<=i, i<=9}

      if (1)

//  T() {0<=i, i<=9}

         x[i].first = x[i].second;
      else

//  T() {0==-1}

         x[i].second = x[i].first;
}

Preconditions for "main"


//  P() {}

int struct05()
{

//  P() {}

   struct two {
      int first;
      int second;
   } x[10];

//  P() {}

   int i = 0;

//  P(i) {i==0}


   for(i = 0; i <= 9; i += 1)

//  P(i) {0<=i, i<=9}

      if (1)

//  P(i) {0<=i, i<=9}

         x[i].first = x[i].second;
      else

//  P() {0==-1}

         x[i].second = x[i].first;
}

Printed files with regions

int struct05()
{
   struct two {
      int first;
      int second;
   } x[10];
   int i = 0;

//  <x[PHI1].first-W-EXACT-{0<=PHI1, PHI1<=9}>
//  <x[PHI1].second-R-EXACT-{0<=PHI1, PHI1<=9}>


   for(i = 0; i <= 9; i += 1)

//  <x[PHI1].first-W-EXACT-{PHI1==i, 0<=i, i<=9}>
//  <x[PHI1].second-R-EXACT-{PHI1==i, 0<=i, i<=9}>

      if (1)

//  <x[PHI1].first-W-EXACT-{PHI1==i, 0<=i, i<=9}>
//  <x[PHI1].second-R-EXACT-{PHI1==i, 0<=i, i<=9}>

         x[i].first = x[i].second;
      else
         x[i].second = x[i].first;
}

Printed files after parallelization

int struct05()
{
   struct two {
      int first;
      int second;
   } x[10];
   int i = 0;

//  <x[PHI1].first-W-EXACT-{0<=PHI1, PHI1<=9}>
//  <x[PHI1].second-R-EXACT-{0<=PHI1, PHI1<=9}>


#pragma omp parallel for 
   for(i = 0; i <= 9; i += 1)

//  <x[PHI1].first-W-EXACT-{PHI1==i, 0<=i, i<=9}>
//  <x[PHI1].second-R-EXACT-{PHI1==i, 0<=i, i<=9}>

      if (1)

//  <x[PHI1].first-W-EXACT-{PHI1==i, 0<=i, i<=9}>
//  <x[PHI1].second-R-EXACT-{PHI1==i, 0<=i, i<=9}>

         x[i].first = x[i].second;
      else
         x[i].second = x[i].first;
}
